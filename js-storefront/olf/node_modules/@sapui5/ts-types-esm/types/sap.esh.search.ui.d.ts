// For Library Version: 1.97.0

declare module "sap/esh/search/ui/library" {}

declare module "sap/esh/search/ui/SearchCompositeControl" {
  import { default as Control, $ControlSettings } from "sap/ui/core/Control";

  import ElementMetadata from "sap/ui/core/ElementMetadata";

  import {
    PropertyBindingInfo,
    AggregationBindingInfo,
  } from "sap/ui/base/ManagedObject";

  /**
   * @SINCE 1.93.0
   *
   * This is the UI5 composite control by the Enterprise Search Team to make full use of the Enterprise Search
   * Services. This composite control is a complete UI which includes a search input box including a suggestion
   * dropdown, a result list which can have different styles including tiles and table, result facets and
   * more. This control is ready to use with an enterprise search backend service but also allows deep modifications
   * to match requirements of adopting applications.
   */
  export default class SearchCompositeControl extends Control {
    /**
     * Constructs a new `SearchCompositeControl` to interact with a SAP Enterprise Search Service.
     *
     * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
     * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
     * of the syntax of the settings object.
     */
    constructor(
      /**
       * Initial settings for the new control
       */
      mSettings?: $SearchCompositeControlSettings
    );
    /**
     * Constructs a new `SearchCompositeControl` to interact with a SAP Enterprise Search Service.
     *
     * Accepts an object literal `mSettings` that defines initial property values, aggregated and associated
     * objects as well as event handlers. See {@link sap.ui.base.ManagedObject#constructor} for a general description
     * of the syntax of the settings object.
     */
    constructor(
      /**
       * ID for the new control, generated automatically if no ID is given
       */
      sId?: string,
      /**
       * Initial settings for the new control
       */
      mSettings?: $SearchCompositeControlSettings
    );

    /**
     * Creates a new subclass of class sap.esh.search.ui.SearchCompositeControl with name `sClassName` and enriches
     * it with the information contained in `oClassInfo`.
     *
     * `oClassInfo` might contain the same kind of information as described in {@link sap.ui.core.Control.extend}.
     */
    static extend<T extends Record<string, unknown>>(
      /**
       * Name of the class being created
       */
      sClassName: string,
      /**
       * Object literal with information about the class
       */
      oClassInfo?: sap.ClassInfo<T, SearchCompositeControl>,
      /**
       * Constructor function for the metadata object; if not given, it defaults to the metadata implementation
       * used by this class
       */
      FNMetaImpl?: Function
    ): Function;
    /**
     * Returns a metadata object for class sap.esh.search.ui.SearchCompositeControl.
     */
    static getMetadata(): ElementMetadata;
    /**
     * Adds some content to the aggregation {@link #getContent content}.
     */
    addContent(
      /**
       * The content to add; if empty, nothing is inserted
       */
      oContent: Control
    ): this;
    /**
     * Destroys all the content in the aggregation {@link #getContent content}.
     */
    destroyContent(): this;
    /**
     * Gets content of aggregation {@link #getContent content}.
     *
     * Control instances which are part of this composite control.
     */
    getContent(): Control[];
    /**
     * Gets current value of property {@link #getCssClass cssClass}.
     *
     * An additional CSS class to add to this control
     */
    getCssClass(): string;
    /**
     * Gets current value of property {@link #getSearchOnStart searchOnStart}.
     *
     * Defines if the search control will search for the given term right on control instantiation.
     *
     * Default value is `true`.
     */
    getSearchOnStart(): boolean;
    /**
     * Gets current value of property {@link #getSearchTerm searchTerm}.
     *
     * Defines the initial search term for the search input
     *
     * Default value is `"*"`.
     */
    getSearchTerm(): string;
    /**
     * Checks for the provided `sap.ui.core.Control` in the aggregation {@link #getContent content}. and returns
     * its index if found or -1 otherwise.
     */
    indexOfContent(
      /**
       * The content whose index is looked for
       */
      oContent: Control
    ): int;
    /**
     * Inserts a content into the aggregation {@link #getContent content}.
     */
    insertContent(
      /**
       * The content to insert; if empty, nothing is inserted
       */
      oContent: Control,
      /**
       * The `0`-based index the content should be inserted at; for a negative value of `iIndex`, the content
       * is inserted at position 0; for a value greater than the current size of the aggregation, the content
       * is inserted at the last position
       */
      iIndex: int
    ): this;
    /**
     * Removes all the controls from the aggregation {@link #getContent content}.
     *
     * Additionally, it unregisters them from the hosting UIArea.
     */
    removeAllContent(): Control[];
    /**
     * Removes a content from the aggregation {@link #getContent content}.
     */
    removeContent(
      /**
       * The content to remove or its index or id
       */
      vContent: int | string | Control
    ): Control;
    /**
     * Sets a new value for property {@link #getCssClass cssClass}.
     *
     * An additional CSS class to add to this control
     *
     * When called with a value of `null` or `undefined`, the default value of the property will be restored.
     */
    setCssClass(
      /**
       * New value for property `cssClass`
       */
      sCssClass: string
    ): this;
    /**
     * Sets a new value for property {@link #getSearchOnStart searchOnStart}.
     *
     * Defines if the search control will search for the given term right on control instantiation.
     *
     * When called with a value of `null` or `undefined`, the default value of the property will be restored.
     *
     * Default value is `true`.
     */
    setSearchOnStart(
      /**
       * New value for property `searchOnStart`
       */
      bSearchOnStart?: boolean
    ): this;
    /**
     * Sets a new value for property {@link #getSearchTerm searchTerm}.
     *
     * Defines the initial search term for the search input
     *
     * When called with a value of `null` or `undefined`, the default value of the property will be restored.
     *
     * Default value is `"*"`.
     */
    setSearchTerm(
      /**
       * New value for property `searchTerm`
       */
      sSearchTerm?: string
    ): this;
  }

  export interface $SearchCompositeControlSettings extends $ControlSettings {
    /**
     * An additional CSS class to add to this control
     */
    cssClass?: string | PropertyBindingInfo;

    /**
     * Defines the initial search term for the search input
     */
    searchTerm?: string | PropertyBindingInfo;

    /**
     * Defines if the search control will search for the given term right on control instantiation.
     */
    searchOnStart?: boolean | PropertyBindingInfo;

    /**
     * Control instances which are part of this composite control.
     */
    content?: Control[] | Control | AggregationBindingInfo;
  }
}

declare namespace sap {
  interface IUI5DefineDependencyNames {
    "sap/esh/search/ui/library": undefined;

    "sap/esh/search/ui/SearchCompositeControl": undefined;
  }
}
