// For Library Version: 1.97.0

declare module "sap/fe/templates/library" {}

declare module "sap/fe/templates/ListReport/ExtensionAPI" {
  import ExtensionAPI1 from "sap/fe/core/ExtensionAPI";

  import Context from "sap/ui/model/odata/v4/Context";

  /**
   * @SINCE 1.79.0
   *
   * Extension API for list reports on SAP Fiori elements for OData V4.
   */
  export default class ExtensionAPI extends ExtensionAPI1 {
    constructor();

    /**
     * This method converts filter conditions to filters.
     */
    createFiltersFromFilterConditions(
      /**
       * Map containing the filter conditions of the FilterBar.
       */
      mFilterConditions: Record<string, any>
    ): object;
    /**
     * Gets the list entries currently selected for the displayed control.
     */
    getSelectedContexts(): Context[];
    /**
     * Refreshes the List Report. This method currently only supports triggering the search (by clicking on
     * the GO button) in the List Report Filter Bar. It can be used to request the initial load or to refresh
     * the currently shown data based on the filters entered by the user. Please note: The Promise is resolved
     * once the search is triggered and not once the data is returned.
     */
    refresh(): Promise<any>;
    /**
     * Set the filter values for the given property in the filter bar. The filter values can be either a single
     * value or an array of values. Each filter value must be represented as a string corresponding to the given
     * operator.
     */
    setFilterValues(
      /**
       * The path to the property as a condition path
       */
      sConditionPath: string,
      /**
       * The operator to be used (optional) - if not set, the default operator (EQ) will be used
       */
      sOperator: string,
      /**
       * The values to be applied
       */
      vValues: any[] | string
    ): Promise<any>;
    /**
     * Set the filter values for the given property in the filter bar. The filter values can be either a single
     * value or an array of values. Each filter value must be represented as a string corresponding to the given
     * operator.
     */
    setFilterValues(
      /**
       * The path to the property as a condition path
       */
      sConditionPath: string,
      /**
       * The values to be applied
       */
      vValues: any[] | string
    ): Promise<any>;
  }
}

declare module "sap/fe/templates/ObjectPage/ExtensionAPI" {
  import ExtensionAPI1 from "sap/fe/core/ExtensionAPI";

  import Context from "sap/ui/model/odata/v4/Context";

  /**
   * @SINCE 1.79.0
   *
   * Extension API for object pages on SAP Fiori elements for OData V4.
   */
  export default class ExtensionAPI extends ExtensionAPI1 {
    constructor();

    /**
     * Gets the list entries currently selected for the table.
     */
    getSelectedContexts(
      /**
       * The ID identifying the table the selected context is requested for
       */
      sTableId: string
    ): Context[];
    /**
     * Refreshes either the whole object page or only parts of it.
     */
    refresh(
      /**
       * Path or array of paths referring to entities or properties to be refreshed. If omitted, the whole object
       * page is refreshed. The path "" refreshes the entity assigned to the object page without navigations
       */
      vPath?: string | string[]
    ): Promise<any>;
    /**
     * Displays or hides the side content of an object page block.
     */
    showSideContent(
      /**
       * Key of the side content fragment as defined in the manifest.json
       */
      sSubSectionKey: string,
      /**
       * Optional Boolean flag to show or hide the side content
       */
      bShow?: boolean
    ): void;
  }
}

declare module "sap/fe/templates/RootContainer/controller/Fcl.controller" {
  import RootContainerBaseController from "sap/fe/templates/RootContainer/controller/RootContainerBaseController";

  /**
   * Application developers should use this controller for the sap.fe.templates.RootContainer.view.Fcl view.
   *
   * This controller and its associated view provide the entry point for your application when using the flexible
   * column layout in SAP Fiori elements. When used, you should declare a sap.f.routing.Router as `router`
   * in your application manifest.
   */
  export default class Fcl extends RootContainerBaseController {
    constructor();

    /**
     * Creates a new subclass of class sap.fe.templates.RootContainer.controller.Fcl with name `sClassName`
     * and enriches it with the information contained in `oClassInfo`.
     *
     * `oClassInfo` might contain the same kind of information as described in {@link sap.fe.templates.RootContainer.controller.RootContainerBaseController.extend}.
     */
    static extend<T extends Record<string, unknown>>(
      /**
       * Name of the class being created
       */
      sClassName: string,
      /**
       * Object literal with information about the class
       */
      oClassInfo?: sap.ClassInfo<T, Fcl>,
      /**
       * Constructor function for the metadata object; if not given, it defaults to the metadata implementation
       * used by this class
       */
      FNMetaImpl?: Function
    ): Function;
  }
}

declare module "sap/fe/templates/RootContainer/controller/NavContainer.controller" {
  import RootContainerBaseController from "sap/fe/templates/RootContainer/controller/RootContainerBaseController";

  /**
   * Application developers should use this controller for the sap.fe.templates.RootContainer.NavContainer.Fcl
   * view.
   *
   * This controller and its associated view provide the entry point for your application when using the classic
   * full page layout in SAP Fiori elements. When used, you should declare a sap.m.routing.Router as `router`
   * in your application manifest.
   */
  export default class NavContainer extends RootContainerBaseController {
    constructor();

    /**
     * Creates a new subclass of class sap.fe.templates.RootContainer.controller.NavContainer with name `sClassName`
     * and enriches it with the information contained in `oClassInfo`.
     *
     * `oClassInfo` might contain the same kind of information as described in {@link sap.fe.templates.RootContainer.controller.RootContainerBaseController.extend}.
     */
    static extend<T extends Record<string, unknown>>(
      /**
       * Name of the class being created
       */
      sClassName: string,
      /**
       * Object literal with information about the class
       */
      oClassInfo?: sap.ClassInfo<T, NavContainer>,
      /**
       * Constructor function for the metadata object; if not given, it defaults to the metadata implementation
       * used by this class
       */
      FNMetaImpl?: Function
    ): Function;
  }
}

declare module "sap/fe/templates/RootContainer/controller/RootContainerBaseController" {
  import BaseController from "sap/fe/core/BaseController";

  import Metadata from "sap/ui/base/Metadata";

  /**
   * Internal base controller class for SAP Fiori elements application.
   *
   * If you want to extend a base controller for your application, please use for sap.fe.templates.RootContainer.controller.Fcl
   * or sap.fe.templates.RootContainer.controller.NavContainer
   */
  export default class RootContainerBaseController extends BaseController {
    constructor();

    /**
     * Creates a new subclass of class sap.fe.templates.RootContainer.controller.RootContainerBaseController
     * with name `sClassName` and enriches it with the information contained in `oClassInfo`.
     *
     * `oClassInfo` might contain the same kind of information as described in {@link sap.fe.core.BaseController.extend}.
     */
    static extend<T extends Record<string, unknown>>(
      /**
       * Name of the class being created
       */
      sClassName: string,
      /**
       * Object literal with information about the class
       */
      oClassInfo?: sap.ClassInfo<T, RootContainerBaseController>,
      /**
       * Constructor function for the metadata object; if not given, it defaults to the metadata implementation
       * used by this class
       */
      FNMetaImpl?: Function
    ): Function;
    /**
     * Returns a metadata object for class sap.fe.templates.RootContainer.controller.RootContainerBaseController.
     */
    static getMetadata(): Metadata;
  }
}

declare namespace sap {
  interface IUI5DefineDependencyNames {
    "sap/fe/templates/library": undefined;

    "sap/fe/templates/ListReport/ExtensionAPI": undefined;

    "sap/fe/templates/ObjectPage/ExtensionAPI": undefined;

    "sap/fe/templates/RootContainer/controller/Fcl.controller": undefined;

    "sap/fe/templates/RootContainer/controller/NavContainer.controller": undefined;

    "sap/fe/templates/RootContainer/controller/RootContainerBaseController": undefined;
  }
}
