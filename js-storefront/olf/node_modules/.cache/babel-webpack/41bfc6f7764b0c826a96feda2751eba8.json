{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { STORE_FINDER_SEARCH_PAGE_NORMALIZER, STORE_COUNT_NORMALIZER, StoreFinderAdapter } from '@spartacus/storefinder/core';\nimport * as i2 from '@spartacus/core';\nimport { POINT_OF_SERVICE_NORMALIZER, provideDefaultConfig } from '@spartacus/core';\nimport * as i1 from '@angular/common/http';\nlet OccStoreFinderAdapter = /*#__PURE__*/(() => {\n  class OccStoreFinderAdapter {\n    constructor(http, occEndpointsService, converterService) {\n      this.http = http;\n      this.occEndpointsService = occEndpointsService;\n      this.converterService = converterService;\n    }\n    search(query, searchConfig, longitudeLatitude, radius) {\n      return this.callOccFindStores(query, searchConfig, longitudeLatitude, radius).pipe(this.converterService.pipeable(STORE_FINDER_SEARCH_PAGE_NORMALIZER));\n    }\n    loadCounts() {\n      return this.http.get(this.occEndpointsService.buildUrl('storescounts')).pipe(map(({\n        countriesAndRegionsStoreCount\n      }) => countriesAndRegionsStoreCount), this.converterService.pipeableMany(STORE_COUNT_NORMALIZER));\n    }\n    load(storeId) {\n      return this.http.get(this.occEndpointsService.buildUrl('store', {\n        urlParams: {\n          storeId\n        }\n      })).pipe(this.converterService.pipeable(POINT_OF_SERVICE_NORMALIZER));\n    }\n    callOccFindStores(query, searchConfig, longitudeLatitude, radius) {\n      const params = {};\n      if (longitudeLatitude) {\n        params['longitude'] = String(longitudeLatitude.longitude);\n        params['latitude'] = String(longitudeLatitude.latitude);\n        params['radius'] = String(radius);\n      } else {\n        params['query'] = query;\n      }\n      if (searchConfig.pageSize) {\n        params['pageSize'] = String(searchConfig.pageSize);\n      }\n      if (searchConfig.currentPage) {\n        params['currentPage'] = String(searchConfig.currentPage);\n      }\n      if (searchConfig.sort) {\n        params['sort'] = searchConfig.sort;\n      }\n      return this.http.get(this.occEndpointsService.buildUrl('stores', {\n        queryParams: params\n      }));\n    }\n  }\n  OccStoreFinderAdapter.ɵfac = function OccStoreFinderAdapter_Factory(t) {\n    return new (t || OccStoreFinderAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccStoreFinderAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccStoreFinderAdapter,\n    factory: OccStoreFinderAdapter.ɵfac\n  });\n  return OccStoreFinderAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Imported for side effects (module augmentation)\n\nconst defaultOccStoreFinderConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        store: 'stores/${storeId}?fields=FULL',\n        stores: 'stores?fields=stores(name,displayName,formattedDistance,openingHours(weekDayOpeningList(FULL),specialDayOpeningList(FULL)),geoPoint(latitude,longitude),address(line1,line2,town,region(FULL),postalCode,phone,country,email), features),pagination(DEFAULT),sorts(DEFAULT)',\n        storescounts: 'stores/storescounts'\n      }\n    }\n  }\n};\nlet StoreFinderOccModule = /*#__PURE__*/(() => {\n  class StoreFinderOccModule {}\n  StoreFinderOccModule.ɵfac = function StoreFinderOccModule_Factory(t) {\n    return new (t || StoreFinderOccModule)();\n  };\n  StoreFinderOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: StoreFinderOccModule\n  });\n  StoreFinderOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig(defaultOccStoreFinderConfig), {\n      provide: StoreFinderAdapter,\n      useClass: OccStoreFinderAdapter\n    }]\n  });\n  return StoreFinderOccModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OccStoreFinderAdapter, StoreFinderOccModule };\n//# sourceMappingURL=spartacus-storefinder-occ.js.map","map":null,"metadata":{},"sourceType":"module"}