{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule, InjectionToken } from '@angular/core';\nimport * as i1 from '@spartacus/core';\nimport { PageMetaResolver, PageType, StateUtils, normalizeHttpError, B2BUserRole, AuthActions, SiteContextActions, GlobalMessageType, HttpErrorHandler, HttpResponseStatus } from '@spartacus/core';\nimport { defer, of, combineLatest, from, queueScheduler, using } from 'rxjs';\nimport { map, distinctUntilChanged, switchMap, shareReplay, catchError, groupBy, mergeMap, take, tap, withLatestFrom, filter, pluck, observeOn, pairwise, auditTime } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport * as i1$2 from '@ngrx/store';\nimport { combineReducers, StoreModule, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { __decorate } from 'tslib';\nclass B2BUserAdapter {}\nclass B2BUserConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, orgUnitCustomerId) {\n    return this.adapter.load(userId, orgUnitCustomerId);\n  }\n  create(userId, orgCustomer) {\n    return this.adapter.create(userId, orgCustomer);\n  }\n  update(userId, orgCustomerId, orgCustomer) {\n    return this.adapter.update(userId, orgCustomerId, orgCustomer);\n  }\n  getList(userId, params) {\n    return this.adapter.loadList(userId, params);\n  }\n  getApprovers(userId, orgUnitCustomerId, params) {\n    return this.adapter.loadApprovers(userId, orgUnitCustomerId, params);\n  }\n  assignApprover(userId, orgCustomerId, approverId) {\n    return this.adapter.assignApprover(userId, orgCustomerId, approverId);\n  }\n  unassignApprover(userId, orgCustomerId, approverId) {\n    return this.adapter.unassignApprover(userId, orgCustomerId, approverId);\n  }\n  getPermissions(userId, orgUnitCustomerId, params) {\n    return this.adapter.loadPermissions(userId, orgUnitCustomerId, params);\n  }\n  assignPermission(userId, orgCustomerId, permissionId) {\n    return this.adapter.assignPermission(userId, orgCustomerId, permissionId);\n  }\n  unassignPermission(userId, orgCustomerId, permissionId) {\n    return this.adapter.unassignPermission(userId, orgCustomerId, permissionId);\n  }\n  getUserGroups(userId, orgUnitCustomerId, params) {\n    return this.adapter.loadUserGroups(userId, orgUnitCustomerId, params);\n  }\n  assignUserGroup(userId, orgCustomerId, userGroupId) {\n    return this.adapter.assignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n  unassignUserGroup(userId, orgCustomerId, userGroupId) {\n    return this.adapter.unassignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n}\nB2BUserConnector.ɵfac = function B2BUserConnector_Factory(t) {\n  return new (t || B2BUserConnector)(i0.ɵɵinject(B2BUserAdapter));\n};\nB2BUserConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: B2BUserConnector,\n  factory: B2BUserConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(B2BUserConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: B2BUserAdapter\n    }];\n  }, null);\n})();\nclass BudgetAdapter {}\nclass BudgetConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, budgetCode) {\n    return this.adapter.load(userId, budgetCode);\n  }\n  getList(userId, params) {\n    return this.adapter.loadList(userId, params);\n  }\n  create(userId, budget) {\n    return this.adapter.create(userId, budget);\n  }\n  update(userId, budgetCode, budget) {\n    return this.adapter.update(userId, budgetCode, budget);\n  }\n}\nBudgetConnector.ɵfac = function BudgetConnector_Factory(t) {\n  return new (t || BudgetConnector)(i0.ɵɵinject(BudgetAdapter));\n};\nBudgetConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BudgetConnector,\n  factory: BudgetConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BudgetConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: BudgetAdapter\n    }];\n  }, null);\n})();\nclass CostCenterAdapter {}\nclass CostCenterConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, costCenterCode) {\n    return this.adapter.load(userId, costCenterCode);\n  }\n  getList(userId, params) {\n    return this.adapter.loadList(userId, params);\n  }\n  create(userId, costCenter) {\n    return this.adapter.create(userId, costCenter);\n  }\n  update(userId, costCenterCode, costCenter) {\n    return this.adapter.update(userId, costCenterCode, costCenter);\n  }\n  getBudgets(userId, costCenterCode, params) {\n    return this.adapter.loadBudgets(userId, costCenterCode, params);\n  }\n  assignBudget(userId, costCenterCode, budgetCode) {\n    return this.adapter.assignBudget(userId, costCenterCode, budgetCode);\n  }\n  unassignBudget(userId, costCenterCode, budgetCode) {\n    return this.adapter.unassignBudget(userId, costCenterCode, budgetCode);\n  }\n}\nCostCenterConnector.ɵfac = function CostCenterConnector_Factory(t) {\n  return new (t || CostCenterConnector)(i0.ɵɵinject(CostCenterAdapter));\n};\nCostCenterConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CostCenterConnector,\n  factory: CostCenterConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CostCenterConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: CostCenterAdapter\n    }];\n  }, null);\n})();\nclass OrgUnitAdapter {}\nclass OrgUnitConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, orgUnitId) {\n    return this.adapter.load(userId, orgUnitId);\n  }\n  create(userId, orgUnit) {\n    return this.adapter.create(userId, orgUnit);\n  }\n  update(userId, orgUnitId, orgUnit) {\n    return this.adapter.update(userId, orgUnitId, orgUnit);\n  }\n  getList(userId) {\n    return this.adapter.loadList(userId);\n  }\n  getApprovalProcesses(userId) {\n    return this.adapter.loadApprovalProcesses(userId);\n  }\n  getTree(userId) {\n    return this.adapter.loadTree(userId);\n  }\n  getUsers(userId, orgUnitId, roleId, params) {\n    return this.adapter.loadUsers(userId, orgUnitId, roleId, params);\n  }\n  assignRole(userId, orgCustomerId, roleId) {\n    return this.adapter.assignRole(userId, orgCustomerId, roleId);\n  }\n  unassignRole(userId, orgCustomerId, roleId) {\n    return this.adapter.unassignRole(userId, orgCustomerId, roleId);\n  }\n  assignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n    return this.adapter.assignApprover(userId, orgUnitId, orgCustomerId, roleId);\n  }\n  unassignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n    return this.adapter.unassignApprover(userId, orgUnitId, orgCustomerId, roleId);\n  }\n  getAddresses(userId, orgUnitId) {\n    return this.adapter.loadAddresses(userId, orgUnitId);\n  }\n  createAddress(userId, orgUnitId, address) {\n    return this.adapter.createAddress(userId, orgUnitId, address);\n  }\n  updateAddress(userId, orgUnitId, addressId, address) {\n    return this.adapter.updateAddress(userId, orgUnitId, addressId, address);\n  }\n  deleteAddress(userId, orgUnitId, addressId) {\n    return this.adapter.deleteAddress(userId, orgUnitId, addressId);\n  }\n}\nOrgUnitConnector.ɵfac = function OrgUnitConnector_Factory(t) {\n  return new (t || OrgUnitConnector)(i0.ɵɵinject(OrgUnitAdapter));\n};\nOrgUnitConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrgUnitConnector,\n  factory: OrgUnitConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgUnitConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: OrgUnitAdapter\n    }];\n  }, null);\n})();\nclass PermissionAdapter {}\nclass PermissionConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, permissionCode) {\n    return this.adapter.load(userId, permissionCode);\n  }\n  getList(userId, params) {\n    return this.adapter.loadList(userId, params);\n  }\n  create(userId, permission) {\n    return this.adapter.create(userId, permission);\n  }\n  update(userId, permissionCode, permission) {\n    return this.adapter.update(userId, permissionCode, permission);\n  }\n  getTypes() {\n    return this.adapter.loadTypes();\n  }\n}\nPermissionConnector.ɵfac = function PermissionConnector_Factory(t) {\n  return new (t || PermissionConnector)(i0.ɵɵinject(PermissionAdapter));\n};\nPermissionConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PermissionConnector,\n  factory: PermissionConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PermissionConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: PermissionAdapter\n    }];\n  }, null);\n})();\nclass UserGroupAdapter {}\nclass UserGroupConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  get(userId, userGroupId) {\n    return this.adapter.load(userId, userGroupId);\n  }\n  getList(userId, params) {\n    return this.adapter.loadList(userId, params);\n  }\n  getAvailableOrderApprovalPermissions(userId, userGroupId, params) {\n    return this.adapter.loadAvailableOrderApprovalPermissions(userId, userGroupId, params);\n  }\n  getAvailableOrgCustomers(userId, userGroupId, params) {\n    return this.adapter.loadAvailableOrgCustomers(userId, userGroupId, params);\n  }\n  create(userId, userGroup) {\n    return this.adapter.create(userId, userGroup);\n  }\n  delete(userId, userGroupId) {\n    return this.adapter.delete(userId, userGroupId);\n  }\n  update(userId, userGroupId, userGroup) {\n    return this.adapter.update(userId, userGroupId, userGroup);\n  }\n  assignMember(userId, userGroupId, orgCustomerId) {\n    return this.adapter.assignMember(userId, userGroupId, orgCustomerId);\n  }\n  assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n    return this.adapter.assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);\n  }\n  unassignMember(userId, userGroupId, orgCustomerId) {\n    return this.adapter.unassignMember(userId, userGroupId, orgCustomerId);\n  }\n  unassignAllMembers(userId, userGroupId) {\n    return this.adapter.unassignAllMembers(userId, userGroupId);\n  }\n  unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n    return this.adapter.unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);\n  }\n}\nUserGroupConnector.ɵfac = function UserGroupConnector_Factory(t) {\n  return new (t || UserGroupConnector)(i0.ɵɵinject(UserGroupAdapter));\n};\nUserGroupConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserGroupConnector,\n  factory: UserGroupConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserGroupConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: UserGroupAdapter\n    }];\n  }, null);\n})();\n\n/**\n * Resolves the page data for Organization Pages.\n *\n * Breadcrumbs are built in this implementation only.\n *\n * @property {string} ORGANIZATION_SEMANTIC_ROUTE the default root path for organization pages.\n * @property {string} ORGANIZATION_TRANSLATION_KEY the default i18n key for the organization breadcrumb label.\n */\nclass OrganizationPageMetaResolver extends PageMetaResolver {\n  constructor(contentPageMetaResolver, translation, semanticPath, routingService) {\n    super();\n    this.contentPageMetaResolver = contentPageMetaResolver;\n    this.translation = translation;\n    this.semanticPath = semanticPath;\n    this.routingService = routingService;\n    this.pageTemplate = 'CompanyPageTemplate';\n    this.pageType = PageType.CONTENT_PAGE;\n    /**\n     * Translation key for the breadcrumb of Organization home page\n     */\n    this.ORGANIZATION_TRANSLATION_KEY = 'organization.breadcrumb';\n    /**\n     * The semantic route of the organization landing page. It's used to recognize whether\n     * we are on this page. In such a case we avoid showing the breadcrumb for this page.\n     */\n    this.ORGANIZATION_SEMANTIC_ROUTE = 'organization';\n    /**\n     * Breadcrumb of the Organization page.\n     * It's empty when the current page is the Organization page.\n     */\n    this.organizationPageBreadcrumb$ = defer(() => this.routingService.getRouterState()).pipe(map(routerState => {\n      var _a;\n      return (_a = routerState === null || routerState === void 0 ? void 0 : routerState.state) === null || _a === void 0 ? void 0 : _a.semanticRoute;\n    }), distinctUntilChanged(), switchMap(semanticRoute => semanticRoute === this.ORGANIZATION_SEMANTIC_ROUTE ? of([]) : this.translation.translate(this.ORGANIZATION_TRANSLATION_KEY).pipe(map(label => [{\n      label,\n      link: this.semanticPath.get(this.ORGANIZATION_SEMANTIC_ROUTE)\n    }]))));\n    /**\n     * Breadcrumbs returned in the method #resolveBreadcrumbs.\n     */\n    this.breadcrumbs$ = combineLatest([this.organizationPageBreadcrumb$, defer(() => this.contentPageMetaResolver.resolveBreadcrumbs())]).pipe(map(([organizationPageBreadcrumb, breadcrumbs = []]) => {\n      const [home, ...restBreadcrumbs] = breadcrumbs;\n      return [home, ...organizationPageBreadcrumb, ...restBreadcrumbs];\n    }), shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n  }\n  resolveTitle() {\n    return this.contentPageMetaResolver.resolveTitle();\n  }\n  resolveDescription() {\n    return this.contentPageMetaResolver.resolveDescription();\n  }\n  resolveRobots() {\n    return this.contentPageMetaResolver.resolveRobots();\n  }\n  /**\n   * Returns list of breadcrumbs for:\n   * - the home page\n   * - the organization home page\n   * - the organization's child pages (i.e. cost center list)\n   * - sub-routes of the organization's child pages (i.e. cost center details, edit cost center, ...)\n   */\n  resolveBreadcrumbs() {\n    return this.breadcrumbs$;\n  }\n}\nOrganizationPageMetaResolver.ɵfac = function OrganizationPageMetaResolver_Factory(t) {\n  return new (t || OrganizationPageMetaResolver)(i0.ɵɵinject(i1.ContentPageMetaResolver), i0.ɵɵinject(i1.TranslationService), i0.ɵɵinject(i1.SemanticPathService), i0.ɵɵinject(i1.RoutingService));\n};\nOrganizationPageMetaResolver.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationPageMetaResolver,\n  factory: OrganizationPageMetaResolver.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationPageMetaResolver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.ContentPageMetaResolver\n    }, {\n      type: i1.TranslationService\n    }, {\n      type: i1.SemanticPathService\n    }, {\n      type: i1.RoutingService\n    }];\n  }, null);\n})();\nclass OrganizationPageMetaModule {}\nOrganizationPageMetaModule.ɵfac = function OrganizationPageMetaModule_Factory(t) {\n  return new (t || OrganizationPageMetaModule)();\n};\nOrganizationPageMetaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrganizationPageMetaModule\n});\nOrganizationPageMetaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: PageMetaResolver,\n    useExisting: OrganizationPageMetaResolver,\n    multi: true\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationPageMetaModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: PageMetaResolver,\n        useExisting: OrganizationPageMetaResolver,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\nconst ORGANIZATION_FEATURE = 'organization';\nconst BUDGET_FEATURE = 'budget';\nconst BUDGET_ENTITIES = 'budget-entities';\nconst BUDGET_LIST = 'budget-list';\nconst COST_CENTER_FEATURE = 'costCenter';\nconst COST_CENTER_ENTITIES = 'costCenter-entities';\nconst COST_CENTER_LIST = 'costCenter-list';\nconst COST_CENTER_ASSIGNED_BUDGETS = 'costCenter-assigned-budgets';\nconst PERMISSION_FEATURE = 'permission';\nconst PERMISSION_ENTITIES = 'permission-entities';\nconst PERMISSION_LIST = 'permission-list';\nconst PERMISSION_TYPES = 'permission-types';\nconst PERMISSION_TYPES_LIST = 'permission-types-list';\nconst ORG_UNIT_FEATURE = 'orgUnit';\nconst ORG_UNIT_NODE_ENTITIES = 'orgUnitNode-entities';\nconst ORG_UNIT_NODE_LIST = 'orgUnitNode-list';\nconst ORG_UNIT_ENTITIES = 'orgUnit-entities';\nconst ORG_UNIT_TREE_ENTITY = 'orgUnit-tree';\nconst ORG_UNIT_APPROVAL_PROCESSES_ENTITIES = 'orgUnit-approval-processes';\nconst ORG_UNIT_ASSIGNED_USERS = 'orgUnit-assigned-users';\nconst ORG_UNIT_TREE = 'tree';\nconst ORG_UNIT_APPROVAL_PROCESSES = 'approvalProcesses';\nconst ORG_UNIT_NODES = 'availableOrgUnitNodes';\nconst B2B_USER_FEATURE = 'b2bUser';\nconst B2B_USER_ENTITIES = 'b2bUser-entities';\nconst USER_LIST = 'b2bUser-list';\nconst B2B_USER_APPROVERS = 'b2bUser-approvers';\nconst B2B_USER_PERMISSIONS = 'b2bUser-permissions';\nconst B2B_USER_USER_GROUPS = 'b2bUser-user-groups';\nconst USER_GROUP_FEATURE = 'userGroup';\nconst USER_GROUP_ENTITIES = 'userGroup-entities';\nconst USER_GROUP_LIST = 'userGroup-list';\nconst USER_GROUP_PERMISSIONS = 'userGroup-available-order-approval-permissions';\nconst USER_GROUP_AVAILABLE_CUSTOMERS = 'userGroup-available-org-customers';\nconst ADDRESS_ENTITIES = 'addresses-entities';\nconst ADDRESS_LIST = 'addresses-list';\nconst LOAD_BUDGET = '[Budget] Load Budget Data';\nconst LOAD_BUDGET_FAIL = '[Budget] Load Budget Data Fail';\nconst LOAD_BUDGET_SUCCESS = '[Budget] Load Budget Data Success';\nconst LOAD_BUDGETS = '[Budget] Load Budgets';\nconst LOAD_BUDGETS_FAIL = '[Budget] Load Budgets Fail';\nconst LOAD_BUDGETS_SUCCESS = '[Budget] Load Budgets Success';\nconst CREATE_BUDGET = '[Budget] Create Budget';\nconst CREATE_BUDGET_FAIL = '[Budget] Create Budget Fail';\nconst CREATE_BUDGET_SUCCESS = '[Budget] Create Budget Success';\nconst UPDATE_BUDGET = '[Budget] Update Budget';\nconst UPDATE_BUDGET_FAIL = '[Budget] Update Budget Fail';\nconst UPDATE_BUDGET_SUCCESS = '[Budget] Update Budget Success';\nclass LoadBudget extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n    this.payload = payload;\n    this.type = LOAD_BUDGET;\n  }\n}\nclass LoadBudgetFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n    this.payload = payload;\n    this.type = LOAD_BUDGET_FAIL;\n  }\n}\nclass LoadBudgetSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, Array.isArray(payload) ? payload.map(budget => budget === null || budget === void 0 ? void 0 : budget.code) : payload === null || payload === void 0 ? void 0 : payload.code);\n    this.payload = payload;\n    this.type = LOAD_BUDGET_SUCCESS;\n  }\n}\nclass LoadBudgets extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_BUDGETS;\n  }\n}\nclass LoadBudgetsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n    this.payload = payload;\n    this.type = LOAD_BUDGETS_FAIL;\n  }\n}\nclass LoadBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_BUDGETS_SUCCESS;\n  }\n}\nclass CreateBudget extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budget.code);\n    this.payload = payload;\n    this.type = CREATE_BUDGET;\n  }\n}\nclass CreateBudgetFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n    this.payload = payload;\n    this.type = CREATE_BUDGET_FAIL;\n  }\n}\nclass CreateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = CREATE_BUDGET_SUCCESS;\n  }\n}\nclass UpdateBudget extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budget.code);\n    this.payload = payload;\n    this.type = UPDATE_BUDGET;\n  }\n}\nclass UpdateBudgetFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_BUDGET_FAIL;\n  }\n}\nclass UpdateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = UPDATE_BUDGET_SUCCESS;\n  }\n}\nvar budget_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_BUDGET: LOAD_BUDGET,\n  LOAD_BUDGET_FAIL: LOAD_BUDGET_FAIL,\n  LOAD_BUDGET_SUCCESS: LOAD_BUDGET_SUCCESS,\n  LOAD_BUDGETS: LOAD_BUDGETS,\n  LOAD_BUDGETS_FAIL: LOAD_BUDGETS_FAIL,\n  LOAD_BUDGETS_SUCCESS: LOAD_BUDGETS_SUCCESS,\n  CREATE_BUDGET: CREATE_BUDGET,\n  CREATE_BUDGET_FAIL: CREATE_BUDGET_FAIL,\n  CREATE_BUDGET_SUCCESS: CREATE_BUDGET_SUCCESS,\n  UPDATE_BUDGET: UPDATE_BUDGET,\n  UPDATE_BUDGET_FAIL: UPDATE_BUDGET_FAIL,\n  UPDATE_BUDGET_SUCCESS: UPDATE_BUDGET_SUCCESS,\n  LoadBudget: LoadBudget,\n  LoadBudgetFail: LoadBudgetFail,\n  LoadBudgetSuccess: LoadBudgetSuccess,\n  LoadBudgets: LoadBudgets,\n  LoadBudgetsFail: LoadBudgetsFail,\n  LoadBudgetsSuccess: LoadBudgetsSuccess,\n  CreateBudget: CreateBudget,\n  CreateBudgetFail: CreateBudgetFail,\n  CreateBudgetSuccess: CreateBudgetSuccess,\n  UpdateBudget: UpdateBudget,\n  UpdateBudgetFail: UpdateBudgetFail,\n  UpdateBudgetSuccess: UpdateBudgetSuccess\n});\nconst LOAD_ORG_UNIT = '[B2BUnit] Load B2BUnit Data';\nconst LOAD_ORG_UNIT_FAIL = '[B2BUnit] Load B2BUnit Data Fail';\nconst LOAD_ORG_UNIT_SUCCESS = '[B2BUnit] Load B2BUnit Data Success';\nconst LOAD_UNIT_NODE = '[B2BUnitNode] Load B2BUnitNode Data';\nconst LOAD_UNIT_NODE_FAIL = '[B2BUnitNode] Load B2BUnitNode Data Fail';\nconst LOAD_UNIT_NODE_SUCCESS = '[B2BUnitNode] Load B2BUnitNode Data Success';\nconst LOAD_UNIT_NODES = '[B2BUnitNode] Load B2BUnitNodes';\nconst LOAD_UNIT_NODES_FAIL = '[B2BUnitNode] Load B2BUnitNodes Fail';\nconst LOAD_UNIT_NODES_SUCCESS = '[B2BUnitNode] Load B2BUnitNodes Success';\nconst CREATE_ORG_UNIT = '[B2BUnit] Create B2BUnitNode';\nconst CREATE_ORG_UNIT_FAIL = '[B2BUnit] Create B2BUnitNode Fail';\nconst CREATE_ORG_UNIT_SUCCESS = '[B2BUnit] Create B2BUnitNode Success';\nconst UPDATE_ORG_UNIT = '[B2BUnit] Update B2BUnitNode';\nconst UPDATE_ORG_UNIT_FAIL = '[B2BUnit] Update B2BUnitNode Fail';\nconst UPDATE_ORG_UNIT_SUCCESS = '[B2BUnit] Update B2BUnitNode Success';\nconst LOAD_UNIT_TREE = '[B2BUnitNode] Load Tree';\nconst LOAD_UNIT_TREE_FAIL = '[B2BUnitNode] Load Tree Fail';\nconst LOAD_UNIT_TREE_SUCCESS = '[B2BUnitNode] Load Tree Success';\nconst LOAD_APPROVAL_PROCESSES = '[B2BApprovalProcess] Load Approval Processes';\nconst LOAD_APPROVAL_PROCESSES_FAIL = '[B2BApprovalProcess] Load Approval Processes Fail';\nconst LOAD_APPROVAL_PROCESSES_SUCCESS = '[B2BApprovalProcess] Load Approval Processes Success';\nconst LOAD_ASSIGNED_USERS = '[B2BUnit] Load Users';\nconst LOAD_ASSIGNED_USERS_SUCCESS = '[B2BUnit] Load Users success';\nconst LOAD_ASSIGNED_USERS_FAIL = '[B2BUnit] Load Users fail';\nconst ASSIGN_ROLE = '[B2BUnit] Assign Role';\nconst ASSIGN_ROLE_SUCCESS = '[B2BUnit] Assign Role success';\nconst ASSIGN_ROLE_FAIL = '[B2BUnit] Assign Role fail';\nconst UNASSIGN_ROLE = '[B2BUnit] Unassign Role';\nconst UNASSIGN_ROLE_SUCCESS = '[B2BUnit] Unassign Role success';\nconst UNASSIGN_ROLE_FAIL = '[B2BUnit] Unassign Role fail';\nconst ASSIGN_APPROVER = '[B2BUnit] Assign Approver';\nconst ASSIGN_APPROVER_SUCCESS = '[B2BUnit] Assign Approver success';\nconst ASSIGN_APPROVER_FAIL = '[B2BUnit] Assign Approver fail';\nconst UNASSIGN_APPROVER = '[B2BUnit] Unassign Approver';\nconst UNASSIGN_APPROVER_SUCCESS = '[B2BUnit] Unassign Approver success';\nconst UNASSIGN_APPROVER_FAIL = '[B2BUnit] Unassign Approver fail';\nconst CREATE_ADDRESS = '[B2BUnit] Create address';\nconst CREATE_ADDRESS_SUCCESS = '[B2BUnit] Create address success';\nconst CREATE_ADDRESS_FAIL = '[B2BUnit] Create address fail';\nconst UPDATE_ADDRESS = '[B2BUnit] Update address';\nconst UPDATE_ADDRESS_SUCCESS = '[B2BUnit] Update address success';\nconst UPDATE_ADDRESS_FAIL = '[B2BUnit] Update address fail';\nconst DELETE_ADDRESS = '[B2BUnit] Delete address';\nconst DELETE_ADDRESS_SUCCESS = '[B2BUnit] Delete address success';\nconst DELETE_ADDRESS_FAIL = '[B2BUnit] Delete address fail';\nconst LOAD_ADDRESS_SUCCESS = '[B2BUnit] Load address success';\nconst LOAD_ADDRESSES = '[B2BUnit] Load addresses';\nconst LOAD_ADDRESSES_SUCCESS = '[B2BUnit] Load addresses success';\nconst LOAD_ADDRESSES_FAIL = '[B2BUnit] Load addresses fail';\nconst CLEAR_ASSIGNED_USERS = '[B2BUnit] Clear Assigned Users';\nclass LoadOrgUnit extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId);\n    this.payload = payload;\n    this.type = LOAD_ORG_UNIT;\n  }\n}\nclass LoadOrgUnitFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId, payload.error);\n    this.payload = payload;\n    this.type = LOAD_ORG_UNIT_FAIL;\n  }\n}\nclass LoadOrgUnitSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, Array.isArray(payload) ? payload.map(orgUnit => orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.uid) : payload === null || payload === void 0 ? void 0 : payload.uid);\n    this.payload = payload;\n    this.type = LOAD_ORG_UNIT_SUCCESS;\n  }\n}\nclass LoadOrgUnitNodes extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n    this.payload = payload;\n    this.type = LOAD_UNIT_NODES;\n  }\n}\nclass LoadOrgUnitNodesFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES, payload.error);\n    this.payload = payload;\n    this.type = LOAD_UNIT_NODES_FAIL;\n  }\n}\nclass LoadOrgUnitNodesSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n    this.payload = payload;\n    this.type = LOAD_UNIT_NODES_SUCCESS;\n  }\n}\nclass CreateUnit extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid);\n    this.payload = payload;\n    this.type = CREATE_ORG_UNIT;\n  }\n}\nclass CreateUnitFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n    this.payload = payload;\n    this.type = CREATE_ORG_UNIT_FAIL;\n  }\n}\nclass CreateUnitSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = CREATE_ORG_UNIT_SUCCESS;\n  }\n}\nclass UpdateUnit extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid);\n    this.payload = payload;\n    this.type = UPDATE_ORG_UNIT;\n  }\n}\nclass UpdateUnitFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_ORG_UNIT_FAIL;\n  }\n}\nclass UpdateUnitSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = UPDATE_ORG_UNIT_SUCCESS;\n  }\n}\nclass LoadTree extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n    this.payload = payload;\n    this.type = LOAD_UNIT_TREE;\n  }\n}\nclass LoadTreeFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE, payload.error);\n    this.payload = payload;\n    this.type = LOAD_UNIT_TREE_FAIL;\n  }\n}\nclass LoadTreeSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n    this.payload = payload;\n    this.type = LOAD_UNIT_TREE_SUCCESS;\n  }\n}\nclass LoadApprovalProcesses extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n    this.payload = payload;\n    this.type = LOAD_APPROVAL_PROCESSES;\n  }\n}\nclass LoadApprovalProcessesFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES, payload.error);\n    this.payload = payload;\n    this.type = LOAD_APPROVAL_PROCESSES_FAIL;\n  }\n}\nclass LoadApprovalProcessesSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n    this.payload = payload;\n    this.type = LOAD_APPROVAL_PROCESSES_SUCCESS;\n  }\n}\nclass LoadAssignedUsers extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_USERS;\n  }\n}\nclass ClearAssignedUsers extends StateUtils.EntityRemoveAction {\n  constructor(payload) {\n    super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n    this.payload = payload;\n    this.type = CLEAR_ASSIGNED_USERS;\n  }\n}\nclass LoadAssignedUsersFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`), payload.error);\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_USERS_FAIL;\n  }\n}\nclass LoadAssignedUsersSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_USERS_SUCCESS;\n  }\n}\nclass AssignRole extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n    this.payload = payload;\n    this.type = ASSIGN_ROLE;\n  }\n}\nclass AssignRoleFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = ASSIGN_ROLE_FAIL;\n  }\n}\nclass AssignRoleSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = ASSIGN_ROLE_SUCCESS;\n  }\n}\nclass UnassignRole extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n    this.payload = payload;\n    this.type = UNASSIGN_ROLE;\n  }\n}\nclass UnassignRoleFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = UNASSIGN_ROLE_FAIL;\n  }\n}\nclass UnassignRoleSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_ROLE_SUCCESS;\n  }\n}\nclass AssignApprover extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n    this.payload = payload;\n    this.type = ASSIGN_APPROVER;\n  }\n}\nclass AssignApproverFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = ASSIGN_APPROVER_FAIL;\n  }\n}\nclass AssignApproverSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = ASSIGN_APPROVER_SUCCESS;\n  }\n}\nclass UnassignApprover extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n    this.payload = payload;\n    this.type = UNASSIGN_APPROVER;\n  }\n}\nclass UnassignApproverFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = UNASSIGN_APPROVER_FAIL;\n  }\n}\nclass UnassignApproverSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_APPROVER_SUCCESS;\n  }\n}\nclass CreateAddress extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.address.id);\n    this.payload = payload;\n    this.type = CREATE_ADDRESS;\n  }\n}\nclass CreateAddressFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n    this.payload = payload;\n    this.type = CREATE_ADDRESS_FAIL;\n  }\n}\nclass CreateAddressSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.id, payload);\n    this.payload = payload;\n    this.type = CREATE_ADDRESS_SUCCESS;\n  }\n}\nclass UpdateAddress extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.address.id);\n    this.payload = payload;\n    this.type = UPDATE_ADDRESS;\n  }\n}\nclass UpdateAddressFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_ADDRESS_FAIL;\n  }\n}\nclass UpdateAddressSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.id, payload);\n    this.payload = payload;\n    this.type = UPDATE_ADDRESS_SUCCESS;\n  }\n}\nclass DeleteAddress extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.addressId);\n    this.payload = payload;\n    this.type = DELETE_ADDRESS;\n  }\n}\nclass DeleteAddressFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n    this.payload = payload;\n    this.type = DELETE_ADDRESS_FAIL;\n  }\n}\nclass DeleteAddressSuccess extends StateUtils.EntityRemoveAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, payload.id);\n    this.payload = payload;\n    this.type = DELETE_ADDRESS_SUCCESS;\n  }\n}\nclass LoadAddressSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ADDRESS_ENTITIES, Array.isArray(payload) ? payload.map(address => address === null || address === void 0 ? void 0 : address.id) : payload === null || payload === void 0 ? void 0 : payload.id);\n    this.payload = payload;\n    this.type = LOAD_ADDRESS_SUCCESS;\n  }\n}\nclass LoadAddresses extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n    this.payload = payload;\n    this.type = LOAD_ADDRESSES;\n  }\n}\nclass LoadAddressesFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(ADDRESS_LIST, payload.orgUnitId, payload.error);\n    this.payload = payload;\n    this.type = LOAD_ADDRESSES_FAIL;\n  }\n}\nclass LoadAddressesSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n    this.payload = payload;\n    this.type = LOAD_ADDRESSES_SUCCESS;\n  }\n}\nvar orgUnit_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_ORG_UNIT: LOAD_ORG_UNIT,\n  LOAD_ORG_UNIT_FAIL: LOAD_ORG_UNIT_FAIL,\n  LOAD_ORG_UNIT_SUCCESS: LOAD_ORG_UNIT_SUCCESS,\n  LOAD_UNIT_NODE: LOAD_UNIT_NODE,\n  LOAD_UNIT_NODE_FAIL: LOAD_UNIT_NODE_FAIL,\n  LOAD_UNIT_NODE_SUCCESS: LOAD_UNIT_NODE_SUCCESS,\n  LOAD_UNIT_NODES: LOAD_UNIT_NODES,\n  LOAD_UNIT_NODES_FAIL: LOAD_UNIT_NODES_FAIL,\n  LOAD_UNIT_NODES_SUCCESS: LOAD_UNIT_NODES_SUCCESS,\n  CREATE_ORG_UNIT: CREATE_ORG_UNIT,\n  CREATE_ORG_UNIT_FAIL: CREATE_ORG_UNIT_FAIL,\n  CREATE_ORG_UNIT_SUCCESS: CREATE_ORG_UNIT_SUCCESS,\n  UPDATE_ORG_UNIT: UPDATE_ORG_UNIT,\n  UPDATE_ORG_UNIT_FAIL: UPDATE_ORG_UNIT_FAIL,\n  UPDATE_ORG_UNIT_SUCCESS: UPDATE_ORG_UNIT_SUCCESS,\n  LOAD_UNIT_TREE: LOAD_UNIT_TREE,\n  LOAD_UNIT_TREE_FAIL: LOAD_UNIT_TREE_FAIL,\n  LOAD_UNIT_TREE_SUCCESS: LOAD_UNIT_TREE_SUCCESS,\n  LOAD_APPROVAL_PROCESSES: LOAD_APPROVAL_PROCESSES,\n  LOAD_APPROVAL_PROCESSES_FAIL: LOAD_APPROVAL_PROCESSES_FAIL,\n  LOAD_APPROVAL_PROCESSES_SUCCESS: LOAD_APPROVAL_PROCESSES_SUCCESS,\n  LOAD_ASSIGNED_USERS: LOAD_ASSIGNED_USERS,\n  LOAD_ASSIGNED_USERS_SUCCESS: LOAD_ASSIGNED_USERS_SUCCESS,\n  LOAD_ASSIGNED_USERS_FAIL: LOAD_ASSIGNED_USERS_FAIL,\n  ASSIGN_ROLE: ASSIGN_ROLE,\n  ASSIGN_ROLE_SUCCESS: ASSIGN_ROLE_SUCCESS,\n  ASSIGN_ROLE_FAIL: ASSIGN_ROLE_FAIL,\n  UNASSIGN_ROLE: UNASSIGN_ROLE,\n  UNASSIGN_ROLE_SUCCESS: UNASSIGN_ROLE_SUCCESS,\n  UNASSIGN_ROLE_FAIL: UNASSIGN_ROLE_FAIL,\n  ASSIGN_APPROVER: ASSIGN_APPROVER,\n  ASSIGN_APPROVER_SUCCESS: ASSIGN_APPROVER_SUCCESS,\n  ASSIGN_APPROVER_FAIL: ASSIGN_APPROVER_FAIL,\n  UNASSIGN_APPROVER: UNASSIGN_APPROVER,\n  UNASSIGN_APPROVER_SUCCESS: UNASSIGN_APPROVER_SUCCESS,\n  UNASSIGN_APPROVER_FAIL: UNASSIGN_APPROVER_FAIL,\n  CREATE_ADDRESS: CREATE_ADDRESS,\n  CREATE_ADDRESS_SUCCESS: CREATE_ADDRESS_SUCCESS,\n  CREATE_ADDRESS_FAIL: CREATE_ADDRESS_FAIL,\n  UPDATE_ADDRESS: UPDATE_ADDRESS,\n  UPDATE_ADDRESS_SUCCESS: UPDATE_ADDRESS_SUCCESS,\n  UPDATE_ADDRESS_FAIL: UPDATE_ADDRESS_FAIL,\n  DELETE_ADDRESS: DELETE_ADDRESS,\n  DELETE_ADDRESS_SUCCESS: DELETE_ADDRESS_SUCCESS,\n  DELETE_ADDRESS_FAIL: DELETE_ADDRESS_FAIL,\n  LOAD_ADDRESS_SUCCESS: LOAD_ADDRESS_SUCCESS,\n  LOAD_ADDRESSES: LOAD_ADDRESSES,\n  LOAD_ADDRESSES_SUCCESS: LOAD_ADDRESSES_SUCCESS,\n  LOAD_ADDRESSES_FAIL: LOAD_ADDRESSES_FAIL,\n  CLEAR_ASSIGNED_USERS: CLEAR_ASSIGNED_USERS,\n  LoadOrgUnit: LoadOrgUnit,\n  LoadOrgUnitFail: LoadOrgUnitFail,\n  LoadOrgUnitSuccess: LoadOrgUnitSuccess,\n  LoadOrgUnitNodes: LoadOrgUnitNodes,\n  LoadOrgUnitNodesFail: LoadOrgUnitNodesFail,\n  LoadOrgUnitNodesSuccess: LoadOrgUnitNodesSuccess,\n  CreateUnit: CreateUnit,\n  CreateUnitFail: CreateUnitFail,\n  CreateUnitSuccess: CreateUnitSuccess,\n  UpdateUnit: UpdateUnit,\n  UpdateUnitFail: UpdateUnitFail,\n  UpdateUnitSuccess: UpdateUnitSuccess,\n  LoadTree: LoadTree,\n  LoadTreeFail: LoadTreeFail,\n  LoadTreeSuccess: LoadTreeSuccess,\n  LoadApprovalProcesses: LoadApprovalProcesses,\n  LoadApprovalProcessesFail: LoadApprovalProcessesFail,\n  LoadApprovalProcessesSuccess: LoadApprovalProcessesSuccess,\n  LoadAssignedUsers: LoadAssignedUsers,\n  ClearAssignedUsers: ClearAssignedUsers,\n  LoadAssignedUsersFail: LoadAssignedUsersFail,\n  LoadAssignedUsersSuccess: LoadAssignedUsersSuccess,\n  AssignRole: AssignRole,\n  AssignRoleFail: AssignRoleFail,\n  AssignRoleSuccess: AssignRoleSuccess,\n  UnassignRole: UnassignRole,\n  UnassignRoleFail: UnassignRoleFail,\n  UnassignRoleSuccess: UnassignRoleSuccess,\n  AssignApprover: AssignApprover,\n  AssignApproverFail: AssignApproverFail,\n  AssignApproverSuccess: AssignApproverSuccess,\n  UnassignApprover: UnassignApprover,\n  UnassignApproverFail: UnassignApproverFail,\n  UnassignApproverSuccess: UnassignApproverSuccess,\n  CreateAddress: CreateAddress,\n  CreateAddressFail: CreateAddressFail,\n  CreateAddressSuccess: CreateAddressSuccess,\n  UpdateAddress: UpdateAddress,\n  UpdateAddressFail: UpdateAddressFail,\n  UpdateAddressSuccess: UpdateAddressSuccess,\n  DeleteAddress: DeleteAddress,\n  DeleteAddressFail: DeleteAddressFail,\n  DeleteAddressSuccess: DeleteAddressSuccess,\n  LoadAddressSuccess: LoadAddressSuccess,\n  LoadAddresses: LoadAddresses,\n  LoadAddressesFail: LoadAddressesFail,\n  LoadAddressesSuccess: LoadAddressesSuccess\n});\nconst LOAD_USER_GROUP = '[UserGroup] Load UserGroup Data';\nconst LOAD_USER_GROUP_FAIL = '[UserGroup] Load UserGroup Data Fail';\nconst LOAD_USER_GROUP_SUCCESS = '[UserGroup] Load UserGroup Data Success';\nconst LOAD_USER_GROUPS = '[UserGroup] Load UserGroups';\nconst LOAD_USER_GROUPS_FAIL = '[UserGroup] Load UserGroups Fail';\nconst LOAD_USER_GROUPS_SUCCESS = '[UserGroup] Load UserGroups Success';\nconst LOAD_USER_GROUP_PERMISSIONS = '[UserGroup] Load Permissions Data';\nconst LOAD_USER_GROUP_PERMISSIONS_FAIL = '[UserGroup] Load Permissions Data Fail';\nconst LOAD_USER_GROUP_PERMISSIONS_SUCCESS = '[UserGroup] Load Permissions Data Success';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS = '[UserGroup] Load Customers Data';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL = '[UserGroup] Load Customers Data Fail';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS = '[UserGroup] Load Customers Data Success';\nconst CREATE_USER_GROUP = '[UserGroup] Create UserGroup';\nconst CREATE_USER_GROUP_FAIL = '[UserGroup] Create UserGroup Fail';\nconst CREATE_USER_GROUP_SUCCESS = '[UserGroup] Create UserGroup Success';\nconst USER_GROUP_ASSIGN_MEMBER = '[UserGroup] Assign Member';\nconst USER_GROUP_ASSIGN_MEMBER_FAIL = '[UserGroup] Assign Member Fail';\nconst USER_GROUP_ASSIGN_MEMBER_SUCCESS = '[UserGroup] Assign Member Success';\nconst USER_GROUP_ASSIGN_PERMISSION = '[UserGroup] Assign Permissions';\nconst USER_GROUP_ASSIGN_PERMISSION_FAIL = '[UserGroup] Assign Permissions Fail';\nconst USER_GROUP_ASSIGN_PERMISSION_SUCCESS = '[UserGroup] Assign Permissions Success';\nconst UPDATE_USER_GROUP = '[UserGroup] Update UserGroup';\nconst UPDATE_USER_GROUP_FAIL = '[UserGroup] Update UserGroup Fail';\nconst UPDATE_USER_GROUP_SUCCESS = '[UserGroup] Update UserGroup Success';\nconst DELETE_USER_GROUP = '[UserGroup] Delete UserGroup';\nconst DELETE_USER_GROUP_FAIL = '[UserGroup] Delete UserGroup Fail';\nconst DELETE_USER_GROUP_SUCCESS = '[UserGroup] Delete UserGroup Success';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS = '[UserGroup] Unassign Members';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL = '[UserGroup] Unassign Members Fail';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS = '[UserGroup] Unassign Members Success';\nconst USER_GROUP_UNASSIGN_MEMBER = '[UserGroup] Unassign Member';\nconst USER_GROUP_UNASSIGN_MEMBER_FAIL = '[UserGroup] Unassign Member Fail';\nconst USER_GROUP_UNASSIGN_MEMBER_SUCCESS = '[UserGroup] Unassign Member Success';\nconst USER_GROUP_UNASSIGN_PERMISSION = '[UserGroup] Unassign Permission';\nconst USER_GROUP_UNASSIGN_PERMISSION_FAIL = '[UserGroup] Unassign Permission Fail';\nconst USER_GROUP_UNASSIGN_PERMISSION_SUCCESS = '[UserGroup] Unassign Permission Success';\nclass LoadUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP;\n  }\n}\nclass LoadUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_FAIL;\n  }\n}\nclass LoadUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, Array.isArray(payload) ? payload.map(userGroup => userGroup === null || userGroup === void 0 ? void 0 : userGroup.uid) : payload === null || payload === void 0 ? void 0 : payload.uid);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_SUCCESS;\n  }\n}\nclass LoadUserGroups extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUPS;\n  }\n}\nclass LoadUserGroupsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUPS_FAIL;\n  }\n}\nclass LoadUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUPS_SUCCESS;\n  }\n}\nclass LoadPermissions$1 extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_PERMISSIONS;\n  }\n}\nclass LoadPermissionsFail$1 extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId), payload.error);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_PERMISSIONS_FAIL;\n  }\n}\nclass LoadPermissionsSuccess$1 extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_PERMISSIONS_SUCCESS;\n  }\n}\nclass LoadAvailableOrgCustomers extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS;\n  }\n}\nclass LoadAvailableOrgCustomersFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId), payload.error);\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL;\n  }\n}\nclass LoadAvailableOrgCustomersSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n    this.payload = payload;\n    this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS;\n  }\n}\nclass CreateUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n    this.payload = payload;\n    this.type = CREATE_USER_GROUP;\n  }\n}\nclass CreateUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = CREATE_USER_GROUP_FAIL;\n  }\n}\nclass CreateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = CREATE_USER_GROUP_SUCCESS;\n  }\n}\nclass AssignMember extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_MEMBER;\n  }\n}\nclass AssignMemberFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_MEMBER_FAIL;\n  }\n}\nclass AssignMemberSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_MEMBER_SUCCESS;\n  }\n}\nclass AssignPermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_PERMISSION;\n  }\n}\nclass AssignPermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_PERMISSION_FAIL;\n  }\n}\nclass AssignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n    this.payload = payload;\n    this.type = USER_GROUP_ASSIGN_PERMISSION_SUCCESS;\n  }\n}\nclass UpdateUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n    this.payload = payload;\n    this.type = UPDATE_USER_GROUP;\n  }\n}\nclass UpdateUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_USER_GROUP_FAIL;\n  }\n}\nclass UpdateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = UPDATE_USER_GROUP_SUCCESS;\n  }\n}\nclass DeleteUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n    this.payload = payload;\n    this.type = DELETE_USER_GROUP;\n  }\n}\nclass DeleteUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = DELETE_USER_GROUP_FAIL;\n  }\n}\nclass DeleteUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = DELETE_USER_GROUP_SUCCESS;\n  }\n}\nclass UnassignMember extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_MEMBER;\n  }\n}\nclass UnassignMemberFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_MEMBER_FAIL;\n  }\n}\nclass UnassignMemberSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_MEMBER_SUCCESS;\n  }\n}\nclass UnassignAllMembers extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS;\n  }\n}\nclass UnassignAllMembersFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL;\n  }\n}\nclass UnassignAllMembersSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS;\n  }\n}\nclass UnassignPermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_PERMISSION;\n  }\n}\nclass UnassignPermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_PERMISSION_FAIL;\n  }\n}\nclass UnassignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n    this.payload = payload;\n    this.type = USER_GROUP_UNASSIGN_PERMISSION_SUCCESS;\n  }\n}\nvar userGroup_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_USER_GROUP: LOAD_USER_GROUP,\n  LOAD_USER_GROUP_FAIL: LOAD_USER_GROUP_FAIL,\n  LOAD_USER_GROUP_SUCCESS: LOAD_USER_GROUP_SUCCESS,\n  LOAD_USER_GROUPS: LOAD_USER_GROUPS,\n  LOAD_USER_GROUPS_FAIL: LOAD_USER_GROUPS_FAIL,\n  LOAD_USER_GROUPS_SUCCESS: LOAD_USER_GROUPS_SUCCESS,\n  LOAD_USER_GROUP_PERMISSIONS: LOAD_USER_GROUP_PERMISSIONS,\n  LOAD_USER_GROUP_PERMISSIONS_FAIL: LOAD_USER_GROUP_PERMISSIONS_FAIL,\n  LOAD_USER_GROUP_PERMISSIONS_SUCCESS: LOAD_USER_GROUP_PERMISSIONS_SUCCESS,\n  LOAD_USER_GROUP_AVAILABLE_CUSTOMERS: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS,\n  LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL,\n  LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS,\n  CREATE_USER_GROUP: CREATE_USER_GROUP,\n  CREATE_USER_GROUP_FAIL: CREATE_USER_GROUP_FAIL,\n  CREATE_USER_GROUP_SUCCESS: CREATE_USER_GROUP_SUCCESS,\n  USER_GROUP_ASSIGN_MEMBER: USER_GROUP_ASSIGN_MEMBER,\n  USER_GROUP_ASSIGN_MEMBER_FAIL: USER_GROUP_ASSIGN_MEMBER_FAIL,\n  USER_GROUP_ASSIGN_MEMBER_SUCCESS: USER_GROUP_ASSIGN_MEMBER_SUCCESS,\n  USER_GROUP_ASSIGN_PERMISSION: USER_GROUP_ASSIGN_PERMISSION,\n  USER_GROUP_ASSIGN_PERMISSION_FAIL: USER_GROUP_ASSIGN_PERMISSION_FAIL,\n  USER_GROUP_ASSIGN_PERMISSION_SUCCESS: USER_GROUP_ASSIGN_PERMISSION_SUCCESS,\n  UPDATE_USER_GROUP: UPDATE_USER_GROUP,\n  UPDATE_USER_GROUP_FAIL: UPDATE_USER_GROUP_FAIL,\n  UPDATE_USER_GROUP_SUCCESS: UPDATE_USER_GROUP_SUCCESS,\n  DELETE_USER_GROUP: DELETE_USER_GROUP,\n  DELETE_USER_GROUP_FAIL: DELETE_USER_GROUP_FAIL,\n  DELETE_USER_GROUP_SUCCESS: DELETE_USER_GROUP_SUCCESS,\n  USER_GROUP_UNASSIGN_ALL_MEMBERS: USER_GROUP_UNASSIGN_ALL_MEMBERS,\n  USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL: USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL,\n  USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS: USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS,\n  USER_GROUP_UNASSIGN_MEMBER: USER_GROUP_UNASSIGN_MEMBER,\n  USER_GROUP_UNASSIGN_MEMBER_FAIL: USER_GROUP_UNASSIGN_MEMBER_FAIL,\n  USER_GROUP_UNASSIGN_MEMBER_SUCCESS: USER_GROUP_UNASSIGN_MEMBER_SUCCESS,\n  USER_GROUP_UNASSIGN_PERMISSION: USER_GROUP_UNASSIGN_PERMISSION,\n  USER_GROUP_UNASSIGN_PERMISSION_FAIL: USER_GROUP_UNASSIGN_PERMISSION_FAIL,\n  USER_GROUP_UNASSIGN_PERMISSION_SUCCESS: USER_GROUP_UNASSIGN_PERMISSION_SUCCESS,\n  LoadUserGroup: LoadUserGroup,\n  LoadUserGroupFail: LoadUserGroupFail,\n  LoadUserGroupSuccess: LoadUserGroupSuccess,\n  LoadUserGroups: LoadUserGroups,\n  LoadUserGroupsFail: LoadUserGroupsFail,\n  LoadUserGroupsSuccess: LoadUserGroupsSuccess,\n  LoadPermissions: LoadPermissions$1,\n  LoadPermissionsFail: LoadPermissionsFail$1,\n  LoadPermissionsSuccess: LoadPermissionsSuccess$1,\n  LoadAvailableOrgCustomers: LoadAvailableOrgCustomers,\n  LoadAvailableOrgCustomersFail: LoadAvailableOrgCustomersFail,\n  LoadAvailableOrgCustomersSuccess: LoadAvailableOrgCustomersSuccess,\n  CreateUserGroup: CreateUserGroup,\n  CreateUserGroupFail: CreateUserGroupFail,\n  CreateUserGroupSuccess: CreateUserGroupSuccess,\n  AssignMember: AssignMember,\n  AssignMemberFail: AssignMemberFail,\n  AssignMemberSuccess: AssignMemberSuccess,\n  AssignPermission: AssignPermission,\n  AssignPermissionFail: AssignPermissionFail,\n  AssignPermissionSuccess: AssignPermissionSuccess,\n  UpdateUserGroup: UpdateUserGroup,\n  UpdateUserGroupFail: UpdateUserGroupFail,\n  UpdateUserGroupSuccess: UpdateUserGroupSuccess,\n  DeleteUserGroup: DeleteUserGroup,\n  DeleteUserGroupFail: DeleteUserGroupFail,\n  DeleteUserGroupSuccess: DeleteUserGroupSuccess,\n  UnassignMember: UnassignMember,\n  UnassignMemberFail: UnassignMemberFail,\n  UnassignMemberSuccess: UnassignMemberSuccess,\n  UnassignAllMembers: UnassignAllMembers,\n  UnassignAllMembersFail: UnassignAllMembersFail,\n  UnassignAllMembersSuccess: UnassignAllMembersSuccess,\n  UnassignPermission: UnassignPermission,\n  UnassignPermissionFail: UnassignPermissionFail,\n  UnassignPermissionSuccess: UnassignPermissionSuccess\n});\nconst LOAD_PERMISSION = '[Permission] Load Permission Data';\nconst LOAD_PERMISSION_FAIL = '[Permission] Load Permission Data Fail';\nconst LOAD_PERMISSION_SUCCESS = '[Permission] Load Permission Data Success';\nconst LOAD_PERMISSIONS = '[Permission] Load Permissions';\nconst LOAD_PERMISSIONS_FAIL = '[Permission] Load Permissions Fail';\nconst LOAD_PERMISSIONS_SUCCESS = '[Permission] Load Permissions Success';\nconst CREATE_PERMISSION = '[Permission] Create Permission';\nconst CREATE_PERMISSION_FAIL = '[Permission] Create Permission Fail';\nconst CREATE_PERMISSION_SUCCESS = '[Permission] Create Permission Success';\nconst UPDATE_PERMISSION = '[Permission] Update Permission';\nconst UPDATE_PERMISSION_FAIL = '[Permission] Update Permission Fail';\nconst UPDATE_PERMISSION_SUCCESS = '[Permission] Update Permission Success';\nconst LOAD_PERMISSION_TYPES = '[Permission Types] Load Permission Types';\nconst LOAD_PERMISSION_TYPES_FAIL = '[Permission Types] Load Permission Types Fail';\nconst LOAD_PERMISSION_TYPES_SUCCESS = '[Permission Types] Load Permission Types Success';\nclass LoadPermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionCode);\n    this.payload = payload;\n    this.type = LOAD_PERMISSION;\n  }\n}\nclass LoadPermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n    this.payload = payload;\n    this.type = LOAD_PERMISSION_FAIL;\n  }\n}\nclass LoadPermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, Array.isArray(payload) ? payload.map(permission => permission === null || permission === void 0 ? void 0 : permission.code) : payload === null || payload === void 0 ? void 0 : payload.code);\n    this.payload = payload;\n    this.type = LOAD_PERMISSION_SUCCESS;\n  }\n}\nclass LoadPermissions extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_PERMISSIONS;\n  }\n}\nclass LoadPermissionsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n    this.payload = payload;\n    this.type = LOAD_PERMISSIONS_FAIL;\n  }\n}\nclass LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_PERMISSIONS_SUCCESS;\n  }\n}\nclass CreatePermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permission.code);\n    this.payload = payload;\n    this.type = CREATE_PERMISSION;\n  }\n}\nclass CreatePermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n    this.payload = payload;\n    this.type = CREATE_PERMISSION_FAIL;\n  }\n}\nclass CreatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = CREATE_PERMISSION_SUCCESS;\n  }\n}\nclass UpdatePermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permission.code);\n    this.payload = payload;\n    this.type = UPDATE_PERMISSION;\n  }\n}\nclass UpdatePermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_PERMISSION_FAIL;\n  }\n}\nclass UpdatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = UPDATE_PERMISSION_SUCCESS;\n  }\n}\nclass LoadPermissionTypes extends StateUtils.EntityLoadAction {\n  constructor() {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n    this.type = LOAD_PERMISSION_TYPES;\n  }\n}\nclass LoadPermissionTypesFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES, payload.error);\n    this.payload = payload;\n    this.type = LOAD_PERMISSION_TYPES_FAIL;\n  }\n}\nclass LoadPermissionTypesSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n    this.payload = payload;\n    this.type = LOAD_PERMISSION_TYPES_SUCCESS;\n  }\n}\nvar permission_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_PERMISSION: LOAD_PERMISSION,\n  LOAD_PERMISSION_FAIL: LOAD_PERMISSION_FAIL,\n  LOAD_PERMISSION_SUCCESS: LOAD_PERMISSION_SUCCESS,\n  LOAD_PERMISSIONS: LOAD_PERMISSIONS,\n  LOAD_PERMISSIONS_FAIL: LOAD_PERMISSIONS_FAIL,\n  LOAD_PERMISSIONS_SUCCESS: LOAD_PERMISSIONS_SUCCESS,\n  CREATE_PERMISSION: CREATE_PERMISSION,\n  CREATE_PERMISSION_FAIL: CREATE_PERMISSION_FAIL,\n  CREATE_PERMISSION_SUCCESS: CREATE_PERMISSION_SUCCESS,\n  UPDATE_PERMISSION: UPDATE_PERMISSION,\n  UPDATE_PERMISSION_FAIL: UPDATE_PERMISSION_FAIL,\n  UPDATE_PERMISSION_SUCCESS: UPDATE_PERMISSION_SUCCESS,\n  LOAD_PERMISSION_TYPES: LOAD_PERMISSION_TYPES,\n  LOAD_PERMISSION_TYPES_FAIL: LOAD_PERMISSION_TYPES_FAIL,\n  LOAD_PERMISSION_TYPES_SUCCESS: LOAD_PERMISSION_TYPES_SUCCESS,\n  LoadPermission: LoadPermission,\n  LoadPermissionFail: LoadPermissionFail,\n  LoadPermissionSuccess: LoadPermissionSuccess,\n  LoadPermissions: LoadPermissions,\n  LoadPermissionsFail: LoadPermissionsFail,\n  LoadPermissionsSuccess: LoadPermissionsSuccess,\n  CreatePermission: CreatePermission,\n  CreatePermissionFail: CreatePermissionFail,\n  CreatePermissionSuccess: CreatePermissionSuccess,\n  UpdatePermission: UpdatePermission,\n  UpdatePermissionFail: UpdatePermissionFail,\n  UpdatePermissionSuccess: UpdatePermissionSuccess,\n  LoadPermissionTypes: LoadPermissionTypes,\n  LoadPermissionTypesFail: LoadPermissionTypesFail,\n  LoadPermissionTypesSuccess: LoadPermissionTypesSuccess\n});\nconst LOAD_COST_CENTER = '[CostCenter] Load CostCenter Data';\nconst LOAD_COST_CENTER_FAIL = '[CostCenter] Load CostCenter Data Fail';\nconst LOAD_COST_CENTER_SUCCESS = '[CostCenter] Load CostCenter Data Success';\nconst LOAD_COST_CENTERS = '[CostCenter] Load CostCenters';\nconst LOAD_COST_CENTERS_FAIL = '[CostCenter] Load CostCenters Fail';\nconst LOAD_COST_CENTERS_SUCCESS = '[CostCenter] Load CostCenters Success';\nconst CREATE_COST_CENTER = '[CostCenter] Create CostCenter';\nconst CREATE_COST_CENTER_FAIL = '[CostCenter] Create CostCenter Fail';\nconst CREATE_COST_CENTER_SUCCESS = '[CostCenter] Create CostCenter Success';\nconst UPDATE_COST_CENTER = '[CostCenter] Update CostCenter';\nconst UPDATE_COST_CENTER_FAIL = '[CostCenter] Update CostCenter Fail';\nconst UPDATE_COST_CENTER_SUCCESS = '[CostCenter] Update CostCenter Success';\nconst LOAD_ASSIGNED_BUDGETS = '[CostCenter] Load Budgets';\nconst LOAD_ASSIGNED_BUDGETS_SUCCESS = '[CostCenter] Load Budgets success';\nconst LOAD_ASSIGNED_BUDGETS_FAIL = '[CostCenter] Load Budgets fail';\nconst ASSIGN_BUDGET = '[CostCenter] Assign Budget';\nconst ASSIGN_BUDGET_SUCCESS = '[CostCenter] Assign Budget success';\nconst ASSIGN_BUDGET_FAIL = '[CostCenter] Assign Budget fail';\nconst UNASSIGN_BUDGET = '[CostCenter] Unassign Budget';\nconst UNASSIGN_BUDGET_SUCCESS = '[CostCenter] Unassign Budget success';\nconst UNASSIGN_BUDGET_FAIL = '[CostCenter] Unassign Budget fail';\nclass LoadCostCenter extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode);\n    this.payload = payload;\n    this.type = LOAD_COST_CENTER;\n  }\n}\nclass LoadCostCenterFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n    this.payload = payload;\n    this.type = LOAD_COST_CENTER_FAIL;\n  }\n}\nclass LoadCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, Array.isArray(payload) ? payload.map(costCenter => costCenter === null || costCenter === void 0 ? void 0 : costCenter.code) : payload === null || payload === void 0 ? void 0 : payload.code);\n    this.payload = payload;\n    this.type = LOAD_COST_CENTER_SUCCESS;\n  }\n}\nclass LoadCostCenters extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_COST_CENTERS;\n  }\n}\nclass LoadCostCentersFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n    this.payload = payload;\n    this.type = LOAD_COST_CENTERS_FAIL;\n  }\n}\nclass LoadCostCentersSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_COST_CENTERS_SUCCESS;\n  }\n}\nclass CreateCostCenter extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code);\n    this.payload = payload;\n    this.type = CREATE_COST_CENTER;\n  }\n}\nclass CreateCostCenterFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n    this.payload = payload;\n    this.type = CREATE_COST_CENTER_FAIL;\n  }\n}\nclass CreateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = CREATE_COST_CENTER_SUCCESS;\n  }\n}\nclass UpdateCostCenter extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code);\n    this.payload = payload;\n    this.type = UPDATE_COST_CENTER;\n  }\n}\nclass UpdateCostCenterFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_COST_CENTER_FAIL;\n  }\n}\nclass UpdateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(COST_CENTER_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = UPDATE_COST_CENTER_SUCCESS;\n  }\n}\nclass LoadAssignedBudgets extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode));\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_BUDGETS;\n  }\n}\nclass LoadAssignedBudgetsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode), payload.error);\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_BUDGETS_FAIL;\n  }\n}\nclass LoadAssignedBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode));\n    this.payload = payload;\n    this.type = LOAD_ASSIGNED_BUDGETS_SUCCESS;\n  }\n}\nclass AssignBudget extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n    this.payload = payload;\n    this.type = ASSIGN_BUDGET;\n  }\n}\nclass AssignBudgetFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n    this.payload = payload;\n    this.type = ASSIGN_BUDGET_FAIL;\n  }\n}\nclass AssignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = ASSIGN_BUDGET_SUCCESS;\n  }\n}\nclass UnassignBudget extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n    this.payload = payload;\n    this.type = UNASSIGN_BUDGET;\n  }\n}\nclass UnassignBudgetFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n    this.payload = payload;\n    this.type = UNASSIGN_BUDGET_FAIL;\n  }\n}\nclass UnassignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_BUDGET_SUCCESS;\n  }\n}\nvar costCenter_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_COST_CENTER: LOAD_COST_CENTER,\n  LOAD_COST_CENTER_FAIL: LOAD_COST_CENTER_FAIL,\n  LOAD_COST_CENTER_SUCCESS: LOAD_COST_CENTER_SUCCESS,\n  LOAD_COST_CENTERS: LOAD_COST_CENTERS,\n  LOAD_COST_CENTERS_FAIL: LOAD_COST_CENTERS_FAIL,\n  LOAD_COST_CENTERS_SUCCESS: LOAD_COST_CENTERS_SUCCESS,\n  CREATE_COST_CENTER: CREATE_COST_CENTER,\n  CREATE_COST_CENTER_FAIL: CREATE_COST_CENTER_FAIL,\n  CREATE_COST_CENTER_SUCCESS: CREATE_COST_CENTER_SUCCESS,\n  UPDATE_COST_CENTER: UPDATE_COST_CENTER,\n  UPDATE_COST_CENTER_FAIL: UPDATE_COST_CENTER_FAIL,\n  UPDATE_COST_CENTER_SUCCESS: UPDATE_COST_CENTER_SUCCESS,\n  LOAD_ASSIGNED_BUDGETS: LOAD_ASSIGNED_BUDGETS,\n  LOAD_ASSIGNED_BUDGETS_SUCCESS: LOAD_ASSIGNED_BUDGETS_SUCCESS,\n  LOAD_ASSIGNED_BUDGETS_FAIL: LOAD_ASSIGNED_BUDGETS_FAIL,\n  ASSIGN_BUDGET: ASSIGN_BUDGET,\n  ASSIGN_BUDGET_SUCCESS: ASSIGN_BUDGET_SUCCESS,\n  ASSIGN_BUDGET_FAIL: ASSIGN_BUDGET_FAIL,\n  UNASSIGN_BUDGET: UNASSIGN_BUDGET,\n  UNASSIGN_BUDGET_SUCCESS: UNASSIGN_BUDGET_SUCCESS,\n  UNASSIGN_BUDGET_FAIL: UNASSIGN_BUDGET_FAIL,\n  LoadCostCenter: LoadCostCenter,\n  LoadCostCenterFail: LoadCostCenterFail,\n  LoadCostCenterSuccess: LoadCostCenterSuccess,\n  LoadCostCenters: LoadCostCenters,\n  LoadCostCentersFail: LoadCostCentersFail,\n  LoadCostCentersSuccess: LoadCostCentersSuccess,\n  CreateCostCenter: CreateCostCenter,\n  CreateCostCenterFail: CreateCostCenterFail,\n  CreateCostCenterSuccess: CreateCostCenterSuccess,\n  UpdateCostCenter: UpdateCostCenter,\n  UpdateCostCenterFail: UpdateCostCenterFail,\n  UpdateCostCenterSuccess: UpdateCostCenterSuccess,\n  LoadAssignedBudgets: LoadAssignedBudgets,\n  LoadAssignedBudgetsFail: LoadAssignedBudgetsFail,\n  LoadAssignedBudgetsSuccess: LoadAssignedBudgetsSuccess,\n  AssignBudget: AssignBudget,\n  AssignBudgetFail: AssignBudgetFail,\n  AssignBudgetSuccess: AssignBudgetSuccess,\n  UnassignBudget: UnassignBudget,\n  UnassignBudgetFail: UnassignBudgetFail,\n  UnassignBudgetSuccess: UnassignBudgetSuccess\n});\nconst LOAD_B2B_USER = '[B2BUser] Load B2BUser Data';\nconst LOAD_B2B_USER_FAIL = '[B2BUser] Load B2BUser Data Fail';\nconst LOAD_B2B_USER_SUCCESS = '[B2BUser] Load B2BUser Data Success';\nconst CREATE_B2B_USER = '[B2BUser] Create B2BUser Data';\nconst CREATE_B2B_USER_FAIL = '[B2BUser] Create B2BUser Data Fail';\nconst CREATE_B2B_USER_SUCCESS = '[B2BUser] Create B2BUser Data Success';\nconst UPDATE_B2B_USER = '[B2BUser] Update B2BUser Data';\nconst UPDATE_B2B_USER_FAIL = '[B2BUser] Update B2BUser Data Fail';\nconst UPDATE_B2B_USER_SUCCESS = '[B2BUser] Update B2BUser Data Success';\nconst LOAD_B2B_USERS = '[B2BUser] Load B2BUsers';\nconst LOAD_B2B_USERS_FAIL = '[B2BUser] Load B2BUsers Fail';\nconst LOAD_B2B_USERS_SUCCESS = '[B2BUser] Load B2BUsers Success';\nconst LOAD_B2B_USER_APPROVERS = '[B2BUser] Load B2BUser Approvers';\nconst LOAD_B2B_USER_APPROVERS_FAIL = '[B2BUser] Load B2BUser Approvers Fail';\nconst LOAD_B2B_USER_APPROVERS_SUCCESS = '[B2BUser] Load B2BUser Approvers Success';\nconst ASSIGN_B2B_USER_APPROVER = '[B2BUser] Assign B2BUser Approver';\nconst ASSIGN_B2B_USER_APPROVER_FAIL = '[B2BUser] Assign B2BUser Approver Fail';\nconst ASSIGN_B2B_USER_APPROVER_SUCCESS = '[B2BUser] Assign B2BUser Approver Success';\nconst UNASSIGN_B2B_USER_APPROVER = '[B2BUser] Unassign B2BUser Approver';\nconst UNASSIGN_B2B_USER_APPROVER_FAIL = '[B2BUser] Unassign B2BUser Approver Fail';\nconst UNASSIGN_B2B_USER_APPROVER_SUCCESS = '[B2BUser] Unassign B2BUser Approver Success';\nconst LOAD_B2B_USER_PERMISSIONS = '[B2BUser] Load B2BUser Permissions';\nconst LOAD_B2B_USER_PERMISSIONS_FAIL = '[B2BUser] Load B2BUser Permissions Fail';\nconst LOAD_B2B_USER_PERMISSIONS_SUCCESS = '[B2BUser] Load B2BUser Permissions Success';\nconst ASSIGN_B2B_USER_PERMISSION = '[B2BUser] Assign B2BUser Permission';\nconst ASSIGN_B2B_USER_PERMISSION_FAIL = '[B2BUser] Assign B2BUser Permission Fail';\nconst ASSIGN_B2B_USER_PERMISSION_SUCCESS = '[B2BUser] Assign B2BUser Permission Success';\nconst UNASSIGN_B2B_USER_PERMISSION = '[B2BUser] Unassign B2BUser Permission';\nconst UNASSIGN_B2B_USER_PERMISSION_FAIL = '[B2BUser] Unassign B2BUser Permission Fail';\nconst UNASSIGN_B2B_USER_PERMISSION_SUCCESS = '[B2BUser] Unassign B2BUser Permission Success';\nconst LOAD_B2B_USER_USER_GROUPS = '[B2BUser] Load B2BUser User Groups';\nconst LOAD_B2B_USER_USER_GROUPS_FAIL = '[B2BUser] Load B2BUser User Groups Fail';\nconst LOAD_B2B_USER_USER_GROUPS_SUCCESS = '[B2BUser] Load B2BUser User Groups Success';\nconst ASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Assign B2BUser User Group';\nconst ASSIGN_B2B_USER_USER_GROUP_FAIL = '[B2BUser] Assign B2BUser User Group Fail';\nconst ASSIGN_B2B_USER_USER_GROUP_SUCCESS = '[B2BUser] Assign B2BUser User Group Success';\nconst UNASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Unassign B2BUser User Group';\nconst UNASSIGN_B2B_USER_USER_GROUP_FAIL = '[B2BUser] Unassign B2BUser User Group Fail';\nconst UNASSIGN_B2B_USER_USER_GROUP_SUCCESS = '[B2BUser] Unassign B2BUser User Group Success';\nclass LoadB2BUser extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER;\n  }\n}\nclass LoadB2BUserFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_FAIL;\n  }\n}\nclass LoadB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, Array.isArray(payload) ? payload.map(orgUnitCustomer => orgUnitCustomer === null || orgUnitCustomer === void 0 ? void 0 : orgUnitCustomer.customerId) : payload === null || payload === void 0 ? void 0 : payload.customerId);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_SUCCESS;\n  }\n}\nclass CreateB2BUser extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n    this.payload = payload;\n    this.type = CREATE_B2B_USER;\n  }\n}\nclass CreateB2BUserFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = CREATE_B2B_USER_FAIL;\n  }\n}\nclass CreateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n    this.payload = payload;\n    this.type = CREATE_B2B_USER_SUCCESS;\n  }\n}\nclass UpdateB2BUser extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n    this.payload = payload;\n    this.type = UPDATE_B2B_USER;\n  }\n}\nclass UpdateB2BUserFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = UPDATE_B2B_USER_FAIL;\n  }\n}\nclass UpdateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n    this.payload = payload;\n    this.type = UPDATE_B2B_USER_SUCCESS;\n  }\n}\nclass LoadB2BUsers extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_B2B_USERS;\n  }\n}\nclass LoadB2BUsersFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n    this.payload = payload;\n    this.type = LOAD_B2B_USERS_FAIL;\n  }\n}\nclass LoadB2BUsersSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n    this.payload = payload;\n    this.type = LOAD_B2B_USERS_SUCCESS;\n  }\n}\nclass LoadB2BUserApprovers extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_APPROVERS;\n  }\n}\nclass LoadB2BUserApproversFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId), payload.error);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_APPROVERS_FAIL;\n  }\n}\nclass LoadB2BUserApproversSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_APPROVERS_SUCCESS;\n  }\n}\nclass AssignB2BUserApprover extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_APPROVER;\n  }\n}\nclass AssignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_APPROVER_FAIL;\n  }\n}\nclass AssignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_APPROVER_SUCCESS;\n  }\n}\nclass UnassignB2BUserApprover extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_APPROVER;\n  }\n}\nclass UnassignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_APPROVER_FAIL;\n  }\n}\nclass UnassignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_APPROVER_SUCCESS;\n  }\n}\nclass LoadB2BUserPermissions extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_PERMISSIONS;\n  }\n}\nclass LoadB2BUserPermissionsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_PERMISSIONS, payload.orgCustomerId, payload.error);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_PERMISSIONS_FAIL;\n  }\n}\nclass LoadB2BUserPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_PERMISSIONS_SUCCESS;\n  }\n}\nclass AssignB2BUserPermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_PERMISSION;\n  }\n}\nclass AssignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_PERMISSION_FAIL;\n  }\n}\nclass AssignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  }\n}\nclass UnassignB2BUserPermission extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_PERMISSION;\n  }\n}\nclass UnassignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_PERMISSION_FAIL;\n  }\n}\nclass UnassignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  }\n}\nclass LoadB2BUserUserGroups extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_USER_GROUPS;\n  }\n}\nclass LoadB2BUserUserGroupsFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId), payload.error);\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_USER_GROUPS_FAIL;\n  }\n}\nclass LoadB2BUserUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n    this.payload = payload;\n    this.type = LOAD_B2B_USER_USER_GROUPS_SUCCESS;\n  }\n}\nclass AssignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_USER_GROUP;\n  }\n}\nclass AssignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_USER_GROUP_FAIL;\n  }\n}\nclass AssignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = ASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  }\n}\nclass UnassignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_USER_GROUP;\n  }\n}\nclass UnassignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_USER_GROUP_FAIL;\n  }\n}\nclass UnassignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  constructor(payload) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n    this.payload = payload;\n    this.type = UNASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  }\n}\nvar b2bUser_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LOAD_B2B_USER: LOAD_B2B_USER,\n  LOAD_B2B_USER_FAIL: LOAD_B2B_USER_FAIL,\n  LOAD_B2B_USER_SUCCESS: LOAD_B2B_USER_SUCCESS,\n  CREATE_B2B_USER: CREATE_B2B_USER,\n  CREATE_B2B_USER_FAIL: CREATE_B2B_USER_FAIL,\n  CREATE_B2B_USER_SUCCESS: CREATE_B2B_USER_SUCCESS,\n  UPDATE_B2B_USER: UPDATE_B2B_USER,\n  UPDATE_B2B_USER_FAIL: UPDATE_B2B_USER_FAIL,\n  UPDATE_B2B_USER_SUCCESS: UPDATE_B2B_USER_SUCCESS,\n  LOAD_B2B_USERS: LOAD_B2B_USERS,\n  LOAD_B2B_USERS_FAIL: LOAD_B2B_USERS_FAIL,\n  LOAD_B2B_USERS_SUCCESS: LOAD_B2B_USERS_SUCCESS,\n  LOAD_B2B_USER_APPROVERS: LOAD_B2B_USER_APPROVERS,\n  LOAD_B2B_USER_APPROVERS_FAIL: LOAD_B2B_USER_APPROVERS_FAIL,\n  LOAD_B2B_USER_APPROVERS_SUCCESS: LOAD_B2B_USER_APPROVERS_SUCCESS,\n  ASSIGN_B2B_USER_APPROVER: ASSIGN_B2B_USER_APPROVER,\n  ASSIGN_B2B_USER_APPROVER_FAIL: ASSIGN_B2B_USER_APPROVER_FAIL,\n  ASSIGN_B2B_USER_APPROVER_SUCCESS: ASSIGN_B2B_USER_APPROVER_SUCCESS,\n  UNASSIGN_B2B_USER_APPROVER: UNASSIGN_B2B_USER_APPROVER,\n  UNASSIGN_B2B_USER_APPROVER_FAIL: UNASSIGN_B2B_USER_APPROVER_FAIL,\n  UNASSIGN_B2B_USER_APPROVER_SUCCESS: UNASSIGN_B2B_USER_APPROVER_SUCCESS,\n  LOAD_B2B_USER_PERMISSIONS: LOAD_B2B_USER_PERMISSIONS,\n  LOAD_B2B_USER_PERMISSIONS_FAIL: LOAD_B2B_USER_PERMISSIONS_FAIL,\n  LOAD_B2B_USER_PERMISSIONS_SUCCESS: LOAD_B2B_USER_PERMISSIONS_SUCCESS,\n  ASSIGN_B2B_USER_PERMISSION: ASSIGN_B2B_USER_PERMISSION,\n  ASSIGN_B2B_USER_PERMISSION_FAIL: ASSIGN_B2B_USER_PERMISSION_FAIL,\n  ASSIGN_B2B_USER_PERMISSION_SUCCESS: ASSIGN_B2B_USER_PERMISSION_SUCCESS,\n  UNASSIGN_B2B_USER_PERMISSION: UNASSIGN_B2B_USER_PERMISSION,\n  UNASSIGN_B2B_USER_PERMISSION_FAIL: UNASSIGN_B2B_USER_PERMISSION_FAIL,\n  UNASSIGN_B2B_USER_PERMISSION_SUCCESS: UNASSIGN_B2B_USER_PERMISSION_SUCCESS,\n  LOAD_B2B_USER_USER_GROUPS: LOAD_B2B_USER_USER_GROUPS,\n  LOAD_B2B_USER_USER_GROUPS_FAIL: LOAD_B2B_USER_USER_GROUPS_FAIL,\n  LOAD_B2B_USER_USER_GROUPS_SUCCESS: LOAD_B2B_USER_USER_GROUPS_SUCCESS,\n  ASSIGN_B2B_USER_USER_GROUP: ASSIGN_B2B_USER_USER_GROUP,\n  ASSIGN_B2B_USER_USER_GROUP_FAIL: ASSIGN_B2B_USER_USER_GROUP_FAIL,\n  ASSIGN_B2B_USER_USER_GROUP_SUCCESS: ASSIGN_B2B_USER_USER_GROUP_SUCCESS,\n  UNASSIGN_B2B_USER_USER_GROUP: UNASSIGN_B2B_USER_USER_GROUP,\n  UNASSIGN_B2B_USER_USER_GROUP_FAIL: UNASSIGN_B2B_USER_USER_GROUP_FAIL,\n  UNASSIGN_B2B_USER_USER_GROUP_SUCCESS: UNASSIGN_B2B_USER_USER_GROUP_SUCCESS,\n  LoadB2BUser: LoadB2BUser,\n  LoadB2BUserFail: LoadB2BUserFail,\n  LoadB2BUserSuccess: LoadB2BUserSuccess,\n  CreateB2BUser: CreateB2BUser,\n  CreateB2BUserFail: CreateB2BUserFail,\n  CreateB2BUserSuccess: CreateB2BUserSuccess,\n  UpdateB2BUser: UpdateB2BUser,\n  UpdateB2BUserFail: UpdateB2BUserFail,\n  UpdateB2BUserSuccess: UpdateB2BUserSuccess,\n  LoadB2BUsers: LoadB2BUsers,\n  LoadB2BUsersFail: LoadB2BUsersFail,\n  LoadB2BUsersSuccess: LoadB2BUsersSuccess,\n  LoadB2BUserApprovers: LoadB2BUserApprovers,\n  LoadB2BUserApproversFail: LoadB2BUserApproversFail,\n  LoadB2BUserApproversSuccess: LoadB2BUserApproversSuccess,\n  AssignB2BUserApprover: AssignB2BUserApprover,\n  AssignB2BUserApproverFail: AssignB2BUserApproverFail,\n  AssignB2BUserApproverSuccess: AssignB2BUserApproverSuccess,\n  UnassignB2BUserApprover: UnassignB2BUserApprover,\n  UnassignB2BUserApproverFail: UnassignB2BUserApproverFail,\n  UnassignB2BUserApproverSuccess: UnassignB2BUserApproverSuccess,\n  LoadB2BUserPermissions: LoadB2BUserPermissions,\n  LoadB2BUserPermissionsFail: LoadB2BUserPermissionsFail,\n  LoadB2BUserPermissionsSuccess: LoadB2BUserPermissionsSuccess,\n  AssignB2BUserPermission: AssignB2BUserPermission,\n  AssignB2BUserPermissionFail: AssignB2BUserPermissionFail,\n  AssignB2BUserPermissionSuccess: AssignB2BUserPermissionSuccess,\n  UnassignB2BUserPermission: UnassignB2BUserPermission,\n  UnassignB2BUserPermissionFail: UnassignB2BUserPermissionFail,\n  UnassignB2BUserPermissionSuccess: UnassignB2BUserPermissionSuccess,\n  LoadB2BUserUserGroups: LoadB2BUserUserGroups,\n  LoadB2BUserUserGroupsFail: LoadB2BUserUserGroupsFail,\n  LoadB2BUserUserGroupsSuccess: LoadB2BUserUserGroupsSuccess,\n  AssignB2BUserUserGroup: AssignB2BUserUserGroup,\n  AssignB2BUserUserGroupFail: AssignB2BUserUserGroupFail,\n  AssignB2BUserUserGroupSuccess: AssignB2BUserUserGroupSuccess,\n  UnassignB2BUserUserGroup: UnassignB2BUserUserGroup,\n  UnassignB2BUserUserGroupFail: UnassignB2BUserUserGroupFail,\n  UnassignB2BUserUserGroupSuccess: UnassignB2BUserUserGroupSuccess\n});\nconst CLEAR_ORGANIZATION_DATA = '[Organization] Clear Data';\nclass OrganizationClearData {\n  constructor() {\n    this.type = CLEAR_ORGANIZATION_DATA;\n  }\n}\nvar organization_action = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CLEAR_ORGANIZATION_DATA: CLEAR_ORGANIZATION_DATA,\n  OrganizationClearData: OrganizationClearData\n});\nclass BudgetEffects {\n  constructor(actions$, budgetConnector) {\n    this.actions$ = actions$;\n    this.budgetConnector = budgetConnector;\n    this.loadBudget$ = this.actions$.pipe(ofType(LOAD_BUDGET), map(action => action.payload), switchMap(({\n      userId,\n      budgetCode\n    }) => {\n      return this.budgetConnector.get(userId, budgetCode).pipe(map(budget => {\n        return new LoadBudgetSuccess([budget]);\n      }), catchError(error => of(new LoadBudgetFail({\n        budgetCode,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadBudgets$ = this.actions$.pipe(ofType(LOAD_BUDGETS), map(action => action.payload), switchMap(payload => this.budgetConnector.getList(payload.userId, payload.params).pipe(switchMap(budgets => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(budgets, 'code');\n      return [new LoadBudgetSuccess(values), new LoadBudgetsSuccess({\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadBudgetsFail({\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))));\n    this.createBudget$ = this.actions$.pipe(ofType(CREATE_BUDGET), map(action => action.payload), switchMap(payload => this.budgetConnector.create(payload.userId, payload.budget).pipe(switchMap(data => [new CreateBudgetSuccess(data), new OrganizationClearData()]), catchError(error => from([new CreateBudgetFail({\n      budgetCode: payload.budget.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateBudget$ = this.actions$.pipe(ofType(UPDATE_BUDGET), map(action => action.payload), switchMap(payload => this.budgetConnector.update(payload.userId, payload.budgetCode, payload.budget).pipe(switchMap(data => [new UpdateBudgetSuccess(data), new OrganizationClearData()]), catchError(error => from([new UpdateBudgetFail({\n      budgetCode: payload.budget.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n  }\n}\nBudgetEffects.ɵfac = function BudgetEffects_Factory(t) {\n  return new (t || BudgetEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(BudgetConnector));\n};\nBudgetEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BudgetEffects,\n  factory: BudgetEffects.ɵfac\n});\n__decorate([Effect()], BudgetEffects.prototype, \"loadBudget$\", void 0);\n__decorate([Effect()], BudgetEffects.prototype, \"loadBudgets$\", void 0);\n__decorate([Effect()], BudgetEffects.prototype, \"createBudget$\", void 0);\n__decorate([Effect()], BudgetEffects.prototype, \"updateBudget$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BudgetEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: BudgetConnector\n    }];\n  }, {\n    loadBudget$: [],\n    loadBudgets$: [],\n    createBudget$: [],\n    updateBudget$: []\n  });\n})();\nclass OrgUnitEffects {\n  // @Effect()\n  // loadAddress$: Observable<\n  //   | OrgUnitActions.LoadAddressSuccess\n  //   | OrgUnitActions.LoadAddressesSuccess\n  //   | OrgUnitActions.LoadAddressesFail\n  // > = this.actions$.pipe(\n  //   ofType(OrgUnitActions.LOAD_ADDRESSES),\n  //   map((action: OrgUnitActions.LoadAddresses) => action.payload),\n  //   switchMap(({ userId, orgUnitId }) => {\n  //     return this.orgUnitConnector.getAddresses(userId, orgUnitId).pipe(\n  //       switchMap((addresses: EntitiesModel<B2BAddress>) => {\n  //         const { values, page } = StateUtils.normalizeListPage(addresses, 'id');\n  //         return [\n  //           new OrgUnitActions.LoadAddressSuccess(values),\n  //           new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n  //         ];\n  //       }),\n  //       catchError(error =>\n  //         of(\n  //           new OrgUnitActions.LoadAddressesFail({\n  //             orgUnitId,\n  //             error: normalizeHttpError(error),\n  //           })\n  //         )\n  //       )\n  //     );\n  //   })\n  // );\n  constructor(actions$, orgUnitConnector) {\n    this.actions$ = actions$;\n    this.orgUnitConnector = orgUnitConnector;\n    this.loadOrgUnit$ = this.actions$.pipe(ofType(LOAD_ORG_UNIT), map(action => action.payload), switchMap(({\n      userId,\n      orgUnitId\n    }) => {\n      return this.orgUnitConnector.get(userId, orgUnitId).pipe(switchMap(orgUnit => {\n        const {\n          values,\n          page\n        } = StateUtils.normalizeListPage({\n          values: orgUnit.addresses\n        }, 'id');\n        return [new LoadOrgUnitSuccess([orgUnit]), new LoadAddressSuccess(values), new LoadAddressesSuccess({\n          page,\n          orgUnitId\n        })];\n      }), catchError(error => of(new LoadOrgUnitFail({\n        orgUnitId,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadAvailableOrgUnits$ = this.actions$.pipe(ofType(LOAD_UNIT_NODES), map(action => action.payload), switchMap(payload => this.orgUnitConnector.getList(payload.userId).pipe(map(orgUnitsList => new LoadOrgUnitNodesSuccess(orgUnitsList)), catchError(error => of(new LoadOrgUnitNodesFail({\n      error: normalizeHttpError(error)\n    }))))));\n    this.createUnit$ = this.actions$.pipe(ofType(CREATE_ORG_UNIT), map(action => action.payload), switchMap(payload => this.orgUnitConnector.create(payload.userId, payload.unit).pipe(switchMap(data => [new CreateUnitSuccess(data), new OrganizationClearData()]), catchError(error => from([new CreateUnitFail({\n      unitCode: payload.unit.uid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateUnit$ = this.actions$.pipe(ofType(UPDATE_ORG_UNIT), map(action => action.payload), switchMap(payload => this.orgUnitConnector.update(payload.userId, payload.unitCode, payload.unit).pipe(switchMap(_data => [\n    // Workaround for empty response\n    new UpdateUnitSuccess(payload.unit), new OrganizationClearData()]), catchError(error => from([new UpdateUnitFail({\n      unitCode: payload.unit.uid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.loadTree$ = this.actions$.pipe(ofType(LOAD_UNIT_TREE), map(action => action.payload), switchMap(({\n      userId\n    }) => {\n      return this.orgUnitConnector.getTree(userId).pipe(map(orgUnit => new LoadTreeSuccess(orgUnit)), catchError(error => of(new LoadTreeFail({\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadApprovalProcesses$ = this.actions$.pipe(ofType(LOAD_APPROVAL_PROCESSES), map(action => action.payload), switchMap(({\n      userId\n    }) => {\n      return this.orgUnitConnector.getApprovalProcesses(userId).pipe(map(approvalProcesses => new LoadApprovalProcessesSuccess(approvalProcesses)), catchError(error => of(new LoadApprovalProcessesFail({\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadUsers$ = this.actions$.pipe(ofType(LOAD_ASSIGNED_USERS), map(action => action.payload), groupBy(({\n      orgUnitId,\n      roleId,\n      params\n    }) => StateUtils.serializeParams([orgUnitId, roleId], params)), mergeMap(group => group.pipe(switchMap(({\n      userId,\n      orgUnitId,\n      roleId,\n      params\n    }) => {\n      return this.orgUnitConnector.getUsers(userId, orgUnitId, roleId, params).pipe(switchMap(users => {\n        const {\n          values,\n          page\n        } = StateUtils.normalizeListPage(users, 'customerId');\n        return [new LoadB2BUserSuccess(values), new LoadAssignedUsersSuccess({\n          orgUnitId,\n          roleId,\n          page,\n          params\n        })];\n      }), catchError(error => of(new LoadAssignedUsersFail({\n        orgUnitId,\n        roleId,\n        params,\n        error: normalizeHttpError(error)\n      }))));\n    }))));\n    this.assignRoleToUser = this.actions$.pipe(ofType(ASSIGN_ROLE), map(action => action.payload), switchMap(({\n      userId,\n      orgCustomerId,\n      roleId\n    }) => this.orgUnitConnector.assignRole(userId, orgCustomerId, roleId).pipe(map(() => new AssignRoleSuccess({\n      uid: orgCustomerId,\n      roleId,\n      selected: true\n    })), catchError(error => of(new AssignRoleFail({\n      orgCustomerId,\n      error: normalizeHttpError(error)\n    }))))));\n    this.unassignRoleToUser$ = this.actions$.pipe(ofType(UNASSIGN_ROLE), map(action => action.payload), switchMap(({\n      userId,\n      orgCustomerId,\n      roleId\n    }) => this.orgUnitConnector.unassignRole(userId, orgCustomerId, roleId).pipe(map(() => new UnassignRoleSuccess({\n      uid: orgCustomerId,\n      roleId,\n      selected: false\n    })), catchError(error => of(new UnassignRoleFail({\n      orgCustomerId,\n      error: normalizeHttpError(error)\n    }))))));\n    this.assignApprover = this.actions$.pipe(ofType(ASSIGN_APPROVER), map(action => action.payload), mergeMap(({\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    }) => this.orgUnitConnector.assignApprover(userId, orgUnitId, orgCustomerId, roleId).pipe(switchMap(() => [new AssignApproverSuccess({\n      uid: orgCustomerId,\n      roleId,\n      selected: true\n    }), new OrganizationClearData()]), catchError(error => from([new AssignApproverFail({\n      orgCustomerId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignApprover = this.actions$.pipe(ofType(UNASSIGN_APPROVER), map(action => action.payload), mergeMap(({\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    }) => this.orgUnitConnector.unassignApprover(userId, orgUnitId, orgCustomerId, roleId).pipe(switchMap(() => [new UnassignApproverSuccess({\n      uid: orgCustomerId,\n      roleId,\n      selected: false\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignApproverFail({\n      orgCustomerId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.createAddress$ = this.actions$.pipe(ofType(CREATE_ADDRESS), map(action => action.payload), switchMap(payload => this.orgUnitConnector.createAddress(payload.userId, payload.orgUnitId, payload.address).pipe(switchMap(data => [new CreateAddressSuccess(data), new CreateAddressSuccess({\n      id: null\n    }), new OrganizationClearData()]), catchError(error => from([new CreateAddressFail({\n      addressId: payload.address.id,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateAddress$ = this.actions$.pipe(ofType(UPDATE_ADDRESS), map(action => action.payload), switchMap(({\n      userId,\n      orgUnitId,\n      addressId,\n      address\n    }) => this.orgUnitConnector.updateAddress(userId, orgUnitId, addressId, address).pipe(switchMap(() => [\n    // commented out due to no response from backend on PATCH request\n    // new OrgUnitActions.UpdateAddressSuccess(data),\n    new UpdateAddressSuccess(address), new OrganizationClearData()]), catchError(error => from([new UpdateAddressFail({\n      addressId: address.id,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.deleteAddress$ = this.actions$.pipe(ofType(DELETE_ADDRESS), map(action => action.payload), switchMap(payload => this.orgUnitConnector.deleteAddress(payload.userId, payload.orgUnitId, payload.addressId).pipe(switchMap(() => [new DeleteAddressSuccess({\n      id: payload.addressId\n    }), new OrganizationClearData()]), catchError(error => from([new DeleteAddressFail({\n      addressId: payload.addressId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n  }\n}\nOrgUnitEffects.ɵfac = function OrgUnitEffects_Factory(t) {\n  return new (t || OrgUnitEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(OrgUnitConnector));\n};\nOrgUnitEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrgUnitEffects,\n  factory: OrgUnitEffects.ɵfac\n});\n__decorate([Effect()], OrgUnitEffects.prototype, \"loadOrgUnit$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"loadAvailableOrgUnits$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"createUnit$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"updateUnit$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"loadTree$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"loadApprovalProcesses$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"loadUsers$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"assignRoleToUser\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"unassignRoleToUser$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"assignApprover\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"unassignApprover\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"createAddress$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"updateAddress$\", void 0);\n__decorate([Effect()], OrgUnitEffects.prototype, \"deleteAddress$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgUnitEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: OrgUnitConnector\n    }];\n  }, {\n    loadOrgUnit$: [],\n    loadAvailableOrgUnits$: [],\n    createUnit$: [],\n    updateUnit$: [],\n    loadTree$: [],\n    loadApprovalProcesses$: [],\n    loadUsers$: [],\n    assignRoleToUser: [],\n    unassignRoleToUser$: [],\n    assignApprover: [],\n    unassignApprover: [],\n    createAddress$: [],\n    updateAddress$: [],\n    deleteAddress$: []\n  });\n})();\nclass PermissionEffects {\n  constructor(actions$, permissionConnector) {\n    this.actions$ = actions$;\n    this.permissionConnector = permissionConnector;\n    this.loadPermission$ = this.actions$.pipe(ofType(LOAD_PERMISSION), map(action => action.payload), switchMap(({\n      userId,\n      permissionCode\n    }) => {\n      return this.permissionConnector.get(userId, permissionCode).pipe(map(permission => {\n        return new LoadPermissionSuccess([permission]);\n      }), catchError(error => of(new LoadPermissionFail({\n        permissionCode,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadPermissions$ = this.actions$.pipe(ofType(LOAD_PERMISSIONS), map(action => action.payload), switchMap(payload => this.permissionConnector.getList(payload.userId, payload.params).pipe(switchMap(permissions => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(permissions, 'code');\n      return [new LoadPermissionSuccess(values), new LoadPermissionsSuccess({\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadPermissionsFail({\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))));\n    this.createPermission$ = this.actions$.pipe(ofType(CREATE_PERMISSION), map(action => action.payload), switchMap(payload => this.permissionConnector.create(payload.userId, payload.permission).pipe(switchMap(data => [new CreatePermissionSuccess(data), new OrganizationClearData()]), catchError(error => from([new CreatePermissionFail({\n      permissionCode: payload.permission.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updatePermission$ = this.actions$.pipe(ofType(UPDATE_PERMISSION), map(action => action.payload), switchMap(payload => this.permissionConnector.update(payload.userId, payload.permissionCode, payload.permission).pipe(switchMap(data => [new UpdatePermissionSuccess(data), new OrganizationClearData()]), catchError(error => from([new UpdatePermissionFail({\n      permissionCode: payload.permission.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.loadPermissionTypes$ = this.actions$.pipe(ofType(LOAD_PERMISSION_TYPES), switchMap(() => this.permissionConnector.getTypes().pipe(map(permissionTypeList => new LoadPermissionTypesSuccess(permissionTypeList)), catchError(error => of(new LoadPermissionTypesFail({\n      error: normalizeHttpError(error)\n    }))))));\n  }\n}\nPermissionEffects.ɵfac = function PermissionEffects_Factory(t) {\n  return new (t || PermissionEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(PermissionConnector));\n};\nPermissionEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PermissionEffects,\n  factory: PermissionEffects.ɵfac\n});\n__decorate([Effect()], PermissionEffects.prototype, \"loadPermission$\", void 0);\n__decorate([Effect()], PermissionEffects.prototype, \"loadPermissions$\", void 0);\n__decorate([Effect()], PermissionEffects.prototype, \"createPermission$\", void 0);\n__decorate([Effect()], PermissionEffects.prototype, \"updatePermission$\", void 0);\n__decorate([Effect()], PermissionEffects.prototype, \"loadPermissionTypes$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PermissionEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: PermissionConnector\n    }];\n  }, {\n    loadPermission$: [],\n    loadPermissions$: [],\n    createPermission$: [],\n    updatePermission$: [],\n    loadPermissionTypes$: []\n  });\n})();\nclass CostCenterEffects {\n  constructor(actions$, costCenterConnector) {\n    this.actions$ = actions$;\n    this.costCenterConnector = costCenterConnector;\n    this.loadCostCenter$ = this.actions$.pipe(ofType(LOAD_COST_CENTER), map(action => action.payload), switchMap(({\n      userId,\n      costCenterCode\n    }) => {\n      return this.costCenterConnector.get(userId, costCenterCode).pipe(map(costCenter => {\n        return new LoadCostCenterSuccess([costCenter]);\n      }), catchError(error => of(new LoadCostCenterFail({\n        costCenterCode,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadCostCenters$ = this.actions$.pipe(ofType(LOAD_COST_CENTERS), map(action => action.payload), switchMap(payload => this.costCenterConnector.getList(payload.userId, payload.params).pipe(switchMap(costCenters => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(costCenters, 'code');\n      return [new LoadCostCenterSuccess(values), new LoadCostCentersSuccess({\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadCostCentersFail({\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))));\n    this.createCostCenter$ = this.actions$.pipe(ofType(CREATE_COST_CENTER), map(action => action.payload), switchMap(payload => this.costCenterConnector.create(payload.userId, payload.costCenter).pipe(switchMap(data => [new CreateCostCenterSuccess(data), new OrganizationClearData()]), catchError(error => from([new CreateCostCenterFail({\n      costCenterCode: payload.costCenter.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateCostCenter$ = this.actions$.pipe(ofType(UPDATE_COST_CENTER), map(action => action.payload), switchMap(payload => this.costCenterConnector.update(payload.userId, payload.costCenterCode, payload.costCenter).pipe(switchMap(data => [new UpdateCostCenterSuccess(data), new OrganizationClearData()]), catchError(error => from([new UpdateCostCenterFail({\n      costCenterCode: payload.costCenter.code,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.loadAssignedBudgets$ = this.actions$.pipe(ofType(LOAD_ASSIGNED_BUDGETS), map(action => action.payload), groupBy(({\n      costCenterCode,\n      params\n    }) => StateUtils.serializeParams(costCenterCode, params)), mergeMap(group => group.pipe(switchMap(({\n      userId,\n      costCenterCode,\n      params\n    }) => this.costCenterConnector.getBudgets(userId, costCenterCode, params).pipe(switchMap(budgets => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(budgets, 'code');\n      return [new LoadBudgetSuccess(values), new LoadAssignedBudgetsSuccess({\n        costCenterCode,\n        page,\n        params\n      })];\n    }), catchError(error => of(new LoadAssignedBudgetsFail({\n      costCenterCode,\n      params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.assignBudgetToCostCenter$ = this.actions$.pipe(ofType(ASSIGN_BUDGET), map(action => action.payload), mergeMap(({\n      userId,\n      costCenterCode,\n      budgetCode\n    }) => this.costCenterConnector.assignBudget(userId, costCenterCode, budgetCode).pipe(switchMap(() => [new AssignBudgetSuccess({\n      code: budgetCode,\n      selected: true\n    }), new OrganizationClearData()]), catchError(error => from([new AssignBudgetFail({\n      budgetCode,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignBudgetToCostCenter$ = this.actions$.pipe(ofType(UNASSIGN_BUDGET), map(action => action.payload), mergeMap(({\n      userId,\n      costCenterCode,\n      budgetCode\n    }) => this.costCenterConnector.unassignBudget(userId, costCenterCode, budgetCode).pipe(switchMap(() => [new UnassignBudgetSuccess({\n      code: budgetCode,\n      selected: false\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignBudgetFail({\n      budgetCode,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n  }\n}\nCostCenterEffects.ɵfac = function CostCenterEffects_Factory(t) {\n  return new (t || CostCenterEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(CostCenterConnector));\n};\nCostCenterEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CostCenterEffects,\n  factory: CostCenterEffects.ɵfac\n});\n__decorate([Effect()], CostCenterEffects.prototype, \"loadCostCenter$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"loadCostCenters$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"createCostCenter$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"updateCostCenter$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"loadAssignedBudgets$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"assignBudgetToCostCenter$\", void 0);\n__decorate([Effect()], CostCenterEffects.prototype, \"unassignBudgetToCostCenter$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CostCenterEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: CostCenterConnector\n    }];\n  }, {\n    loadCostCenter$: [],\n    loadCostCenters$: [],\n    createCostCenter$: [],\n    updateCostCenter$: [],\n    loadAssignedBudgets$: [],\n    assignBudgetToCostCenter$: [],\n    unassignBudgetToCostCenter$: []\n  });\n})();\nclass B2BUserEffects {\n  constructor(actions$, b2bUserConnector, routingService, userService, userIdService) {\n    this.actions$ = actions$;\n    this.b2bUserConnector = b2bUserConnector;\n    this.routingService = routingService;\n    this.userService = userService;\n    this.userIdService = userIdService;\n    this.loadB2BUser$ = this.actions$.pipe(ofType(LOAD_B2B_USER), map(action => action.payload), switchMap(({\n      userId,\n      orgCustomerId\n    }) => {\n      return this.b2bUserConnector.get(userId, orgCustomerId).pipe(map(b2bUser => {\n        return new LoadB2BUserSuccess([b2bUser]);\n      }), catchError(error => of(new LoadB2BUserFail({\n        orgCustomerId,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.createB2BUser$ = this.actions$.pipe(ofType(CREATE_B2B_USER), map(action => action.payload), switchMap(({\n      userId,\n      orgCustomer\n    }) => this.b2bUserConnector.create(userId, orgCustomer).pipe(switchMap(data => {\n      const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n      // TODO Workaround for not known customerId while user creation (redireciton)\n      return this.routingService.getRouterState().pipe(take(1), tap(route => this.redirectToDetails(route, data)), switchMap(() => {\n        const successActions = [new CreateB2BUserSuccess(data), new CreateB2BUserSuccess({\n          customerId: null\n        }), new OrganizationClearData()];\n        if (isAssignedToApprovers) {\n          successActions.splice(1, 0, new AssignApprover({\n            userId,\n            orgUnitId: orgCustomer.orgUnit.uid,\n            orgCustomerId: data.customerId,\n            roleId: B2BUserRole.APPROVER\n          }));\n        }\n        return successActions;\n      }));\n    }), catchError(error => from([new CreateB2BUserFail({\n      orgCustomerId: orgCustomer.customerId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateB2BUser$ = this.actions$.pipe(ofType(UPDATE_B2B_USER), map(action => action.payload), switchMap(({\n      userId,\n      orgCustomerId,\n      orgCustomer\n    }) => {\n      const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n      return this.b2bUserConnector.update(userId, orgCustomerId, orgCustomer).pipe(switchMap(_data => {\n        const successActions = [\n        // TODO: change for 'payload: data' when backend API start to return user data on PATCH\n        new UpdateB2BUserSuccess(orgCustomer)];\n        if (isAssignedToApprovers) {\n          successActions.push(new AssignApprover({\n            userId,\n            orgUnitId: orgCustomer.orgUnit.uid,\n            orgCustomerId,\n            roleId: B2BUserRole.APPROVER\n          }));\n        }\n        return successActions;\n      }), catchError(error => from([new UpdateB2BUserFail({\n        orgCustomerId: orgCustomer.customerId,\n        error: normalizeHttpError(error)\n      }), new OrganizationClearData()])));\n    }));\n    this.checkSelfEmailUpdate$ = this.actions$.pipe(ofType(UPDATE_B2B_USER_SUCCESS), map(action => action.payload), withLatestFrom(this.userService.get(), this.userIdService.getUserId()), switchMap(([payload, currentUser]) => {\n      const currentUserEmailMatch = payload.customerId === currentUser.customerId && payload.email !== currentUser.displayUid;\n      if (currentUserEmailMatch) {\n        this.routingService.go({\n          cxRoute: 'login'\n        });\n      }\n      return currentUserEmailMatch ? [new AuthActions.Logout()] : [new OrganizationClearData()];\n    }));\n    this.loadB2BUsers$ = this.actions$.pipe(ofType(LOAD_B2B_USERS), map(action => action.payload), switchMap(payload => this.b2bUserConnector.getList(payload.userId, payload.params).pipe(switchMap(b2bUsers => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(b2bUsers, 'customerId');\n      return [new LoadB2BUserSuccess(values), new LoadB2BUsersSuccess({\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadB2BUsersFail({\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))));\n    this.loadB2BUserApprovers$ = this.actions$.pipe(ofType(LOAD_B2B_USER_APPROVERS), map(action => action.payload), groupBy(({\n      orgCustomerId,\n      params\n    }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap(group => group.pipe(switchMap(payload => this.b2bUserConnector.getApprovers(payload.userId, payload.orgCustomerId, payload.params).pipe(switchMap(approvers => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(approvers, 'customerId');\n      return [new LoadB2BUserSuccess(values), new LoadB2BUserApproversSuccess({\n        orgCustomerId: payload.orgCustomerId,\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadB2BUserApproversFail({\n      orgCustomerId: payload.orgCustomerId,\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.loadB2BUserPermissions$ = this.actions$.pipe(ofType(LOAD_B2B_USER_PERMISSIONS), map(action => action.payload), groupBy(({\n      orgCustomerId,\n      params\n    }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap(group => group.pipe(switchMap(payload => this.b2bUserConnector.getPermissions(payload.userId, payload.orgCustomerId, payload.params).pipe(switchMap(permissions => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(permissions, 'code');\n      return [new LoadPermissionSuccess(values), new LoadB2BUserPermissionsSuccess({\n        orgCustomerId: payload.orgCustomerId,\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadB2BUserPermissionsFail({\n      orgCustomerId: payload.orgCustomerId,\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.loadB2BUserUserGroups$ = this.actions$.pipe(ofType(LOAD_B2B_USER_USER_GROUPS), map(action => action.payload), groupBy(({\n      orgCustomerId,\n      params\n    }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap(group => group.pipe(switchMap(payload => this.b2bUserConnector.getUserGroups(payload.userId, payload.orgCustomerId, payload.params).pipe(switchMap(userGroups => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(userGroups, 'uid');\n      return [new LoadUserGroupSuccess(values), new LoadB2BUserUserGroupsSuccess({\n        orgCustomerId: payload.orgCustomerId,\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadB2BUserUserGroupsFail({\n      orgCustomerId: payload.orgCustomerId,\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.assignApproverToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_APPROVER), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.assignApprover(payload.userId, payload.orgCustomerId, payload.approverId).pipe(switchMap(data => [new AssignB2BUserApproverSuccess({\n      // Occ returned email, but we use customerId in store\n      approverId: payload.approverId,\n      selected: data.selected\n    })\n    // Clearing data in this case causes unexpected behavior (#10468)\n    // new OrganizationActions.OrganizationClearData(),\n    ]), catchError(error => from([new AssignB2BUserApproverFail({\n      orgCustomerId: payload.orgCustomerId,\n      approverId: payload.approverId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignApproverFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_APPROVER), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.unassignApprover(payload.userId, payload.orgCustomerId, payload.approverId).pipe(switchMap(data => [new UnassignB2BUserApproverSuccess({\n      // Occ returned email, but we use customerId in store\n      approverId: payload.approverId,\n      selected: data.selected\n    })\n    // Clearing data in this case causes unexpected behavior (#10468)\n    // new OrganizationActions.OrganizationClearData(),\n    ]), catchError(error => from([new UnassignB2BUserApproverFail({\n      orgCustomerId: payload.orgCustomerId,\n      approverId: payload.approverId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.assignPermissionToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_PERMISSION), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.assignPermission(payload.userId, payload.orgCustomerId, payload.permissionId).pipe(switchMap(data => [new AssignB2BUserPermissionSuccess({\n      permissionId: data.id,\n      selected: data.selected\n    }), new OrganizationClearData()]), catchError(error => from([new AssignB2BUserPermissionFail({\n      orgCustomerId: payload.orgCustomerId,\n      permissionId: payload.permissionId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignPermissionFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_PERMISSION), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.unassignPermission(payload.userId, payload.orgCustomerId, payload.permissionId).pipe(switchMap(data => [new UnassignB2BUserPermissionSuccess({\n      permissionId: data.id,\n      selected: data.selected\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignB2BUserPermissionFail({\n      orgCustomerId: payload.orgCustomerId,\n      permissionId: payload.permissionId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.assignUserGroupToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_USER_GROUP), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.assignUserGroup(payload.userId, payload.orgCustomerId, payload.userGroupId).pipe(switchMap(data => [new AssignB2BUserUserGroupSuccess({\n      uid: data.id,\n      selected: data.selected\n    }), new OrganizationClearData()]), catchError(error => from([new AssignB2BUserUserGroupFail({\n      orgCustomerId: payload.orgCustomerId,\n      userGroupId: payload.userGroupId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignUserGroupFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_USER_GROUP), map(action => action.payload), mergeMap(payload => this.b2bUserConnector.unassignUserGroup(payload.userId, payload.orgCustomerId, payload.userGroupId).pipe(switchMap(\n    // TODO: Workaround because occ doesn't respond here\n    // (data) =>\n    //   new B2BUserActions.DeleteB2BUserUserGroupSuccess({\n    //     uid: data.id,\n    //     selected: data.selected,\n    //   })\n    () => [new UnassignB2BUserUserGroupSuccess({\n      uid: payload.userGroupId,\n      selected: false\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignB2BUserUserGroupFail({\n      orgCustomerId: payload.orgCustomerId,\n      userGroupId: payload.userGroupId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n  }\n  redirectToDetails(route, data) {\n    var _a, _b, _c;\n    if (((_c = (_b = (_a = route) === null || _a === void 0 ? void 0 : _a.state) === null || _b === void 0 ? void 0 : _b.context) === null || _c === void 0 ? void 0 : _c.id) !== '/organization/units') {\n      this.routingService.go({\n        cxRoute: 'orgUserDetails',\n        params: data\n      });\n    }\n  }\n}\nB2BUserEffects.ɵfac = function B2BUserEffects_Factory(t) {\n  return new (t || B2BUserEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(B2BUserConnector), i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i1.UserIdService));\n};\nB2BUserEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: B2BUserEffects,\n  factory: B2BUserEffects.ɵfac\n});\n__decorate([Effect()], B2BUserEffects.prototype, \"loadB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"createB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"updateB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"checkSelfEmailUpdate$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"loadB2BUsers$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"loadB2BUserApprovers$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"loadB2BUserPermissions$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"loadB2BUserUserGroups$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"assignApproverToB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"unassignApproverFromB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"assignPermissionToB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"unassignPermissionFromB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"assignUserGroupToB2BUser$\", void 0);\n__decorate([Effect()], B2BUserEffects.prototype, \"unassignUserGroupFromB2BUser$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(B2BUserEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: B2BUserConnector\n    }, {\n      type: i1.RoutingService\n    }, {\n      type: i1.UserService\n    }, {\n      type: i1.UserIdService\n    }];\n  }, {\n    loadB2BUser$: [],\n    createB2BUser$: [],\n    updateB2BUser$: [],\n    checkSelfEmailUpdate$: [],\n    loadB2BUsers$: [],\n    loadB2BUserApprovers$: [],\n    loadB2BUserPermissions$: [],\n    loadB2BUserUserGroups$: [],\n    assignApproverToB2BUser$: [],\n    unassignApproverFromB2BUser$: [],\n    assignPermissionToB2BUser$: [],\n    unassignPermissionFromB2BUser$: [],\n    assignUserGroupToB2BUser$: [],\n    unassignUserGroupFromB2BUser$: []\n  });\n})();\nclass UserGroupEffects {\n  constructor(actions$, userGroupConnector) {\n    this.actions$ = actions$;\n    this.userGroupConnector = userGroupConnector;\n    this.loadUserGroup$ = this.actions$.pipe(ofType(LOAD_USER_GROUP), map(action => action.payload), switchMap(({\n      userId,\n      userGroupId\n    }) => {\n      return this.userGroupConnector.get(userId, userGroupId).pipe(map(userGroup => {\n        return new LoadUserGroupSuccess([userGroup]);\n      }), catchError(error => of(new LoadUserGroupFail({\n        userGroupId,\n        error: normalizeHttpError(error)\n      }))));\n    }));\n    this.loadUserGroups$ = this.actions$.pipe(ofType(LOAD_USER_GROUPS), map(action => action.payload), switchMap(payload => this.userGroupConnector.getList(payload.userId, payload.params).pipe(switchMap(userGroups => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(userGroups, 'uid');\n      return [new LoadUserGroupSuccess(values), new LoadUserGroupsSuccess({\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadUserGroupsFail({\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))));\n    this.loadAvailableOrderApprovalPermissions$ = this.actions$.pipe(ofType(LOAD_USER_GROUP_PERMISSIONS), map(action => action.payload), groupBy(({\n      userGroupId,\n      params\n    }) => StateUtils.serializeParams(userGroupId, params)), mergeMap(group => group.pipe(switchMap(payload => this.userGroupConnector.getAvailableOrderApprovalPermissions(payload.userId, payload.userGroupId, payload.params).pipe(switchMap(permissions => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(permissions, 'code');\n      return [new LoadPermissionSuccess(values), new LoadPermissionsSuccess$1({\n        userGroupId: payload.userGroupId,\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadPermissionsFail$1({\n      userGroupId: payload.userGroupId,\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.loadAvailableOrgCustomers$ = this.actions$.pipe(ofType(LOAD_USER_GROUP_AVAILABLE_CUSTOMERS), map(action => action.payload), groupBy(({\n      userGroupId,\n      params\n    }) => StateUtils.serializeParams(userGroupId, params)), mergeMap(group => group.pipe(switchMap(payload => this.userGroupConnector.getAvailableOrgCustomers(payload.userId, payload.userGroupId, payload.params).pipe(switchMap(customers => {\n      const {\n        values,\n        page\n      } = StateUtils.normalizeListPage(customers, 'customerId');\n      return [new LoadB2BUserSuccess(values), new LoadAvailableOrgCustomersSuccess({\n        userGroupId: payload.userGroupId,\n        page,\n        params: payload.params\n      })];\n    }), catchError(error => of(new LoadAvailableOrgCustomersFail({\n      userGroupId: payload.userGroupId,\n      params: payload.params,\n      error: normalizeHttpError(error)\n    }))))))));\n    this.createUserGroup$ = this.actions$.pipe(ofType(CREATE_USER_GROUP), map(action => action.payload), switchMap(payload => this.userGroupConnector.create(payload.userId, payload.userGroup).pipe(switchMap(data => [new CreateUserGroupSuccess(data), new OrganizationClearData()]), catchError(error => from([new CreateUserGroupFail({\n      userGroupId: payload.userGroup.uid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.updateUserGroup$ = this.actions$.pipe(ofType(UPDATE_USER_GROUP), map(action => action.payload), switchMap(payload => this.userGroupConnector.update(payload.userId, payload.userGroupId, payload.userGroup).pipe(switchMap(() => [\n    // TODO: Workaround for empty PATCH response:\n    new UpdateUserGroupSuccess(payload.userGroup), new OrganizationClearData()]), catchError(error => from([new UpdateUserGroupFail({\n      userGroupId: payload.userGroup.uid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.deleteUserGroup$ = this.actions$.pipe(ofType(DELETE_USER_GROUP), map(action => action.payload), switchMap(payload => this.userGroupConnector.delete(payload.userId, payload.userGroupId).pipe(switchMap(data => [new DeleteUserGroupSuccess(data), new OrganizationClearData()]), catchError(error => from([new DeleteUserGroupFail({\n      userGroupId: payload.userGroupId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.assignPermissionToUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_ASSIGN_PERMISSION), map(action => action.payload), mergeMap(payload => this.userGroupConnector.assignOrderApprovalPermission(payload.userId, payload.userGroupId, payload.permissionUid).pipe(switchMap(data => [new AssignPermissionSuccess({\n      permissionUid: data.id,\n      selected: data.selected\n    }), new OrganizationClearData()]), catchError(error => from([new AssignPermissionFail({\n      userGroupId: payload.userGroupId,\n      permissionUid: payload.permissionUid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.assignMemberUnitUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_ASSIGN_MEMBER), map(action => action.payload), mergeMap(payload => this.userGroupConnector.assignMember(payload.userId, payload.userGroupId, payload.customerId).pipe(switchMap(() => [new AssignMemberSuccess({\n      customerId: payload.customerId,\n      selected: true\n    }), new OrganizationClearData()]), catchError(error => from([new AssignMemberFail({\n      userGroupId: payload.userGroupId,\n      customerId: payload.customerId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignMemberFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_MEMBER), map(action => action.payload), mergeMap(payload => this.userGroupConnector.unassignMember(payload.userId, payload.userGroupId, payload.customerId).pipe(switchMap(() => [new UnassignMemberSuccess({\n      customerId: payload.customerId,\n      selected: false\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignMemberFail({\n      userGroupId: payload.userGroupId,\n      customerId: payload.customerId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignPermissionFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_PERMISSION), map(action => action.payload), mergeMap(payload => this.userGroupConnector.unassignOrderApprovalPermission(payload.userId, payload.userGroupId, payload.permissionUid).pipe(switchMap(data => [new UnassignPermissionSuccess({\n      permissionUid: data.id,\n      selected: data.selected\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignPermissionFail({\n      userGroupId: payload.userGroupId,\n      permissionUid: payload.permissionUid,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n    this.unassignAllMembersFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_ALL_MEMBERS), map(action => action.payload), switchMap(payload => this.userGroupConnector.unassignAllMembers(payload.userId, payload.userGroupId).pipe(switchMap(() => [new UnassignAllMembersSuccess({\n      selected: false\n    }), new OrganizationClearData()]), catchError(error => from([new UnassignAllMembersFail({\n      userGroupId: payload.userGroupId,\n      error: normalizeHttpError(error)\n    }), new OrganizationClearData()])))));\n  }\n}\nUserGroupEffects.ɵfac = function UserGroupEffects_Factory(t) {\n  return new (t || UserGroupEffects)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(UserGroupConnector));\n};\nUserGroupEffects.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserGroupEffects,\n  factory: UserGroupEffects.ɵfac\n});\n__decorate([Effect()], UserGroupEffects.prototype, \"loadUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"loadUserGroups$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"loadAvailableOrderApprovalPermissions$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"loadAvailableOrgCustomers$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"createUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"updateUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"deleteUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"assignPermissionToUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"assignMemberUnitUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"unassignMemberFromUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"unassignPermissionFromUserGroup$\", void 0);\n__decorate([Effect()], UserGroupEffects.prototype, \"unassignAllMembersFromUserGroup$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserGroupEffects, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: UserGroupConnector\n    }];\n  }, {\n    loadUserGroup$: [],\n    loadUserGroups$: [],\n    loadAvailableOrderApprovalPermissions$: [],\n    loadAvailableOrgCustomers$: [],\n    createUserGroup$: [],\n    updateUserGroup$: [],\n    deleteUserGroup$: [],\n    assignPermissionToUserGroup$: [],\n    assignMemberUnitUserGroup$: [],\n    unassignMemberFromUserGroup$: [],\n    unassignPermissionFromUserGroup$: [],\n    unassignAllMembersFromUserGroup$: []\n  });\n})();\nconst effects = [BudgetEffects, OrgUnitEffects, UserGroupEffects, PermissionEffects, CostCenterEffects, B2BUserEffects];\nconst b2bUserInitialState = undefined;\nconst b2bUsersInitialState = undefined;\nfunction b2bUserEntitiesReducer(state = b2bUserInitialState, action) {\n  var _a, _b, _c;\n  switch (action.type) {\n    case LOAD_B2B_USER_SUCCESS:\n    case CREATE_B2B_USER_SUCCESS:\n    case UPDATE_B2B_USER_SUCCESS:\n      return action.payload;\n    case ASSIGN_ROLE_SUCCESS:\n    case ASSIGN_APPROVER_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        selected: (_a = action.payload) === null || _a === void 0 ? void 0 : _a.selected,\n        roles: [...((state === null || state === void 0 ? void 0 : state.roles) || []), (_b = action.payload) === null || _b === void 0 ? void 0 : _b.roleId]\n      });\n    case UNASSIGN_ROLE_SUCCESS:\n    case UNASSIGN_APPROVER_SUCCESS:\n      return Object.assign(Object.assign({}, state), {\n        selected: (_c = action.payload) === null || _c === void 0 ? void 0 : _c.selected,\n        roles: [...((state === null || state === void 0 ? void 0 : state.roles) || [])].filter(role => {\n          var _a;\n          return role !== ((_a = action.payload) === null || _a === void 0 ? void 0 : _a.roleId);\n        })\n      });\n    case ASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case UNASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case USER_GROUP_ASSIGN_MEMBER_SUCCESS:\n    case USER_GROUP_UNASSIGN_MEMBER_SUCCESS:\n    case USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS:\n      return Object.assign(Object.assign({}, state), action.payload);\n  }\n  return state;\n}\nfunction userListReducer(state = b2bUsersInitialState, action) {\n  switch (action.type) {\n    case LOAD_B2B_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction b2bUserApproverListReducer(state = b2bUsersInitialState, action) {\n  switch (action.type) {\n    case LOAD_B2B_USER_APPROVERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction b2bUserPermissionListReducer(state = b2bUsersInitialState, action) {\n  switch (action.type) {\n    case LOAD_B2B_USER_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction b2bUserUserGroupListReducer(state = b2bUsersInitialState, action) {\n  switch (action.type) {\n    case LOAD_B2B_USER_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nconst budgetInitialState = undefined;\nconst budgetsInitialState = undefined;\nfunction budgetsEntitiesReducer(state = budgetInitialState, action) {\n  switch (action.type) {\n    case LOAD_BUDGET_SUCCESS:\n    case CREATE_BUDGET_SUCCESS:\n    case UPDATE_BUDGET_SUCCESS:\n      return action.payload;\n    case UNASSIGN_BUDGET_SUCCESS:\n    case ASSIGN_BUDGET_SUCCESS:\n      return Object.assign(Object.assign({}, state), action.payload);\n  }\n  return state;\n}\nfunction budgetsListReducer(state = budgetsInitialState, action) {\n  switch (action.type) {\n    case LOAD_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nconst costCenterInitialState = undefined;\nconst costCentersInitialState = undefined;\nfunction costCentersEntitiesReducer(state = costCenterInitialState, action) {\n  switch (action.type) {\n    case LOAD_COST_CENTER_SUCCESS:\n    case CREATE_COST_CENTER_SUCCESS:\n    case UPDATE_COST_CENTER_SUCCESS:\n      return action.payload;\n  }\n  return state;\n}\nfunction costCentersListReducer(state = costCentersInitialState, action) {\n  switch (action.type) {\n    case LOAD_COST_CENTERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction costCenterAssignedBudgetsListReducer(state = costCentersInitialState, action) {\n  switch (action.type) {\n    case LOAD_ASSIGNED_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nconst orgUnitInitialState = undefined;\nconst orgUnitsInitialState = undefined;\nfunction orgUnitEntitiesReducer(state = orgUnitInitialState, action) {\n  switch (action.type) {\n    case LOAD_ORG_UNIT_SUCCESS:\n    case CREATE_ORG_UNIT_SUCCESS:\n      return action.payload;\n    case UPDATE_ORG_UNIT_SUCCESS:\n      return Object.assign(Object.assign({}, state), action.payload);\n  }\n  return state;\n}\nfunction orgUnitListReducer(state = orgUnitsInitialState, action) {\n  switch (action.type) {}\n  return state;\n}\nfunction orgUnitUserListReducer(state = orgUnitsInitialState, action) {\n  switch (action.type) {\n    case LOAD_ASSIGNED_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction orgUnitAddressListReducer(state = orgUnitsInitialState, action) {\n  switch (action.type) {\n    case LOAD_ADDRESSES_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nconst permissionInitialState = undefined;\nconst permissionsInitialState = undefined;\nfunction permissionsEntitiesReducer(state = permissionInitialState, action) {\n  switch (action.type) {\n    case LOAD_PERMISSION_SUCCESS:\n    case CREATE_PERMISSION_SUCCESS:\n    case UPDATE_PERMISSION_SUCCESS:\n      return action.payload;\n    case USER_GROUP_ASSIGN_PERMISSION_SUCCESS:\n    case USER_GROUP_UNASSIGN_PERMISSION_SUCCESS:\n    case ASSIGN_B2B_USER_PERMISSION_SUCCESS:\n    case UNASSIGN_B2B_USER_PERMISSION_SUCCESS:\n      return Object.assign(Object.assign({}, state), action.payload);\n  }\n  return state;\n}\nfunction permissionsListReducer(state = permissionsInitialState, action) {\n  switch (action.type) {\n    case LOAD_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nconst userGroupInitialState = undefined;\nconst userGroupsInitialState = undefined;\nfunction userGroupEntitiesReducer(state = userGroupInitialState, action) {\n  switch (action.type) {\n    case LOAD_USER_GROUP_SUCCESS:\n    case CREATE_USER_GROUP_SUCCESS:\n    case UPDATE_USER_GROUP_SUCCESS:\n      return action.payload;\n    case ASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n    case UNASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n      return Object.assign(Object.assign({}, state), action.payload);\n  }\n  return state;\n}\nfunction userGroupsListReducer(state = userGroupsInitialState, action) {\n  switch (action.type) {\n    case LOAD_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction userGroupAvailableOrderApprovalPermissionsListReducer(state = userGroupsInitialState, action) {\n  switch (action.type) {\n    case LOAD_USER_GROUP_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction userGroupAvailablOrgCustomersListReducer(state = userGroupsInitialState, action) {\n  switch (action.type) {\n    case LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\nfunction getReducers() {\n  return {\n    [BUDGET_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(BUDGET_ENTITIES, budgetsEntitiesReducer),\n      list: StateUtils.entityLoaderReducer(BUDGET_LIST, budgetsListReducer)\n    }),\n    [PERMISSION_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(PERMISSION_ENTITIES, permissionsEntitiesReducer),\n      list: StateUtils.entityLoaderReducer(PERMISSION_LIST, permissionsListReducer),\n      permissionTypes: StateUtils.entityLoaderReducer(PERMISSION_TYPES_LIST)\n    }),\n    [ORG_UNIT_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(ORG_UNIT_ENTITIES, orgUnitEntitiesReducer),\n      availableOrgUnitNodes: StateUtils.entityLoaderReducer(ORG_UNIT_NODE_LIST),\n      tree: StateUtils.entityLoaderReducer(ORG_UNIT_TREE_ENTITY),\n      approvalProcesses: StateUtils.entityLoaderReducer(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES),\n      users: StateUtils.entityLoaderReducer(ORG_UNIT_ASSIGNED_USERS, orgUnitUserListReducer),\n      addressList: StateUtils.entityLoaderReducer(ADDRESS_LIST, orgUnitAddressListReducer),\n      addressEntities: StateUtils.entityLoaderReducer(ADDRESS_ENTITIES)\n    }),\n    [USER_GROUP_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(USER_GROUP_ENTITIES, userGroupEntitiesReducer),\n      list: StateUtils.entityLoaderReducer(USER_GROUP_LIST, userGroupsListReducer),\n      permissions: StateUtils.entityLoaderReducer(USER_GROUP_PERMISSIONS, userGroupAvailableOrderApprovalPermissionsListReducer),\n      customers: StateUtils.entityLoaderReducer(USER_GROUP_AVAILABLE_CUSTOMERS, userGroupAvailablOrgCustomersListReducer)\n    }),\n    [COST_CENTER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(COST_CENTER_ENTITIES, costCentersEntitiesReducer),\n      list: StateUtils.entityLoaderReducer(COST_CENTER_LIST, costCentersListReducer),\n      budgets: StateUtils.entityLoaderReducer(COST_CENTER_ASSIGNED_BUDGETS, costCenterAssignedBudgetsListReducer)\n    }),\n    [B2B_USER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer(B2B_USER_ENTITIES, b2bUserEntitiesReducer),\n      list: StateUtils.entityLoaderReducer(USER_LIST, userListReducer),\n      approvers: StateUtils.entityLoaderReducer(B2B_USER_APPROVERS, b2bUserApproverListReducer),\n      permissions: StateUtils.entityLoaderReducer(B2B_USER_PERMISSIONS, b2bUserPermissionListReducer),\n      userGroups: StateUtils.entityLoaderReducer(B2B_USER_USER_GROUPS, b2bUserUserGroupListReducer)\n    })\n  };\n}\nconst reducerToken = new InjectionToken('OrganizationReducers');\nconst reducerProvider = {\n  provide: reducerToken,\n  useFactory: getReducers\n};\nfunction clearOrganizationState(reducer) {\n  return function (state, action) {\n    if (action.type === CLEAR_ORGANIZATION_DATA) {\n      state = undefined;\n    }\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\nconst metaReducers = [clearOrganizationState];\nclass OrganizationStoreModule {}\nOrganizationStoreModule.ɵfac = function OrganizationStoreModule_Factory(t) {\n  return new (t || OrganizationStoreModule)();\n};\nOrganizationStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrganizationStoreModule\n});\nOrganizationStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [reducerProvider],\n  imports: [[StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n    metaReducers\n  }), EffectsModule.forFeature(effects)]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationStoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n        metaReducers\n      }), EffectsModule.forFeature(effects)],\n      providers: [reducerProvider]\n    }]\n  }], null, null);\n})();\nclass AdministrationCoreModule {\n  static forRoot() {\n    return {\n      ngModule: AdministrationCoreModule,\n      providers: [BudgetConnector, OrgUnitConnector, UserGroupConnector, PermissionConnector, CostCenterConnector, B2BUserConnector]\n    };\n  }\n}\nAdministrationCoreModule.ɵfac = function AdministrationCoreModule_Factory(t) {\n  return new (t || AdministrationCoreModule)();\n};\nAdministrationCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AdministrationCoreModule\n});\nAdministrationCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[OrganizationPageMetaModule, OrganizationStoreModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdministrationCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OrganizationPageMetaModule, OrganizationStoreModule]\n    }]\n  }], null, null);\n})();\nconst B2B_USER_NORMALIZER = new InjectionToken('B2BUserNormalizer');\nconst B2B_USER_SERIALIZER = new InjectionToken('B2BUserSerializer');\nconst B2B_USERS_NORMALIZER = new InjectionToken('UserListNormalizer');\nconst BUDGET_NORMALIZER = new InjectionToken('BudgetNormalizer');\nconst BUDGETS_NORMALIZER = new InjectionToken('BudgetsListNormalizer');\nconst BUDGET_SERIALIZER = new InjectionToken('BudgetSerializer');\nconst B2BUNIT_NODE_NORMALIZER = new InjectionToken('B2BUnitNodeNormalizer');\nconst B2BUNIT_NODE_LIST_NORMALIZER = new InjectionToken('B2BUnitNodeListNormalizer');\nconst B2BUNIT_NORMALIZER = new InjectionToken('B2BUnitNormalizer');\nconst B2BUNIT_SERIALIZER = new InjectionToken('B2BUnitSerializer');\nconst B2BUNIT_APPROVAL_PROCESSES_NORMALIZER = new InjectionToken('B2BUnitApprovalProcessNormalizer');\nconst PERMISSION_NORMALIZER = new InjectionToken('PermissionNormalizer');\nconst PERMISSIONS_NORMALIZER = new InjectionToken('PermissionsListNormalizer');\nconst PERMISSION_TYPE_NORMALIZER = new InjectionToken('PermissionTypeNormalizer');\nconst PERMISSION_TYPES_NORMALIZER = new InjectionToken('PermissionTypesListNormalizer');\nconst PERMISSION_SERIALIZER = new InjectionToken('PermissionSerializer');\nconst USER_GROUP_NORMALIZER = new InjectionToken('UserGroupNormalizer');\nconst USER_GROUP_SERIALIZER = new InjectionToken('UserGroupSerializer');\nconst USER_GROUPS_NORMALIZER = new InjectionToken('UserGroupListNormalizer');\nclass AdminGuard {\n  constructor(userService, routingService, globalMessageService) {\n    this.userService = userService;\n    this.routingService = routingService;\n    this.globalMessageService = globalMessageService;\n  }\n  canActivate() {\n    return this.userService.get().pipe(filter(user => user && Object.keys(user).length > 0), pluck('roles'), map(roles => {\n      const hasRole = Array.isArray(roles) && roles.includes(B2BUserRole.ADMIN);\n      if (!hasRole) {\n        // routing as temporary solution until /organization won't\n        // have set up proper permission on backend\n        this.routingService.go({\n          cxRoute: 'organization'\n        });\n        this.globalMessageService.add({\n          key: 'organization.notification.noSufficientPermissions'\n        }, GlobalMessageType.MSG_TYPE_WARNING);\n      }\n      return hasRole;\n    }));\n  }\n}\nAdminGuard.ɵfac = function AdminGuard_Factory(t) {\n  return new (t || AdminGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i1.GlobalMessageService));\n};\nAdminGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AdminGuard,\n  factory: AdminGuard.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdminGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.UserService\n    }, {\n      type: i1.RoutingService\n    }, {\n      type: i1.GlobalMessageService\n    }];\n  }, null);\n})();\nclass OrganizationBadRequestHandler extends HttpErrorHandler {\n  constructor() {\n    super(...arguments);\n    this.responseStatus = HttpResponseStatus.BAD_REQUEST;\n    this.costCenterMask = /ambiguous unique keys \\{code\\=(.*)\\} for model B2BCostCenterModel/;\n    this.unitMask = /ambiguous unique keys \\{uid\\=(.*)\\} for model B2BUnitModel/;\n    this.permissionMask = /Approval Permission with code\\: (.*) already exists\\./;\n    this.unknownMask = /Model saving error\\./;\n  }\n  hasMatch(errorResponse) {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n  handleError(_request, response) {\n    this.getErrors(response).forEach(({\n      message\n    }) => {\n      // Handle cost center conflict\n      this.handleOrganizationConflict(message, this.costCenterMask, 'costCenter');\n      // Handle unit conflict\n      this.handleOrganizationConflict(message, this.unitMask, 'unit');\n      // Handle unit conflict\n      this.handleOrganizationConflict(message, this.permissionMask, 'permission');\n      // Handle unknown conflict\n      this.handleOrganizationConflict(message, this.unknownMask, 'unknown');\n    });\n  }\n  matchMask(response) {\n    return this.getErrors(response).some(error => [this.costCenterMask, this.unitMask, this.permissionMask, this.unknownMask].some(mask => mask.test(error.message)));\n  }\n  handleOrganizationConflict(message, mask, key) {\n    const result = message.match(mask);\n    const params = {\n      code: result === null || result === void 0 ? void 0 : result[1]\n    };\n    if (result) {\n      this.globalMessageService.add({\n        key: `organization.httpHandlers.conflict.${key}`,\n        params\n      }, GlobalMessageType.MSG_TYPE_ERROR);\n    }\n  }\n  getErrors(response) {\n    var _a;\n    return (((_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) || []).filter(error => error.type === 'ModelSavingError' || error.type === 'DuplicateUidError');\n  }\n  getPriority() {\n    return 0 /* NORMAL */;\n  }\n}\n\nOrganizationBadRequestHandler.ɵfac = /* @__PURE__ */function () {\n  let ɵOrganizationBadRequestHandler_BaseFactory;\n  return function OrganizationBadRequestHandler_Factory(t) {\n    return (ɵOrganizationBadRequestHandler_BaseFactory || (ɵOrganizationBadRequestHandler_BaseFactory = i0.ɵɵgetInheritedFactory(OrganizationBadRequestHandler)))(t || OrganizationBadRequestHandler);\n  };\n}();\nOrganizationBadRequestHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationBadRequestHandler,\n  factory: OrganizationBadRequestHandler.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationBadRequestHandler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass OrganizationConflictHandler extends HttpErrorHandler {\n  constructor() {\n    super(...arguments);\n    this.responseStatus = HttpResponseStatus.CONFLICT;\n    this.budgetMask = /Budget with code \\[(.*)\\] already exists/;\n    this.userMask = /User already exists/;\n    this.userGroupMask = /Member Permission with the same id already exists/;\n    this.unitMask = /Organizational unit with uid \\[(.*)\\] already exists/;\n  }\n  hasMatch(errorResponse) {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n  handleError(request, response) {\n    return this.getErrors(response).forEach(({\n      message\n    }) => {\n      var _a, _b;\n      // Handle budget conflict\n      this.handleConflict(message, this.budgetMask, 'budget');\n      // Handle user email conflict\n      this.handleConflict(message, this.userMask, 'user', (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.email);\n      // Handle user group conflict\n      this.handleConflict(message, this.userGroupMask, 'userGroup', (_b = request === null || request === void 0 ? void 0 : request.body) === null || _b === void 0 ? void 0 : _b.uid);\n      // Handle unit conflict\n      this.handleConflict(message, this.unitMask, 'unit');\n    });\n  }\n  matchMask(response) {\n    return this.getErrors(response).some(error => [this.budgetMask, this.userMask, this.userGroupMask, this.unitMask].some(mask => mask.test(error.message)));\n  }\n  handleConflict(message, mask, key, code) {\n    var _a;\n    const result = message.match(mask);\n    const params = {\n      code: (_a = result === null || result === void 0 ? void 0 : result[1]) !== null && _a !== void 0 ? _a : code\n    };\n    if (result) {\n      this.globalMessageService.add({\n        key: `organization.httpHandlers.conflict.${key}`,\n        params\n      }, GlobalMessageType.MSG_TYPE_ERROR);\n    }\n  }\n  getErrors(response) {\n    var _a;\n    return (((_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) || []).filter(error => error.type === 'AlreadyExistsError');\n  }\n  getPriority() {\n    return 0 /* NORMAL */;\n  }\n}\n\nOrganizationConflictHandler.ɵfac = /* @__PURE__ */function () {\n  let ɵOrganizationConflictHandler_BaseFactory;\n  return function OrganizationConflictHandler_Factory(t) {\n    return (ɵOrganizationConflictHandler_BaseFactory || (ɵOrganizationConflictHandler_BaseFactory = i0.ɵɵgetInheritedFactory(OrganizationConflictHandler)))(t || OrganizationConflictHandler);\n  };\n}();\nOrganizationConflictHandler.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationConflictHandler,\n  factory: OrganizationConflictHandler.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationConflictHandler, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nvar LoadStatus;\n(function (LoadStatus) {\n  LoadStatus[LoadStatus[\"SUCCESS\"] = 0] = \"SUCCESS\";\n  LoadStatus[LoadStatus[\"ERROR\"] = 1] = \"ERROR\";\n})(LoadStatus || (LoadStatus = {}));\nvar Period;\n(function (Period) {\n  Period[\"DAY\"] = \"DAY\";\n  Period[\"WEEK\"] = \"WEEK\";\n  Period[\"MONTH\"] = \"MONTH\";\n  Period[\"QUARTER\"] = \"QUARTER\";\n  Period[\"YEAR\"] = \"YEAR\";\n})(Period || (Period = {}));\nconst getOrganizationState = createFeatureSelector(ORGANIZATION_FEATURE);\nconst getPermissionManagementState = createSelector(getOrganizationState, state => state[PERMISSION_FEATURE]);\nconst getPermissionsState = createSelector(getPermissionManagementState, state => state && state.entities);\nconst getPermissionState = permissionId => createSelector(getPermissionsState, state => StateUtils.entityLoaderStateSelector(state, permissionId));\nconst getPermissionTypesState = createSelector(getPermissionManagementState, state => state && state.permissionTypes);\nconst getPermission = permissionCode => createSelector(getPermissionsState, state => StateUtils.entityLoaderStateSelector(state, permissionCode));\nconst getPermissionValue = permissionCode => {\n  return createSelector(getPermission(permissionCode), permissionState => StateUtils.loaderValueSelector(permissionState));\n};\nconst getPermissionList = params => createSelector(getPermissionManagementState, state => StateUtils.denormalizeSearch(state, params));\nconst getPermissionTypes = () => createSelector(getPermissionTypesState, state => StateUtils.entityLoaderStateSelector(state, PERMISSION_TYPES));\nvar permission_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getPermissionManagementState: getPermissionManagementState,\n  getPermissionsState: getPermissionsState,\n  getPermissionState: getPermissionState,\n  getPermissionTypesState: getPermissionTypesState,\n  getPermission: getPermission,\n  getPermissionValue: getPermissionValue,\n  getPermissionList: getPermissionList,\n  getPermissionTypes: getPermissionTypes\n});\nconst getB2BUserManagementState = createSelector(getOrganizationState, state => state[B2B_USER_FEATURE]);\nconst getB2BUsersState = createSelector(getB2BUserManagementState, state => state && state.entities);\nconst getB2BUserState = orgCustomerId => createSelector(getB2BUsersState, state => StateUtils.entityLoaderStateSelector(state, orgCustomerId));\nconst getB2BUserValue = orgCustomerId => {\n  return createSelector(getB2BUserState(orgCustomerId), b2BUserState => StateUtils.loaderValueSelector(b2BUserState));\n};\nconst getUserList = params => createSelector(getB2BUserManagementState, state => StateUtils.denormalizeSearch(state, params));\nconst getB2BUserApprovers = (code, params) => createSelector(getB2BUserManagementState, getB2BUsersState, (state, approvers) => StateUtils.denormalizeCustomB2BSearch(state.approvers, approvers, params, code));\nconst getB2BUserPermissions = (code, params) => createSelector(getB2BUserManagementState, getPermissionsState, (state, permissions) => StateUtils.denormalizeCustomB2BSearch(state.permissions, permissions, params, code));\n// avoid circular dependency\nconst getUserGroupsState$1 = createSelector(getOrganizationState, state => state[USER_GROUP_FEATURE].entities);\nconst getB2BUserUserGroups = (code, params) => createSelector(getB2BUserManagementState, getUserGroupsState$1, (state, userGroups) => StateUtils.denormalizeCustomB2BSearch(state.userGroups, userGroups, params, code));\nvar b2bUser_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getB2BUserManagementState: getB2BUserManagementState,\n  getB2BUsersState: getB2BUsersState,\n  getB2BUserState: getB2BUserState,\n  getB2BUserValue: getB2BUserValue,\n  getUserList: getUserList,\n  getB2BUserApprovers: getB2BUserApprovers,\n  getB2BUserPermissions: getB2BUserPermissions,\n  getB2BUserUserGroups: getB2BUserUserGroups\n});\nfunction getItemStatus(itemState) {\n  return itemState.pipe(observeOn(queueScheduler), pairwise(), filter(([previousState]) => previousState.loading), map(([_previousState, currentState]) => ({\n    status: currentState.success ? LoadStatus.SUCCESS : currentState.error ? LoadStatus.ERROR : null,\n    item: currentState.value\n  })));\n}\nclass B2BUserService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  load(orgCustomerId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadB2BUser({\n      userId,\n      orgCustomerId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadList(params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadB2BUsers({\n      userId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getB2BUserValue(orgCustomerId) {\n    return this.store.select(getB2BUserValue(orgCustomerId)).pipe(filter(Boolean));\n  }\n  get(orgCustomerId) {\n    const loading$ = this.getB2BUserState(orgCustomerId).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.load(orgCustomerId);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getB2BUserValue(orgCustomerId));\n  }\n  getList(params) {\n    return this.getUserList(params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadList(params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getErrorState(orgCustomerId) {\n    return this.getB2BUserState(orgCustomerId).pipe(map(state => state.error));\n  }\n  create(orgCustomer) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateB2BUser({\n      userId,\n      orgCustomer\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(orgCustomerId, orgCustomer) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateB2BUser({\n      userId,\n      orgCustomerId,\n      orgCustomer\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(orgCustomerId) {\n    return getItemStatus(this.getB2BUserState(orgCustomerId));\n  }\n  loadApprovers(orgCustomerId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadB2BUserApprovers({\n      userId,\n      orgCustomerId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getApprovers(orgCustomerId, params) {\n    return this.getB2BUserApproverList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadApprovers(orgCustomerId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  assignApprover(orgCustomerId, approverId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignB2BUserApprover({\n      userId,\n      orgCustomerId,\n      approverId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignApprover(orgCustomerId, approverId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignB2BUserApprover({\n      userId,\n      orgCustomerId,\n      approverId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadPermissions(orgCustomerId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadB2BUserPermissions({\n      userId,\n      orgCustomerId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getPermissions(orgCustomerId, params) {\n    return this.getB2BUserPermissionList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadPermissions(orgCustomerId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  assignPermission(orgCustomerId, permissionId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignB2BUserPermission({\n      userId,\n      orgCustomerId,\n      permissionId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignPermission(orgCustomerId, permissionId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignB2BUserPermission({\n      userId,\n      orgCustomerId,\n      permissionId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadUserGroups(orgCustomerId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadB2BUserUserGroups({\n      userId,\n      orgCustomerId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getUserGroups(orgCustomerId, params) {\n    return this.getB2BUserUserGroupList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadUserGroups(orgCustomerId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  assignUserGroup(orgCustomerId, userGroupId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignB2BUserUserGroup({\n      userId,\n      orgCustomerId,\n      userGroupId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignUserGroup(orgCustomerId, userGroupId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignB2BUserUserGroup({\n      userId,\n      orgCustomerId,\n      userGroupId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  /**\n   * Get list of all roles for B2BUser sorted by increasing privileges.\n   *\n   * This list is not driven by the backend (lack of API), but reflects roles\n   * from the backend: `b2badmingroup`, `b2bcustomergroup`, `b2bmanagergroup` and `b2bapprovergroup`.\n   *\n   * If you reconfigure those roles in the backend or extend the list, you should change\n   * this implementation accordingly.\n   */\n  getAllRoles() {\n    return [B2BUserRole.CUSTOMER, B2BUserRole.MANAGER, B2BUserRole.APPROVER, B2BUserRole.ADMIN];\n  }\n  getB2BUserApproverList(orgCustomerId, params) {\n    return this.store.select(getB2BUserApprovers(orgCustomerId, params));\n  }\n  getB2BUserPermissionList(orgCustomerId, params) {\n    return this.store.select(getB2BUserPermissions(orgCustomerId, params));\n  }\n  getB2BUserUserGroupList(orgCustomerId, params) {\n    return this.store.select(getB2BUserUserGroups(orgCustomerId, params));\n  }\n  getB2BUserState(orgCustomerId) {\n    return this.store.select(getB2BUserState(orgCustomerId));\n  }\n  getUserList(params) {\n    return this.store.select(getUserList(params));\n  }\n}\nB2BUserService.ɵfac = function B2BUserService_Factory(t) {\n  return new (t || B2BUserService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nB2BUserService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: B2BUserService,\n  factory: B2BUserService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(B2BUserService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\nconst getBudgetManagementState = createSelector(getOrganizationState, state => state[BUDGET_FEATURE]);\nconst getBudgetsState = createSelector(getBudgetManagementState, state => state && state.entities);\nconst getBudget = budgetCode => createSelector(getBudgetsState, state => StateUtils.entityLoaderStateSelector(state, budgetCode));\nconst getBudgetValue = budgetCode => {\n  return createSelector(getBudget(budgetCode), budgetState => StateUtils.loaderValueSelector(budgetState));\n};\nconst getBudgetList = params => createSelector(getBudgetManagementState, state => StateUtils.denormalizeSearch(state, params));\nvar budget_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getBudgetManagementState: getBudgetManagementState,\n  getBudgetsState: getBudgetsState,\n  getBudget: getBudget,\n  getBudgetValue: getBudgetValue,\n  getBudgetList: getBudgetList\n});\nconst getB2BOrgUnitState = createSelector(getOrganizationState, state => state[ORG_UNIT_FEATURE]);\nconst getOrgUnitsNodeListState = createSelector(getB2BOrgUnitState, state => state && state.availableOrgUnitNodes);\nconst getOrgUnitsState = createSelector(getB2BOrgUnitState, state => state && state.entities);\nconst getOrgUnitsTreeState = createSelector(getB2BOrgUnitState, state => state && state.tree);\nconst getAddressesState = createSelector(getB2BOrgUnitState, state => state && state.addressEntities);\nconst getApprovalProcessesState = createSelector(getB2BOrgUnitState, state => state && state.approvalProcesses);\nconst getOrgUnit = orgUnitId => createSelector(getOrgUnitsState, state => StateUtils.entityLoaderStateSelector(state, orgUnitId));\nconst getOrgUnitValue = orgUnitId => {\n  return createSelector(getOrgUnit(orgUnitId), orgUnitState => StateUtils.loaderValueSelector(orgUnitState));\n};\nconst getOrgUnitState = orgUnitId => createSelector(getOrgUnitsState, state => StateUtils.entityLoaderStateSelector(state, orgUnitId));\nconst getOrgUnitList = () => createSelector(getOrgUnitsNodeListState, state => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_NODES));\nconst getOrgUnitTree = () => createSelector(getOrgUnitsTreeState, state => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_TREE));\nconst getApprovalProcesses = () => createSelector(getApprovalProcessesState, state => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_APPROVAL_PROCESSES));\nconst getAssignedUsers = (orgUnitId, roleId, params) => createSelector(getB2BOrgUnitState, getB2BUsersState, (state, users) => StateUtils.denormalizeCustomB2BSearch(state.users, users, params, `${orgUnitId},${roleId}`));\nconst getB2BAddresses = (orgUnitId, params) => createSelector(getB2BOrgUnitState, state => StateUtils.denormalizeCustomB2BSearch(state.addressList, state.addressEntities, params, orgUnitId));\nconst getB2BAddress = addressId => createSelector(getAddressesState, state => StateUtils.entityLoaderStateSelector(state, addressId));\nvar orgUnit_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getB2BOrgUnitState: getB2BOrgUnitState,\n  getOrgUnitsNodeListState: getOrgUnitsNodeListState,\n  getOrgUnitsState: getOrgUnitsState,\n  getOrgUnitsTreeState: getOrgUnitsTreeState,\n  getAddressesState: getAddressesState,\n  getApprovalProcessesState: getApprovalProcessesState,\n  getOrgUnit: getOrgUnit,\n  getOrgUnitValue: getOrgUnitValue,\n  getOrgUnitState: getOrgUnitState,\n  getOrgUnitList: getOrgUnitList,\n  getOrgUnitTree: getOrgUnitTree,\n  getApprovalProcesses: getApprovalProcesses,\n  getAssignedUsers: getAssignedUsers,\n  getB2BAddresses: getB2BAddresses,\n  getB2BAddress: getB2BAddress\n});\nconst getUserGroupManagementState = createSelector(getOrganizationState, state => state[USER_GROUP_FEATURE]);\nconst getUserGroupsState = createSelector(getUserGroupManagementState, state => state && state.entities);\nconst getUserGroup = userGroupId => createSelector(getUserGroupsState, state => StateUtils.entityLoaderStateSelector(state, userGroupId));\nconst getUserGroupValue = userGroupId => {\n  return createSelector(getUserGroup(userGroupId), userGroupState => StateUtils.loaderValueSelector(userGroupState));\n};\nconst getUserGroupList = params => createSelector(getUserGroupManagementState, state => StateUtils.denormalizeSearch(state, params));\nconst getAvailableOrgCustomers = (code, params) => createSelector(getUserGroupManagementState, getB2BUsersState, (state, customers) => StateUtils.denormalizeCustomB2BSearch(state.customers, customers, params, code));\nconst getAvailableOrderApprovalPermissions = (code, params) => createSelector(getUserGroupManagementState, getPermissionsState, (state, permissions) => StateUtils.denormalizeCustomB2BSearch(state.permissions, permissions, params, code));\nconst getUserGroupState = code => createSelector(getUserGroupsState, state => StateUtils.entityLoaderStateSelector(state, code));\nvar userGroup_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getUserGroupManagementState: getUserGroupManagementState,\n  getUserGroupsState: getUserGroupsState,\n  getUserGroup: getUserGroup,\n  getUserGroupValue: getUserGroupValue,\n  getUserGroupList: getUserGroupList,\n  getAvailableOrgCustomers: getAvailableOrgCustomers,\n  getAvailableOrderApprovalPermissions: getAvailableOrderApprovalPermissions,\n  getUserGroupState: getUserGroupState\n});\nconst getCostCenterManagementState = createSelector(getOrganizationState, state => state[COST_CENTER_FEATURE]);\nconst getCostCentersState = createSelector(getCostCenterManagementState, state => state && state.entities);\nconst getCostCenter = costCenterCode => createSelector(getCostCentersState, state => StateUtils.entityLoaderStateSelector(state, costCenterCode));\nconst getCostCenterValue = costCenterCode => {\n  return createSelector(getCostCenter(costCenterCode), costCenterState => StateUtils.loaderValueSelector(costCenterState));\n};\nconst getCostCenterList = params => createSelector(getCostCenterManagementState, state => StateUtils.denormalizeSearch(state, params));\nconst getAssignedBudgets = (code, params) => createSelector(getCostCenterManagementState, getBudgetsState, (state, budgets) => StateUtils.denormalizeCustomB2BSearch(state.budgets, budgets, params, code));\nconst getCostCenterState = code => createSelector(getCostCentersState, state => StateUtils.entityLoaderStateSelector(state, code));\nvar costCenter_selector = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getCostCenterManagementState: getCostCenterManagementState,\n  getCostCentersState: getCostCentersState,\n  getCostCenter: getCostCenter,\n  getCostCenterValue: getCostCenterValue,\n  getCostCenterList: getCostCenterList,\n  getAssignedBudgets: getAssignedBudgets,\n  getCostCenterState: getCostCenterState\n});\nclass BudgetService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  loadBudget(budgetCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadBudget({\n      userId,\n      budgetCode\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadBudgets(params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadBudgets({\n      userId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getBudgetState(budgetCode) {\n    return this.store.select(getBudget(budgetCode));\n  }\n  getBudgetValue(budgetCode) {\n    return this.store.select(getBudgetValue(budgetCode)).pipe(filter(Boolean));\n  }\n  getBudgetList(params) {\n    return this.store.select(getBudgetList(params));\n  }\n  get(budgetCode) {\n    const loading$ = this.getBudgetState(budgetCode).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.loadBudget(budgetCode);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getBudgetValue(budgetCode));\n  }\n  getList(params) {\n    return this.getBudgetList(params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadBudgets(params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getCostCenters(budgetCode) {\n    return this.get(budgetCode).pipe(map(budget => {\n      var _a;\n      return {\n        values: (_a = budget.costCenters) !== null && _a !== void 0 ? _a : []\n      };\n    }));\n  }\n  getErrorState(budgetCode) {\n    return this.getBudgetState(budgetCode).pipe(map(state => state.error));\n  }\n  create(budget) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateBudget({\n      userId,\n      budget\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(budgetCode, budget) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateBudget({\n      userId,\n      budgetCode,\n      budget\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(budgetCode) {\n    return getItemStatus(this.getBudgetState(budgetCode));\n  }\n}\nBudgetService.ɵfac = function BudgetService_Factory(t) {\n  return new (t || BudgetService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nBudgetService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: BudgetService,\n  factory: BudgetService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BudgetService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\nclass CostCenterService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  load(costCenterCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadCostCenter({\n      userId,\n      costCenterCode\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadList(params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadCostCenters({\n      userId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getCostCenter(costCenterCode) {\n    return this.store.select(getCostCenter(costCenterCode));\n  }\n  getCostCenterValue(costCenterCode) {\n    return this.store.select(getCostCenterValue(costCenterCode)).pipe(filter(Boolean));\n  }\n  getCostCenterList(params) {\n    return this.store.select(getCostCenterList(params));\n  }\n  getBudgetList(costCenterCode, params) {\n    return this.store.select(getAssignedBudgets(costCenterCode, params));\n  }\n  get(costCenterCode) {\n    const loading$ = this.getCostCenter(costCenterCode).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.load(costCenterCode);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getCostCenterValue(costCenterCode));\n  }\n  getList(params) {\n    return this.getCostCenterList(params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadList(params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getCostCenterState(costCenterCode) {\n    return this.store.select(getCostCenterState(costCenterCode));\n  }\n  create(costCenter) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateCostCenter({\n      userId,\n      costCenter\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(costCenterCode, costCenter) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateCostCenter({\n      userId,\n      costCenterCode,\n      costCenter\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(costCenterCode) {\n    return getItemStatus(this.getCostCenter(costCenterCode));\n  }\n  loadBudgets(costCenterCode, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadAssignedBudgets({\n      userId,\n      costCenterCode,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getBudgets(costCenterCode, params) {\n    return this.getBudgetList(costCenterCode, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadBudgets(costCenterCode, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  assignBudget(costCenterCode, budgetCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignBudget({\n      userId,\n      costCenterCode,\n      budgetCode\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignBudget(costCenterCode, budgetCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignBudget({\n      userId,\n      costCenterCode,\n      budgetCode\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getErrorState(costCenterCode) {\n    return this.getCostCenterState(costCenterCode).pipe(map(state => state.error));\n  }\n}\nCostCenterService.ɵfac = function CostCenterService_Factory(t) {\n  return new (t || CostCenterService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nCostCenterService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CostCenterService,\n  factory: CostCenterService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CostCenterService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\nclass OrgUnitService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  clearAssignedUsersList(orgUnitId, roleId, params) {\n    this.store.dispatch(new ClearAssignedUsers({\n      orgUnitId,\n      roleId,\n      params\n    }));\n  }\n  load(orgUnitId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadOrgUnit({\n      userId,\n      orgUnitId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadList() {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadOrgUnitNodes({\n      userId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadTree() {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadTree({\n      userId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadApprovalProcesses() {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadApprovalProcesses({\n      userId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadUsers(orgUnitId, roleId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadAssignedUsers({\n      userId,\n      orgUnitId,\n      roleId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadAddresses(orgUnitId) {\n    // TODO: replace it after turn on loadAddresses$\n    // this.store.dispatch(\n    //   new OrgUnitActions.LoadAddresses({ userId, orgUnitId })\n    // );\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadOrgUnit({\n      userId,\n      orgUnitId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getOrgUnit(orgUnitId) {\n    return this.store.select(getOrgUnit(orgUnitId));\n  }\n  getOrgUnitValue(orgUnitId) {\n    return this.store.select(getOrgUnitValue(orgUnitId)).pipe(filter(Boolean));\n  }\n  getTreeState() {\n    return this.store.select(getOrgUnitTree());\n  }\n  getOrgUnitsList() {\n    return this.store.select(getOrgUnitList());\n  }\n  getAddressesState(orgUnitId) {\n    return this.store.select(getB2BAddresses(orgUnitId, null));\n  }\n  getAddressState(addressId) {\n    return this.store.select(getB2BAddress(addressId));\n  }\n  getAssignedUsers(orgUnitId, roleId, params) {\n    return this.store.select(getAssignedUsers(orgUnitId, roleId, params));\n  }\n  getApprovalProcessesList() {\n    return this.store.select(getApprovalProcesses());\n  }\n  get(orgUnitId) {\n    const loading$ = this.getOrgUnit(orgUnitId).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.load(orgUnitId);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getOrgUnitValue(orgUnitId));\n  }\n  getCostCenters(orgUnitId) {\n    return this.get(orgUnitId).pipe(map(orgUnit => {\n      var _a;\n      return {\n        values: (_a = orgUnit.costCenters) !== null && _a !== void 0 ? _a : []\n      };\n    }));\n  }\n  findUnitChildrenInTree(orginitId, unit) {\n    return unit.id === orginitId ? unit.children : unit.children.flatMap(child => this.findUnitChildrenInTree(orginitId, child));\n  }\n  getChildUnits(orgUnitId) {\n    return this.getTree().pipe(map(tree => ({\n      values: this.findUnitChildrenInTree(orgUnitId, tree)\n    })));\n  }\n  getTree() {\n    return this.getTreeState().pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadTree();\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getApprovalProcesses() {\n    return this.getApprovalProcessesList().pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadApprovalProcesses();\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getList() {\n    return this.getOrgUnitsList().pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadList();\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getActiveUnitList() {\n    return this.getList().pipe(map(units => units.filter(unit => unit.active)), map(units => units.sort(this.sortUnitList)));\n  }\n  sortUnitList(a, b) {\n    return a.id.toLowerCase() < b.id.toLowerCase() ? -1 : a.id.toLowerCase() > b.id.toLowerCase() ? 1 : 0;\n  }\n  getUsers(orgUnitId, roleId, params) {\n    return this.getAssignedUsers(orgUnitId, roleId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadUsers(orgUnitId, roleId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getErrorState(orgCustomerId) {\n    return this.getOrgUnitState(orgCustomerId).pipe(map(state => state.error));\n  }\n  create(unit) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateUnit({\n      userId,\n      unit\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(unitCode, unit) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateUnit({\n      userId,\n      unitCode,\n      unit\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(orgUnitId) {\n    return getItemStatus(this.getOrgUnit(orgUnitId));\n  }\n  assignRole(orgCustomerId, roleId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignRole({\n      userId,\n      orgCustomerId,\n      roleId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignRole(orgCustomerId, roleId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignRole({\n      userId,\n      orgCustomerId,\n      roleId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  assignApprover(orgUnitId, orgCustomerId, roleId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignApprover({\n      orgUnitId,\n      userId,\n      orgCustomerId,\n      roleId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignApprover(orgUnitId, orgCustomerId, roleId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignApprover({\n      orgUnitId,\n      userId,\n      orgCustomerId,\n      roleId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  createAddress(orgUnitId, address) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateAddress({\n      userId,\n      orgUnitId,\n      address\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getAddresses(orgUnitId) {\n    return this.getAddressesState(orgUnitId).pipe(observeOn(queueScheduler), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.loadAddresses(orgUnitId);\n      }\n    }), filter(state => state.success || state.error), map(state => state.value));\n  }\n  getAddress(orgUnitId, addressId) {\n    return this.getAddressState(addressId).pipe(observeOn(queueScheduler), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.loadAddresses(orgUnitId);\n      }\n    }), filter(state => state.success || state.error), map(state => state.value));\n  }\n  updateAddress(orgUnitId, addressId, address) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateAddress({\n      userId,\n      orgUnitId,\n      addressId,\n      address\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getAddressLoadingStatus(addressId) {\n    return getItemStatus(this.getAddressState(addressId));\n  }\n  deleteAddress(orgUnitId, addressId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new DeleteAddress({\n      userId,\n      orgUnitId,\n      addressId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getOrgUnitState(orgUnitId) {\n    return this.store.select(getOrgUnitState(orgUnitId));\n  }\n}\nOrgUnitService.ɵfac = function OrgUnitService_Factory(t) {\n  return new (t || OrgUnitService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nOrgUnitService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrgUnitService,\n  factory: OrgUnitService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgUnitService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\nclass PermissionService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  loadPermission(permissionCode) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadPermission({\n      userId,\n      permissionCode\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadPermissions(params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadPermissions({\n      userId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadPermissionTypes() {\n    this.userIdService.takeUserId(true).subscribe(() => this.store.dispatch(new LoadPermissionTypes()), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getPermission(permissionCode) {\n    return this.store.select(getPermission(permissionCode));\n  }\n  getPermissionValue(permissionCode) {\n    return this.store.select(getPermissionValue(permissionCode)).pipe(filter(Boolean));\n  }\n  getPermissionList(params) {\n    return this.store.select(getPermissionList(params));\n  }\n  getPermissionTypeList() {\n    return this.store.select(getPermissionTypes());\n  }\n  get(permissionCode) {\n    const loading$ = this.getPermission(permissionCode).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.loadPermission(permissionCode);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getPermissionValue(permissionCode));\n  }\n  getTypes() {\n    return this.getPermissionTypeList().pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadPermissionTypes();\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getList(params) {\n    return this.getPermissionList(params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadPermissions(params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  create(permission) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreatePermission({\n      userId,\n      permission\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(permissionCode, permission) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdatePermission({\n      userId,\n      permissionCode,\n      permission\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(permissionCode) {\n    return getItemStatus(this.getPermission(permissionCode));\n  }\n  getPermissionState(code) {\n    return this.store.select(getPermissionState(code));\n  }\n  getErrorState(permissionCode) {\n    return this.getPermissionState(permissionCode).pipe(map(state => state.error));\n  }\n}\nPermissionService.ɵfac = function PermissionService_Factory(t) {\n  return new (t || PermissionService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nPermissionService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: PermissionService,\n  factory: PermissionService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PermissionService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\nclass UserGroupService {\n  constructor(store, userIdService) {\n    this.store = store;\n    this.userIdService = userIdService;\n  }\n  load(userGroupId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadUserGroup({\n      userId,\n      userGroupId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadList(params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadUserGroups({\n      userId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getUserGroup(userGroupId) {\n    return this.store.select(getUserGroup(userGroupId));\n  }\n  getUserGroupValue(userGroupId) {\n    return this.store.select(getUserGroupValue(userGroupId)).pipe(filter(Boolean));\n  }\n  getUserGroupList(params) {\n    return this.store.select(getUserGroupList(params));\n  }\n  getAvailableOrgCustomersList(userGroupId, params) {\n    return this.store.select(getAvailableOrgCustomers(userGroupId, params));\n  }\n  getAvailableOrderApprovalPermissionsList(userGroupId, params) {\n    return this.store.select(getAvailableOrderApprovalPermissions(userGroupId, params));\n  }\n  get(userGroupUid) {\n    const loading$ = this.getUserGroup(userGroupUid).pipe(auditTime(0), tap(state => {\n      if (!(state.loading || state.success || state.error)) {\n        this.load(userGroupUid);\n      }\n    }));\n    return using(() => loading$.subscribe(), () => this.getUserGroupValue(userGroupUid));\n  }\n  getList(params) {\n    return this.getUserGroupList(params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadList(params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  create(userGroup) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new CreateUserGroup({\n      userId,\n      userGroup\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  update(userGroupId, userGroup) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UpdateUserGroup({\n      userId,\n      userGroupId,\n      userGroup\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getLoadingStatus(budgetCode) {\n    return getItemStatus(this.getUserGroup(budgetCode));\n  }\n  delete(userGroupId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new DeleteUserGroup({\n      userId,\n      userGroupId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadAvailableOrgCustomers(userGroupId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadAvailableOrgCustomers({\n      userId,\n      userGroupId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  loadAvailableOrderApprovalPermissions(userGroupId, params) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new LoadPermissions$1({\n      userId,\n      userGroupId,\n      params\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  getAvailableOrgCustomers(userGroupId, params) {\n    return this.getAvailableOrgCustomersList(userGroupId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadAvailableOrgCustomers(userGroupId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  getAvailableOrderApprovalPermissions(userGroupId, params) {\n    return this.getAvailableOrderApprovalPermissionsList(userGroupId, params).pipe(observeOn(queueScheduler), tap(process => {\n      if (!(process.loading || process.success || process.error)) {\n        this.loadAvailableOrderApprovalPermissions(userGroupId, params);\n      }\n    }), filter(process => process.success || process.error), map(result => result.value));\n  }\n  assignMember(userGroupId, customerId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignMember({\n      userId,\n      userGroupId,\n      customerId\n    })), () => {\n      // TODO: for future releases, refactor this part to thrown errors\n    });\n  }\n  unassignMember(userGroupId, customerId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignMember({\n      userId,\n      userGroupId,\n      customerId\n    })), () => {});\n  }\n  unassignAllMembers(userGroupId) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignAllMembers({\n      userId,\n      userGroupId\n    })), () => {});\n  }\n  assignPermission(userGroupId, permissionUid) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new AssignPermission({\n      userId,\n      userGroupId,\n      permissionUid\n    })), () => {});\n  }\n  unassignPermission(userGroupId, permissionUid) {\n    this.userIdService.takeUserId(true).subscribe(userId => this.store.dispatch(new UnassignPermission({\n      userId,\n      userGroupId,\n      permissionUid\n    })), () => {});\n  }\n  getUserGroupState(code) {\n    return this.store.select(getUserGroupState(code));\n  }\n  getErrorState(code) {\n    return this.getUserGroupState(code).pipe(map(state => state.error));\n  }\n}\nUserGroupService.ɵfac = function UserGroupService_Factory(t) {\n  return new (t || UserGroupService)(i0.ɵɵinject(i1$2.Store), i0.ɵɵinject(i1.UserIdService));\n};\nUserGroupService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: UserGroupService,\n  factory: UserGroupService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserGroupService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$2.Store\n    }, {\n      type: i1.UserIdService\n    }];\n  }, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ADDRESS_ENTITIES, ADDRESS_LIST, AdminGuard, AdministrationCoreModule, B2BUNIT_APPROVAL_PROCESSES_NORMALIZER, B2BUNIT_NODE_LIST_NORMALIZER, B2BUNIT_NODE_NORMALIZER, B2BUNIT_NORMALIZER, B2BUNIT_SERIALIZER, b2bUser_action as B2BUserActions, B2BUserAdapter, B2BUserConnector, b2bUser_selector as B2BUserSelectors, B2BUserService, B2B_USERS_NORMALIZER, B2B_USER_APPROVERS, B2B_USER_ENTITIES, B2B_USER_FEATURE, B2B_USER_NORMALIZER, B2B_USER_PERMISSIONS, B2B_USER_SERIALIZER, B2B_USER_USER_GROUPS, BUDGETS_NORMALIZER, BUDGET_ENTITIES, BUDGET_FEATURE, BUDGET_LIST, BUDGET_NORMALIZER, BUDGET_SERIALIZER, budget_action as BudgetActions, BudgetAdapter, BudgetConnector, budget_selector as BudgetSelectors, BudgetService, COST_CENTER_ASSIGNED_BUDGETS, COST_CENTER_ENTITIES, COST_CENTER_FEATURE, COST_CENTER_LIST, costCenter_action as CostCenterActions, CostCenterAdapter, CostCenterConnector, costCenter_selector as CostCenterSelectors, CostCenterService, LoadStatus, ORGANIZATION_FEATURE, ORG_UNIT_APPROVAL_PROCESSES, ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_ASSIGNED_USERS, ORG_UNIT_ENTITIES, ORG_UNIT_FEATURE, ORG_UNIT_NODES, ORG_UNIT_NODE_ENTITIES, ORG_UNIT_NODE_LIST, ORG_UNIT_TREE, ORG_UNIT_TREE_ENTITY, orgUnit_action as OrgUnitActions, OrgUnitAdapter, OrgUnitConnector, orgUnit_selector as OrgUnitSelectors, OrgUnitService, organization_action as OrganizationActions, OrganizationBadRequestHandler, OrganizationConflictHandler, OrganizationPageMetaModule, OrganizationPageMetaResolver, PERMISSIONS_NORMALIZER, PERMISSION_ENTITIES, PERMISSION_FEATURE, PERMISSION_LIST, PERMISSION_NORMALIZER, PERMISSION_SERIALIZER, PERMISSION_TYPES, PERMISSION_TYPES_LIST, PERMISSION_TYPES_NORMALIZER, PERMISSION_TYPE_NORMALIZER, Period, permission_action as PermissionActions, PermissionAdapter, PermissionConnector, permission_selector as PermissionSelectors, PermissionService, USER_GROUPS_NORMALIZER, USER_GROUP_AVAILABLE_CUSTOMERS, USER_GROUP_ENTITIES, USER_GROUP_FEATURE, USER_GROUP_LIST, USER_GROUP_NORMALIZER, USER_GROUP_PERMISSIONS, USER_GROUP_SERIALIZER, USER_LIST, userGroup_action as UserGroupActions, UserGroupAdapter, UserGroupConnector, userGroup_selector as UserGroupSelectors, UserGroupService };","map":{"version":3,"names":["i0","Injectable","NgModule","InjectionToken","i1","PageMetaResolver","PageType","StateUtils","normalizeHttpError","B2BUserRole","AuthActions","SiteContextActions","GlobalMessageType","HttpErrorHandler","HttpResponseStatus","defer","of","combineLatest","from","queueScheduler","using","map","distinctUntilChanged","switchMap","shareReplay","catchError","groupBy","mergeMap","take","tap","withLatestFrom","filter","pluck","observeOn","pairwise","auditTime","i1$1","ofType","Effect","EffectsModule","i1$2","combineReducers","StoreModule","createFeatureSelector","createSelector","__decorate","B2BUserAdapter","B2BUserConnector","constructor","adapter","get","userId","orgUnitCustomerId","load","create","orgCustomer","update","orgCustomerId","getList","params","loadList","getApprovers","loadApprovers","assignApprover","approverId","unassignApprover","getPermissions","loadPermissions","assignPermission","permissionId","unassignPermission","getUserGroups","loadUserGroups","assignUserGroup","userGroupId","unassignUserGroup","ɵfac","ɵprov","type","args","providedIn","BudgetAdapter","BudgetConnector","budgetCode","budget","CostCenterAdapter","CostCenterConnector","costCenterCode","costCenter","getBudgets","loadBudgets","assignBudget","unassignBudget","OrgUnitAdapter","OrgUnitConnector","orgUnitId","orgUnit","getApprovalProcesses","loadApprovalProcesses","getTree","loadTree","getUsers","roleId","loadUsers","assignRole","unassignRole","getAddresses","loadAddresses","createAddress","address","updateAddress","addressId","deleteAddress","PermissionAdapter","PermissionConnector","permissionCode","permission","getTypes","loadTypes","UserGroupAdapter","UserGroupConnector","getAvailableOrderApprovalPermissions","loadAvailableOrderApprovalPermissions","getAvailableOrgCustomers","loadAvailableOrgCustomers","userGroup","delete","assignMember","assignOrderApprovalPermission","orderApprovalPermissionCode","unassignMember","unassignAllMembers","unassignOrderApprovalPermission","OrganizationPageMetaResolver","contentPageMetaResolver","translation","semanticPath","routingService","pageTemplate","pageType","CONTENT_PAGE","ORGANIZATION_TRANSLATION_KEY","ORGANIZATION_SEMANTIC_ROUTE","organizationPageBreadcrumb$","getRouterState","pipe","routerState","_a","state","semanticRoute","translate","label","link","breadcrumbs$","resolveBreadcrumbs","organizationPageBreadcrumb","breadcrumbs","home","restBreadcrumbs","bufferSize","refCount","resolveTitle","resolveDescription","resolveRobots","ContentPageMetaResolver","TranslationService","SemanticPathService","RoutingService","OrganizationPageMetaModule","ɵmod","ɵinj","provide","useExisting","multi","providers","ORGANIZATION_FEATURE","BUDGET_FEATURE","BUDGET_ENTITIES","BUDGET_LIST","COST_CENTER_FEATURE","COST_CENTER_ENTITIES","COST_CENTER_LIST","COST_CENTER_ASSIGNED_BUDGETS","PERMISSION_FEATURE","PERMISSION_ENTITIES","PERMISSION_LIST","PERMISSION_TYPES","PERMISSION_TYPES_LIST","ORG_UNIT_FEATURE","ORG_UNIT_NODE_ENTITIES","ORG_UNIT_NODE_LIST","ORG_UNIT_ENTITIES","ORG_UNIT_TREE_ENTITY","ORG_UNIT_APPROVAL_PROCESSES_ENTITIES","ORG_UNIT_ASSIGNED_USERS","ORG_UNIT_TREE","ORG_UNIT_APPROVAL_PROCESSES","ORG_UNIT_NODES","B2B_USER_FEATURE","B2B_USER_ENTITIES","USER_LIST","B2B_USER_APPROVERS","B2B_USER_PERMISSIONS","B2B_USER_USER_GROUPS","USER_GROUP_FEATURE","USER_GROUP_ENTITIES","USER_GROUP_LIST","USER_GROUP_PERMISSIONS","USER_GROUP_AVAILABLE_CUSTOMERS","ADDRESS_ENTITIES","ADDRESS_LIST","LOAD_BUDGET","LOAD_BUDGET_FAIL","LOAD_BUDGET_SUCCESS","LOAD_BUDGETS","LOAD_BUDGETS_FAIL","LOAD_BUDGETS_SUCCESS","CREATE_BUDGET","CREATE_BUDGET_FAIL","CREATE_BUDGET_SUCCESS","UPDATE_BUDGET","UPDATE_BUDGET_FAIL","UPDATE_BUDGET_SUCCESS","LoadBudget","EntityLoadAction","payload","LoadBudgetFail","EntityFailAction","error","LoadBudgetSuccess","EntitySuccessAction","Array","isArray","code","LoadBudgets","serializeSearchConfig","LoadBudgetsFail","LoadBudgetsSuccess","CreateBudget","CreateBudgetFail","CreateBudgetSuccess","UpdateBudget","UpdateBudgetFail","UpdateBudgetSuccess","budget_action","Object","freeze","__proto__","LOAD_ORG_UNIT","LOAD_ORG_UNIT_FAIL","LOAD_ORG_UNIT_SUCCESS","LOAD_UNIT_NODE","LOAD_UNIT_NODE_FAIL","LOAD_UNIT_NODE_SUCCESS","LOAD_UNIT_NODES","LOAD_UNIT_NODES_FAIL","LOAD_UNIT_NODES_SUCCESS","CREATE_ORG_UNIT","CREATE_ORG_UNIT_FAIL","CREATE_ORG_UNIT_SUCCESS","UPDATE_ORG_UNIT","UPDATE_ORG_UNIT_FAIL","UPDATE_ORG_UNIT_SUCCESS","LOAD_UNIT_TREE","LOAD_UNIT_TREE_FAIL","LOAD_UNIT_TREE_SUCCESS","LOAD_APPROVAL_PROCESSES","LOAD_APPROVAL_PROCESSES_FAIL","LOAD_APPROVAL_PROCESSES_SUCCESS","LOAD_ASSIGNED_USERS","LOAD_ASSIGNED_USERS_SUCCESS","LOAD_ASSIGNED_USERS_FAIL","ASSIGN_ROLE","ASSIGN_ROLE_SUCCESS","ASSIGN_ROLE_FAIL","UNASSIGN_ROLE","UNASSIGN_ROLE_SUCCESS","UNASSIGN_ROLE_FAIL","ASSIGN_APPROVER","ASSIGN_APPROVER_SUCCESS","ASSIGN_APPROVER_FAIL","UNASSIGN_APPROVER","UNASSIGN_APPROVER_SUCCESS","UNASSIGN_APPROVER_FAIL","CREATE_ADDRESS","CREATE_ADDRESS_SUCCESS","CREATE_ADDRESS_FAIL","UPDATE_ADDRESS","UPDATE_ADDRESS_SUCCESS","UPDATE_ADDRESS_FAIL","DELETE_ADDRESS","DELETE_ADDRESS_SUCCESS","DELETE_ADDRESS_FAIL","LOAD_ADDRESS_SUCCESS","LOAD_ADDRESSES","LOAD_ADDRESSES_SUCCESS","LOAD_ADDRESSES_FAIL","CLEAR_ASSIGNED_USERS","LoadOrgUnit","LoadOrgUnitFail","LoadOrgUnitSuccess","uid","LoadOrgUnitNodes","LoadOrgUnitNodesFail","LoadOrgUnitNodesSuccess","CreateUnit","unit","CreateUnitFail","unitCode","CreateUnitSuccess","UpdateUnit","UpdateUnitFail","UpdateUnitSuccess","LoadTree","LoadTreeFail","LoadTreeSuccess","LoadApprovalProcesses","LoadApprovalProcessesFail","LoadApprovalProcessesSuccess","LoadAssignedUsers","ClearAssignedUsers","EntityRemoveAction","LoadAssignedUsersFail","LoadAssignedUsersSuccess","AssignRole","AssignRoleFail","AssignRoleSuccess","UnassignRole","UnassignRoleFail","UnassignRoleSuccess","AssignApprover","AssignApproverFail","AssignApproverSuccess","UnassignApprover","UnassignApproverFail","UnassignApproverSuccess","CreateAddress","id","CreateAddressFail","CreateAddressSuccess","UpdateAddress","UpdateAddressFail","UpdateAddressSuccess","DeleteAddress","DeleteAddressFail","DeleteAddressSuccess","LoadAddressSuccess","LoadAddresses","LoadAddressesFail","LoadAddressesSuccess","orgUnit_action","LOAD_USER_GROUP","LOAD_USER_GROUP_FAIL","LOAD_USER_GROUP_SUCCESS","LOAD_USER_GROUPS","LOAD_USER_GROUPS_FAIL","LOAD_USER_GROUPS_SUCCESS","LOAD_USER_GROUP_PERMISSIONS","LOAD_USER_GROUP_PERMISSIONS_FAIL","LOAD_USER_GROUP_PERMISSIONS_SUCCESS","LOAD_USER_GROUP_AVAILABLE_CUSTOMERS","LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL","LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS","CREATE_USER_GROUP","CREATE_USER_GROUP_FAIL","CREATE_USER_GROUP_SUCCESS","USER_GROUP_ASSIGN_MEMBER","USER_GROUP_ASSIGN_MEMBER_FAIL","USER_GROUP_ASSIGN_MEMBER_SUCCESS","USER_GROUP_ASSIGN_PERMISSION","USER_GROUP_ASSIGN_PERMISSION_FAIL","USER_GROUP_ASSIGN_PERMISSION_SUCCESS","UPDATE_USER_GROUP","UPDATE_USER_GROUP_FAIL","UPDATE_USER_GROUP_SUCCESS","DELETE_USER_GROUP","DELETE_USER_GROUP_FAIL","DELETE_USER_GROUP_SUCCESS","USER_GROUP_UNASSIGN_ALL_MEMBERS","USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL","USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS","USER_GROUP_UNASSIGN_MEMBER","USER_GROUP_UNASSIGN_MEMBER_FAIL","USER_GROUP_UNASSIGN_MEMBER_SUCCESS","USER_GROUP_UNASSIGN_PERMISSION","USER_GROUP_UNASSIGN_PERMISSION_FAIL","USER_GROUP_UNASSIGN_PERMISSION_SUCCESS","LoadUserGroup","LoadUserGroupFail","LoadUserGroupSuccess","LoadUserGroups","LoadUserGroupsFail","LoadUserGroupsSuccess","LoadPermissions$1","LoadPermissionsFail$1","LoadPermissionsSuccess$1","LoadAvailableOrgCustomers","LoadAvailableOrgCustomersFail","LoadAvailableOrgCustomersSuccess","CreateUserGroup","CreateUserGroupFail","CreateUserGroupSuccess","AssignMember","customerId","AssignMemberFail","AssignMemberSuccess","AssignPermission","permissionUid","AssignPermissionFail","AssignPermissionSuccess","UpdateUserGroup","UpdateUserGroupFail","UpdateUserGroupSuccess","DeleteUserGroup","DeleteUserGroupFail","DeleteUserGroupSuccess","UnassignMember","UnassignMemberFail","UnassignMemberSuccess","UnassignAllMembers","UnassignAllMembersFail","UnassignAllMembersSuccess","UnassignPermission","UnassignPermissionFail","UnassignPermissionSuccess","userGroup_action","LoadPermissions","LoadPermissionsFail","LoadPermissionsSuccess","LOAD_PERMISSION","LOAD_PERMISSION_FAIL","LOAD_PERMISSION_SUCCESS","LOAD_PERMISSIONS","LOAD_PERMISSIONS_FAIL","LOAD_PERMISSIONS_SUCCESS","CREATE_PERMISSION","CREATE_PERMISSION_FAIL","CREATE_PERMISSION_SUCCESS","UPDATE_PERMISSION","UPDATE_PERMISSION_FAIL","UPDATE_PERMISSION_SUCCESS","LOAD_PERMISSION_TYPES","LOAD_PERMISSION_TYPES_FAIL","LOAD_PERMISSION_TYPES_SUCCESS","LoadPermission","LoadPermissionFail","LoadPermissionSuccess","CreatePermission","CreatePermissionFail","CreatePermissionSuccess","UpdatePermission","UpdatePermissionFail","UpdatePermissionSuccess","LoadPermissionTypes","LoadPermissionTypesFail","LoadPermissionTypesSuccess","permission_action","LOAD_COST_CENTER","LOAD_COST_CENTER_FAIL","LOAD_COST_CENTER_SUCCESS","LOAD_COST_CENTERS","LOAD_COST_CENTERS_FAIL","LOAD_COST_CENTERS_SUCCESS","CREATE_COST_CENTER","CREATE_COST_CENTER_FAIL","CREATE_COST_CENTER_SUCCESS","UPDATE_COST_CENTER","UPDATE_COST_CENTER_FAIL","UPDATE_COST_CENTER_SUCCESS","LOAD_ASSIGNED_BUDGETS","LOAD_ASSIGNED_BUDGETS_SUCCESS","LOAD_ASSIGNED_BUDGETS_FAIL","ASSIGN_BUDGET","ASSIGN_BUDGET_SUCCESS","ASSIGN_BUDGET_FAIL","UNASSIGN_BUDGET","UNASSIGN_BUDGET_SUCCESS","UNASSIGN_BUDGET_FAIL","LoadCostCenter","LoadCostCenterFail","LoadCostCenterSuccess","LoadCostCenters","LoadCostCentersFail","LoadCostCentersSuccess","CreateCostCenter","CreateCostCenterFail","CreateCostCenterSuccess","UpdateCostCenter","UpdateCostCenterFail","UpdateCostCenterSuccess","LoadAssignedBudgets","LoadAssignedBudgetsFail","LoadAssignedBudgetsSuccess","AssignBudget","AssignBudgetFail","AssignBudgetSuccess","UnassignBudget","UnassignBudgetFail","UnassignBudgetSuccess","costCenter_action","LOAD_B2B_USER","LOAD_B2B_USER_FAIL","LOAD_B2B_USER_SUCCESS","CREATE_B2B_USER","CREATE_B2B_USER_FAIL","CREATE_B2B_USER_SUCCESS","UPDATE_B2B_USER","UPDATE_B2B_USER_FAIL","UPDATE_B2B_USER_SUCCESS","LOAD_B2B_USERS","LOAD_B2B_USERS_FAIL","LOAD_B2B_USERS_SUCCESS","LOAD_B2B_USER_APPROVERS","LOAD_B2B_USER_APPROVERS_FAIL","LOAD_B2B_USER_APPROVERS_SUCCESS","ASSIGN_B2B_USER_APPROVER","ASSIGN_B2B_USER_APPROVER_FAIL","ASSIGN_B2B_USER_APPROVER_SUCCESS","UNASSIGN_B2B_USER_APPROVER","UNASSIGN_B2B_USER_APPROVER_FAIL","UNASSIGN_B2B_USER_APPROVER_SUCCESS","LOAD_B2B_USER_PERMISSIONS","LOAD_B2B_USER_PERMISSIONS_FAIL","LOAD_B2B_USER_PERMISSIONS_SUCCESS","ASSIGN_B2B_USER_PERMISSION","ASSIGN_B2B_USER_PERMISSION_FAIL","ASSIGN_B2B_USER_PERMISSION_SUCCESS","UNASSIGN_B2B_USER_PERMISSION","UNASSIGN_B2B_USER_PERMISSION_FAIL","UNASSIGN_B2B_USER_PERMISSION_SUCCESS","LOAD_B2B_USER_USER_GROUPS","LOAD_B2B_USER_USER_GROUPS_FAIL","LOAD_B2B_USER_USER_GROUPS_SUCCESS","ASSIGN_B2B_USER_USER_GROUP","ASSIGN_B2B_USER_USER_GROUP_FAIL","ASSIGN_B2B_USER_USER_GROUP_SUCCESS","UNASSIGN_B2B_USER_USER_GROUP","UNASSIGN_B2B_USER_USER_GROUP_FAIL","UNASSIGN_B2B_USER_USER_GROUP_SUCCESS","LoadB2BUser","LoadB2BUserFail","LoadB2BUserSuccess","orgUnitCustomer","CreateB2BUser","CreateB2BUserFail","CreateB2BUserSuccess","UpdateB2BUser","UpdateB2BUserFail","UpdateB2BUserSuccess","LoadB2BUsers","LoadB2BUsersFail","LoadB2BUsersSuccess","LoadB2BUserApprovers","LoadB2BUserApproversFail","LoadB2BUserApproversSuccess","AssignB2BUserApprover","AssignB2BUserApproverFail","AssignB2BUserApproverSuccess","UnassignB2BUserApprover","UnassignB2BUserApproverFail","UnassignB2BUserApproverSuccess","LoadB2BUserPermissions","LoadB2BUserPermissionsFail","LoadB2BUserPermissionsSuccess","AssignB2BUserPermission","AssignB2BUserPermissionFail","AssignB2BUserPermissionSuccess","UnassignB2BUserPermission","UnassignB2BUserPermissionFail","UnassignB2BUserPermissionSuccess","LoadB2BUserUserGroups","LoadB2BUserUserGroupsFail","LoadB2BUserUserGroupsSuccess","AssignB2BUserUserGroup","AssignB2BUserUserGroupFail","AssignB2BUserUserGroupSuccess","UnassignB2BUserUserGroup","UnassignB2BUserUserGroupFail","UnassignB2BUserUserGroupSuccess","b2bUser_action","CLEAR_ORGANIZATION_DATA","OrganizationClearData","organization_action","BudgetEffects","actions$","budgetConnector","loadBudget$","action","loadBudgets$","budgets","values","page","normalizeListPage","createBudget$","data","updateBudget$","Actions","prototype","OrgUnitEffects","orgUnitConnector","loadOrgUnit$","addresses","loadAvailableOrgUnits$","orgUnitsList","createUnit$","updateUnit$","_data","loadTree$","loadApprovalProcesses$","approvalProcesses","loadUsers$","serializeParams","group","users","assignRoleToUser","selected","unassignRoleToUser$","createAddress$","updateAddress$","deleteAddress$","PermissionEffects","permissionConnector","loadPermission$","loadPermissions$","permissions","createPermission$","updatePermission$","loadPermissionTypes$","permissionTypeList","CostCenterEffects","costCenterConnector","loadCostCenter$","loadCostCenters$","costCenters","createCostCenter$","updateCostCenter$","loadAssignedBudgets$","assignBudgetToCostCenter$","unassignBudgetToCostCenter$","B2BUserEffects","b2bUserConnector","userService","userIdService","loadB2BUser$","b2bUser","createB2BUser$","isAssignedToApprovers","route","redirectToDetails","successActions","splice","APPROVER","updateB2BUser$","push","checkSelfEmailUpdate$","getUserId","currentUser","currentUserEmailMatch","email","displayUid","go","cxRoute","Logout","loadB2BUsers$","b2bUsers","loadB2BUserApprovers$","approvers","loadB2BUserPermissions$","loadB2BUserUserGroups$","userGroups","assignApproverToB2BUser$","unassignApproverFromB2BUser$","assignPermissionToB2BUser$","unassignPermissionFromB2BUser$","assignUserGroupToB2BUser$","unassignUserGroupFromB2BUser$","_b","_c","context","UserService","UserIdService","UserGroupEffects","userGroupConnector","loadUserGroup$","loadUserGroups$","loadAvailableOrderApprovalPermissions$","loadAvailableOrgCustomers$","customers","createUserGroup$","updateUserGroup$","deleteUserGroup$","assignPermissionToUserGroup$","assignMemberUnitUserGroup$","unassignMemberFromUserGroup$","unassignPermissionFromUserGroup$","unassignAllMembersFromUserGroup$","effects","b2bUserInitialState","undefined","b2bUsersInitialState","b2bUserEntitiesReducer","assign","roles","role","userListReducer","b2bUserApproverListReducer","b2bUserPermissionListReducer","b2bUserUserGroupListReducer","budgetInitialState","budgetsInitialState","budgetsEntitiesReducer","budgetsListReducer","costCenterInitialState","costCentersInitialState","costCentersEntitiesReducer","costCentersListReducer","costCenterAssignedBudgetsListReducer","orgUnitInitialState","orgUnitsInitialState","orgUnitEntitiesReducer","orgUnitListReducer","orgUnitUserListReducer","orgUnitAddressListReducer","permissionInitialState","permissionsInitialState","permissionsEntitiesReducer","permissionsListReducer","userGroupInitialState","userGroupsInitialState","userGroupEntitiesReducer","userGroupsListReducer","userGroupAvailableOrderApprovalPermissionsListReducer","userGroupAvailablOrgCustomersListReducer","getReducers","entities","entityLoaderReducer","list","permissionTypes","availableOrgUnitNodes","tree","addressList","addressEntities","reducerToken","reducerProvider","useFactory","clearOrganizationState","reducer","LOGOUT","LANGUAGE_CHANGE","metaReducers","OrganizationStoreModule","forFeature","imports","AdministrationCoreModule","forRoot","ngModule","B2B_USER_NORMALIZER","B2B_USER_SERIALIZER","B2B_USERS_NORMALIZER","BUDGET_NORMALIZER","BUDGETS_NORMALIZER","BUDGET_SERIALIZER","B2BUNIT_NODE_NORMALIZER","B2BUNIT_NODE_LIST_NORMALIZER","B2BUNIT_NORMALIZER","B2BUNIT_SERIALIZER","B2BUNIT_APPROVAL_PROCESSES_NORMALIZER","PERMISSION_NORMALIZER","PERMISSIONS_NORMALIZER","PERMISSION_TYPE_NORMALIZER","PERMISSION_TYPES_NORMALIZER","PERMISSION_SERIALIZER","USER_GROUP_NORMALIZER","USER_GROUP_SERIALIZER","USER_GROUPS_NORMALIZER","AdminGuard","globalMessageService","canActivate","user","keys","length","hasRole","includes","ADMIN","add","key","MSG_TYPE_WARNING","GlobalMessageService","OrganizationBadRequestHandler","arguments","responseStatus","BAD_REQUEST","costCenterMask","unitMask","permissionMask","unknownMask","hasMatch","errorResponse","matchMask","handleError","_request","response","getErrors","forEach","message","handleOrganizationConflict","some","mask","test","result","match","MSG_TYPE_ERROR","errors","getPriority","OrganizationConflictHandler","CONFLICT","budgetMask","userMask","userGroupMask","request","handleConflict","body","LoadStatus","Period","getOrganizationState","getPermissionManagementState","getPermissionsState","getPermissionState","entityLoaderStateSelector","getPermissionTypesState","getPermission","getPermissionValue","permissionState","loaderValueSelector","getPermissionList","denormalizeSearch","getPermissionTypes","permission_selector","getB2BUserManagementState","getB2BUsersState","getB2BUserState","getB2BUserValue","b2BUserState","getUserList","getB2BUserApprovers","denormalizeCustomB2BSearch","getB2BUserPermissions","getUserGroupsState$1","getB2BUserUserGroups","b2bUser_selector","getItemStatus","itemState","previousState","loading","_previousState","currentState","status","success","SUCCESS","ERROR","item","value","B2BUserService","store","takeUserId","subscribe","dispatch","select","Boolean","loading$","process","getErrorState","getLoadingStatus","getB2BUserApproverList","getB2BUserPermissionList","getB2BUserUserGroupList","getAllRoles","CUSTOMER","MANAGER","Store","getBudgetManagementState","getBudgetsState","getBudget","getBudgetValue","budgetState","getBudgetList","budget_selector","getB2BOrgUnitState","getOrgUnitsNodeListState","getOrgUnitsState","getOrgUnitsTreeState","getAddressesState","getApprovalProcessesState","getOrgUnit","getOrgUnitValue","orgUnitState","getOrgUnitState","getOrgUnitList","getOrgUnitTree","getAssignedUsers","getB2BAddresses","getB2BAddress","orgUnit_selector","getUserGroupManagementState","getUserGroupsState","getUserGroup","getUserGroupValue","userGroupState","getUserGroupList","getUserGroupState","userGroup_selector","getCostCenterManagementState","getCostCentersState","getCostCenter","getCostCenterValue","costCenterState","getCostCenterList","getAssignedBudgets","getCostCenterState","costCenter_selector","BudgetService","loadBudget","getBudgetState","getCostCenters","CostCenterService","OrgUnitService","clearAssignedUsersList","getTreeState","getOrgUnitsList","getAddressState","getApprovalProcessesList","findUnitChildrenInTree","orginitId","children","flatMap","child","getChildUnits","getActiveUnitList","units","active","sort","sortUnitList","a","b","toLowerCase","getAddress","getAddressLoadingStatus","PermissionService","loadPermission","loadPermissionTypes","getPermissionTypeList","UserGroupService","getAvailableOrgCustomersList","getAvailableOrderApprovalPermissionsList","userGroupUid","B2BUserActions","B2BUserSelectors","BudgetActions","BudgetSelectors","CostCenterActions","CostCenterSelectors","OrgUnitActions","OrgUnitSelectors","OrganizationActions","PermissionActions","PermissionSelectors","UserGroupActions","UserGroupSelectors"],"sources":["/home/hamid/learning/cx-cangubike/js-storefront/olf/node_modules/@spartacus/organization/fesm2015/spartacus-organization-administration-core.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule, InjectionToken } from '@angular/core';\nimport * as i1 from '@spartacus/core';\nimport { PageMetaResolver, PageType, StateUtils, normalizeHttpError, B2BUserRole, AuthActions, SiteContextActions, GlobalMessageType, HttpErrorHandler, HttpResponseStatus } from '@spartacus/core';\nimport { defer, of, combineLatest, from, queueScheduler, using } from 'rxjs';\nimport { map, distinctUntilChanged, switchMap, shareReplay, catchError, groupBy, mergeMap, take, tap, withLatestFrom, filter, pluck, observeOn, pairwise, auditTime } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport * as i1$2 from '@ngrx/store';\nimport { combineReducers, StoreModule, createFeatureSelector, createSelector } from '@ngrx/store';\nimport { __decorate } from 'tslib';\n\nclass B2BUserAdapter {\n}\n\nclass B2BUserConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, orgUnitCustomerId) {\n        return this.adapter.load(userId, orgUnitCustomerId);\n    }\n    create(userId, orgCustomer) {\n        return this.adapter.create(userId, orgCustomer);\n    }\n    update(userId, orgCustomerId, orgCustomer) {\n        return this.adapter.update(userId, orgCustomerId, orgCustomer);\n    }\n    getList(userId, params) {\n        return this.adapter.loadList(userId, params);\n    }\n    getApprovers(userId, orgUnitCustomerId, params) {\n        return this.adapter.loadApprovers(userId, orgUnitCustomerId, params);\n    }\n    assignApprover(userId, orgCustomerId, approverId) {\n        return this.adapter.assignApprover(userId, orgCustomerId, approverId);\n    }\n    unassignApprover(userId, orgCustomerId, approverId) {\n        return this.adapter.unassignApprover(userId, orgCustomerId, approverId);\n    }\n    getPermissions(userId, orgUnitCustomerId, params) {\n        return this.adapter.loadPermissions(userId, orgUnitCustomerId, params);\n    }\n    assignPermission(userId, orgCustomerId, permissionId) {\n        return this.adapter.assignPermission(userId, orgCustomerId, permissionId);\n    }\n    unassignPermission(userId, orgCustomerId, permissionId) {\n        return this.adapter.unassignPermission(userId, orgCustomerId, permissionId);\n    }\n    getUserGroups(userId, orgUnitCustomerId, params) {\n        return this.adapter.loadUserGroups(userId, orgUnitCustomerId, params);\n    }\n    assignUserGroup(userId, orgCustomerId, userGroupId) {\n        return this.adapter.assignUserGroup(userId, orgCustomerId, userGroupId);\n    }\n    unassignUserGroup(userId, orgCustomerId, userGroupId) {\n        return this.adapter.unassignUserGroup(userId, orgCustomerId, userGroupId);\n    }\n}\nB2BUserConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserConnector, deps: [{ token: B2BUserAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nB2BUserConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: B2BUserAdapter }]; } });\n\nclass BudgetAdapter {\n}\n\nclass BudgetConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, budgetCode) {\n        return this.adapter.load(userId, budgetCode);\n    }\n    getList(userId, params) {\n        return this.adapter.loadList(userId, params);\n    }\n    create(userId, budget) {\n        return this.adapter.create(userId, budget);\n    }\n    update(userId, budgetCode, budget) {\n        return this.adapter.update(userId, budgetCode, budget);\n    }\n}\nBudgetConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetConnector, deps: [{ token: BudgetAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nBudgetConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: BudgetAdapter }]; } });\n\nclass CostCenterAdapter {\n}\n\nclass CostCenterConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, costCenterCode) {\n        return this.adapter.load(userId, costCenterCode);\n    }\n    getList(userId, params) {\n        return this.adapter.loadList(userId, params);\n    }\n    create(userId, costCenter) {\n        return this.adapter.create(userId, costCenter);\n    }\n    update(userId, costCenterCode, costCenter) {\n        return this.adapter.update(userId, costCenterCode, costCenter);\n    }\n    getBudgets(userId, costCenterCode, params) {\n        return this.adapter.loadBudgets(userId, costCenterCode, params);\n    }\n    assignBudget(userId, costCenterCode, budgetCode) {\n        return this.adapter.assignBudget(userId, costCenterCode, budgetCode);\n    }\n    unassignBudget(userId, costCenterCode, budgetCode) {\n        return this.adapter.unassignBudget(userId, costCenterCode, budgetCode);\n    }\n}\nCostCenterConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterConnector, deps: [{ token: CostCenterAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nCostCenterConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: CostCenterAdapter }]; } });\n\nclass OrgUnitAdapter {\n}\n\nclass OrgUnitConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, orgUnitId) {\n        return this.adapter.load(userId, orgUnitId);\n    }\n    create(userId, orgUnit) {\n        return this.adapter.create(userId, orgUnit);\n    }\n    update(userId, orgUnitId, orgUnit) {\n        return this.adapter.update(userId, orgUnitId, orgUnit);\n    }\n    getList(userId) {\n        return this.adapter.loadList(userId);\n    }\n    getApprovalProcesses(userId) {\n        return this.adapter.loadApprovalProcesses(userId);\n    }\n    getTree(userId) {\n        return this.adapter.loadTree(userId);\n    }\n    getUsers(userId, orgUnitId, roleId, params) {\n        return this.adapter.loadUsers(userId, orgUnitId, roleId, params);\n    }\n    assignRole(userId, orgCustomerId, roleId) {\n        return this.adapter.assignRole(userId, orgCustomerId, roleId);\n    }\n    unassignRole(userId, orgCustomerId, roleId) {\n        return this.adapter.unassignRole(userId, orgCustomerId, roleId);\n    }\n    assignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n        return this.adapter.assignApprover(userId, orgUnitId, orgCustomerId, roleId);\n    }\n    unassignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n        return this.adapter.unassignApprover(userId, orgUnitId, orgCustomerId, roleId);\n    }\n    getAddresses(userId, orgUnitId) {\n        return this.adapter.loadAddresses(userId, orgUnitId);\n    }\n    createAddress(userId, orgUnitId, address) {\n        return this.adapter.createAddress(userId, orgUnitId, address);\n    }\n    updateAddress(userId, orgUnitId, addressId, address) {\n        return this.adapter.updateAddress(userId, orgUnitId, addressId, address);\n    }\n    deleteAddress(userId, orgUnitId, addressId) {\n        return this.adapter.deleteAddress(userId, orgUnitId, addressId);\n    }\n}\nOrgUnitConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitConnector, deps: [{ token: OrgUnitAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nOrgUnitConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: OrgUnitAdapter }]; } });\n\nclass PermissionAdapter {\n}\n\nclass PermissionConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, permissionCode) {\n        return this.adapter.load(userId, permissionCode);\n    }\n    getList(userId, params) {\n        return this.adapter.loadList(userId, params);\n    }\n    create(userId, permission) {\n        return this.adapter.create(userId, permission);\n    }\n    update(userId, permissionCode, permission) {\n        return this.adapter.update(userId, permissionCode, permission);\n    }\n    getTypes() {\n        return this.adapter.loadTypes();\n    }\n}\nPermissionConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionConnector, deps: [{ token: PermissionAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nPermissionConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: PermissionAdapter }]; } });\n\nclass UserGroupAdapter {\n}\n\nclass UserGroupConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId, userGroupId) {\n        return this.adapter.load(userId, userGroupId);\n    }\n    getList(userId, params) {\n        return this.adapter.loadList(userId, params);\n    }\n    getAvailableOrderApprovalPermissions(userId, userGroupId, params) {\n        return this.adapter.loadAvailableOrderApprovalPermissions(userId, userGroupId, params);\n    }\n    getAvailableOrgCustomers(userId, userGroupId, params) {\n        return this.adapter.loadAvailableOrgCustomers(userId, userGroupId, params);\n    }\n    create(userId, userGroup) {\n        return this.adapter.create(userId, userGroup);\n    }\n    delete(userId, userGroupId) {\n        return this.adapter.delete(userId, userGroupId);\n    }\n    update(userId, userGroupId, userGroup) {\n        return this.adapter.update(userId, userGroupId, userGroup);\n    }\n    assignMember(userId, userGroupId, orgCustomerId) {\n        return this.adapter.assignMember(userId, userGroupId, orgCustomerId);\n    }\n    assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n        return this.adapter.assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);\n    }\n    unassignMember(userId, userGroupId, orgCustomerId) {\n        return this.adapter.unassignMember(userId, userGroupId, orgCustomerId);\n    }\n    unassignAllMembers(userId, userGroupId) {\n        return this.adapter.unassignAllMembers(userId, userGroupId);\n    }\n    unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n        return this.adapter.unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode);\n    }\n}\nUserGroupConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupConnector, deps: [{ token: UserGroupAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nUserGroupConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupConnector, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: UserGroupAdapter }]; } });\n\n/**\n * Resolves the page data for Organization Pages.\n *\n * Breadcrumbs are built in this implementation only.\n *\n * @property {string} ORGANIZATION_SEMANTIC_ROUTE the default root path for organization pages.\n * @property {string} ORGANIZATION_TRANSLATION_KEY the default i18n key for the organization breadcrumb label.\n */\nclass OrganizationPageMetaResolver extends PageMetaResolver {\n    constructor(contentPageMetaResolver, translation, semanticPath, routingService) {\n        super();\n        this.contentPageMetaResolver = contentPageMetaResolver;\n        this.translation = translation;\n        this.semanticPath = semanticPath;\n        this.routingService = routingService;\n        this.pageTemplate = 'CompanyPageTemplate';\n        this.pageType = PageType.CONTENT_PAGE;\n        /**\n         * Translation key for the breadcrumb of Organization home page\n         */\n        this.ORGANIZATION_TRANSLATION_KEY = 'organization.breadcrumb';\n        /**\n         * The semantic route of the organization landing page. It's used to recognize whether\n         * we are on this page. In such a case we avoid showing the breadcrumb for this page.\n         */\n        this.ORGANIZATION_SEMANTIC_ROUTE = 'organization';\n        /**\n         * Breadcrumb of the Organization page.\n         * It's empty when the current page is the Organization page.\n         */\n        this.organizationPageBreadcrumb$ = defer(() => this.routingService.getRouterState()).pipe(map((routerState) => { var _a; return (_a = routerState === null || routerState === void 0 ? void 0 : routerState.state) === null || _a === void 0 ? void 0 : _a.semanticRoute; }), distinctUntilChanged(), switchMap((semanticRoute) => semanticRoute === this.ORGANIZATION_SEMANTIC_ROUTE\n            ? of([])\n            : this.translation.translate(this.ORGANIZATION_TRANSLATION_KEY).pipe(map((label) => [\n                {\n                    label,\n                    link: this.semanticPath.get(this.ORGANIZATION_SEMANTIC_ROUTE),\n                },\n            ]))));\n        /**\n         * Breadcrumbs returned in the method #resolveBreadcrumbs.\n         */\n        this.breadcrumbs$ = combineLatest([\n            this.organizationPageBreadcrumb$,\n            defer(() => this.contentPageMetaResolver.resolveBreadcrumbs()),\n        ]).pipe(map(([organizationPageBreadcrumb, breadcrumbs = []]) => {\n            const [home, ...restBreadcrumbs] = breadcrumbs;\n            return [home, ...organizationPageBreadcrumb, ...restBreadcrumbs];\n        }), shareReplay({ bufferSize: 1, refCount: true }));\n    }\n    resolveTitle() {\n        return this.contentPageMetaResolver.resolveTitle();\n    }\n    resolveDescription() {\n        return this.contentPageMetaResolver.resolveDescription();\n    }\n    resolveRobots() {\n        return this.contentPageMetaResolver.resolveRobots();\n    }\n    /**\n     * Returns list of breadcrumbs for:\n     * - the home page\n     * - the organization home page\n     * - the organization's child pages (i.e. cost center list)\n     * - sub-routes of the organization's child pages (i.e. cost center details, edit cost center, ...)\n     */\n    resolveBreadcrumbs() {\n        return this.breadcrumbs$;\n    }\n}\nOrganizationPageMetaResolver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaResolver, deps: [{ token: i1.ContentPageMetaResolver }, { token: i1.TranslationService }, { token: i1.SemanticPathService }, { token: i1.RoutingService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationPageMetaResolver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaResolver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaResolver, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ContentPageMetaResolver }, { type: i1.TranslationService }, { type: i1.SemanticPathService }, { type: i1.RoutingService }]; } });\n\nclass OrganizationPageMetaModule {\n}\nOrganizationPageMetaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrganizationPageMetaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaModule });\nOrganizationPageMetaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaModule, providers: [\n        {\n            provide: PageMetaResolver,\n            useExisting: OrganizationPageMetaResolver,\n            multi: true,\n        },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationPageMetaModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: PageMetaResolver,\n                            useExisting: OrganizationPageMetaResolver,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\nconst ORGANIZATION_FEATURE = 'organization';\nconst BUDGET_FEATURE = 'budget';\nconst BUDGET_ENTITIES = 'budget-entities';\nconst BUDGET_LIST = 'budget-list';\nconst COST_CENTER_FEATURE = 'costCenter';\nconst COST_CENTER_ENTITIES = 'costCenter-entities';\nconst COST_CENTER_LIST = 'costCenter-list';\nconst COST_CENTER_ASSIGNED_BUDGETS = 'costCenter-assigned-budgets';\nconst PERMISSION_FEATURE = 'permission';\nconst PERMISSION_ENTITIES = 'permission-entities';\nconst PERMISSION_LIST = 'permission-list';\nconst PERMISSION_TYPES = 'permission-types';\nconst PERMISSION_TYPES_LIST = 'permission-types-list';\nconst ORG_UNIT_FEATURE = 'orgUnit';\nconst ORG_UNIT_NODE_ENTITIES = 'orgUnitNode-entities';\nconst ORG_UNIT_NODE_LIST = 'orgUnitNode-list';\nconst ORG_UNIT_ENTITIES = 'orgUnit-entities';\nconst ORG_UNIT_TREE_ENTITY = 'orgUnit-tree';\nconst ORG_UNIT_APPROVAL_PROCESSES_ENTITIES = 'orgUnit-approval-processes';\nconst ORG_UNIT_ASSIGNED_USERS = 'orgUnit-assigned-users';\nconst ORG_UNIT_TREE = 'tree';\nconst ORG_UNIT_APPROVAL_PROCESSES = 'approvalProcesses';\nconst ORG_UNIT_NODES = 'availableOrgUnitNodes';\nconst B2B_USER_FEATURE = 'b2bUser';\nconst B2B_USER_ENTITIES = 'b2bUser-entities';\nconst USER_LIST = 'b2bUser-list';\nconst B2B_USER_APPROVERS = 'b2bUser-approvers';\nconst B2B_USER_PERMISSIONS = 'b2bUser-permissions';\nconst B2B_USER_USER_GROUPS = 'b2bUser-user-groups';\nconst USER_GROUP_FEATURE = 'userGroup';\nconst USER_GROUP_ENTITIES = 'userGroup-entities';\nconst USER_GROUP_LIST = 'userGroup-list';\nconst USER_GROUP_PERMISSIONS = 'userGroup-available-order-approval-permissions';\nconst USER_GROUP_AVAILABLE_CUSTOMERS = 'userGroup-available-org-customers';\nconst ADDRESS_ENTITIES = 'addresses-entities';\nconst ADDRESS_LIST = 'addresses-list';\n\nconst LOAD_BUDGET = '[Budget] Load Budget Data';\nconst LOAD_BUDGET_FAIL = '[Budget] Load Budget Data Fail';\nconst LOAD_BUDGET_SUCCESS = '[Budget] Load Budget Data Success';\nconst LOAD_BUDGETS = '[Budget] Load Budgets';\nconst LOAD_BUDGETS_FAIL = '[Budget] Load Budgets Fail';\nconst LOAD_BUDGETS_SUCCESS = '[Budget] Load Budgets Success';\nconst CREATE_BUDGET = '[Budget] Create Budget';\nconst CREATE_BUDGET_FAIL = '[Budget] Create Budget Fail';\nconst CREATE_BUDGET_SUCCESS = '[Budget] Create Budget Success';\nconst UPDATE_BUDGET = '[Budget] Update Budget';\nconst UPDATE_BUDGET_FAIL = '[Budget] Update Budget Fail';\nconst UPDATE_BUDGET_SUCCESS = '[Budget] Update Budget Success';\nclass LoadBudget extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode);\n        this.payload = payload;\n        this.type = LOAD_BUDGET;\n    }\n}\nclass LoadBudgetFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n        this.payload = payload;\n        this.type = LOAD_BUDGET_FAIL;\n    }\n}\nclass LoadBudgetSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, Array.isArray(payload)\n            ? payload.map((budget) => budget === null || budget === void 0 ? void 0 : budget.code)\n            : payload === null || payload === void 0 ? void 0 : payload.code);\n        this.payload = payload;\n        this.type = LOAD_BUDGET_SUCCESS;\n    }\n}\nclass LoadBudgets extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_BUDGETS;\n    }\n}\nclass LoadBudgetsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n        this.payload = payload;\n        this.type = LOAD_BUDGETS_FAIL;\n    }\n}\nclass LoadBudgetsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_BUDGETS_SUCCESS;\n    }\n}\nclass CreateBudget extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budget.code);\n        this.payload = payload;\n        this.type = CREATE_BUDGET;\n    }\n}\nclass CreateBudgetFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n        this.payload = payload;\n        this.type = CREATE_BUDGET_FAIL;\n    }\n}\nclass CreateBudgetSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = CREATE_BUDGET_SUCCESS;\n    }\n}\nclass UpdateBudget extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budget.code);\n        this.payload = payload;\n        this.type = UPDATE_BUDGET;\n    }\n}\nclass UpdateBudgetFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_BUDGET_FAIL;\n    }\n}\nclass UpdateBudgetSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = UPDATE_BUDGET_SUCCESS;\n    }\n}\n\nvar budget_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_BUDGET: LOAD_BUDGET,\n    LOAD_BUDGET_FAIL: LOAD_BUDGET_FAIL,\n    LOAD_BUDGET_SUCCESS: LOAD_BUDGET_SUCCESS,\n    LOAD_BUDGETS: LOAD_BUDGETS,\n    LOAD_BUDGETS_FAIL: LOAD_BUDGETS_FAIL,\n    LOAD_BUDGETS_SUCCESS: LOAD_BUDGETS_SUCCESS,\n    CREATE_BUDGET: CREATE_BUDGET,\n    CREATE_BUDGET_FAIL: CREATE_BUDGET_FAIL,\n    CREATE_BUDGET_SUCCESS: CREATE_BUDGET_SUCCESS,\n    UPDATE_BUDGET: UPDATE_BUDGET,\n    UPDATE_BUDGET_FAIL: UPDATE_BUDGET_FAIL,\n    UPDATE_BUDGET_SUCCESS: UPDATE_BUDGET_SUCCESS,\n    LoadBudget: LoadBudget,\n    LoadBudgetFail: LoadBudgetFail,\n    LoadBudgetSuccess: LoadBudgetSuccess,\n    LoadBudgets: LoadBudgets,\n    LoadBudgetsFail: LoadBudgetsFail,\n    LoadBudgetsSuccess: LoadBudgetsSuccess,\n    CreateBudget: CreateBudget,\n    CreateBudgetFail: CreateBudgetFail,\n    CreateBudgetSuccess: CreateBudgetSuccess,\n    UpdateBudget: UpdateBudget,\n    UpdateBudgetFail: UpdateBudgetFail,\n    UpdateBudgetSuccess: UpdateBudgetSuccess\n});\n\nconst LOAD_ORG_UNIT = '[B2BUnit] Load B2BUnit Data';\nconst LOAD_ORG_UNIT_FAIL = '[B2BUnit] Load B2BUnit Data Fail';\nconst LOAD_ORG_UNIT_SUCCESS = '[B2BUnit] Load B2BUnit Data Success';\nconst LOAD_UNIT_NODE = '[B2BUnitNode] Load B2BUnitNode Data';\nconst LOAD_UNIT_NODE_FAIL = '[B2BUnitNode] Load B2BUnitNode Data Fail';\nconst LOAD_UNIT_NODE_SUCCESS = '[B2BUnitNode] Load B2BUnitNode Data Success';\nconst LOAD_UNIT_NODES = '[B2BUnitNode] Load B2BUnitNodes';\nconst LOAD_UNIT_NODES_FAIL = '[B2BUnitNode] Load B2BUnitNodes Fail';\nconst LOAD_UNIT_NODES_SUCCESS = '[B2BUnitNode] Load B2BUnitNodes Success';\nconst CREATE_ORG_UNIT = '[B2BUnit] Create B2BUnitNode';\nconst CREATE_ORG_UNIT_FAIL = '[B2BUnit] Create B2BUnitNode Fail';\nconst CREATE_ORG_UNIT_SUCCESS = '[B2BUnit] Create B2BUnitNode Success';\nconst UPDATE_ORG_UNIT = '[B2BUnit] Update B2BUnitNode';\nconst UPDATE_ORG_UNIT_FAIL = '[B2BUnit] Update B2BUnitNode Fail';\nconst UPDATE_ORG_UNIT_SUCCESS = '[B2BUnit] Update B2BUnitNode Success';\nconst LOAD_UNIT_TREE = '[B2BUnitNode] Load Tree';\nconst LOAD_UNIT_TREE_FAIL = '[B2BUnitNode] Load Tree Fail';\nconst LOAD_UNIT_TREE_SUCCESS = '[B2BUnitNode] Load Tree Success';\nconst LOAD_APPROVAL_PROCESSES = '[B2BApprovalProcess] Load Approval Processes';\nconst LOAD_APPROVAL_PROCESSES_FAIL = '[B2BApprovalProcess] Load Approval Processes Fail';\nconst LOAD_APPROVAL_PROCESSES_SUCCESS = '[B2BApprovalProcess] Load Approval Processes Success';\nconst LOAD_ASSIGNED_USERS = '[B2BUnit] Load Users';\nconst LOAD_ASSIGNED_USERS_SUCCESS = '[B2BUnit] Load Users success';\nconst LOAD_ASSIGNED_USERS_FAIL = '[B2BUnit] Load Users fail';\nconst ASSIGN_ROLE = '[B2BUnit] Assign Role';\nconst ASSIGN_ROLE_SUCCESS = '[B2BUnit] Assign Role success';\nconst ASSIGN_ROLE_FAIL = '[B2BUnit] Assign Role fail';\nconst UNASSIGN_ROLE = '[B2BUnit] Unassign Role';\nconst UNASSIGN_ROLE_SUCCESS = '[B2BUnit] Unassign Role success';\nconst UNASSIGN_ROLE_FAIL = '[B2BUnit] Unassign Role fail';\nconst ASSIGN_APPROVER = '[B2BUnit] Assign Approver';\nconst ASSIGN_APPROVER_SUCCESS = '[B2BUnit] Assign Approver success';\nconst ASSIGN_APPROVER_FAIL = '[B2BUnit] Assign Approver fail';\nconst UNASSIGN_APPROVER = '[B2BUnit] Unassign Approver';\nconst UNASSIGN_APPROVER_SUCCESS = '[B2BUnit] Unassign Approver success';\nconst UNASSIGN_APPROVER_FAIL = '[B2BUnit] Unassign Approver fail';\nconst CREATE_ADDRESS = '[B2BUnit] Create address';\nconst CREATE_ADDRESS_SUCCESS = '[B2BUnit] Create address success';\nconst CREATE_ADDRESS_FAIL = '[B2BUnit] Create address fail';\nconst UPDATE_ADDRESS = '[B2BUnit] Update address';\nconst UPDATE_ADDRESS_SUCCESS = '[B2BUnit] Update address success';\nconst UPDATE_ADDRESS_FAIL = '[B2BUnit] Update address fail';\nconst DELETE_ADDRESS = '[B2BUnit] Delete address';\nconst DELETE_ADDRESS_SUCCESS = '[B2BUnit] Delete address success';\nconst DELETE_ADDRESS_FAIL = '[B2BUnit] Delete address fail';\nconst LOAD_ADDRESS_SUCCESS = '[B2BUnit] Load address success';\nconst LOAD_ADDRESSES = '[B2BUnit] Load addresses';\nconst LOAD_ADDRESSES_SUCCESS = '[B2BUnit] Load addresses success';\nconst LOAD_ADDRESSES_FAIL = '[B2BUnit] Load addresses fail';\nconst CLEAR_ASSIGNED_USERS = '[B2BUnit] Clear Assigned Users';\nclass LoadOrgUnit extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.orgUnitId);\n        this.payload = payload;\n        this.type = LOAD_ORG_UNIT;\n    }\n}\nclass LoadOrgUnitFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.orgUnitId, payload.error);\n        this.payload = payload;\n        this.type = LOAD_ORG_UNIT_FAIL;\n    }\n}\nclass LoadOrgUnitSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, Array.isArray(payload)\n            ? payload.map((orgUnit) => orgUnit === null || orgUnit === void 0 ? void 0 : orgUnit.uid)\n            : payload === null || payload === void 0 ? void 0 : payload.uid);\n        this.payload = payload;\n        this.type = LOAD_ORG_UNIT_SUCCESS;\n    }\n}\nclass LoadOrgUnitNodes extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n        this.payload = payload;\n        this.type = LOAD_UNIT_NODES;\n    }\n}\nclass LoadOrgUnitNodesFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES, payload.error);\n        this.payload = payload;\n        this.type = LOAD_UNIT_NODES_FAIL;\n    }\n}\nclass LoadOrgUnitNodesSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n        this.payload = payload;\n        this.type = LOAD_UNIT_NODES_SUCCESS;\n    }\n}\nclass CreateUnit extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.unit.uid);\n        this.payload = payload;\n        this.type = CREATE_ORG_UNIT;\n    }\n}\nclass CreateUnitFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n        this.payload = payload;\n        this.type = CREATE_ORG_UNIT_FAIL;\n    }\n}\nclass CreateUnitSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = CREATE_ORG_UNIT_SUCCESS;\n    }\n}\nclass UpdateUnit extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.unit.uid);\n        this.payload = payload;\n        this.type = UPDATE_ORG_UNIT;\n    }\n}\nclass UpdateUnitFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_ORG_UNIT_FAIL;\n    }\n}\nclass UpdateUnitSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = UPDATE_ORG_UNIT_SUCCESS;\n    }\n}\nclass LoadTree extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n        this.payload = payload;\n        this.type = LOAD_UNIT_TREE;\n    }\n}\nclass LoadTreeFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE, payload.error);\n        this.payload = payload;\n        this.type = LOAD_UNIT_TREE_FAIL;\n    }\n}\nclass LoadTreeSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n        this.payload = payload;\n        this.type = LOAD_UNIT_TREE_SUCCESS;\n    }\n}\nclass LoadApprovalProcesses extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n        this.payload = payload;\n        this.type = LOAD_APPROVAL_PROCESSES;\n    }\n}\nclass LoadApprovalProcessesFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES, payload.error);\n        this.payload = payload;\n        this.type = LOAD_APPROVAL_PROCESSES_FAIL;\n    }\n}\nclass LoadApprovalProcessesSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n        this.payload = payload;\n        this.type = LOAD_APPROVAL_PROCESSES_SUCCESS;\n    }\n}\nclass LoadAssignedUsers extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_USERS;\n    }\n}\nclass ClearAssignedUsers extends StateUtils.EntityRemoveAction {\n    constructor(payload) {\n        super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n        this.payload = payload;\n        this.type = CLEAR_ASSIGNED_USERS;\n    }\n}\nclass LoadAssignedUsersFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`), payload.error);\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_USERS_FAIL;\n    }\n}\nclass LoadAssignedUsersSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ORG_UNIT_ASSIGNED_USERS, StateUtils.serializeSearchConfig(payload.params, `${payload.orgUnitId},${payload.roleId}`));\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_USERS_SUCCESS;\n    }\n}\nclass AssignRole extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId);\n        this.payload = payload;\n        this.type = ASSIGN_ROLE;\n    }\n}\nclass AssignRoleFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = ASSIGN_ROLE_FAIL;\n    }\n}\nclass AssignRoleSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = ASSIGN_ROLE_SUCCESS;\n    }\n}\nclass UnassignRole extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId);\n        this.payload = payload;\n        this.type = UNASSIGN_ROLE;\n    }\n}\nclass UnassignRoleFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = UNASSIGN_ROLE_FAIL;\n    }\n}\nclass UnassignRoleSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_ROLE_SUCCESS;\n    }\n}\nclass AssignApprover extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId);\n        this.payload = payload;\n        this.type = ASSIGN_APPROVER;\n    }\n}\nclass AssignApproverFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = ASSIGN_APPROVER_FAIL;\n    }\n}\nclass AssignApproverSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = ASSIGN_APPROVER_SUCCESS;\n    }\n}\nclass UnassignApprover extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId);\n        this.payload = payload;\n        this.type = UNASSIGN_APPROVER;\n    }\n}\nclass UnassignApproverFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = UNASSIGN_APPROVER_FAIL;\n    }\n}\nclass UnassignApproverSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_APPROVER_SUCCESS;\n    }\n}\nclass CreateAddress extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.address.id);\n        this.payload = payload;\n        this.type = CREATE_ADDRESS;\n    }\n}\nclass CreateAddressFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n        this.payload = payload;\n        this.type = CREATE_ADDRESS_FAIL;\n    }\n}\nclass CreateAddressSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.id, payload);\n        this.payload = payload;\n        this.type = CREATE_ADDRESS_SUCCESS;\n    }\n}\nclass UpdateAddress extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.address.id);\n        this.payload = payload;\n        this.type = UPDATE_ADDRESS;\n    }\n}\nclass UpdateAddressFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_ADDRESS_FAIL;\n    }\n}\nclass UpdateAddressSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.id, payload);\n        this.payload = payload;\n        this.type = UPDATE_ADDRESS_SUCCESS;\n    }\n}\nclass DeleteAddress extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.addressId);\n        this.payload = payload;\n        this.type = DELETE_ADDRESS;\n    }\n}\nclass DeleteAddressFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n        this.payload = payload;\n        this.type = DELETE_ADDRESS_FAIL;\n    }\n}\nclass DeleteAddressSuccess extends StateUtils.EntityRemoveAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, payload.id);\n        this.payload = payload;\n        this.type = DELETE_ADDRESS_SUCCESS;\n    }\n}\nclass LoadAddressSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ADDRESS_ENTITIES, Array.isArray(payload)\n            ? payload.map((address) => address === null || address === void 0 ? void 0 : address.id)\n            : payload === null || payload === void 0 ? void 0 : payload.id);\n        this.payload = payload;\n        this.type = LOAD_ADDRESS_SUCCESS;\n    }\n}\nclass LoadAddresses extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(ADDRESS_LIST, payload.orgUnitId);\n        this.payload = payload;\n        this.type = LOAD_ADDRESSES;\n    }\n}\nclass LoadAddressesFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(ADDRESS_LIST, payload.orgUnitId, payload.error);\n        this.payload = payload;\n        this.type = LOAD_ADDRESSES_FAIL;\n    }\n}\nclass LoadAddressesSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(ADDRESS_LIST, payload.orgUnitId);\n        this.payload = payload;\n        this.type = LOAD_ADDRESSES_SUCCESS;\n    }\n}\n\nvar orgUnit_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_ORG_UNIT: LOAD_ORG_UNIT,\n    LOAD_ORG_UNIT_FAIL: LOAD_ORG_UNIT_FAIL,\n    LOAD_ORG_UNIT_SUCCESS: LOAD_ORG_UNIT_SUCCESS,\n    LOAD_UNIT_NODE: LOAD_UNIT_NODE,\n    LOAD_UNIT_NODE_FAIL: LOAD_UNIT_NODE_FAIL,\n    LOAD_UNIT_NODE_SUCCESS: LOAD_UNIT_NODE_SUCCESS,\n    LOAD_UNIT_NODES: LOAD_UNIT_NODES,\n    LOAD_UNIT_NODES_FAIL: LOAD_UNIT_NODES_FAIL,\n    LOAD_UNIT_NODES_SUCCESS: LOAD_UNIT_NODES_SUCCESS,\n    CREATE_ORG_UNIT: CREATE_ORG_UNIT,\n    CREATE_ORG_UNIT_FAIL: CREATE_ORG_UNIT_FAIL,\n    CREATE_ORG_UNIT_SUCCESS: CREATE_ORG_UNIT_SUCCESS,\n    UPDATE_ORG_UNIT: UPDATE_ORG_UNIT,\n    UPDATE_ORG_UNIT_FAIL: UPDATE_ORG_UNIT_FAIL,\n    UPDATE_ORG_UNIT_SUCCESS: UPDATE_ORG_UNIT_SUCCESS,\n    LOAD_UNIT_TREE: LOAD_UNIT_TREE,\n    LOAD_UNIT_TREE_FAIL: LOAD_UNIT_TREE_FAIL,\n    LOAD_UNIT_TREE_SUCCESS: LOAD_UNIT_TREE_SUCCESS,\n    LOAD_APPROVAL_PROCESSES: LOAD_APPROVAL_PROCESSES,\n    LOAD_APPROVAL_PROCESSES_FAIL: LOAD_APPROVAL_PROCESSES_FAIL,\n    LOAD_APPROVAL_PROCESSES_SUCCESS: LOAD_APPROVAL_PROCESSES_SUCCESS,\n    LOAD_ASSIGNED_USERS: LOAD_ASSIGNED_USERS,\n    LOAD_ASSIGNED_USERS_SUCCESS: LOAD_ASSIGNED_USERS_SUCCESS,\n    LOAD_ASSIGNED_USERS_FAIL: LOAD_ASSIGNED_USERS_FAIL,\n    ASSIGN_ROLE: ASSIGN_ROLE,\n    ASSIGN_ROLE_SUCCESS: ASSIGN_ROLE_SUCCESS,\n    ASSIGN_ROLE_FAIL: ASSIGN_ROLE_FAIL,\n    UNASSIGN_ROLE: UNASSIGN_ROLE,\n    UNASSIGN_ROLE_SUCCESS: UNASSIGN_ROLE_SUCCESS,\n    UNASSIGN_ROLE_FAIL: UNASSIGN_ROLE_FAIL,\n    ASSIGN_APPROVER: ASSIGN_APPROVER,\n    ASSIGN_APPROVER_SUCCESS: ASSIGN_APPROVER_SUCCESS,\n    ASSIGN_APPROVER_FAIL: ASSIGN_APPROVER_FAIL,\n    UNASSIGN_APPROVER: UNASSIGN_APPROVER,\n    UNASSIGN_APPROVER_SUCCESS: UNASSIGN_APPROVER_SUCCESS,\n    UNASSIGN_APPROVER_FAIL: UNASSIGN_APPROVER_FAIL,\n    CREATE_ADDRESS: CREATE_ADDRESS,\n    CREATE_ADDRESS_SUCCESS: CREATE_ADDRESS_SUCCESS,\n    CREATE_ADDRESS_FAIL: CREATE_ADDRESS_FAIL,\n    UPDATE_ADDRESS: UPDATE_ADDRESS,\n    UPDATE_ADDRESS_SUCCESS: UPDATE_ADDRESS_SUCCESS,\n    UPDATE_ADDRESS_FAIL: UPDATE_ADDRESS_FAIL,\n    DELETE_ADDRESS: DELETE_ADDRESS,\n    DELETE_ADDRESS_SUCCESS: DELETE_ADDRESS_SUCCESS,\n    DELETE_ADDRESS_FAIL: DELETE_ADDRESS_FAIL,\n    LOAD_ADDRESS_SUCCESS: LOAD_ADDRESS_SUCCESS,\n    LOAD_ADDRESSES: LOAD_ADDRESSES,\n    LOAD_ADDRESSES_SUCCESS: LOAD_ADDRESSES_SUCCESS,\n    LOAD_ADDRESSES_FAIL: LOAD_ADDRESSES_FAIL,\n    CLEAR_ASSIGNED_USERS: CLEAR_ASSIGNED_USERS,\n    LoadOrgUnit: LoadOrgUnit,\n    LoadOrgUnitFail: LoadOrgUnitFail,\n    LoadOrgUnitSuccess: LoadOrgUnitSuccess,\n    LoadOrgUnitNodes: LoadOrgUnitNodes,\n    LoadOrgUnitNodesFail: LoadOrgUnitNodesFail,\n    LoadOrgUnitNodesSuccess: LoadOrgUnitNodesSuccess,\n    CreateUnit: CreateUnit,\n    CreateUnitFail: CreateUnitFail,\n    CreateUnitSuccess: CreateUnitSuccess,\n    UpdateUnit: UpdateUnit,\n    UpdateUnitFail: UpdateUnitFail,\n    UpdateUnitSuccess: UpdateUnitSuccess,\n    LoadTree: LoadTree,\n    LoadTreeFail: LoadTreeFail,\n    LoadTreeSuccess: LoadTreeSuccess,\n    LoadApprovalProcesses: LoadApprovalProcesses,\n    LoadApprovalProcessesFail: LoadApprovalProcessesFail,\n    LoadApprovalProcessesSuccess: LoadApprovalProcessesSuccess,\n    LoadAssignedUsers: LoadAssignedUsers,\n    ClearAssignedUsers: ClearAssignedUsers,\n    LoadAssignedUsersFail: LoadAssignedUsersFail,\n    LoadAssignedUsersSuccess: LoadAssignedUsersSuccess,\n    AssignRole: AssignRole,\n    AssignRoleFail: AssignRoleFail,\n    AssignRoleSuccess: AssignRoleSuccess,\n    UnassignRole: UnassignRole,\n    UnassignRoleFail: UnassignRoleFail,\n    UnassignRoleSuccess: UnassignRoleSuccess,\n    AssignApprover: AssignApprover,\n    AssignApproverFail: AssignApproverFail,\n    AssignApproverSuccess: AssignApproverSuccess,\n    UnassignApprover: UnassignApprover,\n    UnassignApproverFail: UnassignApproverFail,\n    UnassignApproverSuccess: UnassignApproverSuccess,\n    CreateAddress: CreateAddress,\n    CreateAddressFail: CreateAddressFail,\n    CreateAddressSuccess: CreateAddressSuccess,\n    UpdateAddress: UpdateAddress,\n    UpdateAddressFail: UpdateAddressFail,\n    UpdateAddressSuccess: UpdateAddressSuccess,\n    DeleteAddress: DeleteAddress,\n    DeleteAddressFail: DeleteAddressFail,\n    DeleteAddressSuccess: DeleteAddressSuccess,\n    LoadAddressSuccess: LoadAddressSuccess,\n    LoadAddresses: LoadAddresses,\n    LoadAddressesFail: LoadAddressesFail,\n    LoadAddressesSuccess: LoadAddressesSuccess\n});\n\nconst LOAD_USER_GROUP = '[UserGroup] Load UserGroup Data';\nconst LOAD_USER_GROUP_FAIL = '[UserGroup] Load UserGroup Data Fail';\nconst LOAD_USER_GROUP_SUCCESS = '[UserGroup] Load UserGroup Data Success';\nconst LOAD_USER_GROUPS = '[UserGroup] Load UserGroups';\nconst LOAD_USER_GROUPS_FAIL = '[UserGroup] Load UserGroups Fail';\nconst LOAD_USER_GROUPS_SUCCESS = '[UserGroup] Load UserGroups Success';\nconst LOAD_USER_GROUP_PERMISSIONS = '[UserGroup] Load Permissions Data';\nconst LOAD_USER_GROUP_PERMISSIONS_FAIL = '[UserGroup] Load Permissions Data Fail';\nconst LOAD_USER_GROUP_PERMISSIONS_SUCCESS = '[UserGroup] Load Permissions Data Success';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS = '[UserGroup] Load Customers Data';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL = '[UserGroup] Load Customers Data Fail';\nconst LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS = '[UserGroup] Load Customers Data Success';\nconst CREATE_USER_GROUP = '[UserGroup] Create UserGroup';\nconst CREATE_USER_GROUP_FAIL = '[UserGroup] Create UserGroup Fail';\nconst CREATE_USER_GROUP_SUCCESS = '[UserGroup] Create UserGroup Success';\nconst USER_GROUP_ASSIGN_MEMBER = '[UserGroup] Assign Member';\nconst USER_GROUP_ASSIGN_MEMBER_FAIL = '[UserGroup] Assign Member Fail';\nconst USER_GROUP_ASSIGN_MEMBER_SUCCESS = '[UserGroup] Assign Member Success';\nconst USER_GROUP_ASSIGN_PERMISSION = '[UserGroup] Assign Permissions';\nconst USER_GROUP_ASSIGN_PERMISSION_FAIL = '[UserGroup] Assign Permissions Fail';\nconst USER_GROUP_ASSIGN_PERMISSION_SUCCESS = '[UserGroup] Assign Permissions Success';\nconst UPDATE_USER_GROUP = '[UserGroup] Update UserGroup';\nconst UPDATE_USER_GROUP_FAIL = '[UserGroup] Update UserGroup Fail';\nconst UPDATE_USER_GROUP_SUCCESS = '[UserGroup] Update UserGroup Success';\nconst DELETE_USER_GROUP = '[UserGroup] Delete UserGroup';\nconst DELETE_USER_GROUP_FAIL = '[UserGroup] Delete UserGroup Fail';\nconst DELETE_USER_GROUP_SUCCESS = '[UserGroup] Delete UserGroup Success';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS = '[UserGroup] Unassign Members';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL = '[UserGroup] Unassign Members Fail';\nconst USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS = '[UserGroup] Unassign Members Success';\nconst USER_GROUP_UNASSIGN_MEMBER = '[UserGroup] Unassign Member';\nconst USER_GROUP_UNASSIGN_MEMBER_FAIL = '[UserGroup] Unassign Member Fail';\nconst USER_GROUP_UNASSIGN_MEMBER_SUCCESS = '[UserGroup] Unassign Member Success';\nconst USER_GROUP_UNASSIGN_PERMISSION = '[UserGroup] Unassign Permission';\nconst USER_GROUP_UNASSIGN_PERMISSION_FAIL = '[UserGroup] Unassign Permission Fail';\nconst USER_GROUP_UNASSIGN_PERMISSION_SUCCESS = '[UserGroup] Unassign Permission Success';\nclass LoadUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP;\n    }\n}\nclass LoadUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_FAIL;\n    }\n}\nclass LoadUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, Array.isArray(payload)\n            ? payload.map((userGroup) => userGroup === null || userGroup === void 0 ? void 0 : userGroup.uid)\n            : payload === null || payload === void 0 ? void 0 : payload.uid);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_SUCCESS;\n    }\n}\nclass LoadUserGroups extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUPS;\n    }\n}\nclass LoadUserGroupsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUPS_FAIL;\n    }\n}\nclass LoadUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUPS_SUCCESS;\n    }\n}\nclass LoadPermissions$1 extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_PERMISSIONS;\n    }\n}\nclass LoadPermissionsFail$1 extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId), payload.error);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_PERMISSIONS_FAIL;\n    }\n}\nclass LoadPermissionsSuccess$1 extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_PERMISSIONS_SUCCESS;\n    }\n}\nclass LoadAvailableOrgCustomers extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS;\n    }\n}\nclass LoadAvailableOrgCustomersFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId), payload.error);\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL;\n    }\n}\nclass LoadAvailableOrgCustomersSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_AVAILABLE_CUSTOMERS, StateUtils.serializeSearchConfig(payload.params, payload.userGroupId));\n        this.payload = payload;\n        this.type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS;\n    }\n}\nclass CreateUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n        this.payload = payload;\n        this.type = CREATE_USER_GROUP;\n    }\n}\nclass CreateUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = CREATE_USER_GROUP_FAIL;\n    }\n}\nclass CreateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = CREATE_USER_GROUP_SUCCESS;\n    }\n}\nclass AssignMember extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_MEMBER;\n    }\n}\nclass AssignMemberFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_MEMBER_FAIL;\n    }\n}\nclass AssignMemberSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_MEMBER_SUCCESS;\n    }\n}\nclass AssignPermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_PERMISSION;\n    }\n}\nclass AssignPermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_PERMISSION_FAIL;\n    }\n}\nclass AssignPermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n        this.payload = payload;\n        this.type = USER_GROUP_ASSIGN_PERMISSION_SUCCESS;\n    }\n}\nclass UpdateUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n        this.payload = payload;\n        this.type = UPDATE_USER_GROUP;\n    }\n}\nclass UpdateUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_USER_GROUP_FAIL;\n    }\n}\nclass UpdateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = UPDATE_USER_GROUP_SUCCESS;\n    }\n}\nclass DeleteUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId);\n        this.payload = payload;\n        this.type = DELETE_USER_GROUP;\n    }\n}\nclass DeleteUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = DELETE_USER_GROUP_FAIL;\n    }\n}\nclass DeleteUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = DELETE_USER_GROUP_SUCCESS;\n    }\n}\nclass UnassignMember extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_MEMBER;\n    }\n}\nclass UnassignMemberFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_MEMBER_FAIL;\n    }\n}\nclass UnassignMemberSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_MEMBER_SUCCESS;\n    }\n}\nclass UnassignAllMembers extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS;\n    }\n}\nclass UnassignAllMembersFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL;\n    }\n}\nclass UnassignAllMembersSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS;\n    }\n}\nclass UnassignPermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_PERMISSION;\n    }\n}\nclass UnassignPermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_PERMISSION_FAIL;\n    }\n}\nclass UnassignPermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n        this.payload = payload;\n        this.type = USER_GROUP_UNASSIGN_PERMISSION_SUCCESS;\n    }\n}\n\nvar userGroup_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_USER_GROUP: LOAD_USER_GROUP,\n    LOAD_USER_GROUP_FAIL: LOAD_USER_GROUP_FAIL,\n    LOAD_USER_GROUP_SUCCESS: LOAD_USER_GROUP_SUCCESS,\n    LOAD_USER_GROUPS: LOAD_USER_GROUPS,\n    LOAD_USER_GROUPS_FAIL: LOAD_USER_GROUPS_FAIL,\n    LOAD_USER_GROUPS_SUCCESS: LOAD_USER_GROUPS_SUCCESS,\n    LOAD_USER_GROUP_PERMISSIONS: LOAD_USER_GROUP_PERMISSIONS,\n    LOAD_USER_GROUP_PERMISSIONS_FAIL: LOAD_USER_GROUP_PERMISSIONS_FAIL,\n    LOAD_USER_GROUP_PERMISSIONS_SUCCESS: LOAD_USER_GROUP_PERMISSIONS_SUCCESS,\n    LOAD_USER_GROUP_AVAILABLE_CUSTOMERS: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS,\n    LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL,\n    LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS: LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS,\n    CREATE_USER_GROUP: CREATE_USER_GROUP,\n    CREATE_USER_GROUP_FAIL: CREATE_USER_GROUP_FAIL,\n    CREATE_USER_GROUP_SUCCESS: CREATE_USER_GROUP_SUCCESS,\n    USER_GROUP_ASSIGN_MEMBER: USER_GROUP_ASSIGN_MEMBER,\n    USER_GROUP_ASSIGN_MEMBER_FAIL: USER_GROUP_ASSIGN_MEMBER_FAIL,\n    USER_GROUP_ASSIGN_MEMBER_SUCCESS: USER_GROUP_ASSIGN_MEMBER_SUCCESS,\n    USER_GROUP_ASSIGN_PERMISSION: USER_GROUP_ASSIGN_PERMISSION,\n    USER_GROUP_ASSIGN_PERMISSION_FAIL: USER_GROUP_ASSIGN_PERMISSION_FAIL,\n    USER_GROUP_ASSIGN_PERMISSION_SUCCESS: USER_GROUP_ASSIGN_PERMISSION_SUCCESS,\n    UPDATE_USER_GROUP: UPDATE_USER_GROUP,\n    UPDATE_USER_GROUP_FAIL: UPDATE_USER_GROUP_FAIL,\n    UPDATE_USER_GROUP_SUCCESS: UPDATE_USER_GROUP_SUCCESS,\n    DELETE_USER_GROUP: DELETE_USER_GROUP,\n    DELETE_USER_GROUP_FAIL: DELETE_USER_GROUP_FAIL,\n    DELETE_USER_GROUP_SUCCESS: DELETE_USER_GROUP_SUCCESS,\n    USER_GROUP_UNASSIGN_ALL_MEMBERS: USER_GROUP_UNASSIGN_ALL_MEMBERS,\n    USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL: USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL,\n    USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS: USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS,\n    USER_GROUP_UNASSIGN_MEMBER: USER_GROUP_UNASSIGN_MEMBER,\n    USER_GROUP_UNASSIGN_MEMBER_FAIL: USER_GROUP_UNASSIGN_MEMBER_FAIL,\n    USER_GROUP_UNASSIGN_MEMBER_SUCCESS: USER_GROUP_UNASSIGN_MEMBER_SUCCESS,\n    USER_GROUP_UNASSIGN_PERMISSION: USER_GROUP_UNASSIGN_PERMISSION,\n    USER_GROUP_UNASSIGN_PERMISSION_FAIL: USER_GROUP_UNASSIGN_PERMISSION_FAIL,\n    USER_GROUP_UNASSIGN_PERMISSION_SUCCESS: USER_GROUP_UNASSIGN_PERMISSION_SUCCESS,\n    LoadUserGroup: LoadUserGroup,\n    LoadUserGroupFail: LoadUserGroupFail,\n    LoadUserGroupSuccess: LoadUserGroupSuccess,\n    LoadUserGroups: LoadUserGroups,\n    LoadUserGroupsFail: LoadUserGroupsFail,\n    LoadUserGroupsSuccess: LoadUserGroupsSuccess,\n    LoadPermissions: LoadPermissions$1,\n    LoadPermissionsFail: LoadPermissionsFail$1,\n    LoadPermissionsSuccess: LoadPermissionsSuccess$1,\n    LoadAvailableOrgCustomers: LoadAvailableOrgCustomers,\n    LoadAvailableOrgCustomersFail: LoadAvailableOrgCustomersFail,\n    LoadAvailableOrgCustomersSuccess: LoadAvailableOrgCustomersSuccess,\n    CreateUserGroup: CreateUserGroup,\n    CreateUserGroupFail: CreateUserGroupFail,\n    CreateUserGroupSuccess: CreateUserGroupSuccess,\n    AssignMember: AssignMember,\n    AssignMemberFail: AssignMemberFail,\n    AssignMemberSuccess: AssignMemberSuccess,\n    AssignPermission: AssignPermission,\n    AssignPermissionFail: AssignPermissionFail,\n    AssignPermissionSuccess: AssignPermissionSuccess,\n    UpdateUserGroup: UpdateUserGroup,\n    UpdateUserGroupFail: UpdateUserGroupFail,\n    UpdateUserGroupSuccess: UpdateUserGroupSuccess,\n    DeleteUserGroup: DeleteUserGroup,\n    DeleteUserGroupFail: DeleteUserGroupFail,\n    DeleteUserGroupSuccess: DeleteUserGroupSuccess,\n    UnassignMember: UnassignMember,\n    UnassignMemberFail: UnassignMemberFail,\n    UnassignMemberSuccess: UnassignMemberSuccess,\n    UnassignAllMembers: UnassignAllMembers,\n    UnassignAllMembersFail: UnassignAllMembersFail,\n    UnassignAllMembersSuccess: UnassignAllMembersSuccess,\n    UnassignPermission: UnassignPermission,\n    UnassignPermissionFail: UnassignPermissionFail,\n    UnassignPermissionSuccess: UnassignPermissionSuccess\n});\n\nconst LOAD_PERMISSION = '[Permission] Load Permission Data';\nconst LOAD_PERMISSION_FAIL = '[Permission] Load Permission Data Fail';\nconst LOAD_PERMISSION_SUCCESS = '[Permission] Load Permission Data Success';\nconst LOAD_PERMISSIONS = '[Permission] Load Permissions';\nconst LOAD_PERMISSIONS_FAIL = '[Permission] Load Permissions Fail';\nconst LOAD_PERMISSIONS_SUCCESS = '[Permission] Load Permissions Success';\nconst CREATE_PERMISSION = '[Permission] Create Permission';\nconst CREATE_PERMISSION_FAIL = '[Permission] Create Permission Fail';\nconst CREATE_PERMISSION_SUCCESS = '[Permission] Create Permission Success';\nconst UPDATE_PERMISSION = '[Permission] Update Permission';\nconst UPDATE_PERMISSION_FAIL = '[Permission] Update Permission Fail';\nconst UPDATE_PERMISSION_SUCCESS = '[Permission] Update Permission Success';\nconst LOAD_PERMISSION_TYPES = '[Permission Types] Load Permission Types';\nconst LOAD_PERMISSION_TYPES_FAIL = '[Permission Types] Load Permission Types Fail';\nconst LOAD_PERMISSION_TYPES_SUCCESS = '[Permission Types] Load Permission Types Success';\nclass LoadPermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionCode);\n        this.payload = payload;\n        this.type = LOAD_PERMISSION;\n    }\n}\nclass LoadPermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n        this.payload = payload;\n        this.type = LOAD_PERMISSION_FAIL;\n    }\n}\nclass LoadPermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, Array.isArray(payload)\n            ? payload.map((permission) => permission === null || permission === void 0 ? void 0 : permission.code)\n            : payload === null || payload === void 0 ? void 0 : payload.code);\n        this.payload = payload;\n        this.type = LOAD_PERMISSION_SUCCESS;\n    }\n}\nclass LoadPermissions extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_PERMISSIONS;\n    }\n}\nclass LoadPermissionsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n        this.payload = payload;\n        this.type = LOAD_PERMISSIONS_FAIL;\n    }\n}\nclass LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_PERMISSIONS_SUCCESS;\n    }\n}\nclass CreatePermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permission.code);\n        this.payload = payload;\n        this.type = CREATE_PERMISSION;\n    }\n}\nclass CreatePermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n        this.payload = payload;\n        this.type = CREATE_PERMISSION_FAIL;\n    }\n}\nclass CreatePermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = CREATE_PERMISSION_SUCCESS;\n    }\n}\nclass UpdatePermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permission.code);\n        this.payload = payload;\n        this.type = UPDATE_PERMISSION;\n    }\n}\nclass UpdatePermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_PERMISSION_FAIL;\n    }\n}\nclass UpdatePermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = UPDATE_PERMISSION_SUCCESS;\n    }\n}\nclass LoadPermissionTypes extends StateUtils.EntityLoadAction {\n    constructor() {\n        super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n        this.type = LOAD_PERMISSION_TYPES;\n    }\n}\nclass LoadPermissionTypesFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_TYPES_LIST, PERMISSION_TYPES, payload.error);\n        this.payload = payload;\n        this.type = LOAD_PERMISSION_TYPES_FAIL;\n    }\n}\nclass LoadPermissionTypesSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n        this.payload = payload;\n        this.type = LOAD_PERMISSION_TYPES_SUCCESS;\n    }\n}\n\nvar permission_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_PERMISSION: LOAD_PERMISSION,\n    LOAD_PERMISSION_FAIL: LOAD_PERMISSION_FAIL,\n    LOAD_PERMISSION_SUCCESS: LOAD_PERMISSION_SUCCESS,\n    LOAD_PERMISSIONS: LOAD_PERMISSIONS,\n    LOAD_PERMISSIONS_FAIL: LOAD_PERMISSIONS_FAIL,\n    LOAD_PERMISSIONS_SUCCESS: LOAD_PERMISSIONS_SUCCESS,\n    CREATE_PERMISSION: CREATE_PERMISSION,\n    CREATE_PERMISSION_FAIL: CREATE_PERMISSION_FAIL,\n    CREATE_PERMISSION_SUCCESS: CREATE_PERMISSION_SUCCESS,\n    UPDATE_PERMISSION: UPDATE_PERMISSION,\n    UPDATE_PERMISSION_FAIL: UPDATE_PERMISSION_FAIL,\n    UPDATE_PERMISSION_SUCCESS: UPDATE_PERMISSION_SUCCESS,\n    LOAD_PERMISSION_TYPES: LOAD_PERMISSION_TYPES,\n    LOAD_PERMISSION_TYPES_FAIL: LOAD_PERMISSION_TYPES_FAIL,\n    LOAD_PERMISSION_TYPES_SUCCESS: LOAD_PERMISSION_TYPES_SUCCESS,\n    LoadPermission: LoadPermission,\n    LoadPermissionFail: LoadPermissionFail,\n    LoadPermissionSuccess: LoadPermissionSuccess,\n    LoadPermissions: LoadPermissions,\n    LoadPermissionsFail: LoadPermissionsFail,\n    LoadPermissionsSuccess: LoadPermissionsSuccess,\n    CreatePermission: CreatePermission,\n    CreatePermissionFail: CreatePermissionFail,\n    CreatePermissionSuccess: CreatePermissionSuccess,\n    UpdatePermission: UpdatePermission,\n    UpdatePermissionFail: UpdatePermissionFail,\n    UpdatePermissionSuccess: UpdatePermissionSuccess,\n    LoadPermissionTypes: LoadPermissionTypes,\n    LoadPermissionTypesFail: LoadPermissionTypesFail,\n    LoadPermissionTypesSuccess: LoadPermissionTypesSuccess\n});\n\nconst LOAD_COST_CENTER = '[CostCenter] Load CostCenter Data';\nconst LOAD_COST_CENTER_FAIL = '[CostCenter] Load CostCenter Data Fail';\nconst LOAD_COST_CENTER_SUCCESS = '[CostCenter] Load CostCenter Data Success';\nconst LOAD_COST_CENTERS = '[CostCenter] Load CostCenters';\nconst LOAD_COST_CENTERS_FAIL = '[CostCenter] Load CostCenters Fail';\nconst LOAD_COST_CENTERS_SUCCESS = '[CostCenter] Load CostCenters Success';\nconst CREATE_COST_CENTER = '[CostCenter] Create CostCenter';\nconst CREATE_COST_CENTER_FAIL = '[CostCenter] Create CostCenter Fail';\nconst CREATE_COST_CENTER_SUCCESS = '[CostCenter] Create CostCenter Success';\nconst UPDATE_COST_CENTER = '[CostCenter] Update CostCenter';\nconst UPDATE_COST_CENTER_FAIL = '[CostCenter] Update CostCenter Fail';\nconst UPDATE_COST_CENTER_SUCCESS = '[CostCenter] Update CostCenter Success';\nconst LOAD_ASSIGNED_BUDGETS = '[CostCenter] Load Budgets';\nconst LOAD_ASSIGNED_BUDGETS_SUCCESS = '[CostCenter] Load Budgets success';\nconst LOAD_ASSIGNED_BUDGETS_FAIL = '[CostCenter] Load Budgets fail';\nconst ASSIGN_BUDGET = '[CostCenter] Assign Budget';\nconst ASSIGN_BUDGET_SUCCESS = '[CostCenter] Assign Budget success';\nconst ASSIGN_BUDGET_FAIL = '[CostCenter] Assign Budget fail';\nconst UNASSIGN_BUDGET = '[CostCenter] Unassign Budget';\nconst UNASSIGN_BUDGET_SUCCESS = '[CostCenter] Unassign Budget success';\nconst UNASSIGN_BUDGET_FAIL = '[CostCenter] Unassign Budget fail';\nclass LoadCostCenter extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenterCode);\n        this.payload = payload;\n        this.type = LOAD_COST_CENTER;\n    }\n}\nclass LoadCostCenterFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n        this.payload = payload;\n        this.type = LOAD_COST_CENTER_FAIL;\n    }\n}\nclass LoadCostCenterSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, Array.isArray(payload)\n            ? payload.map((costCenter) => costCenter === null || costCenter === void 0 ? void 0 : costCenter.code)\n            : payload === null || payload === void 0 ? void 0 : payload.code);\n        this.payload = payload;\n        this.type = LOAD_COST_CENTER_SUCCESS;\n    }\n}\nclass LoadCostCenters extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_COST_CENTERS;\n    }\n}\nclass LoadCostCentersFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n        this.payload = payload;\n        this.type = LOAD_COST_CENTERS_FAIL;\n    }\n}\nclass LoadCostCentersSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_COST_CENTERS_SUCCESS;\n    }\n}\nclass CreateCostCenter extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenter.code);\n        this.payload = payload;\n        this.type = CREATE_COST_CENTER;\n    }\n}\nclass CreateCostCenterFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n        this.payload = payload;\n        this.type = CREATE_COST_CENTER_FAIL;\n    }\n}\nclass CreateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = CREATE_COST_CENTER_SUCCESS;\n    }\n}\nclass UpdateCostCenter extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenter.code);\n        this.payload = payload;\n        this.type = UPDATE_COST_CENTER;\n    }\n}\nclass UpdateCostCenterFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_COST_CENTER_FAIL;\n    }\n}\nclass UpdateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(COST_CENTER_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = UPDATE_COST_CENTER_SUCCESS;\n    }\n}\nclass LoadAssignedBudgets extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode));\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_BUDGETS;\n    }\n}\nclass LoadAssignedBudgetsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode), payload.error);\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_BUDGETS_FAIL;\n    }\n}\nclass LoadAssignedBudgetsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(COST_CENTER_ASSIGNED_BUDGETS, StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode));\n        this.payload = payload;\n        this.type = LOAD_ASSIGNED_BUDGETS_SUCCESS;\n    }\n}\nclass AssignBudget extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode);\n        this.payload = payload;\n        this.type = ASSIGN_BUDGET;\n    }\n}\nclass AssignBudgetFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n        this.payload = payload;\n        this.type = ASSIGN_BUDGET_FAIL;\n    }\n}\nclass AssignBudgetSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = ASSIGN_BUDGET_SUCCESS;\n    }\n}\nclass UnassignBudget extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode);\n        this.payload = payload;\n        this.type = UNASSIGN_BUDGET;\n    }\n}\nclass UnassignBudgetFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n        this.payload = payload;\n        this.type = UNASSIGN_BUDGET_FAIL;\n    }\n}\nclass UnassignBudgetSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(BUDGET_ENTITIES, payload.code, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_BUDGET_SUCCESS;\n    }\n}\n\nvar costCenter_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_COST_CENTER: LOAD_COST_CENTER,\n    LOAD_COST_CENTER_FAIL: LOAD_COST_CENTER_FAIL,\n    LOAD_COST_CENTER_SUCCESS: LOAD_COST_CENTER_SUCCESS,\n    LOAD_COST_CENTERS: LOAD_COST_CENTERS,\n    LOAD_COST_CENTERS_FAIL: LOAD_COST_CENTERS_FAIL,\n    LOAD_COST_CENTERS_SUCCESS: LOAD_COST_CENTERS_SUCCESS,\n    CREATE_COST_CENTER: CREATE_COST_CENTER,\n    CREATE_COST_CENTER_FAIL: CREATE_COST_CENTER_FAIL,\n    CREATE_COST_CENTER_SUCCESS: CREATE_COST_CENTER_SUCCESS,\n    UPDATE_COST_CENTER: UPDATE_COST_CENTER,\n    UPDATE_COST_CENTER_FAIL: UPDATE_COST_CENTER_FAIL,\n    UPDATE_COST_CENTER_SUCCESS: UPDATE_COST_CENTER_SUCCESS,\n    LOAD_ASSIGNED_BUDGETS: LOAD_ASSIGNED_BUDGETS,\n    LOAD_ASSIGNED_BUDGETS_SUCCESS: LOAD_ASSIGNED_BUDGETS_SUCCESS,\n    LOAD_ASSIGNED_BUDGETS_FAIL: LOAD_ASSIGNED_BUDGETS_FAIL,\n    ASSIGN_BUDGET: ASSIGN_BUDGET,\n    ASSIGN_BUDGET_SUCCESS: ASSIGN_BUDGET_SUCCESS,\n    ASSIGN_BUDGET_FAIL: ASSIGN_BUDGET_FAIL,\n    UNASSIGN_BUDGET: UNASSIGN_BUDGET,\n    UNASSIGN_BUDGET_SUCCESS: UNASSIGN_BUDGET_SUCCESS,\n    UNASSIGN_BUDGET_FAIL: UNASSIGN_BUDGET_FAIL,\n    LoadCostCenter: LoadCostCenter,\n    LoadCostCenterFail: LoadCostCenterFail,\n    LoadCostCenterSuccess: LoadCostCenterSuccess,\n    LoadCostCenters: LoadCostCenters,\n    LoadCostCentersFail: LoadCostCentersFail,\n    LoadCostCentersSuccess: LoadCostCentersSuccess,\n    CreateCostCenter: CreateCostCenter,\n    CreateCostCenterFail: CreateCostCenterFail,\n    CreateCostCenterSuccess: CreateCostCenterSuccess,\n    UpdateCostCenter: UpdateCostCenter,\n    UpdateCostCenterFail: UpdateCostCenterFail,\n    UpdateCostCenterSuccess: UpdateCostCenterSuccess,\n    LoadAssignedBudgets: LoadAssignedBudgets,\n    LoadAssignedBudgetsFail: LoadAssignedBudgetsFail,\n    LoadAssignedBudgetsSuccess: LoadAssignedBudgetsSuccess,\n    AssignBudget: AssignBudget,\n    AssignBudgetFail: AssignBudgetFail,\n    AssignBudgetSuccess: AssignBudgetSuccess,\n    UnassignBudget: UnassignBudget,\n    UnassignBudgetFail: UnassignBudgetFail,\n    UnassignBudgetSuccess: UnassignBudgetSuccess\n});\n\nconst LOAD_B2B_USER = '[B2BUser] Load B2BUser Data';\nconst LOAD_B2B_USER_FAIL = '[B2BUser] Load B2BUser Data Fail';\nconst LOAD_B2B_USER_SUCCESS = '[B2BUser] Load B2BUser Data Success';\nconst CREATE_B2B_USER = '[B2BUser] Create B2BUser Data';\nconst CREATE_B2B_USER_FAIL = '[B2BUser] Create B2BUser Data Fail';\nconst CREATE_B2B_USER_SUCCESS = '[B2BUser] Create B2BUser Data Success';\nconst UPDATE_B2B_USER = '[B2BUser] Update B2BUser Data';\nconst UPDATE_B2B_USER_FAIL = '[B2BUser] Update B2BUser Data Fail';\nconst UPDATE_B2B_USER_SUCCESS = '[B2BUser] Update B2BUser Data Success';\nconst LOAD_B2B_USERS = '[B2BUser] Load B2BUsers';\nconst LOAD_B2B_USERS_FAIL = '[B2BUser] Load B2BUsers Fail';\nconst LOAD_B2B_USERS_SUCCESS = '[B2BUser] Load B2BUsers Success';\nconst LOAD_B2B_USER_APPROVERS = '[B2BUser] Load B2BUser Approvers';\nconst LOAD_B2B_USER_APPROVERS_FAIL = '[B2BUser] Load B2BUser Approvers Fail';\nconst LOAD_B2B_USER_APPROVERS_SUCCESS = '[B2BUser] Load B2BUser Approvers Success';\nconst ASSIGN_B2B_USER_APPROVER = '[B2BUser] Assign B2BUser Approver';\nconst ASSIGN_B2B_USER_APPROVER_FAIL = '[B2BUser] Assign B2BUser Approver Fail';\nconst ASSIGN_B2B_USER_APPROVER_SUCCESS = '[B2BUser] Assign B2BUser Approver Success';\nconst UNASSIGN_B2B_USER_APPROVER = '[B2BUser] Unassign B2BUser Approver';\nconst UNASSIGN_B2B_USER_APPROVER_FAIL = '[B2BUser] Unassign B2BUser Approver Fail';\nconst UNASSIGN_B2B_USER_APPROVER_SUCCESS = '[B2BUser] Unassign B2BUser Approver Success';\nconst LOAD_B2B_USER_PERMISSIONS = '[B2BUser] Load B2BUser Permissions';\nconst LOAD_B2B_USER_PERMISSIONS_FAIL = '[B2BUser] Load B2BUser Permissions Fail';\nconst LOAD_B2B_USER_PERMISSIONS_SUCCESS = '[B2BUser] Load B2BUser Permissions Success';\nconst ASSIGN_B2B_USER_PERMISSION = '[B2BUser] Assign B2BUser Permission';\nconst ASSIGN_B2B_USER_PERMISSION_FAIL = '[B2BUser] Assign B2BUser Permission Fail';\nconst ASSIGN_B2B_USER_PERMISSION_SUCCESS = '[B2BUser] Assign B2BUser Permission Success';\nconst UNASSIGN_B2B_USER_PERMISSION = '[B2BUser] Unassign B2BUser Permission';\nconst UNASSIGN_B2B_USER_PERMISSION_FAIL = '[B2BUser] Unassign B2BUser Permission Fail';\nconst UNASSIGN_B2B_USER_PERMISSION_SUCCESS = '[B2BUser] Unassign B2BUser Permission Success';\nconst LOAD_B2B_USER_USER_GROUPS = '[B2BUser] Load B2BUser User Groups';\nconst LOAD_B2B_USER_USER_GROUPS_FAIL = '[B2BUser] Load B2BUser User Groups Fail';\nconst LOAD_B2B_USER_USER_GROUPS_SUCCESS = '[B2BUser] Load B2BUser User Groups Success';\nconst ASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Assign B2BUser User Group';\nconst ASSIGN_B2B_USER_USER_GROUP_FAIL = '[B2BUser] Assign B2BUser User Group Fail';\nconst ASSIGN_B2B_USER_USER_GROUP_SUCCESS = '[B2BUser] Assign B2BUser User Group Success';\nconst UNASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Unassign B2BUser User Group';\nconst UNASSIGN_B2B_USER_USER_GROUP_FAIL = '[B2BUser] Unassign B2BUser User Group Fail';\nconst UNASSIGN_B2B_USER_USER_GROUP_SUCCESS = '[B2BUser] Unassign B2BUser User Group Success';\nclass LoadB2BUser extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER;\n    }\n}\nclass LoadB2BUserFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_FAIL;\n    }\n}\nclass LoadB2BUserSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, Array.isArray(payload)\n            ? payload.map((orgUnitCustomer) => orgUnitCustomer === null || orgUnitCustomer === void 0 ? void 0 : orgUnitCustomer.customerId)\n            : payload === null || payload === void 0 ? void 0 : payload.customerId);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_SUCCESS;\n    }\n}\nclass CreateB2BUser extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n        this.payload = payload;\n        this.type = CREATE_B2B_USER;\n    }\n}\nclass CreateB2BUserFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = CREATE_B2B_USER_FAIL;\n    }\n}\nclass CreateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload);\n        this.payload = payload;\n        this.type = CREATE_B2B_USER_SUCCESS;\n    }\n}\nclass UpdateB2BUser extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n        this.payload = payload;\n        this.type = UPDATE_B2B_USER;\n    }\n}\nclass UpdateB2BUserFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = UPDATE_B2B_USER_FAIL;\n    }\n}\nclass UpdateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.customerId, payload);\n        this.payload = payload;\n        this.type = UPDATE_B2B_USER_SUCCESS;\n    }\n}\nclass LoadB2BUsers extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_B2B_USERS;\n    }\n}\nclass LoadB2BUsersFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_LIST, StateUtils.serializeSearchConfig(payload.params), payload.error);\n        this.payload = payload;\n        this.type = LOAD_B2B_USERS_FAIL;\n    }\n}\nclass LoadB2BUsersSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n        this.payload = payload;\n        this.type = LOAD_B2B_USERS_SUCCESS;\n    }\n}\nclass LoadB2BUserApprovers extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_APPROVERS;\n    }\n}\nclass LoadB2BUserApproversFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId), payload.error);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_APPROVERS_FAIL;\n    }\n}\nclass LoadB2BUserApproversSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_APPROVERS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_APPROVERS_SUCCESS;\n    }\n}\nclass AssignB2BUserApprover extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_APPROVER;\n    }\n}\nclass AssignB2BUserApproverFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_APPROVER_FAIL;\n    }\n}\nclass AssignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId, payload);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_APPROVER_SUCCESS;\n    }\n}\nclass UnassignB2BUserApprover extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_APPROVER;\n    }\n}\nclass UnassignB2BUserApproverFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_APPROVER_FAIL;\n    }\n}\nclass UnassignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_ENTITIES, payload.approverId, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_APPROVER_SUCCESS;\n    }\n}\nclass LoadB2BUserPermissions extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_PERMISSIONS;\n    }\n}\nclass LoadB2BUserPermissionsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_PERMISSIONS, payload.orgCustomerId, payload.error);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_PERMISSIONS_FAIL;\n    }\n}\nclass LoadB2BUserPermissionsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_PERMISSIONS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_PERMISSIONS_SUCCESS;\n    }\n}\nclass AssignB2BUserPermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_PERMISSION;\n    }\n}\nclass AssignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_PERMISSION_FAIL;\n    }\n}\nclass AssignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId, payload);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_PERMISSION_SUCCESS;\n    }\n}\nclass UnassignB2BUserPermission extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_PERMISSION;\n    }\n}\nclass UnassignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_PERMISSION_FAIL;\n    }\n}\nclass UnassignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(PERMISSION_ENTITIES, payload.permissionId, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_PERMISSION_SUCCESS;\n    }\n}\nclass LoadB2BUserUserGroups extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_USER_GROUPS;\n    }\n}\nclass LoadB2BUserUserGroupsFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId), payload.error);\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_USER_GROUPS_FAIL;\n    }\n}\nclass LoadB2BUserUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(B2B_USER_USER_GROUPS, StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId));\n        this.payload = payload;\n        this.type = LOAD_B2B_USER_USER_GROUPS_SUCCESS;\n    }\n}\nclass AssignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_USER_GROUP;\n    }\n}\nclass AssignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_USER_GROUP_FAIL;\n    }\n}\nclass AssignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = ASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n    }\n}\nclass UnassignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_USER_GROUP;\n    }\n}\nclass UnassignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_USER_GROUP_FAIL;\n    }\n}\nclass UnassignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n    constructor(payload) {\n        super(USER_GROUP_ENTITIES, payload.uid, payload);\n        this.payload = payload;\n        this.type = UNASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n    }\n}\n\nvar b2bUser_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    LOAD_B2B_USER: LOAD_B2B_USER,\n    LOAD_B2B_USER_FAIL: LOAD_B2B_USER_FAIL,\n    LOAD_B2B_USER_SUCCESS: LOAD_B2B_USER_SUCCESS,\n    CREATE_B2B_USER: CREATE_B2B_USER,\n    CREATE_B2B_USER_FAIL: CREATE_B2B_USER_FAIL,\n    CREATE_B2B_USER_SUCCESS: CREATE_B2B_USER_SUCCESS,\n    UPDATE_B2B_USER: UPDATE_B2B_USER,\n    UPDATE_B2B_USER_FAIL: UPDATE_B2B_USER_FAIL,\n    UPDATE_B2B_USER_SUCCESS: UPDATE_B2B_USER_SUCCESS,\n    LOAD_B2B_USERS: LOAD_B2B_USERS,\n    LOAD_B2B_USERS_FAIL: LOAD_B2B_USERS_FAIL,\n    LOAD_B2B_USERS_SUCCESS: LOAD_B2B_USERS_SUCCESS,\n    LOAD_B2B_USER_APPROVERS: LOAD_B2B_USER_APPROVERS,\n    LOAD_B2B_USER_APPROVERS_FAIL: LOAD_B2B_USER_APPROVERS_FAIL,\n    LOAD_B2B_USER_APPROVERS_SUCCESS: LOAD_B2B_USER_APPROVERS_SUCCESS,\n    ASSIGN_B2B_USER_APPROVER: ASSIGN_B2B_USER_APPROVER,\n    ASSIGN_B2B_USER_APPROVER_FAIL: ASSIGN_B2B_USER_APPROVER_FAIL,\n    ASSIGN_B2B_USER_APPROVER_SUCCESS: ASSIGN_B2B_USER_APPROVER_SUCCESS,\n    UNASSIGN_B2B_USER_APPROVER: UNASSIGN_B2B_USER_APPROVER,\n    UNASSIGN_B2B_USER_APPROVER_FAIL: UNASSIGN_B2B_USER_APPROVER_FAIL,\n    UNASSIGN_B2B_USER_APPROVER_SUCCESS: UNASSIGN_B2B_USER_APPROVER_SUCCESS,\n    LOAD_B2B_USER_PERMISSIONS: LOAD_B2B_USER_PERMISSIONS,\n    LOAD_B2B_USER_PERMISSIONS_FAIL: LOAD_B2B_USER_PERMISSIONS_FAIL,\n    LOAD_B2B_USER_PERMISSIONS_SUCCESS: LOAD_B2B_USER_PERMISSIONS_SUCCESS,\n    ASSIGN_B2B_USER_PERMISSION: ASSIGN_B2B_USER_PERMISSION,\n    ASSIGN_B2B_USER_PERMISSION_FAIL: ASSIGN_B2B_USER_PERMISSION_FAIL,\n    ASSIGN_B2B_USER_PERMISSION_SUCCESS: ASSIGN_B2B_USER_PERMISSION_SUCCESS,\n    UNASSIGN_B2B_USER_PERMISSION: UNASSIGN_B2B_USER_PERMISSION,\n    UNASSIGN_B2B_USER_PERMISSION_FAIL: UNASSIGN_B2B_USER_PERMISSION_FAIL,\n    UNASSIGN_B2B_USER_PERMISSION_SUCCESS: UNASSIGN_B2B_USER_PERMISSION_SUCCESS,\n    LOAD_B2B_USER_USER_GROUPS: LOAD_B2B_USER_USER_GROUPS,\n    LOAD_B2B_USER_USER_GROUPS_FAIL: LOAD_B2B_USER_USER_GROUPS_FAIL,\n    LOAD_B2B_USER_USER_GROUPS_SUCCESS: LOAD_B2B_USER_USER_GROUPS_SUCCESS,\n    ASSIGN_B2B_USER_USER_GROUP: ASSIGN_B2B_USER_USER_GROUP,\n    ASSIGN_B2B_USER_USER_GROUP_FAIL: ASSIGN_B2B_USER_USER_GROUP_FAIL,\n    ASSIGN_B2B_USER_USER_GROUP_SUCCESS: ASSIGN_B2B_USER_USER_GROUP_SUCCESS,\n    UNASSIGN_B2B_USER_USER_GROUP: UNASSIGN_B2B_USER_USER_GROUP,\n    UNASSIGN_B2B_USER_USER_GROUP_FAIL: UNASSIGN_B2B_USER_USER_GROUP_FAIL,\n    UNASSIGN_B2B_USER_USER_GROUP_SUCCESS: UNASSIGN_B2B_USER_USER_GROUP_SUCCESS,\n    LoadB2BUser: LoadB2BUser,\n    LoadB2BUserFail: LoadB2BUserFail,\n    LoadB2BUserSuccess: LoadB2BUserSuccess,\n    CreateB2BUser: CreateB2BUser,\n    CreateB2BUserFail: CreateB2BUserFail,\n    CreateB2BUserSuccess: CreateB2BUserSuccess,\n    UpdateB2BUser: UpdateB2BUser,\n    UpdateB2BUserFail: UpdateB2BUserFail,\n    UpdateB2BUserSuccess: UpdateB2BUserSuccess,\n    LoadB2BUsers: LoadB2BUsers,\n    LoadB2BUsersFail: LoadB2BUsersFail,\n    LoadB2BUsersSuccess: LoadB2BUsersSuccess,\n    LoadB2BUserApprovers: LoadB2BUserApprovers,\n    LoadB2BUserApproversFail: LoadB2BUserApproversFail,\n    LoadB2BUserApproversSuccess: LoadB2BUserApproversSuccess,\n    AssignB2BUserApprover: AssignB2BUserApprover,\n    AssignB2BUserApproverFail: AssignB2BUserApproverFail,\n    AssignB2BUserApproverSuccess: AssignB2BUserApproverSuccess,\n    UnassignB2BUserApprover: UnassignB2BUserApprover,\n    UnassignB2BUserApproverFail: UnassignB2BUserApproverFail,\n    UnassignB2BUserApproverSuccess: UnassignB2BUserApproverSuccess,\n    LoadB2BUserPermissions: LoadB2BUserPermissions,\n    LoadB2BUserPermissionsFail: LoadB2BUserPermissionsFail,\n    LoadB2BUserPermissionsSuccess: LoadB2BUserPermissionsSuccess,\n    AssignB2BUserPermission: AssignB2BUserPermission,\n    AssignB2BUserPermissionFail: AssignB2BUserPermissionFail,\n    AssignB2BUserPermissionSuccess: AssignB2BUserPermissionSuccess,\n    UnassignB2BUserPermission: UnassignB2BUserPermission,\n    UnassignB2BUserPermissionFail: UnassignB2BUserPermissionFail,\n    UnassignB2BUserPermissionSuccess: UnassignB2BUserPermissionSuccess,\n    LoadB2BUserUserGroups: LoadB2BUserUserGroups,\n    LoadB2BUserUserGroupsFail: LoadB2BUserUserGroupsFail,\n    LoadB2BUserUserGroupsSuccess: LoadB2BUserUserGroupsSuccess,\n    AssignB2BUserUserGroup: AssignB2BUserUserGroup,\n    AssignB2BUserUserGroupFail: AssignB2BUserUserGroupFail,\n    AssignB2BUserUserGroupSuccess: AssignB2BUserUserGroupSuccess,\n    UnassignB2BUserUserGroup: UnassignB2BUserUserGroup,\n    UnassignB2BUserUserGroupFail: UnassignB2BUserUserGroupFail,\n    UnassignB2BUserUserGroupSuccess: UnassignB2BUserUserGroupSuccess\n});\n\nconst CLEAR_ORGANIZATION_DATA = '[Organization] Clear Data';\nclass OrganizationClearData {\n    constructor() {\n        this.type = CLEAR_ORGANIZATION_DATA;\n    }\n}\n\nvar organization_action = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CLEAR_ORGANIZATION_DATA: CLEAR_ORGANIZATION_DATA,\n    OrganizationClearData: OrganizationClearData\n});\n\nclass BudgetEffects {\n    constructor(actions$, budgetConnector) {\n        this.actions$ = actions$;\n        this.budgetConnector = budgetConnector;\n        this.loadBudget$ = this.actions$.pipe(ofType(LOAD_BUDGET), map((action) => action.payload), switchMap(({ userId, budgetCode }) => {\n            return this.budgetConnector.get(userId, budgetCode).pipe(map((budget) => {\n                return new LoadBudgetSuccess([budget]);\n            }), catchError((error) => of(new LoadBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadBudgets$ = this.actions$.pipe(ofType(LOAD_BUDGETS), map((action) => action.payload), switchMap((payload) => this.budgetConnector.getList(payload.userId, payload.params).pipe(switchMap((budgets) => {\n            const { values, page } = StateUtils.normalizeListPage(budgets, 'code');\n            return [\n                new LoadBudgetSuccess(values),\n                new LoadBudgetsSuccess({\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadBudgetsFail({\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))));\n        this.createBudget$ = this.actions$.pipe(ofType(CREATE_BUDGET), map((action) => action.payload), switchMap((payload) => this.budgetConnector.create(payload.userId, payload.budget).pipe(switchMap((data) => [\n            new CreateBudgetSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreateBudgetFail({\n                budgetCode: payload.budget.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateBudget$ = this.actions$.pipe(ofType(UPDATE_BUDGET), map((action) => action.payload), switchMap((payload) => this.budgetConnector\n            .update(payload.userId, payload.budgetCode, payload.budget)\n            .pipe(switchMap((data) => [\n            new UpdateBudgetSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdateBudgetFail({\n                budgetCode: payload.budget.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n    }\n}\nBudgetEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetEffects, deps: [{ token: i1$1.Actions }, { token: BudgetConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nBudgetEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetEffects });\n__decorate([\n    Effect()\n], BudgetEffects.prototype, \"loadBudget$\", void 0);\n__decorate([\n    Effect()\n], BudgetEffects.prototype, \"loadBudgets$\", void 0);\n__decorate([\n    Effect()\n], BudgetEffects.prototype, \"createBudget$\", void 0);\n__decorate([\n    Effect()\n], BudgetEffects.prototype, \"updateBudget$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: BudgetConnector }]; }, propDecorators: { loadBudget$: [], loadBudgets$: [], createBudget$: [], updateBudget$: [] } });\n\nclass OrgUnitEffects {\n    // @Effect()\n    // loadAddress$: Observable<\n    //   | OrgUnitActions.LoadAddressSuccess\n    //   | OrgUnitActions.LoadAddressesSuccess\n    //   | OrgUnitActions.LoadAddressesFail\n    // > = this.actions$.pipe(\n    //   ofType(OrgUnitActions.LOAD_ADDRESSES),\n    //   map((action: OrgUnitActions.LoadAddresses) => action.payload),\n    //   switchMap(({ userId, orgUnitId }) => {\n    //     return this.orgUnitConnector.getAddresses(userId, orgUnitId).pipe(\n    //       switchMap((addresses: EntitiesModel<B2BAddress>) => {\n    //         const { values, page } = StateUtils.normalizeListPage(addresses, 'id');\n    //         return [\n    //           new OrgUnitActions.LoadAddressSuccess(values),\n    //           new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n    //         ];\n    //       }),\n    //       catchError(error =>\n    //         of(\n    //           new OrgUnitActions.LoadAddressesFail({\n    //             orgUnitId,\n    //             error: normalizeHttpError(error),\n    //           })\n    //         )\n    //       )\n    //     );\n    //   })\n    // );\n    constructor(actions$, orgUnitConnector) {\n        this.actions$ = actions$;\n        this.orgUnitConnector = orgUnitConnector;\n        this.loadOrgUnit$ = this.actions$.pipe(ofType(LOAD_ORG_UNIT), map((action) => action.payload), switchMap(({ userId, orgUnitId }) => {\n            return this.orgUnitConnector.get(userId, orgUnitId).pipe(switchMap((orgUnit) => {\n                const { values, page } = StateUtils.normalizeListPage({ values: orgUnit.addresses }, 'id');\n                return [\n                    new LoadOrgUnitSuccess([orgUnit]),\n                    new LoadAddressSuccess(values),\n                    new LoadAddressesSuccess({ page, orgUnitId }),\n                ];\n            }), catchError((error) => of(new LoadOrgUnitFail({\n                orgUnitId,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadAvailableOrgUnits$ = this.actions$.pipe(ofType(LOAD_UNIT_NODES), map((action) => action.payload), switchMap((payload) => this.orgUnitConnector.getList(payload.userId).pipe(map((orgUnitsList) => new LoadOrgUnitNodesSuccess(orgUnitsList)), catchError((error) => of(new LoadOrgUnitNodesFail({\n            error: normalizeHttpError(error),\n        }))))));\n        this.createUnit$ = this.actions$.pipe(ofType(CREATE_ORG_UNIT), map((action) => action.payload), switchMap((payload) => this.orgUnitConnector.create(payload.userId, payload.unit).pipe(switchMap((data) => [\n            new CreateUnitSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreateUnitFail({\n                unitCode: payload.unit.uid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateUnit$ = this.actions$.pipe(ofType(UPDATE_ORG_UNIT), map((action) => action.payload), switchMap((payload) => this.orgUnitConnector\n            .update(payload.userId, payload.unitCode, payload.unit)\n            .pipe(switchMap((_data) => [\n            // Workaround for empty response\n            new UpdateUnitSuccess(payload.unit),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdateUnitFail({\n                unitCode: payload.unit.uid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.loadTree$ = this.actions$.pipe(ofType(LOAD_UNIT_TREE), map((action) => action.payload), switchMap(({ userId }) => {\n            return this.orgUnitConnector.getTree(userId).pipe(map((orgUnit) => new LoadTreeSuccess(orgUnit)), catchError((error) => of(new LoadTreeFail({\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadApprovalProcesses$ = this.actions$.pipe(ofType(LOAD_APPROVAL_PROCESSES), map((action) => action.payload), switchMap(({ userId }) => {\n            return this.orgUnitConnector.getApprovalProcesses(userId).pipe(map((approvalProcesses) => new LoadApprovalProcessesSuccess(approvalProcesses)), catchError((error) => of(new LoadApprovalProcessesFail({\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadUsers$ = this.actions$.pipe(ofType(LOAD_ASSIGNED_USERS), map((action) => action.payload), groupBy(({ orgUnitId, roleId, params }) => StateUtils.serializeParams([orgUnitId, roleId], params)), mergeMap((group) => group.pipe(switchMap(({ userId, orgUnitId, roleId, params }) => {\n            return this.orgUnitConnector\n                .getUsers(userId, orgUnitId, roleId, params)\n                .pipe(switchMap((users) => {\n                const { values, page } = StateUtils.normalizeListPage(users, 'customerId');\n                return [\n                    new LoadB2BUserSuccess(values),\n                    new LoadAssignedUsersSuccess({\n                        orgUnitId,\n                        roleId,\n                        page,\n                        params,\n                    }),\n                ];\n            }), catchError((error) => of(new LoadAssignedUsersFail({\n                orgUnitId,\n                roleId,\n                params,\n                error: normalizeHttpError(error),\n            }))));\n        }))));\n        this.assignRoleToUser = this.actions$.pipe(ofType(ASSIGN_ROLE), map((action) => action.payload), switchMap(({ userId, orgCustomerId, roleId }) => this.orgUnitConnector.assignRole(userId, orgCustomerId, roleId).pipe(map(() => new AssignRoleSuccess({\n            uid: orgCustomerId,\n            roleId,\n            selected: true,\n        })), catchError((error) => of(new AssignRoleFail({\n            orgCustomerId,\n            error: normalizeHttpError(error),\n        }))))));\n        this.unassignRoleToUser$ = this.actions$.pipe(ofType(UNASSIGN_ROLE), map((action) => action.payload), switchMap(({ userId, orgCustomerId, roleId }) => this.orgUnitConnector.unassignRole(userId, orgCustomerId, roleId).pipe(map(() => new UnassignRoleSuccess({\n            uid: orgCustomerId,\n            roleId,\n            selected: false,\n        })), catchError((error) => of(new UnassignRoleFail({\n            orgCustomerId,\n            error: normalizeHttpError(error),\n        }))))));\n        this.assignApprover = this.actions$.pipe(ofType(ASSIGN_APPROVER), map((action) => action.payload), mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) => this.orgUnitConnector\n            .assignApprover(userId, orgUnitId, orgCustomerId, roleId)\n            .pipe(switchMap(() => [\n            new AssignApproverSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: true,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignApproverFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignApprover = this.actions$.pipe(ofType(UNASSIGN_APPROVER), map((action) => action.payload), mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) => this.orgUnitConnector\n            .unassignApprover(userId, orgUnitId, orgCustomerId, roleId)\n            .pipe(switchMap(() => [\n            new UnassignApproverSuccess({\n                uid: orgCustomerId,\n                roleId,\n                selected: false,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignApproverFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.createAddress$ = this.actions$.pipe(ofType(CREATE_ADDRESS), map((action) => action.payload), switchMap((payload) => this.orgUnitConnector\n            .createAddress(payload.userId, payload.orgUnitId, payload.address)\n            .pipe(switchMap((data) => [\n            new CreateAddressSuccess(data),\n            new CreateAddressSuccess({ id: null }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreateAddressFail({\n                addressId: payload.address.id,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateAddress$ = this.actions$.pipe(ofType(UPDATE_ADDRESS), map((action) => action.payload), switchMap(({ userId, orgUnitId, addressId, address }) => this.orgUnitConnector\n            .updateAddress(userId, orgUnitId, addressId, address)\n            .pipe(switchMap(() => [\n            // commented out due to no response from backend on PATCH request\n            // new OrgUnitActions.UpdateAddressSuccess(data),\n            new UpdateAddressSuccess(address),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdateAddressFail({\n                addressId: address.id,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.deleteAddress$ = this.actions$.pipe(ofType(DELETE_ADDRESS), map((action) => action.payload), switchMap((payload) => this.orgUnitConnector\n            .deleteAddress(payload.userId, payload.orgUnitId, payload.addressId)\n            .pipe(switchMap(() => [\n            new DeleteAddressSuccess({ id: payload.addressId }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new DeleteAddressFail({\n                addressId: payload.addressId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n    }\n}\nOrgUnitEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitEffects, deps: [{ token: i1$1.Actions }, { token: OrgUnitConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nOrgUnitEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitEffects });\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"loadOrgUnit$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"loadAvailableOrgUnits$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"createUnit$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"updateUnit$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"loadTree$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"loadApprovalProcesses$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"loadUsers$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"assignRoleToUser\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"unassignRoleToUser$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"assignApprover\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"unassignApprover\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"createAddress$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"updateAddress$\", void 0);\n__decorate([\n    Effect()\n], OrgUnitEffects.prototype, \"deleteAddress$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: OrgUnitConnector }]; }, propDecorators: { loadOrgUnit$: [], loadAvailableOrgUnits$: [], createUnit$: [], updateUnit$: [], loadTree$: [], loadApprovalProcesses$: [], loadUsers$: [], assignRoleToUser: [], unassignRoleToUser$: [], assignApprover: [], unassignApprover: [], createAddress$: [], updateAddress$: [], deleteAddress$: [] } });\n\nclass PermissionEffects {\n    constructor(actions$, permissionConnector) {\n        this.actions$ = actions$;\n        this.permissionConnector = permissionConnector;\n        this.loadPermission$ = this.actions$.pipe(ofType(LOAD_PERMISSION), map((action) => action.payload), switchMap(({ userId, permissionCode }) => {\n            return this.permissionConnector.get(userId, permissionCode).pipe(map((permission) => {\n                return new LoadPermissionSuccess([permission]);\n            }), catchError((error) => of(new LoadPermissionFail({\n                permissionCode,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadPermissions$ = this.actions$.pipe(ofType(LOAD_PERMISSIONS), map((action) => action.payload), switchMap((payload) => this.permissionConnector.getList(payload.userId, payload.params).pipe(switchMap((permissions) => {\n            const { values, page } = StateUtils.normalizeListPage(permissions, 'code');\n            return [\n                new LoadPermissionSuccess(values),\n                new LoadPermissionsSuccess({\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadPermissionsFail({\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))));\n        this.createPermission$ = this.actions$.pipe(ofType(CREATE_PERMISSION), map((action) => action.payload), switchMap((payload) => this.permissionConnector.create(payload.userId, payload.permission).pipe(switchMap((data) => [\n            new CreatePermissionSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreatePermissionFail({\n                permissionCode: payload.permission.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updatePermission$ = this.actions$.pipe(ofType(UPDATE_PERMISSION), map((action) => action.payload), switchMap((payload) => this.permissionConnector\n            .update(payload.userId, payload.permissionCode, payload.permission)\n            .pipe(switchMap((data) => [\n            new UpdatePermissionSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdatePermissionFail({\n                permissionCode: payload.permission.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.loadPermissionTypes$ = this.actions$.pipe(ofType(LOAD_PERMISSION_TYPES), switchMap(() => this.permissionConnector.getTypes().pipe(map((permissionTypeList) => new LoadPermissionTypesSuccess(permissionTypeList)), catchError((error) => of(new LoadPermissionTypesFail({\n            error: normalizeHttpError(error),\n        }))))));\n    }\n}\nPermissionEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionEffects, deps: [{ token: i1$1.Actions }, { token: PermissionConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nPermissionEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionEffects });\n__decorate([\n    Effect()\n], PermissionEffects.prototype, \"loadPermission$\", void 0);\n__decorate([\n    Effect()\n], PermissionEffects.prototype, \"loadPermissions$\", void 0);\n__decorate([\n    Effect()\n], PermissionEffects.prototype, \"createPermission$\", void 0);\n__decorate([\n    Effect()\n], PermissionEffects.prototype, \"updatePermission$\", void 0);\n__decorate([\n    Effect()\n], PermissionEffects.prototype, \"loadPermissionTypes$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: PermissionConnector }]; }, propDecorators: { loadPermission$: [], loadPermissions$: [], createPermission$: [], updatePermission$: [], loadPermissionTypes$: [] } });\n\nclass CostCenterEffects {\n    constructor(actions$, costCenterConnector) {\n        this.actions$ = actions$;\n        this.costCenterConnector = costCenterConnector;\n        this.loadCostCenter$ = this.actions$.pipe(ofType(LOAD_COST_CENTER), map((action) => action.payload), switchMap(({ userId, costCenterCode }) => {\n            return this.costCenterConnector.get(userId, costCenterCode).pipe(map((costCenter) => {\n                return new LoadCostCenterSuccess([costCenter]);\n            }), catchError((error) => of(new LoadCostCenterFail({\n                costCenterCode,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadCostCenters$ = this.actions$.pipe(ofType(LOAD_COST_CENTERS), map((action) => action.payload), switchMap((payload) => this.costCenterConnector.getList(payload.userId, payload.params).pipe(switchMap((costCenters) => {\n            const { values, page } = StateUtils.normalizeListPage(costCenters, 'code');\n            return [\n                new LoadCostCenterSuccess(values),\n                new LoadCostCentersSuccess({\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadCostCentersFail({\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))));\n        this.createCostCenter$ = this.actions$.pipe(ofType(CREATE_COST_CENTER), map((action) => action.payload), switchMap((payload) => this.costCenterConnector.create(payload.userId, payload.costCenter).pipe(switchMap((data) => [\n            new CreateCostCenterSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreateCostCenterFail({\n                costCenterCode: payload.costCenter.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateCostCenter$ = this.actions$.pipe(ofType(UPDATE_COST_CENTER), map((action) => action.payload), switchMap((payload) => this.costCenterConnector\n            .update(payload.userId, payload.costCenterCode, payload.costCenter)\n            .pipe(switchMap((data) => [\n            new UpdateCostCenterSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdateCostCenterFail({\n                costCenterCode: payload.costCenter.code,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.loadAssignedBudgets$ = this.actions$.pipe(ofType(LOAD_ASSIGNED_BUDGETS), map((action) => action.payload), groupBy(({ costCenterCode, params }) => StateUtils.serializeParams(costCenterCode, params)), mergeMap((group) => group.pipe(switchMap(({ userId, costCenterCode, params }) => this.costCenterConnector\n            .getBudgets(userId, costCenterCode, params)\n            .pipe(switchMap((budgets) => {\n            const { values, page } = StateUtils.normalizeListPage(budgets, 'code');\n            return [\n                new LoadBudgetSuccess(values),\n                new LoadAssignedBudgetsSuccess({\n                    costCenterCode,\n                    page,\n                    params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadAssignedBudgetsFail({\n            costCenterCode,\n            params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.assignBudgetToCostCenter$ = this.actions$.pipe(ofType(ASSIGN_BUDGET), map((action) => action.payload), mergeMap(({ userId, costCenterCode, budgetCode }) => this.costCenterConnector\n            .assignBudget(userId, costCenterCode, budgetCode)\n            .pipe(switchMap(() => [\n            new AssignBudgetSuccess({\n                code: budgetCode,\n                selected: true,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignBudgetToCostCenter$ = this.actions$.pipe(ofType(UNASSIGN_BUDGET), map((action) => action.payload), mergeMap(({ userId, costCenterCode, budgetCode }) => this.costCenterConnector\n            .unassignBudget(userId, costCenterCode, budgetCode)\n            .pipe(switchMap(() => [\n            new UnassignBudgetSuccess({\n                code: budgetCode,\n                selected: false,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n    }\n}\nCostCenterEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterEffects, deps: [{ token: i1$1.Actions }, { token: CostCenterConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nCostCenterEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterEffects });\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"loadCostCenter$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"loadCostCenters$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"createCostCenter$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"updateCostCenter$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"loadAssignedBudgets$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"assignBudgetToCostCenter$\", void 0);\n__decorate([\n    Effect()\n], CostCenterEffects.prototype, \"unassignBudgetToCostCenter$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: CostCenterConnector }]; }, propDecorators: { loadCostCenter$: [], loadCostCenters$: [], createCostCenter$: [], updateCostCenter$: [], loadAssignedBudgets$: [], assignBudgetToCostCenter$: [], unassignBudgetToCostCenter$: [] } });\n\nclass B2BUserEffects {\n    constructor(actions$, b2bUserConnector, routingService, userService, userIdService) {\n        this.actions$ = actions$;\n        this.b2bUserConnector = b2bUserConnector;\n        this.routingService = routingService;\n        this.userService = userService;\n        this.userIdService = userIdService;\n        this.loadB2BUser$ = this.actions$.pipe(ofType(LOAD_B2B_USER), map((action) => action.payload), switchMap(({ userId, orgCustomerId }) => {\n            return this.b2bUserConnector.get(userId, orgCustomerId).pipe(map((b2bUser) => {\n                return new LoadB2BUserSuccess([b2bUser]);\n            }), catchError((error) => of(new LoadB2BUserFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.createB2BUser$ = this.actions$.pipe(ofType(CREATE_B2B_USER), map((action) => action.payload), switchMap(({ userId, orgCustomer }) => this.b2bUserConnector.create(userId, orgCustomer).pipe(switchMap((data) => {\n            const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n            // TODO Workaround for not known customerId while user creation (redireciton)\n            return this.routingService.getRouterState().pipe(take(1), tap((route) => this.redirectToDetails(route, data)), switchMap(() => {\n                const successActions = [\n                    new CreateB2BUserSuccess(data),\n                    new CreateB2BUserSuccess({ customerId: null }),\n                    new OrganizationClearData(),\n                ];\n                if (isAssignedToApprovers) {\n                    successActions.splice(1, 0, new AssignApprover({\n                        userId,\n                        orgUnitId: orgCustomer.orgUnit.uid,\n                        orgCustomerId: data.customerId,\n                        roleId: B2BUserRole.APPROVER,\n                    }));\n                }\n                return successActions;\n            }));\n        }), catchError((error) => from([\n            new CreateB2BUserFail({\n                orgCustomerId: orgCustomer.customerId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateB2BUser$ = this.actions$.pipe(ofType(UPDATE_B2B_USER), map((action) => action.payload), switchMap(({ userId, orgCustomerId, orgCustomer }) => {\n            const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n            return this.b2bUserConnector\n                .update(userId, orgCustomerId, orgCustomer)\n                .pipe(switchMap((_data) => {\n                const successActions = [\n                    // TODO: change for 'payload: data' when backend API start to return user data on PATCH\n                    new UpdateB2BUserSuccess(orgCustomer),\n                ];\n                if (isAssignedToApprovers) {\n                    successActions.push(new AssignApprover({\n                        userId,\n                        orgUnitId: orgCustomer.orgUnit.uid,\n                        orgCustomerId,\n                        roleId: B2BUserRole.APPROVER,\n                    }));\n                }\n                return successActions;\n            }), catchError((error) => from([\n                new UpdateB2BUserFail({\n                    orgCustomerId: orgCustomer.customerId,\n                    error: normalizeHttpError(error),\n                }),\n                new OrganizationClearData(),\n            ])));\n        }));\n        this.checkSelfEmailUpdate$ = this.actions$.pipe(ofType(UPDATE_B2B_USER_SUCCESS), map((action) => action.payload), withLatestFrom(this.userService.get(), this.userIdService.getUserId()), switchMap(([payload, currentUser]) => {\n            const currentUserEmailMatch = payload.customerId === currentUser.customerId &&\n                payload.email !== currentUser.displayUid;\n            if (currentUserEmailMatch) {\n                this.routingService.go({ cxRoute: 'login' });\n            }\n            return currentUserEmailMatch\n                ? [new AuthActions.Logout()]\n                : [new OrganizationClearData()];\n        }));\n        this.loadB2BUsers$ = this.actions$.pipe(ofType(LOAD_B2B_USERS), map((action) => action.payload), switchMap((payload) => this.b2bUserConnector.getList(payload.userId, payload.params).pipe(switchMap((b2bUsers) => {\n            const { values, page } = StateUtils.normalizeListPage(b2bUsers, 'customerId');\n            return [\n                new LoadB2BUserSuccess(values),\n                new LoadB2BUsersSuccess({\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadB2BUsersFail({\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))));\n        this.loadB2BUserApprovers$ = this.actions$.pipe(ofType(LOAD_B2B_USER_APPROVERS), map((action) => action.payload), groupBy(({ orgCustomerId, params }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap((group) => group.pipe(switchMap((payload) => this.b2bUserConnector\n            .getApprovers(payload.userId, payload.orgCustomerId, payload.params)\n            .pipe(switchMap((approvers) => {\n            const { values, page } = StateUtils.normalizeListPage(approvers, 'customerId');\n            return [\n                new LoadB2BUserSuccess(values),\n                new LoadB2BUserApproversSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadB2BUserApproversFail({\n            orgCustomerId: payload.orgCustomerId,\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.loadB2BUserPermissions$ = this.actions$.pipe(ofType(LOAD_B2B_USER_PERMISSIONS), map((action) => action.payload), groupBy(({ orgCustomerId, params }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap((group) => group.pipe(switchMap((payload) => this.b2bUserConnector\n            .getPermissions(payload.userId, payload.orgCustomerId, payload.params)\n            .pipe(switchMap((permissions) => {\n            const { values, page } = StateUtils.normalizeListPage(permissions, 'code');\n            return [\n                new LoadPermissionSuccess(values),\n                new LoadB2BUserPermissionsSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadB2BUserPermissionsFail({\n            orgCustomerId: payload.orgCustomerId,\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.loadB2BUserUserGroups$ = this.actions$.pipe(ofType(LOAD_B2B_USER_USER_GROUPS), map((action) => action.payload), groupBy(({ orgCustomerId, params }) => StateUtils.serializeParams(orgCustomerId, params)), mergeMap((group) => group.pipe(switchMap((payload) => this.b2bUserConnector\n            .getUserGroups(payload.userId, payload.orgCustomerId, payload.params)\n            .pipe(switchMap((userGroups) => {\n            const { values, page } = StateUtils.normalizeListPage(userGroups, 'uid');\n            return [\n                new LoadUserGroupSuccess(values),\n                new LoadB2BUserUserGroupsSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadB2BUserUserGroupsFail({\n            orgCustomerId: payload.orgCustomerId,\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.assignApproverToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_APPROVER), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .assignApprover(payload.userId, payload.orgCustomerId, payload.approverId)\n            .pipe(switchMap((data) => [\n            new AssignB2BUserApproverSuccess({\n                // Occ returned email, but we use customerId in store\n                approverId: payload.approverId,\n                selected: data.selected,\n            }),\n            // Clearing data in this case causes unexpected behavior (#10468)\n            // new OrganizationActions.OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignB2BUserApproverFail({\n                orgCustomerId: payload.orgCustomerId,\n                approverId: payload.approverId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignApproverFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_APPROVER), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .unassignApprover(payload.userId, payload.orgCustomerId, payload.approverId)\n            .pipe(switchMap((data) => [\n            new UnassignB2BUserApproverSuccess({\n                // Occ returned email, but we use customerId in store\n                approverId: payload.approverId,\n                selected: data.selected,\n            }),\n            // Clearing data in this case causes unexpected behavior (#10468)\n            // new OrganizationActions.OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignB2BUserApproverFail({\n                orgCustomerId: payload.orgCustomerId,\n                approverId: payload.approverId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.assignPermissionToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_PERMISSION), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .assignPermission(payload.userId, payload.orgCustomerId, payload.permissionId)\n            .pipe(switchMap((data) => [\n            new AssignB2BUserPermissionSuccess({\n                permissionId: data.id,\n                selected: data.selected,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignB2BUserPermissionFail({\n                orgCustomerId: payload.orgCustomerId,\n                permissionId: payload.permissionId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignPermissionFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_PERMISSION), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .unassignPermission(payload.userId, payload.orgCustomerId, payload.permissionId)\n            .pipe(switchMap((data) => [\n            new UnassignB2BUserPermissionSuccess({\n                permissionId: data.id,\n                selected: data.selected,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignB2BUserPermissionFail({\n                orgCustomerId: payload.orgCustomerId,\n                permissionId: payload.permissionId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.assignUserGroupToB2BUser$ = this.actions$.pipe(ofType(ASSIGN_B2B_USER_USER_GROUP), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .assignUserGroup(payload.userId, payload.orgCustomerId, payload.userGroupId)\n            .pipe(switchMap((data) => [\n            new AssignB2BUserUserGroupSuccess({\n                uid: data.id,\n                selected: data.selected,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignB2BUserUserGroupFail({\n                orgCustomerId: payload.orgCustomerId,\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignUserGroupFromB2BUser$ = this.actions$.pipe(ofType(UNASSIGN_B2B_USER_USER_GROUP), map((action) => action.payload), mergeMap((payload) => this.b2bUserConnector\n            .unassignUserGroup(payload.userId, payload.orgCustomerId, payload.userGroupId)\n            .pipe(switchMap(\n        // TODO: Workaround because occ doesn't respond here\n        // (data) =>\n        //   new B2BUserActions.DeleteB2BUserUserGroupSuccess({\n        //     uid: data.id,\n        //     selected: data.selected,\n        //   })\n        () => [\n            new UnassignB2BUserUserGroupSuccess({\n                uid: payload.userGroupId,\n                selected: false,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignB2BUserUserGroupFail({\n                orgCustomerId: payload.orgCustomerId,\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n    }\n    redirectToDetails(route, data) {\n        var _a, _b, _c;\n        if (((_c = (_b = (_a = route) === null || _a === void 0 ? void 0 : _a.state) === null || _b === void 0 ? void 0 : _b.context) === null || _c === void 0 ? void 0 : _c.id) !== '/organization/units') {\n            this.routingService.go({\n                cxRoute: 'orgUserDetails',\n                params: data,\n            });\n        }\n    }\n}\nB2BUserEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserEffects, deps: [{ token: i1$1.Actions }, { token: B2BUserConnector }, { token: i1.RoutingService }, { token: i1.UserService }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nB2BUserEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserEffects });\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"loadB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"createB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"updateB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"checkSelfEmailUpdate$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"loadB2BUsers$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"loadB2BUserApprovers$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"loadB2BUserPermissions$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"loadB2BUserUserGroups$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"assignApproverToB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"unassignApproverFromB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"assignPermissionToB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"unassignPermissionFromB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"assignUserGroupToB2BUser$\", void 0);\n__decorate([\n    Effect()\n], B2BUserEffects.prototype, \"unassignUserGroupFromB2BUser$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: B2BUserConnector }, { type: i1.RoutingService }, { type: i1.UserService }, { type: i1.UserIdService }]; }, propDecorators: { loadB2BUser$: [], createB2BUser$: [], updateB2BUser$: [], checkSelfEmailUpdate$: [], loadB2BUsers$: [], loadB2BUserApprovers$: [], loadB2BUserPermissions$: [], loadB2BUserUserGroups$: [], assignApproverToB2BUser$: [], unassignApproverFromB2BUser$: [], assignPermissionToB2BUser$: [], unassignPermissionFromB2BUser$: [], assignUserGroupToB2BUser$: [], unassignUserGroupFromB2BUser$: [] } });\n\nclass UserGroupEffects {\n    constructor(actions$, userGroupConnector) {\n        this.actions$ = actions$;\n        this.userGroupConnector = userGroupConnector;\n        this.loadUserGroup$ = this.actions$.pipe(ofType(LOAD_USER_GROUP), map((action) => action.payload), switchMap(({ userId, userGroupId }) => {\n            return this.userGroupConnector.get(userId, userGroupId).pipe(map((userGroup) => {\n                return new LoadUserGroupSuccess([userGroup]);\n            }), catchError((error) => of(new LoadUserGroupFail({\n                userGroupId,\n                error: normalizeHttpError(error),\n            }))));\n        }));\n        this.loadUserGroups$ = this.actions$.pipe(ofType(LOAD_USER_GROUPS), map((action) => action.payload), switchMap((payload) => this.userGroupConnector.getList(payload.userId, payload.params).pipe(switchMap((userGroups) => {\n            const { values, page } = StateUtils.normalizeListPage(userGroups, 'uid');\n            return [\n                new LoadUserGroupSuccess(values),\n                new LoadUserGroupsSuccess({\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadUserGroupsFail({\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))));\n        this.loadAvailableOrderApprovalPermissions$ = this.actions$.pipe(ofType(LOAD_USER_GROUP_PERMISSIONS), map((action) => action.payload), groupBy(({ userGroupId, params }) => StateUtils.serializeParams(userGroupId, params)), mergeMap((group) => group.pipe(switchMap((payload) => this.userGroupConnector\n            .getAvailableOrderApprovalPermissions(payload.userId, payload.userGroupId, payload.params)\n            .pipe(switchMap((permissions) => {\n            const { values, page } = StateUtils.normalizeListPage(permissions, 'code');\n            return [\n                new LoadPermissionSuccess(values),\n                new LoadPermissionsSuccess$1({\n                    userGroupId: payload.userGroupId,\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadPermissionsFail$1({\n            userGroupId: payload.userGroupId,\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.loadAvailableOrgCustomers$ = this.actions$.pipe(ofType(LOAD_USER_GROUP_AVAILABLE_CUSTOMERS), map((action) => action.payload), groupBy(({ userGroupId, params }) => StateUtils.serializeParams(userGroupId, params)), mergeMap((group) => group.pipe(switchMap((payload) => this.userGroupConnector\n            .getAvailableOrgCustomers(payload.userId, payload.userGroupId, payload.params)\n            .pipe(switchMap((customers) => {\n            const { values, page } = StateUtils.normalizeListPage(customers, 'customerId');\n            return [\n                new LoadB2BUserSuccess(values),\n                new LoadAvailableOrgCustomersSuccess({\n                    userGroupId: payload.userGroupId,\n                    page,\n                    params: payload.params,\n                }),\n            ];\n        }), catchError((error) => of(new LoadAvailableOrgCustomersFail({\n            userGroupId: payload.userGroupId,\n            params: payload.params,\n            error: normalizeHttpError(error),\n        }))))))));\n        this.createUserGroup$ = this.actions$.pipe(ofType(CREATE_USER_GROUP), map((action) => action.payload), switchMap((payload) => this.userGroupConnector.create(payload.userId, payload.userGroup).pipe(switchMap((data) => [\n            new CreateUserGroupSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new CreateUserGroupFail({\n                userGroupId: payload.userGroup.uid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.updateUserGroup$ = this.actions$.pipe(ofType(UPDATE_USER_GROUP), map((action) => action.payload), switchMap((payload) => this.userGroupConnector\n            .update(payload.userId, payload.userGroupId, payload.userGroup)\n            .pipe(switchMap(() => [\n            // TODO: Workaround for empty PATCH response:\n            new UpdateUserGroupSuccess(payload.userGroup),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UpdateUserGroupFail({\n                userGroupId: payload.userGroup.uid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.deleteUserGroup$ = this.actions$.pipe(ofType(DELETE_USER_GROUP), map((action) => action.payload), switchMap((payload) => this.userGroupConnector.delete(payload.userId, payload.userGroupId).pipe(switchMap((data) => [\n            new DeleteUserGroupSuccess(data),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new DeleteUserGroupFail({\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.assignPermissionToUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_ASSIGN_PERMISSION), map((action) => action.payload), mergeMap((payload) => this.userGroupConnector\n            .assignOrderApprovalPermission(payload.userId, payload.userGroupId, payload.permissionUid)\n            .pipe(switchMap((data) => [\n            new AssignPermissionSuccess({\n                permissionUid: data.id,\n                selected: data.selected,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignPermissionFail({\n                userGroupId: payload.userGroupId,\n                permissionUid: payload.permissionUid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.assignMemberUnitUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_ASSIGN_MEMBER), map((action) => action.payload), mergeMap((payload) => this.userGroupConnector\n            .assignMember(payload.userId, payload.userGroupId, payload.customerId)\n            .pipe(switchMap(() => [\n            new AssignMemberSuccess({\n                customerId: payload.customerId,\n                selected: true,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new AssignMemberFail({\n                userGroupId: payload.userGroupId,\n                customerId: payload.customerId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignMemberFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_MEMBER), map((action) => action.payload), mergeMap((payload) => this.userGroupConnector\n            .unassignMember(payload.userId, payload.userGroupId, payload.customerId)\n            .pipe(switchMap(() => [\n            new UnassignMemberSuccess({\n                customerId: payload.customerId,\n                selected: false,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignMemberFail({\n                userGroupId: payload.userGroupId,\n                customerId: payload.customerId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignPermissionFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_PERMISSION), map((action) => action.payload), mergeMap((payload) => this.userGroupConnector\n            .unassignOrderApprovalPermission(payload.userId, payload.userGroupId, payload.permissionUid)\n            .pipe(switchMap((data) => [\n            new UnassignPermissionSuccess({\n                permissionUid: data.id,\n                selected: data.selected,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignPermissionFail({\n                userGroupId: payload.userGroupId,\n                permissionUid: payload.permissionUid,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n        this.unassignAllMembersFromUserGroup$ = this.actions$.pipe(ofType(USER_GROUP_UNASSIGN_ALL_MEMBERS), map((action) => action.payload), switchMap((payload) => this.userGroupConnector\n            .unassignAllMembers(payload.userId, payload.userGroupId)\n            .pipe(switchMap(() => [\n            new UnassignAllMembersSuccess({\n                selected: false,\n            }),\n            new OrganizationClearData(),\n        ]), catchError((error) => from([\n            new UnassignAllMembersFail({\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n            }),\n            new OrganizationClearData(),\n        ])))));\n    }\n}\nUserGroupEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupEffects, deps: [{ token: i1$1.Actions }, { token: UserGroupConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nUserGroupEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupEffects });\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"loadUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"loadUserGroups$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"loadAvailableOrderApprovalPermissions$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"loadAvailableOrgCustomers$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"createUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"updateUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"deleteUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"assignPermissionToUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"assignMemberUnitUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"unassignMemberFromUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"unassignPermissionFromUserGroup$\", void 0);\n__decorate([\n    Effect()\n], UserGroupEffects.prototype, \"unassignAllMembersFromUserGroup$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupEffects, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: UserGroupConnector }]; }, propDecorators: { loadUserGroup$: [], loadUserGroups$: [], loadAvailableOrderApprovalPermissions$: [], loadAvailableOrgCustomers$: [], createUserGroup$: [], updateUserGroup$: [], deleteUserGroup$: [], assignPermissionToUserGroup$: [], assignMemberUnitUserGroup$: [], unassignMemberFromUserGroup$: [], unassignPermissionFromUserGroup$: [], unassignAllMembersFromUserGroup$: [] } });\n\nconst effects = [\n    BudgetEffects,\n    OrgUnitEffects,\n    UserGroupEffects,\n    PermissionEffects,\n    CostCenterEffects,\n    B2BUserEffects,\n];\n\nconst b2bUserInitialState = undefined;\nconst b2bUsersInitialState = undefined;\nfunction b2bUserEntitiesReducer(state = b2bUserInitialState, action) {\n    var _a, _b, _c;\n    switch (action.type) {\n        case LOAD_B2B_USER_SUCCESS:\n        case CREATE_B2B_USER_SUCCESS:\n        case UPDATE_B2B_USER_SUCCESS:\n            return action.payload;\n        case ASSIGN_ROLE_SUCCESS:\n        case ASSIGN_APPROVER_SUCCESS:\n            return Object.assign(Object.assign({}, state), { selected: (_a = action.payload) === null || _a === void 0 ? void 0 : _a.selected, roles: [...((state === null || state === void 0 ? void 0 : state.roles) || []), (_b = action.payload) === null || _b === void 0 ? void 0 : _b.roleId] });\n        case UNASSIGN_ROLE_SUCCESS:\n        case UNASSIGN_APPROVER_SUCCESS:\n            return Object.assign(Object.assign({}, state), { selected: (_c = action.payload) === null || _c === void 0 ? void 0 : _c.selected, roles: [...((state === null || state === void 0 ? void 0 : state.roles) || [])].filter((role) => { var _a; return role !== ((_a = action.payload) === null || _a === void 0 ? void 0 : _a.roleId); }) });\n        case ASSIGN_B2B_USER_APPROVER_SUCCESS:\n        case UNASSIGN_B2B_USER_APPROVER_SUCCESS:\n        case USER_GROUP_ASSIGN_MEMBER_SUCCESS:\n        case USER_GROUP_UNASSIGN_MEMBER_SUCCESS:\n        case USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS:\n            return Object.assign(Object.assign({}, state), action.payload);\n    }\n    return state;\n}\nfunction userListReducer(state = b2bUsersInitialState, action) {\n    switch (action.type) {\n        case LOAD_B2B_USERS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction b2bUserApproverListReducer(state = b2bUsersInitialState, action) {\n    switch (action.type) {\n        case LOAD_B2B_USER_APPROVERS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction b2bUserPermissionListReducer(state = b2bUsersInitialState, action) {\n    switch (action.type) {\n        case LOAD_B2B_USER_PERMISSIONS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction b2bUserUserGroupListReducer(state = b2bUsersInitialState, action) {\n    switch (action.type) {\n        case LOAD_B2B_USER_USER_GROUPS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nconst budgetInitialState = undefined;\nconst budgetsInitialState = undefined;\nfunction budgetsEntitiesReducer(state = budgetInitialState, action) {\n    switch (action.type) {\n        case LOAD_BUDGET_SUCCESS:\n        case CREATE_BUDGET_SUCCESS:\n        case UPDATE_BUDGET_SUCCESS:\n            return action.payload;\n        case UNASSIGN_BUDGET_SUCCESS:\n        case ASSIGN_BUDGET_SUCCESS:\n            return Object.assign(Object.assign({}, state), action.payload);\n    }\n    return state;\n}\nfunction budgetsListReducer(state = budgetsInitialState, action) {\n    switch (action.type) {\n        case LOAD_BUDGETS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nconst costCenterInitialState = undefined;\nconst costCentersInitialState = undefined;\nfunction costCentersEntitiesReducer(state = costCenterInitialState, action) {\n    switch (action.type) {\n        case LOAD_COST_CENTER_SUCCESS:\n        case CREATE_COST_CENTER_SUCCESS:\n        case UPDATE_COST_CENTER_SUCCESS:\n            return action.payload;\n    }\n    return state;\n}\nfunction costCentersListReducer(state = costCentersInitialState, action) {\n    switch (action.type) {\n        case LOAD_COST_CENTERS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction costCenterAssignedBudgetsListReducer(state = costCentersInitialState, action) {\n    switch (action.type) {\n        case LOAD_ASSIGNED_BUDGETS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nconst orgUnitInitialState = undefined;\nconst orgUnitsInitialState = undefined;\nfunction orgUnitEntitiesReducer(state = orgUnitInitialState, action) {\n    switch (action.type) {\n        case LOAD_ORG_UNIT_SUCCESS:\n        case CREATE_ORG_UNIT_SUCCESS:\n            return action.payload;\n        case UPDATE_ORG_UNIT_SUCCESS:\n            return Object.assign(Object.assign({}, state), action.payload);\n    }\n    return state;\n}\nfunction orgUnitListReducer(state = orgUnitsInitialState, action) {\n    switch (action.type) {\n    }\n    return state;\n}\nfunction orgUnitUserListReducer(state = orgUnitsInitialState, action) {\n    switch (action.type) {\n        case LOAD_ASSIGNED_USERS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction orgUnitAddressListReducer(state = orgUnitsInitialState, action) {\n    switch (action.type) {\n        case LOAD_ADDRESSES_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nconst permissionInitialState = undefined;\nconst permissionsInitialState = undefined;\nfunction permissionsEntitiesReducer(state = permissionInitialState, action) {\n    switch (action.type) {\n        case LOAD_PERMISSION_SUCCESS:\n        case CREATE_PERMISSION_SUCCESS:\n        case UPDATE_PERMISSION_SUCCESS:\n            return action.payload;\n        case USER_GROUP_ASSIGN_PERMISSION_SUCCESS:\n        case USER_GROUP_UNASSIGN_PERMISSION_SUCCESS:\n        case ASSIGN_B2B_USER_PERMISSION_SUCCESS:\n        case UNASSIGN_B2B_USER_PERMISSION_SUCCESS:\n            return Object.assign(Object.assign({}, state), action.payload);\n    }\n    return state;\n}\nfunction permissionsListReducer(state = permissionsInitialState, action) {\n    switch (action.type) {\n        case LOAD_PERMISSIONS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nconst userGroupInitialState = undefined;\nconst userGroupsInitialState = undefined;\nfunction userGroupEntitiesReducer(state = userGroupInitialState, action) {\n    switch (action.type) {\n        case LOAD_USER_GROUP_SUCCESS:\n        case CREATE_USER_GROUP_SUCCESS:\n        case UPDATE_USER_GROUP_SUCCESS:\n            return action.payload;\n        case ASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n        case UNASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n            return Object.assign(Object.assign({}, state), action.payload);\n    }\n    return state;\n}\nfunction userGroupsListReducer(state = userGroupsInitialState, action) {\n    switch (action.type) {\n        case LOAD_USER_GROUPS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction userGroupAvailableOrderApprovalPermissionsListReducer(state = userGroupsInitialState, action) {\n    switch (action.type) {\n        case LOAD_USER_GROUP_PERMISSIONS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\nfunction userGroupAvailablOrgCustomersListReducer(state = userGroupsInitialState, action) {\n    switch (action.type) {\n        case LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS:\n            return action.payload.page;\n    }\n    return state;\n}\n\nfunction getReducers() {\n    return {\n        [BUDGET_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(BUDGET_ENTITIES, budgetsEntitiesReducer),\n            list: StateUtils.entityLoaderReducer(BUDGET_LIST, budgetsListReducer),\n        }),\n        [PERMISSION_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(PERMISSION_ENTITIES, permissionsEntitiesReducer),\n            list: StateUtils.entityLoaderReducer(PERMISSION_LIST, permissionsListReducer),\n            permissionTypes: StateUtils.entityLoaderReducer(PERMISSION_TYPES_LIST),\n        }),\n        [ORG_UNIT_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(ORG_UNIT_ENTITIES, orgUnitEntitiesReducer),\n            availableOrgUnitNodes: StateUtils.entityLoaderReducer(ORG_UNIT_NODE_LIST),\n            tree: StateUtils.entityLoaderReducer(ORG_UNIT_TREE_ENTITY),\n            approvalProcesses: StateUtils.entityLoaderReducer(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES),\n            users: StateUtils.entityLoaderReducer(ORG_UNIT_ASSIGNED_USERS, orgUnitUserListReducer),\n            addressList: StateUtils.entityLoaderReducer(ADDRESS_LIST, orgUnitAddressListReducer),\n            addressEntities: StateUtils.entityLoaderReducer(ADDRESS_ENTITIES),\n        }),\n        [USER_GROUP_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(USER_GROUP_ENTITIES, userGroupEntitiesReducer),\n            list: StateUtils.entityLoaderReducer(USER_GROUP_LIST, userGroupsListReducer),\n            permissions: StateUtils.entityLoaderReducer(USER_GROUP_PERMISSIONS, userGroupAvailableOrderApprovalPermissionsListReducer),\n            customers: StateUtils.entityLoaderReducer(USER_GROUP_AVAILABLE_CUSTOMERS, userGroupAvailablOrgCustomersListReducer),\n        }),\n        [COST_CENTER_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(COST_CENTER_ENTITIES, costCentersEntitiesReducer),\n            list: StateUtils.entityLoaderReducer(COST_CENTER_LIST, costCentersListReducer),\n            budgets: StateUtils.entityLoaderReducer(COST_CENTER_ASSIGNED_BUDGETS, costCenterAssignedBudgetsListReducer),\n        }),\n        [B2B_USER_FEATURE]: combineReducers({\n            entities: StateUtils.entityLoaderReducer(B2B_USER_ENTITIES, b2bUserEntitiesReducer),\n            list: StateUtils.entityLoaderReducer(USER_LIST, userListReducer),\n            approvers: StateUtils.entityLoaderReducer(B2B_USER_APPROVERS, b2bUserApproverListReducer),\n            permissions: StateUtils.entityLoaderReducer(B2B_USER_PERMISSIONS, b2bUserPermissionListReducer),\n            userGroups: StateUtils.entityLoaderReducer(B2B_USER_USER_GROUPS, b2bUserUserGroupListReducer),\n        }),\n    };\n}\nconst reducerToken = new InjectionToken('OrganizationReducers');\nconst reducerProvider = {\n    provide: reducerToken,\n    useFactory: getReducers,\n};\nfunction clearOrganizationState(reducer) {\n    return function (state, action) {\n        if (action.type === CLEAR_ORGANIZATION_DATA) {\n            state = undefined;\n        }\n        if (action.type === AuthActions.LOGOUT) {\n            state = undefined;\n        }\n        if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n            state = undefined;\n        }\n        return reducer(state, action);\n    };\n}\nconst metaReducers = [clearOrganizationState];\n\nclass OrganizationStoreModule {\n}\nOrganizationStoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationStoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrganizationStoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationStoreModule, imports: [i1$2.StoreFeatureModule, i1$1.EffectsFeatureModule] });\nOrganizationStoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationStoreModule, providers: [reducerProvider], imports: [[\n            StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n                metaReducers,\n            }),\n            EffectsModule.forFeature(effects),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationStoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n                            metaReducers,\n                        }),\n                        EffectsModule.forFeature(effects),\n                    ],\n                    providers: [reducerProvider],\n                }]\n        }] });\n\nclass AdministrationCoreModule {\n    static forRoot() {\n        return {\n            ngModule: AdministrationCoreModule,\n            providers: [\n                BudgetConnector,\n                OrgUnitConnector,\n                UserGroupConnector,\n                PermissionConnector,\n                CostCenterConnector,\n                B2BUserConnector,\n            ],\n        };\n    }\n}\nAdministrationCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAdministrationCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationCoreModule, imports: [OrganizationPageMetaModule, OrganizationStoreModule] });\nAdministrationCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationCoreModule, imports: [[OrganizationPageMetaModule, OrganizationStoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OrganizationPageMetaModule, OrganizationStoreModule],\n                }]\n        }] });\n\nconst B2B_USER_NORMALIZER = new InjectionToken('B2BUserNormalizer');\nconst B2B_USER_SERIALIZER = new InjectionToken('B2BUserSerializer');\nconst B2B_USERS_NORMALIZER = new InjectionToken('UserListNormalizer');\n\nconst BUDGET_NORMALIZER = new InjectionToken('BudgetNormalizer');\nconst BUDGETS_NORMALIZER = new InjectionToken('BudgetsListNormalizer');\nconst BUDGET_SERIALIZER = new InjectionToken('BudgetSerializer');\n\nconst B2BUNIT_NODE_NORMALIZER = new InjectionToken('B2BUnitNodeNormalizer');\nconst B2BUNIT_NODE_LIST_NORMALIZER = new InjectionToken('B2BUnitNodeListNormalizer');\nconst B2BUNIT_NORMALIZER = new InjectionToken('B2BUnitNormalizer');\nconst B2BUNIT_SERIALIZER = new InjectionToken('B2BUnitSerializer');\nconst B2BUNIT_APPROVAL_PROCESSES_NORMALIZER = new InjectionToken('B2BUnitApprovalProcessNormalizer');\n\nconst PERMISSION_NORMALIZER = new InjectionToken('PermissionNormalizer');\nconst PERMISSIONS_NORMALIZER = new InjectionToken('PermissionsListNormalizer');\nconst PERMISSION_TYPE_NORMALIZER = new InjectionToken('PermissionTypeNormalizer');\nconst PERMISSION_TYPES_NORMALIZER = new InjectionToken('PermissionTypesListNormalizer');\nconst PERMISSION_SERIALIZER = new InjectionToken('PermissionSerializer');\n\nconst USER_GROUP_NORMALIZER = new InjectionToken('UserGroupNormalizer');\nconst USER_GROUP_SERIALIZER = new InjectionToken('UserGroupSerializer');\nconst USER_GROUPS_NORMALIZER = new InjectionToken('UserGroupListNormalizer');\n\nclass AdminGuard {\n    constructor(userService, routingService, globalMessageService) {\n        this.userService = userService;\n        this.routingService = routingService;\n        this.globalMessageService = globalMessageService;\n    }\n    canActivate() {\n        return this.userService.get().pipe(filter((user) => user && Object.keys(user).length > 0), pluck('roles'), map((roles) => {\n            const hasRole = Array.isArray(roles) && roles.includes(B2BUserRole.ADMIN);\n            if (!hasRole) {\n                // routing as temporary solution until /organization won't\n                // have set up proper permission on backend\n                this.routingService.go({ cxRoute: 'organization' });\n                this.globalMessageService.add({ key: 'organization.notification.noSufficientPermissions' }, GlobalMessageType.MSG_TYPE_WARNING);\n            }\n            return hasRole;\n        }));\n    }\n}\nAdminGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdminGuard, deps: [{ token: i1.UserService }, { token: i1.RoutingService }, { token: i1.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Injectable });\nAdminGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdminGuard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdminGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.UserService }, { type: i1.RoutingService }, { type: i1.GlobalMessageService }]; } });\n\nclass OrganizationBadRequestHandler extends HttpErrorHandler {\n    constructor() {\n        super(...arguments);\n        this.responseStatus = HttpResponseStatus.BAD_REQUEST;\n        this.costCenterMask = /ambiguous unique keys \\{code\\=(.*)\\} for model B2BCostCenterModel/;\n        this.unitMask = /ambiguous unique keys \\{uid\\=(.*)\\} for model B2BUnitModel/;\n        this.permissionMask = /Approval Permission with code\\: (.*) already exists\\./;\n        this.unknownMask = /Model saving error\\./;\n    }\n    hasMatch(errorResponse) {\n        return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n    }\n    handleError(_request, response) {\n        this.getErrors(response).forEach(({ message }) => {\n            // Handle cost center conflict\n            this.handleOrganizationConflict(message, this.costCenterMask, 'costCenter');\n            // Handle unit conflict\n            this.handleOrganizationConflict(message, this.unitMask, 'unit');\n            // Handle unit conflict\n            this.handleOrganizationConflict(message, this.permissionMask, 'permission');\n            // Handle unknown conflict\n            this.handleOrganizationConflict(message, this.unknownMask, 'unknown');\n        });\n    }\n    matchMask(response) {\n        return this.getErrors(response).some((error) => [\n            this.costCenterMask,\n            this.unitMask,\n            this.permissionMask,\n            this.unknownMask,\n        ].some((mask) => mask.test(error.message)));\n    }\n    handleOrganizationConflict(message, mask, key) {\n        const result = message.match(mask);\n        const params = { code: result === null || result === void 0 ? void 0 : result[1] };\n        if (result) {\n            this.globalMessageService.add({ key: `organization.httpHandlers.conflict.${key}`, params }, GlobalMessageType.MSG_TYPE_ERROR);\n        }\n    }\n    getErrors(response) {\n        var _a;\n        return (((_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) || []).filter((error) => error.type === 'ModelSavingError' || error.type === 'DuplicateUidError');\n    }\n    getPriority() {\n        return 0 /* NORMAL */;\n    }\n}\nOrganizationBadRequestHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationBadRequestHandler, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationBadRequestHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationBadRequestHandler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationBadRequestHandler, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass OrganizationConflictHandler extends HttpErrorHandler {\n    constructor() {\n        super(...arguments);\n        this.responseStatus = HttpResponseStatus.CONFLICT;\n        this.budgetMask = /Budget with code \\[(.*)\\] already exists/;\n        this.userMask = /User already exists/;\n        this.userGroupMask = /Member Permission with the same id already exists/;\n        this.unitMask = /Organizational unit with uid \\[(.*)\\] already exists/;\n    }\n    hasMatch(errorResponse) {\n        return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n    }\n    handleError(request, response) {\n        return this.getErrors(response).forEach(({ message }) => {\n            var _a, _b;\n            // Handle budget conflict\n            this.handleConflict(message, this.budgetMask, 'budget');\n            // Handle user email conflict\n            this.handleConflict(message, this.userMask, 'user', (_a = request === null || request === void 0 ? void 0 : request.body) === null || _a === void 0 ? void 0 : _a.email);\n            // Handle user group conflict\n            this.handleConflict(message, this.userGroupMask, 'userGroup', (_b = request === null || request === void 0 ? void 0 : request.body) === null || _b === void 0 ? void 0 : _b.uid);\n            // Handle unit conflict\n            this.handleConflict(message, this.unitMask, 'unit');\n        });\n    }\n    matchMask(response) {\n        return this.getErrors(response).some((error) => [this.budgetMask, this.userMask, this.userGroupMask, this.unitMask].some((mask) => mask.test(error.message)));\n    }\n    handleConflict(message, mask, key, code) {\n        var _a;\n        const result = message.match(mask);\n        const params = { code: (_a = result === null || result === void 0 ? void 0 : result[1]) !== null && _a !== void 0 ? _a : code };\n        if (result) {\n            this.globalMessageService.add({ key: `organization.httpHandlers.conflict.${key}`, params }, GlobalMessageType.MSG_TYPE_ERROR);\n        }\n    }\n    getErrors(response) {\n        var _a;\n        return (((_a = response.error) === null || _a === void 0 ? void 0 : _a.errors) || []).filter((error) => error.type === 'AlreadyExistsError');\n    }\n    getPriority() {\n        return 0 /* NORMAL */;\n    }\n}\nOrganizationConflictHandler.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationConflictHandler, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationConflictHandler.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationConflictHandler, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrganizationConflictHandler, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nvar LoadStatus;\n(function (LoadStatus) {\n    LoadStatus[LoadStatus[\"SUCCESS\"] = 0] = \"SUCCESS\";\n    LoadStatus[LoadStatus[\"ERROR\"] = 1] = \"ERROR\";\n})(LoadStatus || (LoadStatus = {}));\n\nvar Period;\n(function (Period) {\n    Period[\"DAY\"] = \"DAY\";\n    Period[\"WEEK\"] = \"WEEK\";\n    Period[\"MONTH\"] = \"MONTH\";\n    Period[\"QUARTER\"] = \"QUARTER\";\n    Period[\"YEAR\"] = \"YEAR\";\n})(Period || (Period = {}));\n\nconst getOrganizationState = createFeatureSelector(ORGANIZATION_FEATURE);\n\nconst getPermissionManagementState = createSelector(getOrganizationState, (state) => state[PERMISSION_FEATURE]);\nconst getPermissionsState = createSelector(getPermissionManagementState, (state) => state && state.entities);\nconst getPermissionState = (permissionId) => createSelector(getPermissionsState, (state) => StateUtils.entityLoaderStateSelector(state, permissionId));\nconst getPermissionTypesState = createSelector(getPermissionManagementState, (state) => state && state.permissionTypes);\nconst getPermission = (permissionCode) => createSelector(getPermissionsState, (state) => StateUtils.entityLoaderStateSelector(state, permissionCode));\nconst getPermissionValue = (permissionCode) => {\n    return createSelector(getPermission(permissionCode), (permissionState) => StateUtils.loaderValueSelector(permissionState));\n};\nconst getPermissionList = (params) => createSelector(getPermissionManagementState, (state) => StateUtils.denormalizeSearch(state, params));\nconst getPermissionTypes = () => createSelector(getPermissionTypesState, (state) => StateUtils.entityLoaderStateSelector(state, PERMISSION_TYPES));\n\nvar permission_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getPermissionManagementState: getPermissionManagementState,\n    getPermissionsState: getPermissionsState,\n    getPermissionState: getPermissionState,\n    getPermissionTypesState: getPermissionTypesState,\n    getPermission: getPermission,\n    getPermissionValue: getPermissionValue,\n    getPermissionList: getPermissionList,\n    getPermissionTypes: getPermissionTypes\n});\n\nconst getB2BUserManagementState = createSelector(getOrganizationState, (state) => state[B2B_USER_FEATURE]);\nconst getB2BUsersState = createSelector(getB2BUserManagementState, (state) => state && state.entities);\nconst getB2BUserState = (orgCustomerId) => createSelector(getB2BUsersState, (state) => StateUtils.entityLoaderStateSelector(state, orgCustomerId));\nconst getB2BUserValue = (orgCustomerId) => {\n    return createSelector(getB2BUserState(orgCustomerId), (b2BUserState) => StateUtils.loaderValueSelector(b2BUserState));\n};\nconst getUserList = (params) => createSelector(getB2BUserManagementState, (state) => StateUtils.denormalizeSearch(state, params));\nconst getB2BUserApprovers = (code, params) => createSelector(getB2BUserManagementState, getB2BUsersState, (state, approvers) => StateUtils.denormalizeCustomB2BSearch(state.approvers, approvers, params, code));\nconst getB2BUserPermissions = (code, params) => createSelector(getB2BUserManagementState, getPermissionsState, (state, permissions) => StateUtils.denormalizeCustomB2BSearch(state.permissions, permissions, params, code));\n// avoid circular dependency\nconst getUserGroupsState$1 = createSelector(getOrganizationState, (state) => state[USER_GROUP_FEATURE].entities);\nconst getB2BUserUserGroups = (code, params) => createSelector(getB2BUserManagementState, getUserGroupsState$1, (state, userGroups) => StateUtils.denormalizeCustomB2BSearch(state.userGroups, userGroups, params, code));\n\nvar b2bUser_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getB2BUserManagementState: getB2BUserManagementState,\n    getB2BUsersState: getB2BUsersState,\n    getB2BUserState: getB2BUserState,\n    getB2BUserValue: getB2BUserValue,\n    getUserList: getUserList,\n    getB2BUserApprovers: getB2BUserApprovers,\n    getB2BUserPermissions: getB2BUserPermissions,\n    getB2BUserUserGroups: getB2BUserUserGroups\n});\n\nfunction getItemStatus(itemState) {\n    return itemState.pipe(observeOn(queueScheduler), pairwise(), filter(([previousState]) => previousState.loading), map(([_previousState, currentState]) => ({\n        status: currentState.success\n            ? LoadStatus.SUCCESS\n            : currentState.error\n                ? LoadStatus.ERROR\n                : null,\n        item: currentState.value,\n    })));\n}\n\nclass B2BUserService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    load(orgCustomerId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadB2BUser({\n            userId,\n            orgCustomerId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadList(params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadB2BUsers({ userId, params })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getB2BUserValue(orgCustomerId) {\n        return this.store\n            .select(getB2BUserValue(orgCustomerId))\n            .pipe(filter(Boolean));\n    }\n    get(orgCustomerId) {\n        const loading$ = this.getB2BUserState(orgCustomerId).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.load(orgCustomerId);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getB2BUserValue(orgCustomerId));\n    }\n    getList(params) {\n        return this.getUserList(params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadList(params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getErrorState(orgCustomerId) {\n        return this.getB2BUserState(orgCustomerId).pipe(map((state) => state.error));\n    }\n    create(orgCustomer) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateB2BUser({\n            userId,\n            orgCustomer,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(orgCustomerId, orgCustomer) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateB2BUser({\n            userId,\n            orgCustomerId,\n            orgCustomer,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(orgCustomerId) {\n        return getItemStatus(this.getB2BUserState(orgCustomerId));\n    }\n    loadApprovers(orgCustomerId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadB2BUserApprovers({\n            userId,\n            orgCustomerId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getApprovers(orgCustomerId, params) {\n        return this.getB2BUserApproverList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadApprovers(orgCustomerId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    assignApprover(orgCustomerId, approverId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignApprover(orgCustomerId, approverId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadPermissions(orgCustomerId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadB2BUserPermissions({\n            userId,\n            orgCustomerId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getPermissions(orgCustomerId, params) {\n        return this.getB2BUserPermissionList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadPermissions(orgCustomerId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    assignPermission(orgCustomerId, permissionId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignPermission(orgCustomerId, permissionId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadUserGroups(orgCustomerId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadB2BUserUserGroups({\n            userId,\n            orgCustomerId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getUserGroups(orgCustomerId, params) {\n        return this.getB2BUserUserGroupList(orgCustomerId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadUserGroups(orgCustomerId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    assignUserGroup(orgCustomerId, userGroupId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignUserGroup(orgCustomerId, userGroupId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    /**\n     * Get list of all roles for B2BUser sorted by increasing privileges.\n     *\n     * This list is not driven by the backend (lack of API), but reflects roles\n     * from the backend: `b2badmingroup`, `b2bcustomergroup`, `b2bmanagergroup` and `b2bapprovergroup`.\n     *\n     * If you reconfigure those roles in the backend or extend the list, you should change\n     * this implementation accordingly.\n     */\n    getAllRoles() {\n        return [\n            B2BUserRole.CUSTOMER,\n            B2BUserRole.MANAGER,\n            B2BUserRole.APPROVER,\n            B2BUserRole.ADMIN,\n        ];\n    }\n    getB2BUserApproverList(orgCustomerId, params) {\n        return this.store.select(getB2BUserApprovers(orgCustomerId, params));\n    }\n    getB2BUserPermissionList(orgCustomerId, params) {\n        return this.store.select(getB2BUserPermissions(orgCustomerId, params));\n    }\n    getB2BUserUserGroupList(orgCustomerId, params) {\n        return this.store.select(getB2BUserUserGroups(orgCustomerId, params));\n    }\n    getB2BUserState(orgCustomerId) {\n        return this.store.select(getB2BUserState(orgCustomerId));\n    }\n    getUserList(params) {\n        return this.store.select(getUserList(params));\n    }\n}\nB2BUserService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nB2BUserService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: B2BUserService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\nconst getBudgetManagementState = createSelector(getOrganizationState, (state) => state[BUDGET_FEATURE]);\nconst getBudgetsState = createSelector(getBudgetManagementState, (state) => state && state.entities);\nconst getBudget = (budgetCode) => createSelector(getBudgetsState, (state) => StateUtils.entityLoaderStateSelector(state, budgetCode));\nconst getBudgetValue = (budgetCode) => {\n    return createSelector(getBudget(budgetCode), (budgetState) => StateUtils.loaderValueSelector(budgetState));\n};\nconst getBudgetList = (params) => createSelector(getBudgetManagementState, (state) => StateUtils.denormalizeSearch(state, params));\n\nvar budget_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getBudgetManagementState: getBudgetManagementState,\n    getBudgetsState: getBudgetsState,\n    getBudget: getBudget,\n    getBudgetValue: getBudgetValue,\n    getBudgetList: getBudgetList\n});\n\nconst getB2BOrgUnitState = createSelector(getOrganizationState, (state) => state[ORG_UNIT_FEATURE]);\nconst getOrgUnitsNodeListState = createSelector(getB2BOrgUnitState, (state) => state && state.availableOrgUnitNodes);\nconst getOrgUnitsState = createSelector(getB2BOrgUnitState, (state) => state && state.entities);\nconst getOrgUnitsTreeState = createSelector(getB2BOrgUnitState, (state) => state && state.tree);\nconst getAddressesState = createSelector(getB2BOrgUnitState, (state) => state && state.addressEntities);\nconst getApprovalProcessesState = createSelector(getB2BOrgUnitState, (state) => state && state.approvalProcesses);\nconst getOrgUnit = (orgUnitId) => createSelector(getOrgUnitsState, (state) => StateUtils.entityLoaderStateSelector(state, orgUnitId));\nconst getOrgUnitValue = (orgUnitId) => {\n    return createSelector(getOrgUnit(orgUnitId), (orgUnitState) => StateUtils.loaderValueSelector(orgUnitState));\n};\nconst getOrgUnitState = (orgUnitId) => createSelector(getOrgUnitsState, (state) => StateUtils.entityLoaderStateSelector(state, orgUnitId));\nconst getOrgUnitList = () => createSelector(getOrgUnitsNodeListState, (state) => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_NODES));\nconst getOrgUnitTree = () => createSelector(getOrgUnitsTreeState, (state) => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_TREE));\nconst getApprovalProcesses = () => createSelector(getApprovalProcessesState, (state) => StateUtils.entityLoaderStateSelector(state, ORG_UNIT_APPROVAL_PROCESSES));\nconst getAssignedUsers = (orgUnitId, roleId, params) => createSelector(getB2BOrgUnitState, getB2BUsersState, (state, users) => StateUtils.denormalizeCustomB2BSearch(state.users, users, params, `${orgUnitId},${roleId}`));\nconst getB2BAddresses = (orgUnitId, params) => createSelector(getB2BOrgUnitState, (state) => StateUtils.denormalizeCustomB2BSearch(state.addressList, state.addressEntities, params, orgUnitId));\nconst getB2BAddress = (addressId) => createSelector(getAddressesState, (state) => StateUtils.entityLoaderStateSelector(state, addressId));\n\nvar orgUnit_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getB2BOrgUnitState: getB2BOrgUnitState,\n    getOrgUnitsNodeListState: getOrgUnitsNodeListState,\n    getOrgUnitsState: getOrgUnitsState,\n    getOrgUnitsTreeState: getOrgUnitsTreeState,\n    getAddressesState: getAddressesState,\n    getApprovalProcessesState: getApprovalProcessesState,\n    getOrgUnit: getOrgUnit,\n    getOrgUnitValue: getOrgUnitValue,\n    getOrgUnitState: getOrgUnitState,\n    getOrgUnitList: getOrgUnitList,\n    getOrgUnitTree: getOrgUnitTree,\n    getApprovalProcesses: getApprovalProcesses,\n    getAssignedUsers: getAssignedUsers,\n    getB2BAddresses: getB2BAddresses,\n    getB2BAddress: getB2BAddress\n});\n\nconst getUserGroupManagementState = createSelector(getOrganizationState, (state) => state[USER_GROUP_FEATURE]);\nconst getUserGroupsState = createSelector(getUserGroupManagementState, (state) => state && state.entities);\nconst getUserGroup = (userGroupId) => createSelector(getUserGroupsState, (state) => StateUtils.entityLoaderStateSelector(state, userGroupId));\nconst getUserGroupValue = (userGroupId) => {\n    return createSelector(getUserGroup(userGroupId), (userGroupState) => StateUtils.loaderValueSelector(userGroupState));\n};\nconst getUserGroupList = (params) => createSelector(getUserGroupManagementState, (state) => StateUtils.denormalizeSearch(state, params));\nconst getAvailableOrgCustomers = (code, params) => createSelector(getUserGroupManagementState, getB2BUsersState, (state, customers) => StateUtils.denormalizeCustomB2BSearch(state.customers, customers, params, code));\nconst getAvailableOrderApprovalPermissions = (code, params) => createSelector(getUserGroupManagementState, getPermissionsState, (state, permissions) => StateUtils.denormalizeCustomB2BSearch(state.permissions, permissions, params, code));\nconst getUserGroupState = (code) => createSelector(getUserGroupsState, (state) => StateUtils.entityLoaderStateSelector(state, code));\n\nvar userGroup_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getUserGroupManagementState: getUserGroupManagementState,\n    getUserGroupsState: getUserGroupsState,\n    getUserGroup: getUserGroup,\n    getUserGroupValue: getUserGroupValue,\n    getUserGroupList: getUserGroupList,\n    getAvailableOrgCustomers: getAvailableOrgCustomers,\n    getAvailableOrderApprovalPermissions: getAvailableOrderApprovalPermissions,\n    getUserGroupState: getUserGroupState\n});\n\nconst getCostCenterManagementState = createSelector(getOrganizationState, (state) => state[COST_CENTER_FEATURE]);\nconst getCostCentersState = createSelector(getCostCenterManagementState, (state) => state && state.entities);\nconst getCostCenter = (costCenterCode) => createSelector(getCostCentersState, (state) => StateUtils.entityLoaderStateSelector(state, costCenterCode));\nconst getCostCenterValue = (costCenterCode) => {\n    return createSelector(getCostCenter(costCenterCode), (costCenterState) => StateUtils.loaderValueSelector(costCenterState));\n};\nconst getCostCenterList = (params) => createSelector(getCostCenterManagementState, (state) => StateUtils.denormalizeSearch(state, params));\nconst getAssignedBudgets = (code, params) => createSelector(getCostCenterManagementState, getBudgetsState, (state, budgets) => StateUtils.denormalizeCustomB2BSearch(state.budgets, budgets, params, code));\nconst getCostCenterState = (code) => createSelector(getCostCentersState, (state) => StateUtils.entityLoaderStateSelector(state, code));\n\nvar costCenter_selector = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    getCostCenterManagementState: getCostCenterManagementState,\n    getCostCentersState: getCostCentersState,\n    getCostCenter: getCostCenter,\n    getCostCenterValue: getCostCenterValue,\n    getCostCenterList: getCostCenterList,\n    getAssignedBudgets: getAssignedBudgets,\n    getCostCenterState: getCostCenterState\n});\n\nclass BudgetService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    loadBudget(budgetCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadBudget({ userId, budgetCode })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadBudgets(params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadBudgets({ userId, params })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getBudgetState(budgetCode) {\n        return this.store.select(getBudget(budgetCode));\n    }\n    getBudgetValue(budgetCode) {\n        return this.store.select(getBudgetValue(budgetCode)).pipe(filter(Boolean));\n    }\n    getBudgetList(params) {\n        return this.store.select(getBudgetList(params));\n    }\n    get(budgetCode) {\n        const loading$ = this.getBudgetState(budgetCode).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.loadBudget(budgetCode);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getBudgetValue(budgetCode));\n    }\n    getList(params) {\n        return this.getBudgetList(params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadBudgets(params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getCostCenters(budgetCode) {\n        return this.get(budgetCode).pipe(map((budget) => {\n            var _a;\n            return ({\n                values: (_a = budget.costCenters) !== null && _a !== void 0 ? _a : [],\n            });\n        }));\n    }\n    getErrorState(budgetCode) {\n        return this.getBudgetState(budgetCode).pipe(map((state) => state.error));\n    }\n    create(budget) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateBudget({ userId, budget })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(budgetCode, budget) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateBudget({ userId, budgetCode, budget })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(budgetCode) {\n        return getItemStatus(this.getBudgetState(budgetCode));\n    }\n}\nBudgetService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nBudgetService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: BudgetService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\nclass CostCenterService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    load(costCenterCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadCostCenter({ userId, costCenterCode })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadList(params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadCostCenters({ userId, params })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getCostCenter(costCenterCode) {\n        return this.store.select(getCostCenter(costCenterCode));\n    }\n    getCostCenterValue(costCenterCode) {\n        return this.store\n            .select(getCostCenterValue(costCenterCode))\n            .pipe(filter(Boolean));\n    }\n    getCostCenterList(params) {\n        return this.store.select(getCostCenterList(params));\n    }\n    getBudgetList(costCenterCode, params) {\n        return this.store.select(getAssignedBudgets(costCenterCode, params));\n    }\n    get(costCenterCode) {\n        const loading$ = this.getCostCenter(costCenterCode).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.load(costCenterCode);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getCostCenterValue(costCenterCode));\n    }\n    getList(params) {\n        return this.getCostCenterList(params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadList(params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getCostCenterState(costCenterCode) {\n        return this.store.select(getCostCenterState(costCenterCode));\n    }\n    create(costCenter) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateCostCenter({ userId, costCenter })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(costCenterCode, costCenter) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateCostCenter({\n            userId,\n            costCenterCode,\n            costCenter,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(costCenterCode) {\n        return getItemStatus(this.getCostCenter(costCenterCode));\n    }\n    loadBudgets(costCenterCode, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadAssignedBudgets({\n            userId,\n            costCenterCode,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getBudgets(costCenterCode, params) {\n        return this.getBudgetList(costCenterCode, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadBudgets(costCenterCode, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    assignBudget(costCenterCode, budgetCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignBudget(costCenterCode, budgetCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getErrorState(costCenterCode) {\n        return this.getCostCenterState(costCenterCode).pipe(map((state) => state.error));\n    }\n}\nCostCenterService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nCostCenterService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: CostCenterService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\nclass OrgUnitService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    clearAssignedUsersList(orgUnitId, roleId, params) {\n        this.store.dispatch(new ClearAssignedUsers({ orgUnitId, roleId, params }));\n    }\n    load(orgUnitId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadOrgUnit({ userId, orgUnitId })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadList() {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadOrgUnitNodes({ userId })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadTree() {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadTree({ userId })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadApprovalProcesses() {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadApprovalProcesses({ userId })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadUsers(orgUnitId, roleId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadAssignedUsers({\n            userId,\n            orgUnitId,\n            roleId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadAddresses(orgUnitId) {\n        // TODO: replace it after turn on loadAddresses$\n        // this.store.dispatch(\n        //   new OrgUnitActions.LoadAddresses({ userId, orgUnitId })\n        // );\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadOrgUnit({ userId, orgUnitId })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getOrgUnit(orgUnitId) {\n        return this.store.select(getOrgUnit(orgUnitId));\n    }\n    getOrgUnitValue(orgUnitId) {\n        return this.store.select(getOrgUnitValue(orgUnitId)).pipe(filter(Boolean));\n    }\n    getTreeState() {\n        return this.store.select(getOrgUnitTree());\n    }\n    getOrgUnitsList() {\n        return this.store.select(getOrgUnitList());\n    }\n    getAddressesState(orgUnitId) {\n        return this.store.select(getB2BAddresses(orgUnitId, null));\n    }\n    getAddressState(addressId) {\n        return this.store.select(getB2BAddress(addressId));\n    }\n    getAssignedUsers(orgUnitId, roleId, params) {\n        return this.store.select(getAssignedUsers(orgUnitId, roleId, params));\n    }\n    getApprovalProcessesList() {\n        return this.store.select(getApprovalProcesses());\n    }\n    get(orgUnitId) {\n        const loading$ = this.getOrgUnit(orgUnitId).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.load(orgUnitId);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getOrgUnitValue(orgUnitId));\n    }\n    getCostCenters(orgUnitId) {\n        return this.get(orgUnitId).pipe(map((orgUnit) => {\n            var _a;\n            return ({\n                values: (_a = orgUnit.costCenters) !== null && _a !== void 0 ? _a : [],\n            });\n        }));\n    }\n    findUnitChildrenInTree(orginitId, unit) {\n        return unit.id === orginitId\n            ? unit.children\n            : unit.children.flatMap((child) => this.findUnitChildrenInTree(orginitId, child));\n    }\n    getChildUnits(orgUnitId) {\n        return this.getTree().pipe(map((tree) => ({\n            values: this.findUnitChildrenInTree(orgUnitId, tree),\n        })));\n    }\n    getTree() {\n        return this.getTreeState().pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadTree();\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getApprovalProcesses() {\n        return this.getApprovalProcessesList().pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadApprovalProcesses();\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getList() {\n        return this.getOrgUnitsList().pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadList();\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getActiveUnitList() {\n        return this.getList().pipe(map((units) => units.filter((unit) => unit.active)), map((units) => units.sort(this.sortUnitList)));\n    }\n    sortUnitList(a, b) {\n        return a.id.toLowerCase() < b.id.toLowerCase()\n            ? -1\n            : a.id.toLowerCase() > b.id.toLowerCase()\n                ? 1\n                : 0;\n    }\n    getUsers(orgUnitId, roleId, params) {\n        return this.getAssignedUsers(orgUnitId, roleId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadUsers(orgUnitId, roleId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getErrorState(orgCustomerId) {\n        return this.getOrgUnitState(orgCustomerId).pipe(map((state) => state.error));\n    }\n    create(unit) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateUnit({ userId, unit })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(unitCode, unit) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateUnit({ userId, unitCode, unit })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(orgUnitId) {\n        return getItemStatus(this.getOrgUnit(orgUnitId));\n    }\n    assignRole(orgCustomerId, roleId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignRole(orgCustomerId, roleId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    assignApprover(orgUnitId, orgCustomerId, roleId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignApprover(orgUnitId, orgCustomerId, roleId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    createAddress(orgUnitId, address) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateAddress({\n            userId,\n            orgUnitId,\n            address,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getAddresses(orgUnitId) {\n        return this.getAddressesState(orgUnitId).pipe(observeOn(queueScheduler), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.loadAddresses(orgUnitId);\n            }\n        }), filter((state) => state.success || state.error), map((state) => state.value));\n    }\n    getAddress(orgUnitId, addressId) {\n        return this.getAddressState(addressId).pipe(observeOn(queueScheduler), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.loadAddresses(orgUnitId);\n            }\n        }), filter((state) => state.success || state.error), map((state) => state.value));\n    }\n    updateAddress(orgUnitId, addressId, address) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateAddress({\n            userId,\n            orgUnitId,\n            addressId,\n            address,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getAddressLoadingStatus(addressId) {\n        return getItemStatus(this.getAddressState(addressId));\n    }\n    deleteAddress(orgUnitId, addressId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new DeleteAddress({\n            userId,\n            orgUnitId,\n            addressId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getOrgUnitState(orgUnitId) {\n        return this.store.select(getOrgUnitState(orgUnitId));\n    }\n}\nOrgUnitService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrgUnitService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OrgUnitService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\nclass PermissionService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    loadPermission(permissionCode) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadPermission({\n            userId,\n            permissionCode,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadPermissions(params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadPermissions({ userId, params })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadPermissionTypes() {\n        this.userIdService.takeUserId(true).subscribe(() => this.store.dispatch(new LoadPermissionTypes()), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getPermission(permissionCode) {\n        return this.store.select(getPermission(permissionCode));\n    }\n    getPermissionValue(permissionCode) {\n        return this.store\n            .select(getPermissionValue(permissionCode))\n            .pipe(filter(Boolean));\n    }\n    getPermissionList(params) {\n        return this.store.select(getPermissionList(params));\n    }\n    getPermissionTypeList() {\n        return this.store.select(getPermissionTypes());\n    }\n    get(permissionCode) {\n        const loading$ = this.getPermission(permissionCode).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.loadPermission(permissionCode);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getPermissionValue(permissionCode));\n    }\n    getTypes() {\n        return this.getPermissionTypeList().pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadPermissionTypes();\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getList(params) {\n        return this.getPermissionList(params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadPermissions(params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    create(permission) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreatePermission({ userId, permission })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(permissionCode, permission) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdatePermission({\n            userId,\n            permissionCode,\n            permission,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(permissionCode) {\n        return getItemStatus(this.getPermission(permissionCode));\n    }\n    getPermissionState(code) {\n        return this.store.select(getPermissionState(code));\n    }\n    getErrorState(permissionCode) {\n        return this.getPermissionState(permissionCode).pipe(map((state) => state.error));\n    }\n}\nPermissionService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nPermissionService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: PermissionService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\nclass UserGroupService {\n    constructor(store, userIdService) {\n        this.store = store;\n        this.userIdService = userIdService;\n    }\n    load(userGroupId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadUserGroup({\n            userId,\n            userGroupId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadList(params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadUserGroups({ userId, params })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getUserGroup(userGroupId) {\n        return this.store.select(getUserGroup(userGroupId));\n    }\n    getUserGroupValue(userGroupId) {\n        return this.store\n            .select(getUserGroupValue(userGroupId))\n            .pipe(filter(Boolean));\n    }\n    getUserGroupList(params) {\n        return this.store.select(getUserGroupList(params));\n    }\n    getAvailableOrgCustomersList(userGroupId, params) {\n        return this.store.select(getAvailableOrgCustomers(userGroupId, params));\n    }\n    getAvailableOrderApprovalPermissionsList(userGroupId, params) {\n        return this.store.select(getAvailableOrderApprovalPermissions(userGroupId, params));\n    }\n    get(userGroupUid) {\n        const loading$ = this.getUserGroup(userGroupUid).pipe(auditTime(0), tap((state) => {\n            if (!(state.loading || state.success || state.error)) {\n                this.load(userGroupUid);\n            }\n        }));\n        return using(() => loading$.subscribe(), () => this.getUserGroupValue(userGroupUid));\n    }\n    getList(params) {\n        return this.getUserGroupList(params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadList(params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    create(userGroup) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new CreateUserGroup({\n            userId,\n            userGroup,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    update(userGroupId, userGroup) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UpdateUserGroup({\n            userId,\n            userGroupId,\n            userGroup,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getLoadingStatus(budgetCode) {\n        return getItemStatus(this.getUserGroup(budgetCode));\n    }\n    delete(userGroupId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new DeleteUserGroup({\n            userId,\n            userGroupId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadAvailableOrgCustomers(userGroupId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadAvailableOrgCustomers({\n            userId,\n            userGroupId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    loadAvailableOrderApprovalPermissions(userGroupId, params) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new LoadPermissions$1({\n            userId,\n            userGroupId,\n            params,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    getAvailableOrgCustomers(userGroupId, params) {\n        return this.getAvailableOrgCustomersList(userGroupId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadAvailableOrgCustomers(userGroupId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    getAvailableOrderApprovalPermissions(userGroupId, params) {\n        return this.getAvailableOrderApprovalPermissionsList(userGroupId, params).pipe(observeOn(queueScheduler), tap((process) => {\n            if (!(process.loading || process.success || process.error)) {\n                this.loadAvailableOrderApprovalPermissions(userGroupId, params);\n            }\n        }), filter((process) => process.success || process.error), map((result) => result.value));\n    }\n    assignMember(userGroupId, customerId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignMember({\n            userId,\n            userGroupId,\n            customerId,\n        })), () => {\n            // TODO: for future releases, refactor this part to thrown errors\n        });\n    }\n    unassignMember(userGroupId, customerId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignMember({\n            userId,\n            userGroupId,\n            customerId,\n        })), () => { });\n    }\n    unassignAllMembers(userGroupId) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignAllMembers({\n            userId,\n            userGroupId,\n        })), () => { });\n    }\n    assignPermission(userGroupId, permissionUid) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new AssignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n        })), () => { });\n    }\n    unassignPermission(userGroupId, permissionUid) {\n        this.userIdService.takeUserId(true).subscribe((userId) => this.store.dispatch(new UnassignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n        })), () => { });\n    }\n    getUserGroupState(code) {\n        return this.store.select(getUserGroupState(code));\n    }\n    getErrorState(code) {\n        return this.getUserGroupState(code).pipe(map((state) => state.error));\n    }\n}\nUserGroupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupService, deps: [{ token: i1$2.Store }, { token: i1.UserIdService }], target: i0.ɵɵFactoryTarget.Injectable });\nUserGroupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserGroupService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1$2.Store }, { type: i1.UserIdService }]; } });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ADDRESS_ENTITIES, ADDRESS_LIST, AdminGuard, AdministrationCoreModule, B2BUNIT_APPROVAL_PROCESSES_NORMALIZER, B2BUNIT_NODE_LIST_NORMALIZER, B2BUNIT_NODE_NORMALIZER, B2BUNIT_NORMALIZER, B2BUNIT_SERIALIZER, b2bUser_action as B2BUserActions, B2BUserAdapter, B2BUserConnector, b2bUser_selector as B2BUserSelectors, B2BUserService, B2B_USERS_NORMALIZER, B2B_USER_APPROVERS, B2B_USER_ENTITIES, B2B_USER_FEATURE, B2B_USER_NORMALIZER, B2B_USER_PERMISSIONS, B2B_USER_SERIALIZER, B2B_USER_USER_GROUPS, BUDGETS_NORMALIZER, BUDGET_ENTITIES, BUDGET_FEATURE, BUDGET_LIST, BUDGET_NORMALIZER, BUDGET_SERIALIZER, budget_action as BudgetActions, BudgetAdapter, BudgetConnector, budget_selector as BudgetSelectors, BudgetService, COST_CENTER_ASSIGNED_BUDGETS, COST_CENTER_ENTITIES, COST_CENTER_FEATURE, COST_CENTER_LIST, costCenter_action as CostCenterActions, CostCenterAdapter, CostCenterConnector, costCenter_selector as CostCenterSelectors, CostCenterService, LoadStatus, ORGANIZATION_FEATURE, ORG_UNIT_APPROVAL_PROCESSES, ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_ASSIGNED_USERS, ORG_UNIT_ENTITIES, ORG_UNIT_FEATURE, ORG_UNIT_NODES, ORG_UNIT_NODE_ENTITIES, ORG_UNIT_NODE_LIST, ORG_UNIT_TREE, ORG_UNIT_TREE_ENTITY, orgUnit_action as OrgUnitActions, OrgUnitAdapter, OrgUnitConnector, orgUnit_selector as OrgUnitSelectors, OrgUnitService, organization_action as OrganizationActions, OrganizationBadRequestHandler, OrganizationConflictHandler, OrganizationPageMetaModule, OrganizationPageMetaResolver, PERMISSIONS_NORMALIZER, PERMISSION_ENTITIES, PERMISSION_FEATURE, PERMISSION_LIST, PERMISSION_NORMALIZER, PERMISSION_SERIALIZER, PERMISSION_TYPES, PERMISSION_TYPES_LIST, PERMISSION_TYPES_NORMALIZER, PERMISSION_TYPE_NORMALIZER, Period, permission_action as PermissionActions, PermissionAdapter, PermissionConnector, permission_selector as PermissionSelectors, PermissionService, USER_GROUPS_NORMALIZER, USER_GROUP_AVAILABLE_CUSTOMERS, USER_GROUP_ENTITIES, USER_GROUP_FEATURE, USER_GROUP_LIST, USER_GROUP_NORMALIZER, USER_GROUP_PERMISSIONS, USER_GROUP_SERIALIZER, USER_LIST, userGroup_action as UserGroupActions, UserGroupAdapter, UserGroupConnector, userGroup_selector as UserGroupSelectors, UserGroupService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}