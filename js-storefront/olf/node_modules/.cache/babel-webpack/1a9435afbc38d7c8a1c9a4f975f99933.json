{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { PRODUCT_NORMALIZER, OCC_USER_ID_ANONYMOUS, InterceptorUtil, USE_CLIENT_TOKEN, ORDER_NORMALIZER, OCC_USER_ID_CURRENT, REPLENISHMENT_ORDER_NORMALIZER, provideDefaultConfig } from '@spartacus/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { ORDER_HISTORY_NORMALIZER, CONSIGNMENT_TRACKING_NORMALIZER, ORDER_RETURN_REQUEST_INPUT_SERIALIZER, ORDER_RETURN_REQUEST_NORMALIZER, ORDER_RETURNS_NORMALIZER, REPLENISHMENT_ORDER_HISTORY_NORMALIZER, OrderAdapter, ReplenishmentOrderAdapter } from '@spartacus/order/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nlet OccReturnRequestNormalizer = /*#__PURE__*/(() => {\n  class OccReturnRequestNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      if (source.returnEntries) {\n        target.returnEntries = source.returnEntries.map(entry => Object.assign(Object.assign({}, entry), {\n          orderEntry: this.convertOrderEntry(entry.orderEntry)\n        }));\n      }\n      return target;\n    }\n    convertOrderEntry(source) {\n      return Object.assign(Object.assign({}, source), {\n        product: this.converter.convert(source === null || source === void 0 ? void 0 : source.product, PRODUCT_NORMALIZER)\n      });\n    }\n  }\n  OccReturnRequestNormalizer.ɵfac = function OccReturnRequestNormalizer_Factory(t) {\n    return new (t || OccReturnRequestNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccReturnRequestNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccReturnRequestNormalizer,\n    factory: OccReturnRequestNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccReturnRequestNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrderAdapter = /*#__PURE__*/(() => {\n  class OccOrderAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, orderCode) {\n      const url = this.occEndpoints.buildUrl('orderDetail', {\n        urlParams: {\n          userId,\n          orderId: orderCode\n        }\n      });\n      let headers = new HttpHeaders();\n      if (userId === OCC_USER_ID_ANONYMOUS) {\n        headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n      }\n      return this.http.get(url, {\n        headers\n      }).pipe(this.converter.pipeable(ORDER_NORMALIZER));\n    }\n    loadHistory(userId, pageSize, currentPage, sort) {\n      const params = {};\n      if (pageSize) {\n        params['pageSize'] = pageSize.toString();\n      }\n      if (currentPage) {\n        params['currentPage'] = currentPage.toString();\n      }\n      if (sort) {\n        params['sort'] = sort.toString();\n      }\n      const url = this.occEndpoints.buildUrl('orderHistory', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n      return this.http.get(url).pipe(this.converter.pipeable(ORDER_HISTORY_NORMALIZER));\n    }\n    getConsignmentTracking(orderCode, consignmentCode, userId = OCC_USER_ID_CURRENT) {\n      const url = this.occEndpoints.buildUrl('consignmentTracking', {\n        urlParams: {\n          userId,\n          orderCode,\n          consignmentCode\n        }\n      });\n      return this.http.get(url).pipe(this.converter.pipeable(CONSIGNMENT_TRACKING_NORMALIZER));\n    }\n    cancel(userId, orderCode, cancelRequestInput) {\n      const url = this.occEndpoints.buildUrl('cancelOrder', {\n        urlParams: {\n          userId,\n          orderId: orderCode\n        }\n      });\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.post(url, cancelRequestInput, {\n        headers\n      }).pipe(catchError(error => throwError(error)));\n    }\n    createReturnRequest(userId, returnRequestInput) {\n      const url = this.occEndpoints.buildUrl('returnOrder', {\n        urlParams: {\n          userId\n        }\n      });\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      returnRequestInput = this.converter.convert(returnRequestInput, ORDER_RETURN_REQUEST_INPUT_SERIALIZER);\n      return this.http.post(url, returnRequestInput, {\n        headers\n      }).pipe(catchError(error => throwError(error)), this.converter.pipeable(ORDER_RETURN_REQUEST_NORMALIZER));\n    }\n    loadReturnRequestList(userId, pageSize, currentPage, sort) {\n      const params = {};\n      if (pageSize) {\n        params['pageSize'] = pageSize.toString();\n      }\n      if (currentPage) {\n        params['currentPage'] = currentPage.toString();\n      }\n      if (sort) {\n        params['sort'] = sort.toString();\n      }\n      const url = this.occEndpoints.buildUrl('orderReturns', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n      return this.http.get(url).pipe(this.converter.pipeable(ORDER_RETURNS_NORMALIZER));\n    }\n    loadReturnRequestDetail(userId, returnRequestCode) {\n      const url = this.occEndpoints.buildUrl('orderReturnDetail', {\n        urlParams: {\n          userId,\n          returnRequestCode\n        }\n      });\n      return this.http.get(url).pipe(this.converter.pipeable(ORDER_RETURN_REQUEST_NORMALIZER));\n    }\n    cancelReturnRequest(userId, returnRequestCode, returnRequestModification) {\n      const url = this.occEndpoints.buildUrl('cancelReturn', {\n        urlParams: {\n          userId,\n          returnRequestCode\n        }\n      });\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return this.http.patch(url, returnRequestModification, {\n        headers\n      }).pipe(catchError(error => throwError(error)));\n    }\n  }\n  OccOrderAdapter.ɵfac = function OccOrderAdapter_Factory(t) {\n    return new (t || OccOrderAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccOrderAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrderAdapter,\n    factory: OccOrderAdapter.ɵfac\n  });\n  return OccOrderAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccReplenishmentOrderAdapter = /*#__PURE__*/(() => {\n  class OccReplenishmentOrderAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, replenishmentOrderCode) {\n      return this.http.get(this.occEndpoints.buildUrl('replenishmentOrderDetails', {\n        urlParams: {\n          userId,\n          replenishmentOrderCode\n        }\n      })).pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n    }\n    loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort) {\n      const params = {};\n      if (pageSize) {\n        params['pageSize'] = pageSize.toString();\n      }\n      if (currentPage) {\n        params['currentPage'] = currentPage.toString();\n      }\n      if (sort) {\n        params['sort'] = sort.toString();\n      }\n      return this.http.get(this.occEndpoints.buildUrl('replenishmentOrderDetailsHistory', {\n        urlParams: {\n          userId,\n          replenishmentOrderCode\n        },\n        queryParams: params\n      })).pipe(this.converter.pipeable(ORDER_HISTORY_NORMALIZER));\n    }\n    cancelReplenishmentOrder(userId, replenishmentOrderCode) {\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n      return this.http.patch(this.occEndpoints.buildUrl('cancelReplenishmentOrder', {\n        urlParams: {\n          userId,\n          replenishmentOrderCode\n        }\n      }), {}, {\n        headers\n      }).pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n    }\n    loadHistory(userId, pageSize, currentPage, sort) {\n      const params = {};\n      if (pageSize) {\n        params['pageSize'] = pageSize.toString();\n      }\n      if (currentPage) {\n        params['currentPage'] = currentPage.toString();\n      }\n      if (sort) {\n        params['sort'] = sort.toString();\n      }\n      const url = this.occEndpoints.buildUrl('replenishmentOrderHistory', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n      return this.http.get(url).pipe(this.converter.pipeable(REPLENISHMENT_ORDER_HISTORY_NORMALIZER));\n    }\n  }\n  OccReplenishmentOrderAdapter.ɵfac = function OccReplenishmentOrderAdapter_Factory(t) {\n    return new (t || OccReplenishmentOrderAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccReplenishmentOrderAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccReplenishmentOrderAdapter,\n    factory: OccReplenishmentOrderAdapter.ɵfac\n  });\n  return OccReplenishmentOrderAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Imported for side effects (module augmentation)\n\nconst defaultOccOrderConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        /* eslint-disable max-len */\n        orderHistory: 'users/${userId}/orders',\n        orderDetail: 'users/${userId}/orders/${orderId}?fields=FULL',\n        consignmentTracking: 'users/${userId}/orders/${orderCode}/consignments/${consignmentCode}/tracking',\n        cancelOrder: 'users/${userId}/orders/${orderId}/cancellation',\n        returnOrder: 'users/${userId}/orderReturns?fields=BASIC,returnEntries(BASIC,refundAmount(formattedValue),orderEntry(basePrice(formattedValue),product(name,code,baseOptions,images(DEFAULT,galleryIndex)))),deliveryCost(formattedValue),totalPrice(formattedValue),subTotal(formattedValue)',\n        orderReturns: 'users/${userId}/orderReturns?fields=BASIC',\n        orderReturnDetail: 'users/${userId}/orderReturns/${returnRequestCode}?fields=BASIC,returnEntries(BASIC,refundAmount(formattedValue),orderEntry(basePrice(formattedValue),product(name,code,baseOptions,images(DEFAULT,galleryIndex)))),deliveryCost(formattedValue),totalPrice(formattedValue),subTotal(formattedValue)',\n        cancelReturn: 'users/${userId}/orderReturns/${returnRequestCode}'\n        /* eslint-enable */\n      }\n    }\n  }\n};\nlet OrderOccModule = /*#__PURE__*/(() => {\n  class OrderOccModule {}\n  OrderOccModule.ɵfac = function OrderOccModule_Factory(t) {\n    return new (t || OrderOccModule)();\n  };\n  OrderOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: OrderOccModule\n  });\n  OrderOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig(defaultOccOrderConfig), {\n      provide: OrderAdapter,\n      useClass: OccOrderAdapter\n    }, {\n      provide: ReplenishmentOrderAdapter,\n      useClass: OccReplenishmentOrderAdapter\n    }, {\n      provide: ORDER_RETURN_REQUEST_NORMALIZER,\n      useExisting: OccReturnRequestNormalizer,\n      multi: true\n    }],\n    imports: [[CommonModule]]\n  });\n  return OrderOccModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OccOrderAdapter, OccReplenishmentOrderAdapter, OccReturnRequestNormalizer, OrderOccModule };\n//# sourceMappingURL=spartacus-order-occ.js.map","map":null,"metadata":{},"sourceType":"module"}