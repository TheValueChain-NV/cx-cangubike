{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\nfunction LoginFormComponent_cx_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cx-spinner\", 8);\n  }\n}\nconst _c0 = function () {\n  return {\n    cxRoute: \"forgotPassword\"\n  };\n};\nconst _c1 = function () {\n  return {\n    cxRoute: \"register\"\n  };\n};\nfunction LoginRegisterComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 3);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c1)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.register\"));\n  }\n}\nconst _c2 = function () {\n  return {\n    cxRoute: \"checkoutLogin\"\n  };\n};\nfunction LoginRegisterComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c2)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.guestCheckout\"));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction LoginComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"cx-page-slot\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 1, \"miniLogin.userGreeting\", i0.ɵɵpureFunction1(4, _c3, user_r3.name)), \" \");\n  }\n}\nconst _c4 = function () {\n  return {\n    cxRoute: \"login\"\n  };\n};\nfunction LoginComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵpipe(1, \"cxUrl\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(1, 2, i0.ɵɵpureFunction0(6, _c4)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, \"miniLogin.signInRegister\"));\n  }\n}\nclass LoginFormComponentService {\n  constructor(auth, globalMessage, winRef) {\n    this.auth = auth;\n    this.globalMessage = globalMessage;\n    this.winRef = winRef;\n    this.busy$ = new BehaviorSubject(false);\n    this.isUpdating$ = this.busy$.pipe(tap(state => {\n      var _a, _b, _c;\n      const userId = (_c = (_b = (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.history) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c['newUid'];\n      if (userId) {\n        this.form.patchValue({\n          userId\n        });\n      }\n      state === true ? this.form.disable() : this.form.enable();\n    }));\n    this.form = new FormGroup({\n      userId: new FormControl('', [Validators.required, CustomFormValidators.emailValidator]),\n      password: new FormControl('', Validators.required)\n    });\n  }\n  login() {\n    if (!this.form.valid) {\n      this.form.markAllAsTouched();\n      return;\n    }\n    this.busy$.next(true);\n    from(this.auth.loginWithCredentials(\n    // TODO: consider dropping toLowerCase as this should not be part of the UI,\n    // as it's too opinionated and doesn't work with other AUTH services\n    this.form.value.userId.toLowerCase(), this.form.value.password)).pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn))).subscribe();\n  }\n  onSuccess(isLoggedIn) {\n    if (isLoggedIn) {\n      // We want to remove error messages on successful login (primary the bad\n      // username/password combination)\n      this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n      this.form.reset();\n    }\n    this.busy$.next(false);\n  }\n}\nLoginFormComponentService.ɵfac = function LoginFormComponentService_Factory(t) {\n  return new (t || LoginFormComponentService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i1.GlobalMessageService), i0.ɵɵinject(i1.WindowRef));\n};\nLoginFormComponentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LoginFormComponentService,\n  factory: LoginFormComponentService.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormComponentService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }, {\n      type: i1.GlobalMessageService\n    }, {\n      type: i1.WindowRef\n    }];\n  }, null);\n})();\nclass LoginFormComponent {\n  constructor(service) {\n    this.service = service;\n    this.form = this.service.form;\n    this.isUpdating$ = this.service.isUpdating$;\n    this.style = true;\n  }\n  onSubmit() {\n    this.service.login();\n  }\n}\nLoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n  return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(LoginFormComponentService));\n};\nLoginFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginFormComponent,\n  selectors: [[\"cx-login-form\"]],\n  hostVars: 2,\n  hostBindings: function LoginFormComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"user-form\", ctx.style);\n    }\n  },\n  decls: 24,\n  vars: 29,\n  consts: [[\"class\", \"overlay\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"label-content\"], [\"aria-required\", \"true\", \"type\", \"email\", \"formControlName\", \"userId\", 1, \"form-control\", 3, \"placeholder\"], [\"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"control\"], [\"aria-required\", \"true\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"placeholder\"], [1, \"btn-link\", 3, \"routerLink\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-primary\", 3, \"disabled\"], [1, \"overlay\"]],\n  template: function LoginFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginFormComponent_cx_spinner_0_Template, 1, 0, \"cx-spinner\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵelementStart(2, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(3, \"label\");\n      i0.ɵɵelementStart(4, \"span\", 2);\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵpipe(8, \"cxTranslate\");\n      i0.ɵɵelement(9, \"cx-form-errors\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵelementStart(11, \"span\", 2);\n      i0.ɵɵtext(12);\n      i0.ɵɵpipe(13, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 5);\n      i0.ɵɵpipe(15, \"cxTranslate\");\n      i0.ɵɵelement(16, \"cx-form-errors\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"a\", 6);\n      i0.ɵɵpipe(18, \"cxUrl\");\n      i0.ɵɵtext(19);\n      i0.ɵɵpipe(20, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"button\", 7);\n      i0.ɵɵtext(22);\n      i0.ɵɵpipe(23, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 12, ctx.isUpdating$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, \"loginForm.emailAddress.label\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(8, 16, \"loginForm.emailAddress.placeholder\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"control\", ctx.form.get(\"userId\"));\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 18, \"loginForm.password.label\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 20, \"loginForm.password.placeholder\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"control\", ctx.form.get(\"password\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(18, 22, i0.ɵɵpureFunction0(28, _c0)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 24, \"loginForm.forgotPassword\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.form.disabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 26, \"loginForm.signIn\"), \" \");\n    }\n  },\n  directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i2.FormErrorsComponent, i1$1.RouterLinkWithHref, i2.SpinnerComponent],\n  pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login-form',\n      templateUrl: './login-form.component.html',\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: LoginFormComponentService\n    }];\n  }, {\n    style: [{\n      type: HostBinding,\n      args: ['class.user-form']\n    }]\n  });\n})();\nclass LoginFormModule {}\nLoginFormModule.ɵfac = function LoginFormModule_Factory(t) {\n  return new (t || LoginFormModule)();\n};\nLoginFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginFormModule\n});\nLoginFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      ReturningCustomerLoginComponent: {\n        component: LoginFormComponent,\n        guards: [NotAuthGuard],\n        providers: [{\n          provide: LoginFormComponentService,\n          useClass: LoginFormComponentService,\n          deps: [AuthService, GlobalMessageService, WindowRef]\n        }]\n      }\n    }\n  })],\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, RouterModule, UrlModule, I18nModule, FormErrorsModule, SpinnerModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginFormModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, RouterModule, UrlModule, I18nModule, FormErrorsModule, SpinnerModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          ReturningCustomerLoginComponent: {\n            component: LoginFormComponent,\n            guards: [NotAuthGuard],\n            providers: [{\n              provide: LoginFormComponentService,\n              useClass: LoginFormComponentService,\n              deps: [AuthService, GlobalMessageService, WindowRef]\n            }]\n          }\n        }\n      })],\n      declarations: [LoginFormComponent]\n    }]\n  }], null, null);\n})();\nclass LoginRegisterComponent {\n  constructor(activatedRoute) {\n    this.activatedRoute = activatedRoute;\n    this.loginAsGuest = false;\n  }\n  ngOnInit() {\n    this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n  }\n}\nLoginRegisterComponent.ɵfac = function LoginRegisterComponent_Factory(t) {\n  return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1$1.ActivatedRoute));\n};\nLoginRegisterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginRegisterComponent,\n  selectors: [[\"cx-login-register\"]],\n  decls: 6,\n  vars: 5,\n  consts: [[1, \"register\"], [1, \"cx-section-title\"], [4, \"ngIf\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-register\", 3, \"routerLink\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-guest\", 3, \"routerLink\"]],\n  template: function LoginRegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"p\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"cxTranslate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LoginRegisterComponent_ng_container_4_Template, 5, 7, \"ng-container\", 2);\n      i0.ɵɵtemplate(5, LoginRegisterComponent_ng_container_5_Template, 5, 7, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"loginForm.dontHaveAccount\"), \" \");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loginAsGuest);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.loginAsGuest);\n    }\n  },\n  directives: [i3.NgIf, i1$1.RouterLinkWithHref],\n  pipes: [i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginRegisterComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login-register',\n      templateUrl: './login-register.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.ActivatedRoute\n    }];\n  }, null);\n})();\nclass LoginRegisterModule {}\nLoginRegisterModule.ɵfac = function LoginRegisterModule_Factory(t) {\n  return new (t || LoginRegisterModule)();\n};\nLoginRegisterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginRegisterModule\n});\nLoginRegisterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      ReturningCustomerRegisterComponent: {\n        component: LoginRegisterComponent,\n        guards: [NotAuthGuard]\n      }\n    }\n  })],\n  imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginRegisterModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          ReturningCustomerRegisterComponent: {\n            component: LoginRegisterComponent,\n            guards: [NotAuthGuard]\n          }\n        }\n      })],\n      declarations: [LoginRegisterComponent]\n    }]\n  }], null, null);\n})();\nclass LoginComponent {\n  constructor(auth, userAccount) {\n    this.auth = auth;\n    this.userAccount = userAccount;\n  }\n  ngOnInit() {\n    this.user$ = this.auth.isUserLoggedIn().pipe(switchMap(isUserLoggedIn => {\n      if (isUserLoggedIn) {\n        return this.userAccount.get();\n      } else {\n        return of(undefined);\n      }\n    }));\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2$1.UserAccountFacade));\n};\nLoginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"cx-login\"]],\n  decls: 4,\n  vars: 4,\n  consts: [[4, \"ngIf\", \"ngIfElse\"], [\"login\", \"\"], [1, \"cx-login-greet\"], [\"position\", \"HeaderLinks\"], [\"role\", \"link\", 3, \"routerLink\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_ng_container_0_Template, 5, 6, \"ng-container\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, LoginComponent_ng_template_2_Template, 4, 7, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(3);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.user$))(\"ngIfElse\", _r1);\n    }\n  },\n  directives: [i3.NgIf, i2.PageSlotComponent, i1$1.RouterLinkWithHref],\n  pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginComponent, [{\n    type: Component,\n    args: [{\n      selector: 'cx-login',\n      templateUrl: './login.component.html'\n    }]\n  }], function () {\n    return [{\n      type: i1.AuthService\n    }, {\n      type: i2$1.UserAccountFacade\n    }];\n  }, null);\n})();\nclass LoginModule {}\nLoginModule.ɵfac = function LoginModule_Factory(t) {\n  return new (t || LoginModule)();\n};\nLoginModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LoginModule\n});\nLoginModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig({\n    cmsComponents: {\n      LoginComponent: {\n        component: LoginComponent\n      }\n    }\n  })],\n  imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LoginModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n      providers: [provideDefaultConfig({\n        cmsComponents: {\n          LoginComponent: {\n            component: LoginComponent\n          }\n        }\n      })],\n      declarations: [LoginComponent]\n    }]\n  }], null, null);\n})();\nclass UserAccountComponentsModule {}\nUserAccountComponentsModule.ɵfac = function UserAccountComponentsModule_Factory(t) {\n  return new (t || UserAccountComponentsModule)();\n};\nUserAccountComponentsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: UserAccountComponentsModule\n});\nUserAccountComponentsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[LoginModule, LoginFormModule, LoginRegisterModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(UserAccountComponentsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [LoginModule, LoginFormModule, LoginRegisterModule]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule };","map":{"version":3,"names":["i0","Injectable","Component","ChangeDetectionStrategy","HostBinding","NgModule","i4","FormGroup","FormControl","Validators","FormsModule","ReactiveFormsModule","i1","GlobalMessageType","UrlModule","I18nModule","provideDefaultConfig","NotAuthGuard","AuthService","GlobalMessageService","WindowRef","i2","CustomFormValidators","FormErrorsModule","SpinnerModule","PageSlotModule","BehaviorSubject","from","of","tap","withLatestFrom","switchMap","i3","CommonModule","i1$1","RouterModule","i2$1","LoginFormComponentService","constructor","auth","globalMessage","winRef","busy$","isUpdating$","pipe","state","_a","_b","_c","userId","nativeWindow","history","form","patchValue","disable","enable","required","emailValidator","password","login","valid","markAllAsTouched","next","loginWithCredentials","value","toLowerCase","isUserLoggedIn","_","isLoggedIn","onSuccess","subscribe","remove","MSG_TYPE_ERROR","reset","ɵfac","ɵprov","type","LoginFormComponent","service","style","onSubmit","ɵcmp","NgIf","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","NgControlStatus","FormControlName","FormErrorsComponent","RouterLinkWithHref","SpinnerComponent","AsyncPipe","TranslatePipe","UrlPipe","args","selector","templateUrl","changeDetection","OnPush","LoginFormModule","ɵmod","ɵinj","cmsComponents","ReturningCustomerLoginComponent","component","guards","providers","provide","useClass","deps","imports","declarations","LoginRegisterComponent","activatedRoute","loginAsGuest","ngOnInit","snapshot","queryParams","ActivatedRoute","LoginRegisterModule","ReturningCustomerRegisterComponent","LoginComponent","userAccount","user$","get","undefined","UserAccountFacade","PageSlotComponent","LoginModule","UserAccountComponentsModule"],"sources":["/home/hamid/cangubike/js-storefront/olf/node_modules/@spartacus/user/fesm2015/spartacus-user-account-components.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\n\nclass LoginFormComponentService {\n    constructor(auth, globalMessage, winRef) {\n        this.auth = auth;\n        this.globalMessage = globalMessage;\n        this.winRef = winRef;\n        this.busy$ = new BehaviorSubject(false);\n        this.isUpdating$ = this.busy$.pipe(tap((state) => {\n            var _a, _b, _c;\n            const userId = (_c = (_b = (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.history) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c['newUid'];\n            if (userId) {\n                this.form.patchValue({ userId });\n            }\n            state === true ? this.form.disable() : this.form.enable();\n        }));\n        this.form = new FormGroup({\n            userId: new FormControl('', [\n                Validators.required,\n                CustomFormValidators.emailValidator,\n            ]),\n            password: new FormControl('', Validators.required),\n        });\n    }\n    login() {\n        if (!this.form.valid) {\n            this.form.markAllAsTouched();\n            return;\n        }\n        this.busy$.next(true);\n        from(this.auth.loginWithCredentials(\n        // TODO: consider dropping toLowerCase as this should not be part of the UI,\n        // as it's too opinionated and doesn't work with other AUTH services\n        this.form.value.userId.toLowerCase(), this.form.value.password))\n            .pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn)))\n            .subscribe();\n    }\n    onSuccess(isLoggedIn) {\n        if (isLoggedIn) {\n            // We want to remove error messages on successful login (primary the bad\n            // username/password combination)\n            this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.form.reset();\n        }\n        this.busy$.next(false);\n    }\n}\nLoginFormComponentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService, deps: [{ token: i1.AuthService }, { token: i1.GlobalMessageService }, { token: i1.WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLoginFormComponentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponentService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i1.GlobalMessageService }, { type: i1.WindowRef }]; } });\n\nclass LoginFormComponent {\n    constructor(service) {\n        this.service = service;\n        this.form = this.service.form;\n        this.isUpdating$ = this.service.isUpdating$;\n        this.style = true;\n    }\n    onSubmit() {\n        this.service.login();\n    }\n}\nLoginFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponent, deps: [{ token: LoginFormComponentService }], target: i0.ɵɵFactoryTarget.Component });\nLoginFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginFormComponent, selector: \"cx-login-form\", host: { properties: { \"class.user-form\": \"this.style\" } }, ngImport: i0, template: \"<cx-spinner class=\\\"overlay\\\" *ngIf=\\\"isUpdating$ | async\\\"> </cx-spinner>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.emailAddress.label' | cxTranslate\\n    }}</span>\\n    <input\\n      aria-required=\\\"true\\\"\\n      type=\\\"email\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"userId\\\"\\n      placeholder=\\\"{{ 'loginForm.emailAddress.placeholder' | cxTranslate }}\\\"\\n    />\\n    <cx-form-errors\\n      aria-live=\\\"assertive\\\"\\n      aria-atomic=\\\"true\\\"\\n      [control]=\\\"form.get('userId')\\\"\\n    ></cx-form-errors>\\n  </label>\\n\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.password.label' | cxTranslate\\n    }}</span>\\n    <input\\n      aria-required=\\\"true\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'loginForm.password.placeholder' | cxTranslate }}\\\"\\n      formControlName=\\\"password\\\"\\n    />\\n    <cx-form-errors\\n      aria-live=\\\"assertive\\\"\\n      aria-atomic=\\\"true\\\"\\n      [control]=\\\"form.get('password')\\\"\\n    ></cx-form-errors>\\n  </label>\\n\\n  <a [routerLink]=\\\"{ cxRoute: 'forgotPassword' } | cxUrl\\\" class=\\\"btn-link\\\">\\n    {{ 'loginForm.forgotPassword' | cxTranslate }}\\n  </a>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-block btn-primary\\\"\\n    [disabled]=\\\"form.disabled\\\"\\n  >\\n    {{ 'loginForm.signIn' | cxTranslate }}\\n  </button>\\n</form>\\n\", components: [{ type: i2.SpinnerComponent, selector: \"cx-spinner\" }, { type: i2.FormErrorsComponent, selector: \"cx-form-errors\", inputs: [\"prefix\", \"translationParams\", \"control\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"disabled\", \"formControlName\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"async\": i3.AsyncPipe, \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login-form',\n                    templateUrl: './login-form.component.html',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], ctorParameters: function () { return [{ type: LoginFormComponentService }]; }, propDecorators: { style: [{\n                type: HostBinding,\n                args: ['class.user-form']\n            }] } });\n\nclass LoginFormModule {\n}\nLoginFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, declarations: [LoginFormComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule,\n        I18nModule,\n        FormErrorsModule,\n        SpinnerModule] });\nLoginFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerLoginComponent: {\n                    component: LoginFormComponent,\n                    guards: [NotAuthGuard],\n                    providers: [\n                        {\n                            provide: LoginFormComponentService,\n                            useClass: LoginFormComponentService,\n                            deps: [AuthService, GlobalMessageService, WindowRef],\n                        },\n                    ],\n                },\n            },\n        }),\n    ], imports: [[\n            CommonModule,\n            FormsModule,\n            ReactiveFormsModule,\n            RouterModule,\n            UrlModule,\n            I18nModule,\n            FormErrorsModule,\n            SpinnerModule,\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginFormModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        RouterModule,\n                        UrlModule,\n                        I18nModule,\n                        FormErrorsModule,\n                        SpinnerModule,\n                    ],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerLoginComponent: {\n                                    component: LoginFormComponent,\n                                    guards: [NotAuthGuard],\n                                    providers: [\n                                        {\n                                            provide: LoginFormComponentService,\n                                            useClass: LoginFormComponentService,\n                                            deps: [AuthService, GlobalMessageService, WindowRef],\n                                        },\n                                    ],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginFormComponent],\n                }]\n        }] });\n\nclass LoginRegisterComponent {\n    constructor(activatedRoute) {\n        this.activatedRoute = activatedRoute;\n        this.loginAsGuest = false;\n    }\n    ngOnInit() {\n        this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n    }\n}\nLoginRegisterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterComponent, deps: [{ token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\nLoginRegisterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginRegisterComponent, selector: \"cx-login-register\", ngImport: i0, template: \"<div class=\\\"register\\\">\\n  <p class=\\\"cx-section-title\\\">\\n    {{ 'loginForm.dontHaveAccount' | cxTranslate }}\\n  </p>\\n\\n  <ng-container *ngIf=\\\"!loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'register' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-register\\\"\\n      >{{ 'loginForm.register' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'checkoutLogin' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-guest\\\"\\n      >{{ 'loginForm.guestCheckout' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n</div>\\n\", directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login-register',\n                    templateUrl: './login-register.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }]; } });\n\nclass LoginRegisterModule {\n}\nLoginRegisterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginRegisterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, declarations: [LoginRegisterComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginRegisterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerRegisterComponent: {\n                    component: LoginRegisterComponent,\n                    guards: [NotAuthGuard],\n                },\n            },\n        }),\n    ], imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginRegisterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerRegisterComponent: {\n                                    component: LoginRegisterComponent,\n                                    guards: [NotAuthGuard],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginRegisterComponent],\n                }]\n        }] });\n\nclass LoginComponent {\n    constructor(auth, userAccount) {\n        this.auth = auth;\n        this.userAccount = userAccount;\n    }\n    ngOnInit() {\n        this.user$ = this.auth.isUserLoggedIn().pipe(switchMap((isUserLoggedIn) => {\n            if (isUserLoggedIn) {\n                return this.userAccount.get();\n            }\n            else {\n                return of(undefined);\n            }\n        }));\n    }\n}\nLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginComponent, deps: [{ token: i1.AuthService }, { token: i2$1.UserAccountFacade }], target: i0.ɵɵFactoryTarget.Component });\nLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.0.5\", type: LoginComponent, selector: \"cx-login\", ngImport: i0, template: \"<ng-container *ngIf=\\\"user$ | async as user; else login\\\">\\n  <div class=\\\"cx-login-greet\\\">\\n    {{ 'miniLogin.userGreeting' | cxTranslate: { name: user.name } }}\\n  </div>\\n  <cx-page-slot position=\\\"HeaderLinks\\\"></cx-page-slot>\\n</ng-container>\\n\\n<ng-template #login>\\n  <a role=\\\"link\\\" [routerLink]=\\\"{ cxRoute: 'login' } | cxUrl\\\">{{\\n    'miniLogin.signInRegister' | cxTranslate\\n  }}</a>\\n</ng-template>\\n\", components: [{ type: i2.PageSlotComponent, selector: \"cx-page-slot,[cx-page-slot]\", inputs: [\"position\", \"class\", \"isPageFold\", \"hasComponents\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1$1.RouterLinkWithHref, selector: \"a[routerLink],area[routerLink]\", inputs: [\"routerLink\", \"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", \"relativeTo\"] }], pipes: { \"async\": i3.AsyncPipe, \"cxTranslate\": i1.TranslatePipe, \"cxUrl\": i1.UrlPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cx-login',\n                    templateUrl: './login.component.html',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i2$1.UserAccountFacade }]; } });\n\nclass LoginModule {\n}\nLoginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, declarations: [LoginComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                LoginComponent: {\n                    component: LoginComponent,\n                },\n            },\n        }),\n    ], imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: LoginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                LoginComponent: {\n                                    component: LoginComponent,\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginComponent],\n                }]\n        }] });\n\nclass UserAccountComponentsModule {\n}\nUserAccountComponentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountComponentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, imports: [LoginModule, LoginFormModule, LoginRegisterModule] });\nUserAccountComponentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, imports: [[LoginModule, LoginFormModule, LoginRegisterModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: UserAccountComponentsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [LoginModule, LoginFormModule, LoginRegisterModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}