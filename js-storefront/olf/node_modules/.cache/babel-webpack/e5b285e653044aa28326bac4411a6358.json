{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { FormGroup, FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\nfunction LoginFormComponent_cx_spinner_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"cx-spinner\", 8);\n  }\n}\nconst _c0 = function () {\n  return {\n    cxRoute: \"forgotPassword\"\n  };\n};\nconst _c1 = function () {\n  return {\n    cxRoute: \"register\"\n  };\n};\nfunction LoginRegisterComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 3);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c1)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.register\"));\n  }\n}\nconst _c2 = function () {\n  return {\n    cxRoute: \"checkoutLogin\"\n  };\n};\nfunction LoginRegisterComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 4);\n    i0.ɵɵpipe(2, \"cxUrl\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(2, 2, i0.ɵɵpureFunction0(6, _c2)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 4, \"loginForm.guestCheckout\"));\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    name: a0\n  };\n};\nfunction LoginComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"cx-page-slot\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const user_r3 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 1, \"miniLogin.userGreeting\", i0.ɵɵpureFunction1(4, _c3, user_r3.name)), \" \");\n  }\n}\nconst _c4 = function () {\n  return {\n    cxRoute: \"login\"\n  };\n};\nfunction LoginComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 4);\n    i0.ɵɵpipe(1, \"cxUrl\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"cxTranslate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(1, 2, i0.ɵɵpureFunction0(6, _c4)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, \"miniLogin.signInRegister\"));\n  }\n}\nlet LoginFormComponentService = /*#__PURE__*/(() => {\n  class LoginFormComponentService {\n    constructor(auth, globalMessage, winRef) {\n      this.auth = auth;\n      this.globalMessage = globalMessage;\n      this.winRef = winRef;\n      this.busy$ = new BehaviorSubject(false);\n      this.isUpdating$ = this.busy$.pipe(tap(state => {\n        var _a, _b, _c;\n        const userId = (_c = (_b = (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.history) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c['newUid'];\n        if (userId) {\n          this.form.patchValue({\n            userId\n          });\n        }\n        state === true ? this.form.disable() : this.form.enable();\n      }));\n      this.form = new FormGroup({\n        userId: new FormControl('', [Validators.required, CustomFormValidators.emailValidator]),\n        password: new FormControl('', Validators.required)\n      });\n    }\n    login() {\n      if (!this.form.valid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n      this.busy$.next(true);\n      from(this.auth.loginWithCredentials(\n      // TODO: consider dropping toLowerCase as this should not be part of the UI,\n      // as it's too opinionated and doesn't work with other AUTH services\n      this.form.value.userId.toLowerCase(), this.form.value.password)).pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn))).subscribe();\n    }\n    onSuccess(isLoggedIn) {\n      if (isLoggedIn) {\n        // We want to remove error messages on successful login (primary the bad\n        // username/password combination)\n        this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n        this.form.reset();\n      }\n      this.busy$.next(false);\n    }\n  }\n  LoginFormComponentService.ɵfac = function LoginFormComponentService_Factory(t) {\n    return new (t || LoginFormComponentService)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i1.GlobalMessageService), i0.ɵɵinject(i1.WindowRef));\n  };\n  LoginFormComponentService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: LoginFormComponentService,\n    factory: LoginFormComponentService.ɵfac\n  });\n  return LoginFormComponentService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginFormComponent = /*#__PURE__*/(() => {\n  class LoginFormComponent {\n    constructor(service) {\n      this.service = service;\n      this.form = this.service.form;\n      this.isUpdating$ = this.service.isUpdating$;\n      this.style = true;\n    }\n    onSubmit() {\n      this.service.login();\n    }\n  }\n  LoginFormComponent.ɵfac = function LoginFormComponent_Factory(t) {\n    return new (t || LoginFormComponent)(i0.ɵɵdirectiveInject(LoginFormComponentService));\n  };\n  LoginFormComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LoginFormComponent,\n    selectors: [[\"cx-login-form\"]],\n    hostVars: 2,\n    hostBindings: function LoginFormComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"user-form\", ctx.style);\n      }\n    },\n    decls: 24,\n    vars: 29,\n    consts: [[\"class\", \"overlay\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"label-content\"], [\"aria-required\", \"true\", \"type\", \"email\", \"formControlName\", \"userId\", 1, \"form-control\", 3, \"placeholder\"], [\"aria-live\", \"assertive\", \"aria-atomic\", \"true\", 3, \"control\"], [\"aria-required\", \"true\", \"type\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"placeholder\"], [1, \"btn-link\", 3, \"routerLink\"], [\"type\", \"submit\", 1, \"btn\", \"btn-block\", \"btn-primary\", 3, \"disabled\"], [1, \"overlay\"]],\n    template: function LoginFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginFormComponent_cx_spinner_0_Template, 1, 0, \"cx-spinner\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginFormComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵelementStart(4, \"span\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"cxTranslate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 3);\n        i0.ɵɵpipe(8, \"cxTranslate\");\n        i0.ɵɵelement(9, \"cx-form-errors\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵelementStart(11, \"span\", 2);\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"cxTranslate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 5);\n        i0.ɵɵpipe(15, \"cxTranslate\");\n        i0.ɵɵelement(16, \"cx-form-errors\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 6);\n        i0.ɵɵpipe(18, \"cxUrl\");\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"cxTranslate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"button\", 7);\n        i0.ɵɵtext(22);\n        i0.ɵɵpipe(23, \"cxTranslate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 12, ctx.isUpdating$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, \"loginForm.emailAddress.label\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(8, 16, \"loginForm.emailAddress.placeholder\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"control\", ctx.form.get(\"userId\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 18, \"loginForm.password.label\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 20, \"loginForm.password.placeholder\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"control\", ctx.form.get(\"password\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpipeBind1(18, 22, i0.ɵɵpureFunction0(28, _c0)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 24, \"loginForm.forgotPassword\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.disabled);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(23, 26, \"loginForm.signIn\"), \" \");\n      }\n    },\n    directives: [i3.NgIf, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i2.FormErrorsComponent, i1$1.RouterLinkWithHref, i2.SpinnerComponent],\n    pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return LoginFormComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginFormModule = /*#__PURE__*/(() => {\n  class LoginFormModule {}\n  LoginFormModule.ɵfac = function LoginFormModule_Factory(t) {\n    return new (t || LoginFormModule)();\n  };\n  LoginFormModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LoginFormModule\n  });\n  LoginFormModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig({\n      cmsComponents: {\n        ReturningCustomerLoginComponent: {\n          component: LoginFormComponent,\n          guards: [NotAuthGuard],\n          providers: [{\n            provide: LoginFormComponentService,\n            useClass: LoginFormComponentService,\n            deps: [AuthService, GlobalMessageService, WindowRef]\n          }]\n        }\n      }\n    })],\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, RouterModule, UrlModule, I18nModule, FormErrorsModule, SpinnerModule]]\n  });\n  return LoginFormModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginRegisterComponent = /*#__PURE__*/(() => {\n  class LoginRegisterComponent {\n    constructor(activatedRoute) {\n      this.activatedRoute = activatedRoute;\n      this.loginAsGuest = false;\n    }\n    ngOnInit() {\n      this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n    }\n  }\n  LoginRegisterComponent.ɵfac = function LoginRegisterComponent_Factory(t) {\n    return new (t || LoginRegisterComponent)(i0.ɵɵdirectiveInject(i1$1.ActivatedRoute));\n  };\n  LoginRegisterComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LoginRegisterComponent,\n    selectors: [[\"cx-login-register\"]],\n    decls: 6,\n    vars: 5,\n    consts: [[1, \"register\"], [1, \"cx-section-title\"], [4, \"ngIf\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-register\", 3, \"routerLink\"], [1, \"btn\", \"btn-block\", \"btn-secondary\", \"btn-guest\", 3, \"routerLink\"]],\n    template: function LoginRegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"p\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵpipe(3, \"cxTranslate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(4, LoginRegisterComponent_ng_container_4_Template, 5, 7, \"ng-container\", 2);\n        i0.ɵɵtemplate(5, LoginRegisterComponent_ng_container_5_Template, 5, 7, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"loginForm.dontHaveAccount\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginAsGuest);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginAsGuest);\n      }\n    },\n    directives: [i3.NgIf, i1$1.RouterLinkWithHref],\n    pipes: [i1.TranslatePipe, i1.UrlPipe],\n    encapsulation: 2\n  });\n  return LoginRegisterComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginRegisterModule = /*#__PURE__*/(() => {\n  class LoginRegisterModule {}\n  LoginRegisterModule.ɵfac = function LoginRegisterModule_Factory(t) {\n    return new (t || LoginRegisterModule)();\n  };\n  LoginRegisterModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LoginRegisterModule\n  });\n  LoginRegisterModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig({\n      cmsComponents: {\n        ReturningCustomerRegisterComponent: {\n          component: LoginRegisterComponent,\n          guards: [NotAuthGuard]\n        }\n      }\n    })],\n    imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n  });\n  return LoginRegisterModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, userAccount) {\n      this.auth = auth;\n      this.userAccount = userAccount;\n    }\n    ngOnInit() {\n      this.user$ = this.auth.isUserLoggedIn().pipe(switchMap(isUserLoggedIn => {\n        if (isUserLoggedIn) {\n          return this.userAccount.get();\n        } else {\n          return of(undefined);\n        }\n      }));\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2$1.UserAccountFacade));\n  };\n  LoginComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"cx-login\"]],\n    decls: 4,\n    vars: 4,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"login\", \"\"], [1, \"cx-login-greet\"], [\"position\", \"HeaderLinks\"], [\"role\", \"link\", 3, \"routerLink\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginComponent_ng_container_0_Template, 5, 6, \"ng-container\", 0);\n        i0.ɵɵpipe(1, \"async\");\n        i0.ɵɵtemplate(2, LoginComponent_ng_template_2_Template, 4, 7, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(3);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.user$))(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i3.NgIf, i2.PageSlotComponent, i1$1.RouterLinkWithHref],\n    pipes: [i3.AsyncPipe, i1.TranslatePipe, i1.UrlPipe],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet LoginModule = /*#__PURE__*/(() => {\n  class LoginModule {}\n  LoginModule.ɵfac = function LoginModule_Factory(t) {\n    return new (t || LoginModule)();\n  };\n  LoginModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LoginModule\n  });\n  LoginModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig({\n      cmsComponents: {\n        LoginComponent: {\n          component: LoginComponent\n        }\n      }\n    })],\n    imports: [[CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule]]\n  });\n  return LoginModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet UserAccountComponentsModule = /*#__PURE__*/(() => {\n  class UserAccountComponentsModule {}\n  UserAccountComponentsModule.ɵfac = function UserAccountComponentsModule_Factory(t) {\n    return new (t || UserAccountComponentsModule)();\n  };\n  UserAccountComponentsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: UserAccountComponentsModule\n  });\n  UserAccountComponentsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[LoginModule, LoginFormModule, LoginRegisterModule]]\n  });\n  return UserAccountComponentsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule };\n//# sourceMappingURL=spartacus-user-account-components.js.map","map":null,"metadata":{},"sourceType":"module"}