{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, Optional, Input, NgModule } from '@angular/core';\nimport * as i1 from '@spartacus/core';\nimport { VariantQualifier, UrlModule, I18nModule, provideDefaultConfigFactory } from '@spartacus/core';\nimport * as i2 from '@spartacus/storefront';\nimport { ProductListOutlets, provideOutlet, OutletPosition } from '@spartacus/storefront';\nimport { Subscription, EMPTY } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nfunction ProductVariantStyleIconsComponent_ul_0_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelement(1, \"img\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const v_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"src\", ctx_r1.getVariantThumbnailUrl(v_r2.variantOptionQualifiers), i0.ɵɵsanitizeUrl)(\"title\", ctx_r1.variantNames[v_r2.code])(\"alt\", ctx_r1.variantNames[v_r2.code]);\n  }\n}\nfunction ProductVariantStyleIconsComponent_ul_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 1);\n    i0.ɵɵtemplate(1, ProductVariantStyleIconsComponent_ul_0_li_1_Template, 2, 3, \"li\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.variants);\n  }\n}\nconst PRODUCT_VARIANTS_FEATURE = 'productVariants';\nlet ProductVariantStyleIconsComponent = /*#__PURE__*/(() => {\n  class ProductVariantStyleIconsComponent {\n    constructor(config, productListItemContext) {\n      var _a, _b;\n      this.config = config;\n      this.productListItemContext = productListItemContext;\n      this.subscriptions = new Subscription();\n      this.ProductListOutlets = ProductListOutlets;\n      this.product$ = (_b = (_a = this.productListItemContext) === null || _a === void 0 ? void 0 : _a.product$) !== null && _b !== void 0 ? _b : EMPTY;\n      this.variantNames = {};\n    }\n    ngOnInit() {\n      this.setVariantsNames();\n      this.subscriptions.add(this.product$.subscribe(product => {\n        if (product.variantOptions && product.variantOptions.length) {\n          this.variants = product.variantOptions;\n          this.setVariantsNames();\n        }\n      }));\n    }\n    setVariantsNames() {\n      var _a;\n      (_a = this.variants) === null || _a === void 0 ? void 0 : _a.forEach(variant => {\n        if (variant.code && variant.variantOptionQualifiers) {\n          this.variantNames[variant.code] = this.getVariantName(variant.variantOptionQualifiers) || '';\n        }\n      });\n    }\n    getVariantThumbnailUrl(variantOptionQualifiers) {\n      var _a, _b, _c, _d;\n      const thumbnail = variantOptionQualifiers.find(item => item.qualifier === VariantQualifier.THUMBNAIL);\n      return thumbnail ? `${(_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.backend) === null || _b === void 0 ? void 0 : _b.occ) === null || _c === void 0 ? void 0 : _c.baseUrl}${(_d = thumbnail.image) === null || _d === void 0 ? void 0 : _d.url}` : '';\n    }\n    getVariantName(variantOptionQualifiers) {\n      const rollupProperty = variantOptionQualifiers.find(item => item.qualifier === VariantQualifier.ROLLUP_PROPERTY);\n      const property = rollupProperty ? variantOptionQualifiers.find(item => item.qualifier === rollupProperty.value) : null;\n      return property ? property.value : '';\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n  }\n  ProductVariantStyleIconsComponent.ɵfac = function ProductVariantStyleIconsComponent_Factory(t) {\n    return new (t || ProductVariantStyleIconsComponent)(i0.ɵɵdirectiveInject(i1.OccConfig), i0.ɵɵdirectiveInject(i2.ProductListItemContext, 8));\n  };\n  ProductVariantStyleIconsComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ProductVariantStyleIconsComponent,\n    selectors: [[\"cx-variant-style-icons\"]],\n    inputs: {\n      variants: \"variants\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"variant-list\", 4, \"ngIf\"], [1, \"variant-list\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function ProductVariantStyleIconsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ProductVariantStyleIconsComponent_ul_0_Template, 2, 1, \"ul\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.variants && ctx.variants.length);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf],\n    styles: [\"ul[_ngcontent-%COMP%]{padding:0;white-space:nowrap;overflow:hidden}ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline}ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:50px}\"],\n    changeDetection: 0\n  });\n  return ProductVariantStyleIconsComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ProductVariantStyleIconsModule = /*#__PURE__*/(() => {\n  class ProductVariantStyleIconsModule {}\n  ProductVariantStyleIconsModule.ɵfac = function ProductVariantStyleIconsModule_Factory(t) {\n    return new (t || ProductVariantStyleIconsModule)();\n  };\n  ProductVariantStyleIconsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ProductVariantStyleIconsModule\n  });\n  ProductVariantStyleIconsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, RouterModule, UrlModule, I18nModule]]\n  });\n  return ProductVariantStyleIconsModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nfunction defaultProductVariantsComponentsConfig() {\n  const config = {\n    featureModules: {\n      [PRODUCT_VARIANTS_FEATURE]: {\n        cmsComponents: ['ProductVariantSelectorComponent']\n      }\n    }\n  };\n  return config;\n}\nlet ProductVariantsRootModule = /*#__PURE__*/(() => {\n  class ProductVariantsRootModule {}\n  ProductVariantsRootModule.ɵfac = function ProductVariantsRootModule_Factory(t) {\n    return new (t || ProductVariantsRootModule)();\n  };\n  ProductVariantsRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ProductVariantsRootModule\n  });\n  ProductVariantsRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfigFactory(defaultProductVariantsComponentsConfig), provideOutlet({\n      id: ProductListOutlets.ITEM_DETAILS,\n      position: OutletPosition.AFTER,\n      component: ProductVariantStyleIconsComponent\n    })],\n    imports: [[ProductVariantStyleIconsModule]]\n  });\n  return ProductVariantsRootModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { PRODUCT_VARIANTS_FEATURE, ProductVariantStyleIconsComponent, ProductVariantStyleIconsModule, ProductVariantsRootModule, defaultProductVariantsComponentsConfig };\n//# sourceMappingURL=spartacus-product-variants-root.js.map","map":null,"metadata":{},"sourceType":"module"}