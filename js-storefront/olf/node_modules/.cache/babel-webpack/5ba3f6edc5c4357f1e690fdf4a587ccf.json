{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1 from '@spartacus/core';\nimport { PageType, ComponentDecorator, SlotDecorator } from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\nimport * as i2 from '@spartacus/smartedit/root';\nlet SmartEditService = /*#__PURE__*/(() => {\n  class SmartEditService {\n    constructor(cmsService, routingService, baseSiteService, zone, winRef, rendererFactory, config, scriptLoader) {\n      this.cmsService = cmsService;\n      this.routingService = routingService;\n      this.baseSiteService = baseSiteService;\n      this.zone = zone;\n      this.winRef = winRef;\n      this.rendererFactory = rendererFactory;\n      this.config = config;\n      this.scriptLoader = scriptLoader;\n      this.isPreviewPage = false;\n      // load webApplicationInjector.js first\n      this.loadScript();\n      if (winRef.nativeWindow) {\n        const window = winRef.nativeWindow;\n        // rerender components and slots after editing\n        window.smartedit = window.smartedit || {};\n        window.smartedit.renderComponent = (componentId, componentType, parentId) => {\n          return this.renderComponent(componentId, componentType, parentId);\n        };\n        // reprocess page\n        window.smartedit.reprocessPage = this.reprocessPage;\n      }\n    }\n    processCmsPage() {\n      this.baseSiteService.get().pipe(filter(site => Boolean(site)), take(1)).subscribe(site => {\n        this.defaultPreviewCategoryCode = site.defaultPreviewCategoryCode;\n        this.defaultPreviewProductCode = site.defaultPreviewProductCode;\n        this.cmsService.getCurrentPage().pipe(filter(Boolean)).subscribe(cmsPage => {\n          this._currentPageId = cmsPage.pageId;\n          // before adding contract to page, we need redirect to that page\n          this.goToPreviewPage(cmsPage);\n          this.addPageContract(cmsPage);\n        });\n      });\n    }\n    /**\n     * load webApplicationInjector.js\n     */\n    loadScript() {\n      var _a;\n      this.scriptLoader.embedScript({\n        src: 'assets/webApplicationInjector.js',\n        params: undefined,\n        attributes: {\n          id: 'text/smartedit-injector',\n          'data-smartedit-allow-origin': (_a = this.config.smartEdit) === null || _a === void 0 ? void 0 : _a.allowOrigin\n        }\n      });\n    }\n    /**\n     * add CSS classes in a body tag\n     */\n    addPageContract(cmsPage) {\n      const renderer = this.rendererFactory.createRenderer('body', null);\n      const element = this.winRef.document.body;\n      // remove old page contract\n      const previousContract = [];\n      Array.from(element.classList).forEach(attr => previousContract.push(attr));\n      previousContract.forEach(attr => renderer.removeClass(element, attr));\n      // add new page contract\n      this.addSmartEditContract(element, renderer, cmsPage.properties);\n    }\n    /**\n     * go to the default preview page\n     */\n    goToPreviewPage(cmsPage) {\n      // only the first page is the smartedit preview page\n      if (!this.isPreviewPage) {\n        this.isPreviewPage = true;\n        if (cmsPage.type === PageType.PRODUCT_PAGE && this.defaultPreviewProductCode) {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: {\n              code: this.defaultPreviewProductCode,\n              name: ''\n            }\n          });\n        } else if (cmsPage.type === PageType.CATEGORY_PAGE && this.defaultPreviewCategoryCode) {\n          this.routingService.go({\n            cxRoute: 'category',\n            params: {\n              code: this.defaultPreviewCategoryCode\n            }\n          });\n        }\n      }\n    }\n    /**\n     * re-render CMS components and slots\n     */\n    renderComponent(componentId, componentType, parentId) {\n      if (componentId) {\n        this.zone.run(() => {\n          // without parentId, it is slot\n          if (!parentId) {\n            if (this._currentPageId) {\n              this.cmsService.refreshPageById(this._currentPageId);\n            } else {\n              this.cmsService.refreshLatestPage();\n            }\n          } else if (componentType) {\n            this.cmsService.refreshComponent(componentId);\n          }\n        });\n      }\n      return true;\n    }\n    reprocessPage() {\n      // TODO: reprocess page API\n    }\n    /**\n     * add smartedit HTML markup contract\n     */\n    addSmartEditContract(element, renderer, properties) {\n      if (properties) {\n        // check each group of properties, e.g. smartedit\n        Object.keys(properties).forEach(group => {\n          const name = 'data-' + group + '-';\n          const groupProps = properties[group];\n          // check each property in the group\n          Object.keys(groupProps).forEach(propName => {\n            const propValue = groupProps[propName];\n            if (propName === 'classes') {\n              const classes = propValue.split(' ');\n              classes.forEach(classItem => {\n                renderer.addClass(element, classItem);\n              });\n            } else {\n              renderer.setAttribute(element, name + propName.split(/(?=[A-Z])/).join('-').toLowerCase(), propValue);\n            }\n          });\n        });\n      }\n    }\n  }\n  SmartEditService.ɵfac = function SmartEditService_Factory(t) {\n    return new (t || SmartEditService)(i0.ɵɵinject(i1.CmsService), i0.ɵɵinject(i1.RoutingService), i0.ɵɵinject(i1.BaseSiteService), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.WindowRef), i0.ɵɵinject(i0.RendererFactory2), i0.ɵɵinject(i2.SmartEditConfig), i0.ɵɵinject(i1.ScriptLoader));\n  };\n  SmartEditService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SmartEditService,\n    factory: SmartEditService.ɵfac,\n    providedIn: 'root'\n  });\n  return SmartEditService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SmartEditComponentDecorator = /*#__PURE__*/(() => {\n  class SmartEditComponentDecorator extends ComponentDecorator {\n    constructor(smartEditService) {\n      super();\n      this.smartEditService = smartEditService;\n    }\n    decorate(element, renderer, component) {\n      if (component) {\n        this.smartEditService.addSmartEditContract(element, renderer, component.properties);\n      }\n    }\n  }\n  SmartEditComponentDecorator.ɵfac = function SmartEditComponentDecorator_Factory(t) {\n    return new (t || SmartEditComponentDecorator)(i0.ɵɵinject(SmartEditService));\n  };\n  SmartEditComponentDecorator.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SmartEditComponentDecorator,\n    factory: SmartEditComponentDecorator.ɵfac,\n    providedIn: 'root'\n  });\n  return SmartEditComponentDecorator;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SmartEditSlotDecorator = /*#__PURE__*/(() => {\n  class SmartEditSlotDecorator extends SlotDecorator {\n    constructor(smartEditService) {\n      super();\n      this.smartEditService = smartEditService;\n    }\n    decorate(element, renderer, slot) {\n      if (slot) {\n        this.smartEditService.addSmartEditContract(element, renderer, slot.properties);\n      }\n    }\n  }\n  SmartEditSlotDecorator.ɵfac = function SmartEditSlotDecorator_Factory(t) {\n    return new (t || SmartEditSlotDecorator)(i0.ɵɵinject(SmartEditService));\n  };\n  SmartEditSlotDecorator.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SmartEditSlotDecorator,\n    factory: SmartEditSlotDecorator.ɵfac,\n    providedIn: 'root'\n  });\n  return SmartEditSlotDecorator;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst smartEditDecorators = [{\n  provide: ComponentDecorator,\n  useExisting: SmartEditComponentDecorator,\n  multi: true\n}, {\n  provide: SlotDecorator,\n  useExisting: SmartEditSlotDecorator,\n  multi: true\n}];\nlet SmartEditCoreModule = /*#__PURE__*/(() => {\n  class SmartEditCoreModule {\n    constructor(smartEditService) {\n      this.smartEditService = smartEditService;\n      this.smartEditService.processCmsPage();\n    }\n  }\n  SmartEditCoreModule.ɵfac = function SmartEditCoreModule_Factory(t) {\n    return new (t || SmartEditCoreModule)(i0.ɵɵinject(SmartEditService));\n  };\n  SmartEditCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SmartEditCoreModule\n  });\n  SmartEditCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [...smartEditDecorators]\n  });\n  return SmartEditCoreModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SmartEditCoreModule, SmartEditService };\n//# sourceMappingURL=spartacus-smartedit-core.js.map","map":null,"metadata":{},"sourceType":"module"}