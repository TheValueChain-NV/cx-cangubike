{"ast":null,"code":"import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/asm/core';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER, AsmAdapter } from '@spartacus/asm/core';\nimport * as i2 from '@spartacus/core';\nimport { InterceptorUtil, USE_CUSTOMER_SUPPORT_AGENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\nlet OccAsmAdapter = /*#__PURE__*/(() => {\n  class OccAsmAdapter {\n    constructor(http, occEndpointsService, converterService, config, baseSiteService) {\n      this.http = http;\n      this.occEndpointsService = occEndpointsService;\n      this.converterService = converterService;\n      this.config = config;\n      this.baseSiteService = baseSiteService;\n      this.baseSiteService.getActive().subscribe(value => this.activeBaseSite = value);\n    }\n    customerSearch(options) {\n      const headers = InterceptorUtil.createHeader(USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new HttpHeaders());\n      let params = new HttpParams().set('baseSite', this.activeBaseSite).set('sort', 'byNameAsc');\n      if (typeof options['query'] !== 'undefined') {\n        params = params.set('query', '' + options.query);\n      }\n      if (typeof options['pageSize'] !== 'undefined') {\n        params = params.set('pageSize', '' + options.pageSize);\n      }\n      const url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {\n        baseSite: false,\n        prefix: false\n      });\n      return this.http.get(url, {\n        headers,\n        params\n      }).pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n    }\n  }\n  OccAsmAdapter.ɵfac = function OccAsmAdapter_Factory(t) {\n    return new (t || OccAsmAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService), i0.ɵɵinject(i3.AsmConfig), i0.ɵɵinject(i2.BaseSiteService));\n  };\n  OccAsmAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccAsmAdapter,\n    factory: OccAsmAdapter.ɵfac\n  });\n  return OccAsmAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst defaultOccAsmConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        asmCustomerSearch: '/assistedservicewebservices/customers/search'\n      }\n    }\n  }\n};\nlet AsmOccModule = /*#__PURE__*/(() => {\n  class AsmOccModule {}\n  AsmOccModule.ɵfac = function AsmOccModule_Factory(t) {\n    return new (t || AsmOccModule)();\n  };\n  AsmOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AsmOccModule\n  });\n  AsmOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig(defaultOccAsmConfig), {\n      provide: AsmAdapter,\n      useClass: OccAsmAdapter\n    }],\n    imports: [[CommonModule]]\n  });\n  return AsmOccModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsmOccModule, OccAsmAdapter };\n//# sourceMappingURL=spartacus-asm-occ.js.map","map":null,"metadata":{},"sourceType":"module"}