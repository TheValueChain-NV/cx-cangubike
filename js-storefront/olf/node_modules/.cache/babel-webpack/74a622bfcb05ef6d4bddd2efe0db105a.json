{"ast":null,"code":"const quickOrderCartForm = {\n  /**\n   * @deprecated since 4.2, use entriesWereAdded instead\n   */\n  entriesWasAdded: '({{ quantity }}) {{ product }} has been added to the cart',\n  entriesWereAdded: '({{ quantity }}) {{ product }} has been added to the cart',\n  entryWasAdded: '{{ product }} has been added to the cart',\n  noResults: 'We could not find any products',\n  stockLevelReached: 'The maximum stock level has been reached',\n  title: 'Quick Order',\n  productCodePlaceholder: 'Enter ID',\n  addToCart: 'Add',\n  product: 'Product',\n  products: 'Products',\n  productCodeLabel: 'Product ID',\n  quantityLabel: 'Qty'\n};\nconst quickOrderForm = {\n  placeholder: 'Enter Product name or SKU',\n  listLimitReached: 'The product limit has been reached.',\n  id: 'ID {{ id }}',\n  noResults: 'We could not find any results',\n  addProduct: 'Add product {{ product }}'\n};\nconst quickOrderList = {\n  addToCart: 'Add to cart',\n  emptyList: 'Empty list',\n  header: 'Add Products/SKUs',\n  subHeader: 'You can add up to {{ limit }} valid SKU at a time.',\n  errorProceedingToCart: 'Error proceeding to Cart.',\n  warningProceedingToCart: 'Warning proceeding to Cart.',\n  successfullyAddedToCart: 'Successfully added to Cart.',\n  errors: {\n    productIsOutOfStock: '{{ name }} (#{{code}}) is out of stock.',\n    reviewErrors: 'Please review these errors',\n    listIsFull: 'The list is full, add these {{ count }} products to Cart in order to continue.',\n    nonPurchasableError: 'Product {{ name }} cannot be purchased'\n  },\n  warnings: {\n    productWasReduced: 'Quantity for {{ name }} (#{{code}}) was reduced to {{ quantityAdded}}.',\n    reviewWarnings: 'Please review these warnings'\n  },\n  successes: {\n    productAddedToCart: '{{ name }} (#{{code}}) was added to cart.'\n  },\n  informations: {\n    addProductBeforeAddingToCart: 'Add products to the list before adding to the cart.'\n  },\n  undo: 'UNDO',\n  productWasDeleted: 'Product \"{{ name }}\" moved to trash.'\n};\nconst quickOrderTable = {\n  product: 'Product',\n  id: 'ID',\n  price: 'Price',\n  quantity: 'QTY',\n  itemPrice: 'Item price',\n  qty: 'Qty',\n  inStock: 'In Stock',\n  lowStock: 'Low Stock',\n  outOfStock: 'Out of Stock',\n  listCleared: 'Quick order list has been cleared',\n  addedtoCart: 'Quick order list has been added to the cart'\n};\nconst quickOrder = {\n  quickOrderCartForm,\n  quickOrderForm,\n  quickOrderList,\n  quickOrderTable\n};\nconst en = {\n  quickOrder\n};\nconst quickOrderTranslations = {\n  en\n};\n// expose all translation chunk mapping for quickOrder feature\nconst quickOrderTranslationChunksConfig = {\n  quickOrder: ['quickOrderCartForm', 'quickOrderForm', 'quickOrderList', 'quickOrderTable']\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { quickOrderTranslationChunksConfig, quickOrderTranslations };\n//# sourceMappingURL=spartacus-cart-quick-order-assets.js.map","map":null,"metadata":{},"sourceType":"module"}