{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { BUDGET_NORMALIZER, BUDGETS_NORMALIZER, BUDGET_SERIALIZER, B2BUNIT_NORMALIZER, B2BUNIT_SERIALIZER, B2BUNIT_NODE_NORMALIZER, B2BUNIT_NODE_LIST_NORMALIZER, B2BUNIT_APPROVAL_PROCESSES_NORMALIZER, B2B_USERS_NORMALIZER, USER_GROUP_NORMALIZER, USER_GROUPS_NORMALIZER, PERMISSIONS_NORMALIZER, USER_GROUP_SERIALIZER, PERMISSION_NORMALIZER, PERMISSION_SERIALIZER, PERMISSION_TYPES_NORMALIZER, B2B_USER_NORMALIZER, B2B_USER_SERIALIZER, PERMISSION_TYPE_NORMALIZER, BudgetAdapter, OrgUnitAdapter, UserGroupAdapter, PermissionAdapter, CostCenterAdapter, B2BUserAdapter } from '@spartacus/organization/administration/core';\nimport * as i1 from '@angular/common/http';\nimport * as i2 from '@spartacus/core';\nimport { COST_CENTER_NORMALIZER, COST_CENTERS_NORMALIZER, COST_CENTER_SERIALIZER, ADDRESS_LIST_NORMALIZER, ADDRESS_SERIALIZER, ADDRESS_NORMALIZER, TimeUtils, CostCenterOccModule, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\nlet OccBudgetAdapter = /*#__PURE__*/(() => {\n  class OccBudgetAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, budgetCode) {\n      return this.http.get(this.getBudgetEndpoint(userId, budgetCode)).pipe(this.converter.pipeable(BUDGET_NORMALIZER));\n    }\n    loadList(userId, params) {\n      return this.http.get(this.getBudgetsEndpoint(userId, params)).pipe(this.converter.pipeable(BUDGETS_NORMALIZER));\n    }\n    create(userId, budget) {\n      const convertedBudget = this.converter.convert(budget, BUDGET_SERIALIZER);\n      return this.http.post(this.getBudgetsEndpoint(userId), convertedBudget).pipe(this.converter.pipeable(BUDGET_NORMALIZER));\n    }\n    update(userId, budgetCode, budget) {\n      const convertedBudget = this.converter.convert(budget, BUDGET_SERIALIZER);\n      return this.http.patch(this.getBudgetEndpoint(userId, budgetCode), convertedBudget).pipe(this.converter.pipeable(BUDGET_NORMALIZER));\n    }\n    getBudgetEndpoint(userId, budgetCode) {\n      return this.occEndpoints.buildUrl('budget', {\n        urlParams: {\n          userId,\n          budgetCode\n        }\n      });\n    }\n    getBudgetsEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('budgets', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n  }\n  OccBudgetAdapter.ɵfac = function OccBudgetAdapter_Factory(t) {\n    return new (t || OccBudgetAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccBudgetAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccBudgetAdapter,\n    factory: OccBudgetAdapter.ɵfac\n  });\n  return OccBudgetAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccCostCenterAdapter = /*#__PURE__*/(() => {\n  class OccCostCenterAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, costCenterCode) {\n      return this.http.get(this.getCostCenterEndpoint(userId, costCenterCode)).pipe(this.converter.pipeable(COST_CENTER_NORMALIZER));\n    }\n    loadList(userId, params) {\n      return this.http.get(this.getAllCostCentersEndpoint(userId, params)).pipe(this.converter.pipeable(COST_CENTERS_NORMALIZER));\n    }\n    create(userId, costCenter) {\n      costCenter = this.converter.convert(costCenter, COST_CENTER_SERIALIZER);\n      return this.http.post(this.getCostCentersEndpoint(userId), costCenter).pipe(this.converter.pipeable(COST_CENTER_NORMALIZER));\n    }\n    update(userId, costCenterCode, costCenter) {\n      costCenter = this.converter.convert(costCenter, COST_CENTER_SERIALIZER);\n      return this.http.patch(this.getCostCenterEndpoint(userId, costCenterCode), costCenter).pipe(this.converter.pipeable(COST_CENTER_NORMALIZER));\n    }\n    loadBudgets(userId, costCenterCode, params) {\n      return this.http.get(this.getBudgetsEndpoint(userId, costCenterCode, params)).pipe(this.converter.pipeable(BUDGETS_NORMALIZER));\n    }\n    assignBudget(userId, costCenterCode, budgetCode) {\n      return this.http.post(this.getBudgetsEndpoint(userId, costCenterCode, {\n        budgetCode\n      }), null);\n    }\n    unassignBudget(userId, costCenterCode, budgetCode) {\n      return this.http.delete(this.getBudgetEndpoint(userId, costCenterCode, budgetCode));\n    }\n    getCostCenterEndpoint(userId, costCenterCode) {\n      return this.occEndpoints.buildUrl('costCenter', {\n        urlParams: {\n          userId,\n          costCenterCode\n        }\n      });\n    }\n    getCostCentersEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('costCenters', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n    getAllCostCentersEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('costCentersAll', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n    getBudgetsEndpoint(userId, costCenterCode, params) {\n      return this.occEndpoints.buildUrl('costCenterBudgets', {\n        urlParams: {\n          userId,\n          costCenterCode\n        },\n        queryParams: params\n      });\n    }\n    getBudgetEndpoint(userId, costCenterCode, budgetCode) {\n      return this.occEndpoints.buildUrl('costCenterBudget', {\n        urlParams: {\n          userId,\n          costCenterCode,\n          budgetCode\n        }\n      });\n    }\n  }\n  OccCostCenterAdapter.ɵfac = function OccCostCenterAdapter_Factory(t) {\n    return new (t || OccCostCenterAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccCostCenterAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccCostCenterAdapter,\n    factory: OccCostCenterAdapter.ɵfac\n  });\n  return OccCostCenterAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrgUnitAdapter = /*#__PURE__*/(() => {\n  class OccOrgUnitAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, orgUnitId) {\n      return this.http.get(this.getOrgUnitEndpoint(userId, orgUnitId)).pipe(this.converter.pipeable(B2BUNIT_NORMALIZER));\n    }\n    create(userId, orgUnit) {\n      return this.http.post(this.getOrgUnitsEndpoint(userId), orgUnit).pipe(this.converter.pipeable(B2BUNIT_NORMALIZER));\n    }\n    update(userId, orgUnitId, orgUnit) {\n      orgUnit = this.converter.convert(orgUnit, B2BUNIT_SERIALIZER);\n      return this.http.patch(this.getOrgUnitEndpoint(userId, orgUnitId), orgUnit).pipe(this.converter.pipeable(B2BUNIT_NORMALIZER));\n    }\n    loadTree(userId) {\n      return this.http.get(this.getOrgUnitsTreeEndpoint(userId)).pipe(this.converter.pipeable(B2BUNIT_NODE_NORMALIZER));\n    }\n    loadList(userId) {\n      return this.http.get(this.getAvailableOrgUnitsEndpoint(userId)).pipe(this.converter.pipeable(B2BUNIT_NODE_LIST_NORMALIZER));\n    }\n    loadApprovalProcesses(userId) {\n      return this.http.get(this.getOrgUnitsApprovalProcessesEndpoint(userId)).pipe(this.converter.pipeable(B2BUNIT_APPROVAL_PROCESSES_NORMALIZER));\n    }\n    loadUsers(userId, orgUnitId, roleId, params) {\n      return this.http.get(this.getUsersEndpoint(userId, orgUnitId, roleId, params)).pipe(this.converter.pipeable(B2B_USERS_NORMALIZER));\n    }\n    assignRole(userId, orgCustomerId, roleId) {\n      return this.http.post(this.getRolesEndpoint(userId, orgCustomerId, {\n        roleId\n      }), null);\n    }\n    unassignRole(userId, orgCustomerId, roleId) {\n      return this.http.delete(this.getRoleEndpoint(userId, orgCustomerId, roleId));\n    }\n    assignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n      return this.http.post(this.getApproversEndpoint(userId, orgUnitId, orgCustomerId, {\n        roleId\n      }), null);\n    }\n    unassignApprover(userId, orgUnitId, orgCustomerId, roleId) {\n      return this.http.delete(this.getApproverEndpoint(userId, orgUnitId, orgCustomerId, roleId));\n    }\n    loadAddresses(userId, orgUnitId) {\n      return this.http.get(this.getAddressesEndpoint(userId, orgUnitId)).pipe(this.converter.pipeable(ADDRESS_LIST_NORMALIZER));\n    }\n    createAddress(userId, orgUnitId, address) {\n      address = this.converter.convert(address, ADDRESS_SERIALIZER);\n      return this.http.post(this.getAddressesEndpoint(userId, orgUnitId), address).pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n    }\n    updateAddress(userId, orgUnitId, addressId, address) {\n      address = this.converter.convert(address, ADDRESS_SERIALIZER);\n      return this.http.patch(this.getAddressEndpoint(userId, orgUnitId, addressId), address).pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n    }\n    deleteAddress(userId, orgUnitId, addressId) {\n      return this.http.delete(this.getAddressEndpoint(userId, orgUnitId, addressId)).pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n    }\n    getOrgUnitEndpoint(userId, orgUnitId) {\n      return this.occEndpoints.buildUrl('orgUnit', {\n        urlParams: {\n          userId,\n          orgUnitId\n        }\n      });\n    }\n    getOrgUnitsEndpoint(userId) {\n      return this.occEndpoints.buildUrl('orgUnits', {\n        urlParams: {\n          userId\n        }\n      });\n    }\n    getAvailableOrgUnitsEndpoint(userId) {\n      return this.occEndpoints.buildUrl('orgUnitsAvailable', {\n        urlParams: {\n          userId\n        }\n      });\n    }\n    getOrgUnitsTreeEndpoint(userId) {\n      return this.occEndpoints.buildUrl('orgUnitsTree', {\n        urlParams: {\n          userId\n        }\n      });\n    }\n    getOrgUnitsApprovalProcessesEndpoint(userId) {\n      return this.occEndpoints.buildUrl('orgUnitsApprovalProcesses', {\n        urlParams: {\n          userId\n        }\n      });\n    }\n    getUsersEndpoint(userId, orgUnitId, roleId, params) {\n      return this.occEndpoints.buildUrl('orgUnitUsers', {\n        urlParams: {\n          userId,\n          orgUnitId,\n          roleId\n        },\n        queryParams: params\n      });\n    }\n    getRolesEndpoint(userId, orgCustomerId, params) {\n      return this.occEndpoints.buildUrl('orgUnitUserRoles', {\n        urlParams: {\n          userId,\n          orgCustomerId\n        },\n        queryParams: params\n      });\n    }\n    getRoleEndpoint(userId, orgCustomerId, roleId) {\n      return this.occEndpoints.buildUrl('orgUnitUserRole', {\n        urlParams: {\n          userId,\n          orgCustomerId,\n          roleId\n        }\n      });\n    }\n    getApproversEndpoint(userId, orgUnitId, orgCustomerId, params) {\n      return this.occEndpoints.buildUrl('orgUnitApprovers', {\n        urlParams: {\n          userId,\n          orgUnitId,\n          orgCustomerId\n        },\n        queryParams: params\n      });\n    }\n    getApproverEndpoint(userId, orgUnitId, orgCustomerId, roleId) {\n      return this.occEndpoints.buildUrl('orgUnitApprover', {\n        urlParams: {\n          userId,\n          orgUnitId,\n          orgCustomerId,\n          roleId\n        }\n      });\n    }\n    getAddressesEndpoint(userId, orgUnitId) {\n      return this.occEndpoints.buildUrl('orgUnitsAddresses', {\n        urlParams: {\n          userId,\n          orgUnitId\n        }\n      });\n    }\n    getAddressEndpoint(userId, orgUnitId, addressId) {\n      return this.occEndpoints.buildUrl('orgUnitsAddress', {\n        urlParams: {\n          userId,\n          orgUnitId,\n          addressId\n        }\n      });\n    }\n  }\n  OccOrgUnitAdapter.ɵfac = function OccOrgUnitAdapter_Factory(t) {\n    return new (t || OccOrgUnitAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccOrgUnitAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrgUnitAdapter,\n    factory: OccOrgUnitAdapter.ɵfac\n  });\n  return OccOrgUnitAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccUserGroupAdapter = /*#__PURE__*/(() => {\n  class OccUserGroupAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, userGroupId) {\n      return this.http.get(this.getUserGroupEndpoint(userId, userGroupId)).pipe(this.converter.pipeable(USER_GROUP_NORMALIZER));\n    }\n    loadList(userId, params) {\n      return this.http.get(this.getUserGroupsEndpoint(userId, params)).pipe(this.converter.pipeable(USER_GROUPS_NORMALIZER));\n    }\n    loadAvailableOrderApprovalPermissions(userId, userGroupId, params) {\n      return this.http.get(this.getPermissionsEndpoint(userId, userGroupId, params)).pipe(this.converter.pipeable(PERMISSIONS_NORMALIZER));\n    }\n    loadAvailableOrgCustomers(userId, userGroupId, params) {\n      return this.http.get(this.getAvailableCustomersEndpoint(userId, userGroupId, params)).pipe(this.converter.pipeable(B2B_USERS_NORMALIZER));\n    }\n    create(userId, userGroup) {\n      userGroup = this.converter.convert(userGroup, USER_GROUP_SERIALIZER);\n      return this.http.post(this.getUserGroupsEndpoint(userId), userGroup).pipe(this.converter.pipeable(USER_GROUP_NORMALIZER));\n    }\n    delete(userId, userGroupId) {\n      return this.http.delete(this.getUserGroupEndpoint(userId, userGroupId)).pipe(this.converter.pipeable(USER_GROUP_NORMALIZER));\n    }\n    update(userId, userGroupId, userGroup) {\n      userGroup = this.converter.convert(userGroup, USER_GROUP_SERIALIZER);\n      return this.http.patch(this.getUserGroupEndpoint(userId, userGroupId), userGroup).pipe(this.converter.pipeable(USER_GROUP_NORMALIZER));\n    }\n    assignMember(userId, userGroupId, orgCustomerId) {\n      return this.http.post(this.getMembersEndpoint(userId, userGroupId, {\n        orgCustomerId\n      }), null);\n    }\n    assignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n      return this.http.post(this.getOrderApprovalPermissionsEndpoint(userId, userGroupId, {\n        orderApprovalPermissionCode\n      }), null);\n    }\n    unassignMember(userId, userGroupId, orgCustomerId) {\n      return this.http.delete(this.getMemberEndpoint(userId, userGroupId, orgCustomerId));\n    }\n    unassignAllMembers(userId, userGroupId) {\n      return this.http.delete(this.getMembersEndpoint(userId, userGroupId));\n    }\n    unassignOrderApprovalPermission(userId, userGroupId, orderApprovalPermissionCode) {\n      return this.http.delete(this.getOrderApprovalPermissionEndpoint(userId, userGroupId, orderApprovalPermissionCode));\n    }\n    getUserGroupEndpoint(userId, userGroupId) {\n      return this.occEndpoints.buildUrl('userGroup', {\n        urlParams: {\n          userId,\n          userGroupId\n        }\n      });\n    }\n    getUserGroupsEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('userGroups', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n    getAvailableCustomersEndpoint(userId, userGroupId, params) {\n      return this.occEndpoints.buildUrl('userGroupAvailableOrgCustomers', {\n        urlParams: {\n          userId,\n          userGroupId\n        },\n        queryParams: params\n      });\n    }\n    getPermissionsEndpoint(userId, userGroupId, params) {\n      return this.occEndpoints.buildUrl('userGroupAvailableOrderApprovalPermissions', {\n        urlParams: {\n          userId,\n          userGroupId\n        },\n        queryParams: params\n      });\n    }\n    getMemberEndpoint(userId, userGroupId, orgCustomerId) {\n      return this.occEndpoints.buildUrl('userGroupMember', {\n        urlParams: {\n          userId,\n          userGroupId,\n          orgCustomerId\n        }\n      });\n    }\n    getMembersEndpoint(userId, userGroupId, params) {\n      return this.occEndpoints.buildUrl('userGroupMembers', {\n        urlParams: {\n          userId,\n          userGroupId\n        },\n        queryParams: params\n      });\n    }\n    getOrderApprovalPermissionsEndpoint(userId, userGroupId, params) {\n      return this.occEndpoints.buildUrl('userGroupOrderApprovalPermissions', {\n        urlParams: {\n          userId,\n          userGroupId\n        },\n        queryParams: params\n      });\n    }\n    getOrderApprovalPermissionEndpoint(userId, userGroupId, orderApprovalPermissionCode) {\n      return this.occEndpoints.buildUrl('userGroupOrderApprovalPermission', {\n        urlParams: {\n          userId,\n          userGroupId,\n          orderApprovalPermissionCode\n        }\n      });\n    }\n  }\n  OccUserGroupAdapter.ɵfac = function OccUserGroupAdapter_Factory(t) {\n    return new (t || OccUserGroupAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccUserGroupAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccUserGroupAdapter,\n    factory: OccUserGroupAdapter.ɵfac\n  });\n  return OccUserGroupAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccPermissionAdapter = /*#__PURE__*/(() => {\n  class OccPermissionAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, permissionCode) {\n      return this.http.get(this.getPermissionEndpoint(userId, permissionCode)).pipe(this.converter.pipeable(PERMISSION_NORMALIZER));\n    }\n    loadList(userId, params) {\n      return this.http.get(this.getPermissionsEndpoint(userId, params)).pipe(this.converter.pipeable(PERMISSIONS_NORMALIZER));\n    }\n    create(userId, permission) {\n      permission = this.converter.convert(permission, PERMISSION_SERIALIZER);\n      return this.http.post(this.getPermissionsEndpoint(userId), permission).pipe(this.converter.pipeable(PERMISSION_NORMALIZER));\n    }\n    update(userId, permissionCode, permission) {\n      permission = this.converter.convert(permission, PERMISSION_SERIALIZER);\n      return this.http.patch(this.getPermissionEndpoint(userId, permissionCode), permission).pipe(this.converter.pipeable(PERMISSION_NORMALIZER));\n    }\n    loadTypes() {\n      return this.http.get(this.getPermissionTypesEndpoint()).pipe(this.converter.pipeable(PERMISSION_TYPES_NORMALIZER));\n    }\n    getPermissionEndpoint(userId, orderApprovalPermissionCode) {\n      return this.occEndpoints.buildUrl('permission', {\n        urlParams: {\n          userId,\n          orderApprovalPermissionCode\n        }\n      });\n    }\n    getPermissionsEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('permissions', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n    getPermissionTypesEndpoint() {\n      return this.occEndpoints.buildUrl('orderApprovalPermissionTypes');\n    }\n  }\n  OccPermissionAdapter.ɵfac = function OccPermissionAdapter_Factory(t) {\n    return new (t || OccPermissionAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccPermissionAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccPermissionAdapter,\n    factory: OccPermissionAdapter.ɵfac\n  });\n  return OccPermissionAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccB2BUserAdapter = /*#__PURE__*/(() => {\n  class OccB2BUserAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    load(userId, orgUnitCustomerId) {\n      return this.http.get(this.getB2BUserEndpoint(userId, orgUnitCustomerId)).pipe(this.converter.pipeable(B2B_USER_NORMALIZER));\n    }\n    loadList(userId, params) {\n      return this.http.get(this.getB2BUsersEndpoint(userId, params)).pipe(this.converter.pipeable(B2B_USERS_NORMALIZER));\n    }\n    create(userId, orgCustomer) {\n      orgCustomer = this.converter.convert(orgCustomer, B2B_USER_SERIALIZER);\n      return this.http.post(this.getB2BUsersEndpoint(userId), orgCustomer).pipe(this.converter.pipeable(B2B_USER_NORMALIZER));\n    }\n    update(userId, orgCustomerId, orgCustomer) {\n      orgCustomer = this.converter.convert(orgCustomer, B2B_USER_SERIALIZER);\n      return this.http.patch(this.getB2BUserEndpoint(userId, orgCustomerId), orgCustomer).pipe(this.converter.pipeable(B2B_USER_NORMALIZER));\n    }\n    loadApprovers(userId, orgCustomerId, params) {\n      return this.http.get(this.getApproversEndpoint(userId, orgCustomerId, params)).pipe(this.converter.pipeable(B2B_USERS_NORMALIZER));\n    }\n    assignApprover(userId, orgCustomerId, approverId) {\n      return this.http.post(this.getApproverEndpoint(userId, orgCustomerId, approverId), null);\n    }\n    unassignApprover(userId, orgCustomerId, approverId) {\n      return this.http.delete(this.getApproverEndpoint(userId, orgCustomerId, approverId));\n    }\n    loadPermissions(userId, orgCustomerId, params) {\n      return this.http.get(this.getPermissionsEndpoint(userId, orgCustomerId, params)).pipe(this.converter.pipeable(PERMISSIONS_NORMALIZER));\n    }\n    assignPermission(userId, orgCustomerId, permissionId) {\n      return this.http.post(this.getPermissionEndpoint(userId, orgCustomerId, permissionId), null);\n    }\n    unassignPermission(userId, orgCustomerId, permissionId) {\n      return this.http.delete(this.getPermissionEndpoint(userId, orgCustomerId, permissionId));\n    }\n    loadUserGroups(userId, orgCustomerId, params) {\n      return this.http.get(this.getUserGroupsEndpoint(userId, orgCustomerId, params)).pipe(this.converter.pipeable(USER_GROUPS_NORMALIZER));\n    }\n    assignUserGroup(userId, orgCustomerId, userGroupId) {\n      return this.http.post(this.getUserGroupEndpoint(userId, orgCustomerId, userGroupId), null);\n    }\n    unassignUserGroup(userId, orgCustomerId, userGroupId) {\n      return this.http.delete(this.getUserGroupEndpoint(userId, orgCustomerId, userGroupId));\n    }\n    getB2BUserEndpoint(userId, orgCustomerId) {\n      return this.occEndpoints.buildUrl('b2bUser', {\n        urlParams: {\n          userId,\n          orgCustomerId\n        }\n      });\n    }\n    getB2BUsersEndpoint(userId, params) {\n      return this.occEndpoints.buildUrl('b2bUsers', {\n        urlParams: {\n          userId\n        },\n        queryParams: params\n      });\n    }\n    getApproverEndpoint(userId, orgCustomerId, approverId) {\n      return this.occEndpoints.buildUrl('b2bUserApprover', {\n        urlParams: {\n          userId,\n          orgCustomerId,\n          approverId\n        }\n      });\n    }\n    getApproversEndpoint(userId, orgCustomerId, params) {\n      return this.occEndpoints.buildUrl('b2bUserApprovers', {\n        urlParams: {\n          userId,\n          orgCustomerId\n        },\n        queryParams: params\n      });\n    }\n    getPermissionEndpoint(userId, orgCustomerId, premissionId) {\n      return this.occEndpoints.buildUrl('b2bUserPermission', {\n        urlParams: {\n          userId,\n          orgCustomerId,\n          premissionId\n        }\n      });\n    }\n    getPermissionsEndpoint(userId, orgCustomerId, params) {\n      return this.occEndpoints.buildUrl('b2bUserPermissions', {\n        urlParams: {\n          userId,\n          orgCustomerId\n        },\n        queryParams: params\n      });\n    }\n    getUserGroupEndpoint(userId, orgCustomerId, userGroupId) {\n      return this.occEndpoints.buildUrl('b2bUserUserGroup', {\n        urlParams: {\n          userId,\n          orgCustomerId,\n          userGroupId\n        }\n      });\n    }\n    getUserGroupsEndpoint(userId, orgCustomerId, params) {\n      return this.occEndpoints.buildUrl('b2bUserUserGroups', {\n        urlParams: {\n          userId,\n          orgCustomerId\n        },\n        queryParams: params\n      });\n    }\n  }\n  OccB2BUserAdapter.ɵfac = function OccB2BUserAdapter_Factory(t) {\n    return new (t || OccB2BUserAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccB2BUserAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccB2BUserAdapter,\n    factory: OccB2BUserAdapter.ɵfac\n  });\n  return OccB2BUserAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst defaultOccOrganizationConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        budgets: '/users/${userId}/budgets',\n        budget: '/users/${userId}/budgets/${budgetCode}',\n        orgUnitsAvailable: '/users/${userId}/availableOrgUnitNodes',\n        orgUnitsTree: '/users/${userId}/orgUnitsRootNodeTree',\n        orgUnitsApprovalProcesses: '/users/${userId}/orgUnitsAvailableApprovalProcesses',\n        orgUnits: '/users/${userId}/orgUnits',\n        orgUnit: '/users/${userId}/orgUnits/${orgUnitId}',\n        orgUnitUsers: '/users/${userId}/orgUnits/${orgUnitId}/availableUsers/${roleId}',\n        orgUnitApprovers: '/users/${userId}/orgUnits/${orgUnitId}/orgCustomers/${orgCustomerId}/roles',\n        orgUnitApprover: '/users/${userId}/orgUnits/${orgUnitId}/orgCustomers/${orgCustomerId}/roles/${roleId}',\n        orgUnitUserRoles: '/users/${userId}/orgCustomers/${orgCustomerId}/roles',\n        orgUnitUserRole: '/users/${userId}/orgCustomers/${orgCustomerId}/roles/${roleId}',\n        orgUnitsAddresses: '/users/${userId}/orgUnits/${orgUnitId}/addresses',\n        orgUnitsAddress: '/users/${userId}/orgUnits/${orgUnitId}/addresses/${addressId}',\n        userGroups: '/users/${userId}/orgUnitUserGroups',\n        userGroup: '/users/${userId}/orgUnitUserGroups/${userGroupId}',\n        userGroupAvailableOrderApprovalPermissions: '/users/${userId}/orgUnitUserGroups/${userGroupId}/availableOrderApprovalPermissions',\n        userGroupAvailableOrgCustomers: '/users/${userId}/orgUnitUserGroups/${userGroupId}/availableOrgCustomers',\n        userGroupMembers: '/users/${userId}/orgUnitUserGroups/${userGroupId}/members',\n        userGroupMember: '/users/${userId}/orgUnitUserGroups/${userGroupId}/members/${orgCustomerId}',\n        userGroupOrderApprovalPermissions: '/users/${userId}/orgUnitUserGroups/${userGroupId}/orderApprovalPermissions',\n        userGroupOrderApprovalPermission: '/users/${userId}/orgUnitUserGroups/${userGroupId}/orderApprovalPermissions/${orderApprovalPermissionCode}',\n        costCenters: '/costcenters',\n        costCenter: '/costcenters/${costCenterCode}',\n        costCentersAll: '/costcentersall',\n        costCenterBudgets: '/costcenters/${costCenterCode}/budgets',\n        costCenterBudget: '/costcenters/${costCenterCode}/budgets/${budgetCode}',\n        permissions: '/users/${userId}/orderApprovalPermissions',\n        permission: '/users/${userId}/orderApprovalPermissions/${orderApprovalPermissionCode}',\n        orderApprovalPermissionTypes: '/orderApprovalPermissionTypes',\n        b2bUsers: '/users/${userId}/orgCustomers',\n        b2bUser: '/users/${userId}/orgCustomers/${orgCustomerId}',\n        b2bUserApprovers: '/users/${userId}/orgCustomers/${orgCustomerId}/approvers',\n        b2bUserApprover: '/users/${userId}/orgCustomers/${orgCustomerId}/approvers/${approverId}',\n        b2bUserUserGroups: '/users/${userId}/orgCustomers/${orgCustomerId}/orgUserGroups',\n        b2bUserUserGroup: '/users/${userId}/orgCustomers/${orgCustomerId}/orgUserGroups/${userGroupId}',\n        b2bUserPermissions: '/users/${userId}/orgCustomers/${orgCustomerId}/permissions',\n        b2bUserPermission: '/users/${userId}/orgCustomers/${orgCustomerId}/permissions/${premissionId}'\n      }\n    }\n  }\n};\nlet OccBudgetSerializer = /*#__PURE__*/(() => {\n  class OccBudgetSerializer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      if (source.startDate) {\n        target.startDate = TimeUtils.convertDateToDatetime(source.startDate);\n      }\n      if (source.endDate) {\n        target.endDate = TimeUtils.convertDateToDatetime(source.endDate, true);\n      }\n      return target;\n    }\n  }\n  OccBudgetSerializer.ɵfac = function OccBudgetSerializer_Factory(t) {\n    return new (t || OccBudgetSerializer)();\n  };\n  OccBudgetSerializer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccBudgetSerializer,\n    factory: OccBudgetSerializer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccBudgetSerializer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccB2BUserNormalizer = /*#__PURE__*/(() => {\n  class OccB2BUserNormalizer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      target.email = source === null || source === void 0 ? void 0 : source.uid;\n      return target;\n    }\n  }\n  OccB2BUserNormalizer.ɵfac = function OccB2BUserNormalizer_Factory(t) {\n    return new (t || OccB2BUserNormalizer)();\n  };\n  OccB2BUserNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccB2BUserNormalizer,\n    factory: OccB2BUserNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccB2BUserNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccB2bUserSerializer = /*#__PURE__*/(() => {\n  class OccB2bUserSerializer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      delete target.isAssignedToApprovers;\n      if (target.active === false) {\n        target.roles = [];\n      }\n      return target;\n    }\n  }\n  OccB2bUserSerializer.ɵfac = function OccB2bUserSerializer_Factory(t) {\n    return new (t || OccB2bUserSerializer)();\n  };\n  OccB2bUserSerializer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccB2bUserSerializer,\n    factory: OccB2bUserSerializer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccB2bUserSerializer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccBudgetListNormalizer = /*#__PURE__*/(() => {\n  class OccBudgetListNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      target.values = source.budgets.map(budget => Object.assign({}, this.converter.convert(budget, BUDGET_NORMALIZER)));\n      return target;\n    }\n  }\n  OccBudgetListNormalizer.ɵfac = function OccBudgetListNormalizer_Factory(t) {\n    return new (t || OccBudgetListNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccBudgetListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccBudgetListNormalizer,\n    factory: OccBudgetListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccBudgetListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccBudgetNormalizer = /*#__PURE__*/(() => {\n  class OccBudgetNormalizer {\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      if (source.startDate) {\n        target.startDate = TimeUtils.convertDatetimeToDate(source.startDate);\n      }\n      if (source.endDate) {\n        target.endDate = TimeUtils.convertDatetimeToDate(source.endDate);\n      }\n      return target;\n    }\n  }\n  OccBudgetNormalizer.ɵfac = function OccBudgetNormalizer_Factory(t) {\n    return new (t || OccBudgetNormalizer)();\n  };\n  OccBudgetNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccBudgetNormalizer,\n    factory: OccBudgetNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccBudgetNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrgUnitApprovalProcessNormalizer = /*#__PURE__*/(() => {\n  class OccOrgUnitApprovalProcessNormalizer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = [...source.approvalProcesses];\n      }\n      return target;\n    }\n  }\n  OccOrgUnitApprovalProcessNormalizer.ɵfac = function OccOrgUnitApprovalProcessNormalizer_Factory(t) {\n    return new (t || OccOrgUnitApprovalProcessNormalizer)();\n  };\n  OccOrgUnitApprovalProcessNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrgUnitApprovalProcessNormalizer,\n    factory: OccOrgUnitApprovalProcessNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccOrgUnitApprovalProcessNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrgUnitNodeListNormalizer = /*#__PURE__*/(() => {\n  class OccOrgUnitNodeListNormalizer {\n    convert(source, target) {\n      if (target === undefined) {\n        target = [...source.unitNodes];\n      }\n      return target;\n    }\n  }\n  OccOrgUnitNodeListNormalizer.ɵfac = function OccOrgUnitNodeListNormalizer_Factory(t) {\n    return new (t || OccOrgUnitNodeListNormalizer)();\n  };\n  OccOrgUnitNodeListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrgUnitNodeListNormalizer,\n    factory: OccOrgUnitNodeListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccOrgUnitNodeListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrgUnitNodeNormalizer = /*#__PURE__*/(() => {\n  class OccOrgUnitNodeNormalizer {\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      return target;\n    }\n  }\n  OccOrgUnitNodeNormalizer.ɵfac = function OccOrgUnitNodeNormalizer_Factory(t) {\n    return new (t || OccOrgUnitNodeNormalizer)();\n  };\n  OccOrgUnitNodeNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrgUnitNodeNormalizer,\n    factory: OccOrgUnitNodeNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccOrgUnitNodeNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccOrgUnitNormalizer = /*#__PURE__*/(() => {\n  class OccOrgUnitNormalizer {\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      return target;\n    }\n  }\n  OccOrgUnitNormalizer.ɵfac = function OccOrgUnitNormalizer_Factory(t) {\n    return new (t || OccOrgUnitNormalizer)();\n  };\n  OccOrgUnitNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccOrgUnitNormalizer,\n    factory: OccOrgUnitNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccOrgUnitNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccPermissionListNormalizer = /*#__PURE__*/(() => {\n  class OccPermissionListNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      target.values = source.orderApprovalPermissions.map(permission => Object.assign({}, this.converter.convert(permission, PERMISSION_NORMALIZER)));\n      return target;\n    }\n  }\n  OccPermissionListNormalizer.ɵfac = function OccPermissionListNormalizer_Factory(t) {\n    return new (t || OccPermissionListNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccPermissionListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccPermissionListNormalizer,\n    factory: OccPermissionListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccPermissionListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccPermissionNormalizer = /*#__PURE__*/(() => {\n  class OccPermissionNormalizer {\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      return target;\n    }\n  }\n  OccPermissionNormalizer.ɵfac = function OccPermissionNormalizer_Factory(t) {\n    return new (t || OccPermissionNormalizer)();\n  };\n  OccPermissionNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccPermissionNormalizer,\n    factory: OccPermissionNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccPermissionNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccPermissionTypeListNormalizer = /*#__PURE__*/(() => {\n  class OccPermissionTypeListNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      target = source.orderApprovalPermissionTypes.map(permissionType => this.converter.convert(permissionType, PERMISSION_TYPE_NORMALIZER));\n      return target;\n    }\n  }\n  OccPermissionTypeListNormalizer.ɵfac = function OccPermissionTypeListNormalizer_Factory(t) {\n    return new (t || OccPermissionTypeListNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccPermissionTypeListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccPermissionTypeListNormalizer,\n    factory: OccPermissionTypeListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccPermissionTypeListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccPermissionTypeNormalizer = /*#__PURE__*/(() => {\n  class OccPermissionTypeNormalizer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      return target;\n    }\n  }\n  OccPermissionTypeNormalizer.ɵfac = function OccPermissionTypeNormalizer_Factory(t) {\n    return new (t || OccPermissionTypeNormalizer)();\n  };\n  OccPermissionTypeNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccPermissionTypeNormalizer,\n    factory: OccPermissionTypeNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccPermissionTypeNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccUserGroupListNormalizer = /*#__PURE__*/(() => {\n  class OccUserGroupListNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      target.values = source.orgUnitUserGroups.map(userGroup => Object.assign({}, this.converter.convert(userGroup, USER_GROUP_NORMALIZER)));\n      return target;\n    }\n  }\n  OccUserGroupListNormalizer.ɵfac = function OccUserGroupListNormalizer_Factory(t) {\n    return new (t || OccUserGroupListNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccUserGroupListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccUserGroupListNormalizer,\n    factory: OccUserGroupListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccUserGroupListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccUserGroupNormalizer = /*#__PURE__*/(() => {\n  class OccUserGroupNormalizer {\n    constructor() {}\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      return target;\n    }\n  }\n  OccUserGroupNormalizer.ɵfac = function OccUserGroupNormalizer_Factory(t) {\n    return new (t || OccUserGroupNormalizer)();\n  };\n  OccUserGroupNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccUserGroupNormalizer,\n    factory: OccUserGroupNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccUserGroupNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OccUserListNormalizer = /*#__PURE__*/(() => {\n  class OccUserListNormalizer {\n    constructor(converter) {\n      this.converter = converter;\n    }\n    convert(source, target) {\n      if (target === undefined) {\n        target = Object.assign({}, source);\n      }\n      target.values = source.users.map(b2bUser => Object.assign({}, this.converter.convert(b2bUser, B2B_USER_NORMALIZER)));\n      return target;\n    }\n  }\n  OccUserListNormalizer.ɵfac = function OccUserListNormalizer_Factory(t) {\n    return new (t || OccUserListNormalizer)(i0.ɵɵinject(i2.ConverterService));\n  };\n  OccUserListNormalizer.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccUserListNormalizer,\n    factory: OccUserListNormalizer.ɵfac,\n    providedIn: 'root'\n  });\n  return OccUserListNormalizer;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AdministrationOccModule = /*#__PURE__*/(() => {\n  class AdministrationOccModule {}\n  AdministrationOccModule.ɵfac = function AdministrationOccModule_Factory(t) {\n    return new (t || AdministrationOccModule)();\n  };\n  AdministrationOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AdministrationOccModule\n  });\n  AdministrationOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig(defaultOccOrganizationConfig), {\n      provide: BudgetAdapter,\n      useClass: OccBudgetAdapter\n    }, {\n      provide: BUDGET_NORMALIZER,\n      useExisting: OccBudgetNormalizer,\n      multi: true\n    }, {\n      provide: BUDGET_SERIALIZER,\n      useExisting: OccBudgetSerializer,\n      multi: true\n    }, {\n      provide: BUDGETS_NORMALIZER,\n      useExisting: OccBudgetListNormalizer,\n      multi: true\n    }, {\n      provide: OrgUnitAdapter,\n      useClass: OccOrgUnitAdapter\n    }, {\n      provide: B2BUNIT_NORMALIZER,\n      useExisting: OccOrgUnitNormalizer,\n      multi: true\n    }, {\n      provide: B2BUNIT_NODE_NORMALIZER,\n      useExisting: OccOrgUnitNodeNormalizer,\n      multi: true\n    }, {\n      provide: B2BUNIT_NODE_LIST_NORMALIZER,\n      useExisting: OccOrgUnitNodeListNormalizer,\n      multi: true\n    }, {\n      provide: B2BUNIT_APPROVAL_PROCESSES_NORMALIZER,\n      useExisting: OccOrgUnitApprovalProcessNormalizer,\n      multi: true\n    }, {\n      provide: UserGroupAdapter,\n      useClass: OccUserGroupAdapter\n    }, {\n      provide: USER_GROUP_NORMALIZER,\n      useExisting: OccUserGroupNormalizer,\n      multi: true\n    }, {\n      provide: USER_GROUPS_NORMALIZER,\n      useExisting: OccUserGroupListNormalizer,\n      multi: true\n    }, {\n      provide: PermissionAdapter,\n      useClass: OccPermissionAdapter\n    }, {\n      provide: PERMISSION_NORMALIZER,\n      useExisting: OccPermissionNormalizer,\n      multi: true\n    }, {\n      provide: PERMISSIONS_NORMALIZER,\n      useExisting: OccPermissionListNormalizer,\n      multi: true\n    }, {\n      provide: PERMISSION_TYPE_NORMALIZER,\n      useExisting: OccPermissionTypeNormalizer,\n      multi: true\n    }, {\n      provide: PERMISSION_TYPES_NORMALIZER,\n      useExisting: OccPermissionTypeListNormalizer,\n      multi: true\n    }, {\n      provide: CostCenterAdapter,\n      useClass: OccCostCenterAdapter\n    }, {\n      provide: B2BUserAdapter,\n      useClass: OccB2BUserAdapter\n    }, {\n      provide: B2B_USER_NORMALIZER,\n      useExisting: OccB2BUserNormalizer,\n      multi: true\n    }, {\n      provide: B2B_USER_SERIALIZER,\n      useExisting: OccB2bUserSerializer,\n      multi: true\n    }, {\n      provide: B2B_USERS_NORMALIZER,\n      useExisting: OccUserListNormalizer,\n      multi: true\n    }],\n    imports: [[CommonModule, CostCenterOccModule]]\n  });\n  return AdministrationOccModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Imported for side effects (module augmentation)\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdministrationOccModule, OccB2BUserAdapter, OccB2BUserNormalizer, OccB2bUserSerializer, OccBudgetAdapter, OccBudgetListNormalizer, OccBudgetNormalizer, OccBudgetSerializer, OccCostCenterAdapter, OccOrgUnitAdapter, OccOrgUnitApprovalProcessNormalizer, OccOrgUnitNodeListNormalizer, OccOrgUnitNodeNormalizer, OccOrgUnitNormalizer, OccPermissionAdapter, OccPermissionListNormalizer, OccPermissionNormalizer, OccPermissionTypeListNormalizer, OccPermissionTypeNormalizer, OccUserGroupAdapter, OccUserGroupListNormalizer, OccUserGroupNormalizer, OccUserListNormalizer };\n//# sourceMappingURL=spartacus-organization-administration-occ.js.map","map":null,"metadata":{},"sourceType":"module"}