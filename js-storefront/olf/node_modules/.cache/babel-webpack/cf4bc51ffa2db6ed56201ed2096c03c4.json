{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, APP_INITIALIZER, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport * as i2 from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nlet SmartEditConfig = /*#__PURE__*/(() => {\n  class SmartEditConfig {}\n  SmartEditConfig.ɵfac = function SmartEditConfig_Factory(t) {\n    return new (t || SmartEditConfig)();\n  };\n  SmartEditConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SmartEditConfig,\n    factory: function SmartEditConfig_Factory(t) {\n      let r = null;\n      if (t) {\n        r = new (t || SmartEditConfig)();\n      } else {\n        r = i0.ɵɵinject(Config);\n      }\n      return r;\n    },\n    providedIn: 'root'\n  });\n  return SmartEditConfig;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SMART_EDIT_FEATURE = 'smartEdit';\n\n/**\n * The SmartEditLauncherService is used to check whether Spartacus is launched inside Smart Edit;\n * it also gets cmsTicketId sent from Smart Edit.\n */\nlet SmartEditLauncherService = /*#__PURE__*/(() => {\n  class SmartEditLauncherService {\n    constructor(config, location, featureModules) {\n      this.config = config;\n      this.location = location;\n      this.featureModules = featureModules;\n    }\n    get cmsTicketId() {\n      return this._cmsTicketId;\n    }\n    /**\n     * Lazy loads modules when Spartacus launced inside Smart Edit\n     */\n    load() {\n      if (this.isLaunchedInSmartEdit() && this.featureModules.isConfigured('smartEdit')) {\n        this.featureModules.resolveFeature('smartEdit').subscribe();\n      }\n    }\n    /**\n     * Indicates whether Spartacus is launched in SmartEdit\n     */\n    isLaunchedInSmartEdit() {\n      var _a;\n      const path = this.location.path().split('?')[0];\n      const params = this.location.path().split('?')[1];\n      const cmsToken = params === null || params === void 0 ? void 0 : params.split('&').find(param => param.startsWith('cmsTicketId='));\n      this._cmsTicketId = cmsToken === null || cmsToken === void 0 ? void 0 : cmsToken.split('=')[1];\n      return path.split('/').pop() === ((_a = this.config.smartEdit) === null || _a === void 0 ? void 0 : _a.storefrontPreviewRoute) && !!this._cmsTicketId;\n    }\n  }\n  SmartEditLauncherService.ɵfac = function SmartEditLauncherService_Factory(t) {\n    return new (t || SmartEditLauncherService)(i0.ɵɵinject(SmartEditConfig), i0.ɵɵinject(i2.Location), i0.ɵɵinject(i3.FeatureModulesService));\n  };\n  SmartEditLauncherService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SmartEditLauncherService,\n    factory: SmartEditLauncherService.ɵfac,\n    providedIn: 'root'\n  });\n  return SmartEditLauncherService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst defaultSmartEditConfig = {\n  smartEdit: {\n    storefrontPreviewRoute: 'cx-preview',\n    allowOrigin: 'localhost:9002'\n  }\n};\nlet CmsTicketInterceptor = /*#__PURE__*/(() => {\n  class CmsTicketInterceptor {\n    constructor(service) {\n      this.service = service;\n    }\n    intercept(request, next) {\n      if (this.service.cmsTicketId && request.url.includes('/cms/')) {\n        request = request.clone({\n          setParams: {\n            cmsTicketId: this.service.cmsTicketId\n          }\n        });\n      }\n      return next.handle(request);\n    }\n  }\n  CmsTicketInterceptor.ɵfac = function CmsTicketInterceptor_Factory(t) {\n    return new (t || CmsTicketInterceptor)(i0.ɵɵinject(SmartEditLauncherService));\n  };\n  CmsTicketInterceptor.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: CmsTicketInterceptor,\n    factory: CmsTicketInterceptor.ɵfac,\n    providedIn: 'root'\n  });\n  return CmsTicketInterceptor;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst interceptors = [{\n  provide: HTTP_INTERCEPTORS,\n  useExisting: CmsTicketInterceptor,\n  multi: true\n}];\nfunction smartEditFactory(smartEditLauncherService) {\n  const isReady = () => {\n    smartEditLauncherService.load();\n  };\n  return isReady;\n}\nlet SmartEditRootModule = /*#__PURE__*/(() => {\n  class SmartEditRootModule {}\n  SmartEditRootModule.ɵfac = function SmartEditRootModule_Factory(t) {\n    return new (t || SmartEditRootModule)();\n  };\n  SmartEditRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: SmartEditRootModule\n  });\n  SmartEditRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [...interceptors, provideDefaultConfig(defaultSmartEditConfig), {\n      provide: APP_INITIALIZER,\n      useFactory: smartEditFactory,\n      deps: [SmartEditLauncherService],\n      multi: true\n    }]\n  });\n  return SmartEditRootModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SMART_EDIT_FEATURE, SmartEditConfig, SmartEditLauncherService, SmartEditRootModule, smartEditFactory };\n//# sourceMappingURL=spartacus-smartedit-root.js.map","map":null,"metadata":{},"sourceType":"module"}