{"ast":null,"code":"import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { normalizeHttpError, InterceptorUtil, USE_CLIENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { USER_PROFILE_SERIALIZER, USER_SIGN_UP_SERIALIZER, USER_PROFILE_NORMALIZER, TITLE_NORMALIZER, UserProfileAdapter } from '@spartacus/user/profile/core';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nconst defaultOccUserProfileConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        userRegister: 'users',\n        userForgotPassword: 'forgottenpasswordtokens',\n        userResetPassword: 'resetpassword',\n        userUpdateLoginId: 'users/${userId}/login',\n        userUpdatePassword: 'users/${userId}/password',\n        titles: 'titles'\n      }\n    }\n  }\n};\nlet OccUserProfileAdapter = /*#__PURE__*/(() => {\n  class OccUserProfileAdapter {\n    constructor(http, occEndpoints, converter) {\n      this.http = http;\n      this.occEndpoints = occEndpoints;\n      this.converter = converter;\n    }\n    update(userId, user) {\n      const endpoint = this.occEndpoints.isConfigured('userUpdateProfile') ? 'userUpdateProfile' : 'user';\n      const url = this.occEndpoints.buildUrl(endpoint, {\n        urlParams: {\n          userId\n        }\n      });\n      user = this.converter.convert(user, USER_PROFILE_SERIALIZER);\n      return this.http.patch(url, user).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    register(user) {\n      const url = this.occEndpoints.buildUrl('userRegister');\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n      user = this.converter.convert(user, USER_SIGN_UP_SERIALIZER);\n      return this.http.post(url, user, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))), this.converter.pipeable(USER_PROFILE_NORMALIZER));\n    }\n    registerGuest(guid, password) {\n      const url = this.occEndpoints.buildUrl('userRegister');\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n      const httpParams = new HttpParams().set('guid', guid).set('password', password);\n      return this.http.post(url, httpParams, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))), this.converter.pipeable(USER_PROFILE_NORMALIZER));\n    }\n    requestForgotPasswordEmail(userEmailAddress) {\n      const url = this.occEndpoints.buildUrl('userForgotPassword');\n      const httpParams = new HttpParams().set('userId', userEmailAddress);\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n      return this.http.post(url, httpParams, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    resetPassword(token, newPassword) {\n      const url = this.occEndpoints.buildUrl('userResetPassword');\n      let headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n      return this.http.post(url, {\n        token,\n        newPassword\n      }, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    updateEmail(userId, currentPassword, newUserId) {\n      const url = this.occEndpoints.buildUrl('userUpdateLoginId', {\n        urlParams: {\n          userId\n        }\n      });\n      const httpParams = new HttpParams().set('password', currentPassword).set('newLogin', newUserId);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      return this.http.put(url, httpParams, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    updatePassword(userId, oldPassword, newPassword) {\n      const url = this.occEndpoints.buildUrl('userUpdatePassword', {\n        urlParams: {\n          userId\n        }\n      });\n      const httpParams = new HttpParams().set('old', oldPassword).set('new', newPassword);\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      return this.http.put(url, httpParams, {\n        headers\n      }).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    close(userId) {\n      const endpoint = this.occEndpoints.isConfigured('userCloseAccount') ? 'userCloseAccount' : 'user';\n      const url = this.occEndpoints.buildUrl(endpoint, {\n        urlParams: {\n          userId\n        }\n      });\n      return this.http.delete(url).pipe(catchError(error => throwError(normalizeHttpError(error))));\n    }\n    loadTitles() {\n      const url = this.occEndpoints.buildUrl('titles');\n      return this.http.get(url).pipe(catchError(error => throwError(normalizeHttpError(error))), map(titleList => {\n        var _a;\n        return (_a = titleList.titles) !== null && _a !== void 0 ? _a : [];\n      }), this.converter.pipeableMany(TITLE_NORMALIZER));\n    }\n  }\n  OccUserProfileAdapter.ɵfac = function OccUserProfileAdapter_Factory(t) {\n    return new (t || OccUserProfileAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService));\n  };\n  OccUserProfileAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: OccUserProfileAdapter,\n    factory: OccUserProfileAdapter.ɵfac\n  });\n  return OccUserProfileAdapter;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet UserProfileOccModule = /*#__PURE__*/(() => {\n  class UserProfileOccModule {}\n  UserProfileOccModule.ɵfac = function UserProfileOccModule_Factory(t) {\n    return new (t || UserProfileOccModule)();\n  };\n  UserProfileOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: UserProfileOccModule\n  });\n  UserProfileOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [provideDefaultConfig(defaultOccUserProfileConfig), {\n      provide: UserProfileAdapter,\n      useClass: OccUserProfileAdapter\n    }]\n  });\n  return UserProfileOccModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OccUserProfileAdapter, UserProfileOccModule, defaultOccUserProfileConfig };\n//# sourceMappingURL=spartacus-user-profile-occ.js.map","map":null,"metadata":{},"sourceType":"module"}