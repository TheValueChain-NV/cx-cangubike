{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig, provideDefaultConfigFactory, HttpErrorHandler } from '@spartacus/core';\nimport { OrganizationConflictHandler, OrganizationBadRequestHandler } from '@spartacus/organization/administration/core';\n\n/**\n * Names of the route params used in the organization administration feature\n */\nconst ROUTE_PARAMS = {\n  budgetCode: 'budgetCode',\n  unitCode: 'unitCode',\n  costCenterCode: 'costCenterCode',\n  userCode: 'userCode',\n  userGroupCode: 'userGroupCode',\n  permissionCode: 'permissionCode',\n  addressCode: 'addressId'\n};\nconst listPath$5 = `organization/budgets/:${ROUTE_PARAMS.budgetCode}`;\nconst paramsMapping$5 = {\n  budgetCode: 'code'\n};\nconst defaultBudgetRoutingConfig = {\n  routing: {\n    routes: {\n      orgBudget: {\n        paths: ['organization/budgets']\n      },\n      orgBudgetCreate: {\n        paths: ['organization/budgets/create']\n      },\n      orgBudgetDetails: {\n        paths: [`${listPath$5}`],\n        paramsMapping: paramsMapping$5\n      },\n      orgBudgetCostCenters: {\n        paths: [`${listPath$5}/cost-centers`],\n        paramsMapping: paramsMapping$5\n      },\n      orgBudgetEdit: {\n        paths: [`${listPath$5}/edit`],\n        paramsMapping: paramsMapping$5\n      }\n    }\n  }\n};\nconst listPath$4 = `organization/cost-centers/:${ROUTE_PARAMS.costCenterCode}`;\nconst paramsMapping$4 = {\n  costCenterCode: 'code'\n};\nconst defaultCostCenterRoutingConfig = {\n  routing: {\n    routes: {\n      orgCostCenter: {\n        paths: ['organization/cost-centers']\n      },\n      orgCostCenterCreate: {\n        paths: ['organization/cost-centers/create']\n      },\n      orgCostCenterDetails: {\n        paths: [`${listPath$4}`],\n        paramsMapping: paramsMapping$4\n      },\n      orgCostCenterBudgets: {\n        paths: [`${listPath$4}/budgets`],\n        paramsMapping: paramsMapping$4\n      },\n      orgCostCenterAssignBudgets: {\n        paths: [`${listPath$4}/budgets/assign`],\n        paramsMapping: paramsMapping$4\n      },\n      orgCostCenterEdit: {\n        paths: [`${listPath$4}/edit`],\n        paramsMapping: paramsMapping$4\n      }\n    }\n  }\n};\nconst defaultOrganizationLayoutConfig = {\n  layoutSlots: {\n    CompanyPageTemplate: {\n      slots: ['BodyContent']\n    }\n  }\n};\nconst listPath$3 = `organization/purchase-limits/:${ROUTE_PARAMS.permissionCode}`;\nconst paramsMapping$3 = {\n  permissionCode: 'code'\n};\nconst defaultPermissionRoutingConfig = {\n  routing: {\n    routes: {\n      orgPurchaseLimit: {\n        paths: ['organization/purchase-limits']\n      },\n      orgPurchaseLimitCreate: {\n        paths: ['organization/purchase-limits/create']\n      },\n      orgPurchaseLimitDetails: {\n        paths: [listPath$3],\n        paramsMapping: paramsMapping$3\n      },\n      orgPurchaseLimitEdit: {\n        paths: [`${listPath$3}/edit`],\n        paramsMapping: paramsMapping$3\n      }\n    }\n  }\n};\nconst listPath$2 = `organization/units/:${ROUTE_PARAMS.unitCode}`;\nconst paramsMapping$2 = {\n  unitCode: 'uid',\n  addressId: 'id',\n  userCode: 'customerId'\n};\nconst defaultUnitsRoutingConfig = {\n  routing: {\n    routes: {\n      orgUnits: {\n        paths: ['organization/units']\n      },\n      orgUnitCreate: {\n        paths: ['organization/units/create']\n      },\n      orgUnitDetails: {\n        paths: [listPath$2],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitEdit: {\n        paths: [`${listPath$2}/edit`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitChildren: {\n        paths: [`${listPath$2}/children`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitCreateChild: {\n        paths: [`${listPath$2}/children/create`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitUserList: {\n        paths: [`${listPath$2}/users`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitCreateUser: {\n        paths: [`${listPath$2}/users/create`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitUserRoles: {\n        paths: [`${listPath$2}/users/:userCode/roles`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitApprovers: {\n        paths: [`${listPath$2}/approvers`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitAssignApprovers: {\n        paths: [`${listPath$2}/approvers/assign`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitAddressList: {\n        paths: [`${listPath$2}/addresses`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitAddressCreate: {\n        paths: [`${listPath$2}/addresses/create`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitAddressDetails: {\n        paths: [`${listPath$2}/addresses/:addressId`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitAddressEdit: {\n        paths: [`${listPath$2}/addresses/:addressId/edit`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitCostCenters: {\n        paths: [`${listPath$2}/cost-centers`],\n        paramsMapping: paramsMapping$2\n      },\n      orgUnitCreateCostCenter: {\n        paths: [`${listPath$2}/cost-centers/create`],\n        paramsMapping: paramsMapping$2\n      }\n    }\n  }\n};\nconst listPath$1 = `organization/user-groups/:${ROUTE_PARAMS.userGroupCode}`;\nconst paramsMapping$1 = {\n  userGroupCode: 'uid'\n};\n// TODO: this doesn't work with lazy loaded feature\nconst defaultUserGroupRoutingConfig = {\n  routing: {\n    routes: {\n      orgUserGroup: {\n        paths: ['organization/user-groups']\n      },\n      orgUserGroupCreate: {\n        paths: ['organization/user-groups/create']\n      },\n      orgUserGroupDetails: {\n        paths: [listPath$1],\n        paramsMapping: paramsMapping$1\n      },\n      orgUserGroupEdit: {\n        paths: [`${listPath$1}/edit`],\n        paramsMapping: paramsMapping$1\n      },\n      orgUserGroupUsers: {\n        paths: [`${listPath$1}/users`],\n        paramsMapping: paramsMapping$1\n      },\n      orgUserGroupAssignUsers: {\n        paths: [`${listPath$1}/users/assign`],\n        paramsMapping: paramsMapping$1\n      },\n      orgUserGroupPermissions: {\n        paths: [`${listPath$1}/purchase-limits`],\n        paramsMapping: paramsMapping$1\n      },\n      orgUserGroupAssignPermissions: {\n        paths: [`${listPath$1}/purchase-limits/assign`],\n        paramsMapping: paramsMapping$1\n      }\n    }\n  }\n};\nconst listPath = `organization/users/:${ROUTE_PARAMS.userCode}`;\nconst paramsMapping = {\n  userCode: 'customerId'\n};\nconst defaultUserRoutingConfig = {\n  routing: {\n    routes: {\n      orgUser: {\n        paths: ['organization/users']\n      },\n      orgUserCreate: {\n        paths: ['organization/users/create']\n      },\n      orgUserDetails: {\n        paths: [listPath],\n        paramsMapping\n      },\n      orgUserEdit: {\n        paths: [`${listPath}/edit`],\n        paramsMapping\n      },\n      orgUserChangePassword: {\n        paths: [`${listPath}/change-password`],\n        paramsMapping\n      },\n      orgUserApprovers: {\n        paths: [`${listPath}/approvers`],\n        paramsMapping\n      },\n      orgUserAssignApprovers: {\n        paths: [`${listPath}/approvers/assign`],\n        paramsMapping\n      },\n      orgUserPermissions: {\n        paths: [`${listPath}/purchase-limits`],\n        paramsMapping\n      },\n      orgUserAssignPermissions: {\n        paths: [`${listPath}/purchase-limits/assign`],\n        paramsMapping\n      },\n      orgUserUserGroups: {\n        paths: [`${listPath}/user-groups`],\n        paramsMapping\n      },\n      orgUserAssignUserGroups: {\n        paths: [`${listPath}/user-groups/assign`],\n        paramsMapping\n      }\n    }\n  }\n};\nconst ORGANIZATION_ADMINISTRATION_FEATURE = 'organizationAdministration';\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nfunction defaultOrganizationAdministrationComponentsConfig() {\n  const config = {\n    featureModules: {\n      [ORGANIZATION_ADMINISTRATION_FEATURE]: {\n        cmsComponents: ['ManageBudgetsListComponent', 'ManageCostCentersListComponent', 'ManagePermissionsListComponent', 'ManageUnitsListComponent', 'ManageUsersListComponent', 'ManageUserGroupsListComponent']\n      }\n    }\n  };\n  return config;\n}\nclass AdministrationRootModule {}\nAdministrationRootModule.ɵfac = function AdministrationRootModule_Factory(t) {\n  return new (t || AdministrationRootModule)();\n};\nAdministrationRootModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AdministrationRootModule\n});\nAdministrationRootModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig(defaultOrganizationLayoutConfig), provideDefaultConfig({\n    routing: {\n      routes: {\n        organization: {\n          paths: ['organization']\n        }\n      }\n    }\n  }), provideDefaultConfig(defaultBudgetRoutingConfig), provideDefaultConfig(defaultCostCenterRoutingConfig), provideDefaultConfig(defaultPermissionRoutingConfig), provideDefaultConfig(defaultUnitsRoutingConfig), provideDefaultConfig(defaultUserRoutingConfig), provideDefaultConfig(defaultUserGroupRoutingConfig), provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig), {\n    provide: HttpErrorHandler,\n    useExisting: OrganizationConflictHandler,\n    multi: true\n  }, {\n    provide: HttpErrorHandler,\n    useExisting: OrganizationBadRequestHandler,\n    multi: true\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AdministrationRootModule, [{\n    type: NgModule,\n    args: [{\n      providers: [provideDefaultConfig(defaultOrganizationLayoutConfig), provideDefaultConfig({\n        routing: {\n          routes: {\n            organization: {\n              paths: ['organization']\n            }\n          }\n        }\n      }), provideDefaultConfig(defaultBudgetRoutingConfig), provideDefaultConfig(defaultCostCenterRoutingConfig), provideDefaultConfig(defaultPermissionRoutingConfig), provideDefaultConfig(defaultUnitsRoutingConfig), provideDefaultConfig(defaultUserRoutingConfig), provideDefaultConfig(defaultUserGroupRoutingConfig), provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig), {\n        provide: HttpErrorHandler,\n        useExisting: OrganizationConflictHandler,\n        multi: true\n      }, {\n        provide: HttpErrorHandler,\n        useExisting: OrganizationBadRequestHandler,\n        multi: true\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdministrationRootModule, ORGANIZATION_ADMINISTRATION_FEATURE, ROUTE_PARAMS, defaultBudgetRoutingConfig, defaultCostCenterRoutingConfig, defaultOrganizationAdministrationComponentsConfig, defaultOrganizationLayoutConfig, defaultPermissionRoutingConfig, defaultUnitsRoutingConfig, defaultUserGroupRoutingConfig, defaultUserRoutingConfig };","map":{"version":3,"names":["i0","NgModule","provideDefaultConfig","provideDefaultConfigFactory","HttpErrorHandler","OrganizationConflictHandler","OrganizationBadRequestHandler","ROUTE_PARAMS","budgetCode","unitCode","costCenterCode","userCode","userGroupCode","permissionCode","addressCode","listPath$5","paramsMapping$5","defaultBudgetRoutingConfig","routing","routes","orgBudget","paths","orgBudgetCreate","orgBudgetDetails","paramsMapping","orgBudgetCostCenters","orgBudgetEdit","listPath$4","paramsMapping$4","defaultCostCenterRoutingConfig","orgCostCenter","orgCostCenterCreate","orgCostCenterDetails","orgCostCenterBudgets","orgCostCenterAssignBudgets","orgCostCenterEdit","defaultOrganizationLayoutConfig","layoutSlots","CompanyPageTemplate","slots","listPath$3","paramsMapping$3","defaultPermissionRoutingConfig","orgPurchaseLimit","orgPurchaseLimitCreate","orgPurchaseLimitDetails","orgPurchaseLimitEdit","listPath$2","paramsMapping$2","addressId","defaultUnitsRoutingConfig","orgUnits","orgUnitCreate","orgUnitDetails","orgUnitEdit","orgUnitChildren","orgUnitCreateChild","orgUnitUserList","orgUnitCreateUser","orgUnitUserRoles","orgUnitApprovers","orgUnitAssignApprovers","orgUnitAddressList","orgUnitAddressCreate","orgUnitAddressDetails","orgUnitAddressEdit","orgUnitCostCenters","orgUnitCreateCostCenter","listPath$1","paramsMapping$1","defaultUserGroupRoutingConfig","orgUserGroup","orgUserGroupCreate","orgUserGroupDetails","orgUserGroupEdit","orgUserGroupUsers","orgUserGroupAssignUsers","orgUserGroupPermissions","orgUserGroupAssignPermissions","listPath","defaultUserRoutingConfig","orgUser","orgUserCreate","orgUserDetails","orgUserEdit","orgUserChangePassword","orgUserApprovers","orgUserAssignApprovers","orgUserPermissions","orgUserAssignPermissions","orgUserUserGroups","orgUserAssignUserGroups","ORGANIZATION_ADMINISTRATION_FEATURE","defaultOrganizationAdministrationComponentsConfig","config","featureModules","cmsComponents","AdministrationRootModule","ɵfac","ɵmod","ɵinj","organization","provide","useExisting","multi","type","args","providers"],"sources":["/home/hamid/learning/cx-cangubike/js-storefront/olf/node_modules/@spartacus/organization/fesm2015/spartacus-organization-administration-root.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig, provideDefaultConfigFactory, HttpErrorHandler } from '@spartacus/core';\nimport { OrganizationConflictHandler, OrganizationBadRequestHandler } from '@spartacus/organization/administration/core';\n\n/**\n * Names of the route params used in the organization administration feature\n */\nconst ROUTE_PARAMS = {\n    budgetCode: 'budgetCode',\n    unitCode: 'unitCode',\n    costCenterCode: 'costCenterCode',\n    userCode: 'userCode',\n    userGroupCode: 'userGroupCode',\n    permissionCode: 'permissionCode',\n    addressCode: 'addressId',\n};\n\nconst listPath$5 = `organization/budgets/:${ROUTE_PARAMS.budgetCode}`;\nconst paramsMapping$5 = {\n    budgetCode: 'code',\n};\nconst defaultBudgetRoutingConfig = {\n    routing: {\n        routes: {\n            orgBudget: {\n                paths: ['organization/budgets'],\n            },\n            orgBudgetCreate: {\n                paths: ['organization/budgets/create'],\n            },\n            orgBudgetDetails: {\n                paths: [`${listPath$5}`],\n                paramsMapping: paramsMapping$5,\n            },\n            orgBudgetCostCenters: {\n                paths: [`${listPath$5}/cost-centers`],\n                paramsMapping: paramsMapping$5,\n            },\n            orgBudgetEdit: {\n                paths: [`${listPath$5}/edit`],\n                paramsMapping: paramsMapping$5,\n            },\n        },\n    },\n};\n\nconst listPath$4 = `organization/cost-centers/:${ROUTE_PARAMS.costCenterCode}`;\nconst paramsMapping$4 = {\n    costCenterCode: 'code',\n};\nconst defaultCostCenterRoutingConfig = {\n    routing: {\n        routes: {\n            orgCostCenter: {\n                paths: ['organization/cost-centers'],\n            },\n            orgCostCenterCreate: {\n                paths: ['organization/cost-centers/create'],\n            },\n            orgCostCenterDetails: {\n                paths: [`${listPath$4}`],\n                paramsMapping: paramsMapping$4,\n            },\n            orgCostCenterBudgets: {\n                paths: [`${listPath$4}/budgets`],\n                paramsMapping: paramsMapping$4,\n            },\n            orgCostCenterAssignBudgets: {\n                paths: [`${listPath$4}/budgets/assign`],\n                paramsMapping: paramsMapping$4,\n            },\n            orgCostCenterEdit: {\n                paths: [`${listPath$4}/edit`],\n                paramsMapping: paramsMapping$4,\n            },\n        },\n    },\n};\n\nconst defaultOrganizationLayoutConfig = {\n    layoutSlots: {\n        CompanyPageTemplate: {\n            slots: ['BodyContent'],\n        },\n    },\n};\n\nconst listPath$3 = `organization/purchase-limits/:${ROUTE_PARAMS.permissionCode}`;\nconst paramsMapping$3 = {\n    permissionCode: 'code',\n};\nconst defaultPermissionRoutingConfig = {\n    routing: {\n        routes: {\n            orgPurchaseLimit: {\n                paths: ['organization/purchase-limits'],\n            },\n            orgPurchaseLimitCreate: {\n                paths: ['organization/purchase-limits/create'],\n            },\n            orgPurchaseLimitDetails: {\n                paths: [listPath$3],\n                paramsMapping: paramsMapping$3,\n            },\n            orgPurchaseLimitEdit: {\n                paths: [`${listPath$3}/edit`],\n                paramsMapping: paramsMapping$3,\n            },\n        },\n    },\n};\n\nconst listPath$2 = `organization/units/:${ROUTE_PARAMS.unitCode}`;\nconst paramsMapping$2 = {\n    unitCode: 'uid',\n    addressId: 'id',\n    userCode: 'customerId',\n};\nconst defaultUnitsRoutingConfig = {\n    routing: {\n        routes: {\n            orgUnits: {\n                paths: ['organization/units'],\n            },\n            orgUnitCreate: {\n                paths: ['organization/units/create'],\n            },\n            orgUnitDetails: {\n                paths: [listPath$2],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitEdit: {\n                paths: [`${listPath$2}/edit`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitChildren: {\n                paths: [`${listPath$2}/children`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitCreateChild: {\n                paths: [`${listPath$2}/children/create`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitUserList: {\n                paths: [`${listPath$2}/users`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitCreateUser: {\n                paths: [`${listPath$2}/users/create`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitUserRoles: {\n                paths: [`${listPath$2}/users/:userCode/roles`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitApprovers: {\n                paths: [`${listPath$2}/approvers`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitAssignApprovers: {\n                paths: [`${listPath$2}/approvers/assign`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitAddressList: {\n                paths: [`${listPath$2}/addresses`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitAddressCreate: {\n                paths: [`${listPath$2}/addresses/create`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitAddressDetails: {\n                paths: [`${listPath$2}/addresses/:addressId`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitAddressEdit: {\n                paths: [`${listPath$2}/addresses/:addressId/edit`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitCostCenters: {\n                paths: [`${listPath$2}/cost-centers`],\n                paramsMapping: paramsMapping$2,\n            },\n            orgUnitCreateCostCenter: {\n                paths: [`${listPath$2}/cost-centers/create`],\n                paramsMapping: paramsMapping$2,\n            },\n        },\n    },\n};\n\nconst listPath$1 = `organization/user-groups/:${ROUTE_PARAMS.userGroupCode}`;\nconst paramsMapping$1 = {\n    userGroupCode: 'uid',\n};\n// TODO: this doesn't work with lazy loaded feature\nconst defaultUserGroupRoutingConfig = {\n    routing: {\n        routes: {\n            orgUserGroup: {\n                paths: ['organization/user-groups'],\n            },\n            orgUserGroupCreate: {\n                paths: ['organization/user-groups/create'],\n            },\n            orgUserGroupDetails: {\n                paths: [listPath$1],\n                paramsMapping: paramsMapping$1,\n            },\n            orgUserGroupEdit: {\n                paths: [`${listPath$1}/edit`],\n                paramsMapping: paramsMapping$1,\n            },\n            orgUserGroupUsers: {\n                paths: [`${listPath$1}/users`],\n                paramsMapping: paramsMapping$1,\n            },\n            orgUserGroupAssignUsers: {\n                paths: [`${listPath$1}/users/assign`],\n                paramsMapping: paramsMapping$1,\n            },\n            orgUserGroupPermissions: {\n                paths: [`${listPath$1}/purchase-limits`],\n                paramsMapping: paramsMapping$1,\n            },\n            orgUserGroupAssignPermissions: {\n                paths: [`${listPath$1}/purchase-limits/assign`],\n                paramsMapping: paramsMapping$1,\n            },\n        },\n    },\n};\n\nconst listPath = `organization/users/:${ROUTE_PARAMS.userCode}`;\nconst paramsMapping = {\n    userCode: 'customerId',\n};\nconst defaultUserRoutingConfig = {\n    routing: {\n        routes: {\n            orgUser: {\n                paths: ['organization/users'],\n            },\n            orgUserCreate: {\n                paths: ['organization/users/create'],\n            },\n            orgUserDetails: {\n                paths: [listPath],\n                paramsMapping,\n            },\n            orgUserEdit: {\n                paths: [`${listPath}/edit`],\n                paramsMapping,\n            },\n            orgUserChangePassword: {\n                paths: [`${listPath}/change-password`],\n                paramsMapping,\n            },\n            orgUserApprovers: {\n                paths: [`${listPath}/approvers`],\n                paramsMapping,\n            },\n            orgUserAssignApprovers: {\n                paths: [`${listPath}/approvers/assign`],\n                paramsMapping,\n            },\n            orgUserPermissions: {\n                paths: [`${listPath}/purchase-limits`],\n                paramsMapping,\n            },\n            orgUserAssignPermissions: {\n                paths: [`${listPath}/purchase-limits/assign`],\n                paramsMapping,\n            },\n            orgUserUserGroups: {\n                paths: [`${listPath}/user-groups`],\n                paramsMapping,\n            },\n            orgUserAssignUserGroups: {\n                paths: [`${listPath}/user-groups/assign`],\n                paramsMapping,\n            },\n        },\n    },\n};\n\nconst ORGANIZATION_ADMINISTRATION_FEATURE = 'organizationAdministration';\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nfunction defaultOrganizationAdministrationComponentsConfig() {\n    const config = {\n        featureModules: {\n            [ORGANIZATION_ADMINISTRATION_FEATURE]: {\n                cmsComponents: [\n                    'ManageBudgetsListComponent',\n                    'ManageCostCentersListComponent',\n                    'ManagePermissionsListComponent',\n                    'ManageUnitsListComponent',\n                    'ManageUsersListComponent',\n                    'ManageUserGroupsListComponent',\n                ],\n            },\n        },\n    };\n    return config;\n}\nclass AdministrationRootModule {\n}\nAdministrationRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAdministrationRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationRootModule });\nAdministrationRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationRootModule, providers: [\n        provideDefaultConfig(defaultOrganizationLayoutConfig),\n        provideDefaultConfig({\n            routing: { routes: { organization: { paths: ['organization'] } } },\n        }),\n        provideDefaultConfig(defaultBudgetRoutingConfig),\n        provideDefaultConfig(defaultCostCenterRoutingConfig),\n        provideDefaultConfig(defaultPermissionRoutingConfig),\n        provideDefaultConfig(defaultUnitsRoutingConfig),\n        provideDefaultConfig(defaultUserRoutingConfig),\n        provideDefaultConfig(defaultUserGroupRoutingConfig),\n        provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig),\n        {\n            provide: HttpErrorHandler,\n            useExisting: OrganizationConflictHandler,\n            multi: true,\n        },\n        {\n            provide: HttpErrorHandler,\n            useExisting: OrganizationBadRequestHandler,\n            multi: true,\n        },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AdministrationRootModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        provideDefaultConfig(defaultOrganizationLayoutConfig),\n                        provideDefaultConfig({\n                            routing: { routes: { organization: { paths: ['organization'] } } },\n                        }),\n                        provideDefaultConfig(defaultBudgetRoutingConfig),\n                        provideDefaultConfig(defaultCostCenterRoutingConfig),\n                        provideDefaultConfig(defaultPermissionRoutingConfig),\n                        provideDefaultConfig(defaultUnitsRoutingConfig),\n                        provideDefaultConfig(defaultUserRoutingConfig),\n                        provideDefaultConfig(defaultUserGroupRoutingConfig),\n                        provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig),\n                        {\n                            provide: HttpErrorHandler,\n                            useExisting: OrganizationConflictHandler,\n                            multi: true,\n                        },\n                        {\n                            provide: HttpErrorHandler,\n                            useExisting: OrganizationBadRequestHandler,\n                            multi: true,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AdministrationRootModule, ORGANIZATION_ADMINISTRATION_FEATURE, ROUTE_PARAMS, defaultBudgetRoutingConfig, defaultCostCenterRoutingConfig, defaultOrganizationAdministrationComponentsConfig, defaultOrganizationLayoutConfig, defaultPermissionRoutingConfig, defaultUnitsRoutingConfig, defaultUserGroupRoutingConfig, defaultUserRoutingConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}