import { orgBudget, orgBudgetAssignedCostCenters } from './budget.i18n';
import { orgCostCenter, orgCostCenterAssignedBudgets, orgCostCenterBudgets, } from './cost-center.i18n';
import { orgPurchaseLimit } from './permission.i18n';
import { orgUnit, orgUnitAddress, orgUnitApprovers, orgUnitAssignedApprovers, orgUnitAssignedRoles, orgUnitAssignedUsers, orgUnitChildren, orgUnitCostCenters, orgUnitUserRoles, orgUnitUsers, } from './units.i18n';
import { orgUserGroup, orgUserGroupAssignedPermissions, orgUserGroupAssignedUsers, orgUserGroupPermissions, orgUserGroupUsers, } from './user-group.i18n';
import { orgUser, orgUserApprovers, orgUserAssignedApprovers, orgUserAssignedPermissions, orgUserAssignedUserGroups, orgUserPermissions, orgUserUserGroups, } from './user.i18n';
/**
 * The organization i18n labels provide generic labels for all organization sub features.
 * Once #7154 is in place, we can start adding specific i18n labels. The organization labels
 * will then serve as a backup.
 */
export const organization = {
    organization: {
        enabled: 'Active',
        disabled: 'Disabled',
        enable: 'Enable',
        disable: 'Disable',
        name: 'Name',
        code: 'Code',
        done: 'done',
        cancel: 'Cancel',
        add: 'Add',
        create: 'Create {{name}}',
        edit: 'Edit',
        save: 'Save {{name}}',
        delete: 'Delete',
        assign: 'Manage',
        active: 'Active',
        status: 'Status',
        details: 'Details',
        messages: {
            emptyList: 'The list is empty',
        },
        userRoles: {
            b2bcustomergroup: 'Customer',
            b2bapprovergroup: 'Approver',
            b2bmanagergroup: 'Manager',
            b2badmingroup: 'Admin',
        },
        breadcrumb: 'Organization',
        notification: {
            noSufficientPermissions: 'No sufficient permissions to access this page',
            notExist: 'This item does not exist',
            disabled: 'You cannot edit a disabled item',
        },
        confirmation: {
            cancel: 'CANCEL',
            confirm: 'CONFIRM',
            disable: 'DISABLE',
            delete: 'DELETE',
        },
        httpHandlers: {
            conflict: {
                budget: 'Budget with code {{ code }} already exists.',
                costCenter: 'Cost center with code {{ code }} already exists.',
                unit: 'Organizational unit with uid {{ code }} already exists.',
                user: 'User with email {{ code }} already exists',
                userGroup: 'User Group with id {{ code }} already exists',
                permission: 'Approval Permission with code {{ code }} already exists.',
                unknown: 'Server validation error.',
            },
        },
    },
    // sub feature labels are added below
    orgCostCenter,
    orgCostCenterBudgets,
    orgCostCenterAssignedBudgets,
    orgBudget,
    orgBudgetAssignedCostCenters,
    orgUnit,
    orgUnitChildren,
    orgUnitApprovers,
    orgUnitAssignedApprovers,
    orgUnitAssignedRoles,
    orgUnitUsers,
    orgUnitUserRoles,
    orgUnitAssignedUsers,
    orgUnitCostCenters,
    orgUnitAddress,
    orgUserGroup,
    orgUserGroupUsers,
    orgUserGroupAssignedUsers,
    orgUserGroupPermissions,
    orgUserGroupAssignedPermissions,
    orgUser,
    orgUserUserGroups,
    orgUserAssignedUserGroups,
    orgUserApprovers,
    orgUserAssignedApprovers,
    orgUserPermissions,
    orgUserAssignedPermissions,
    orgPurchaseLimit,
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnYW5pemF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9hc3NldHMvdHJhbnNsYXRpb25zL2VuL29yZ2FuaXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFDTCxhQUFhLEVBQ2IsNEJBQTRCLEVBQzVCLG9CQUFvQixHQUNyQixNQUFNLG9CQUFvQixDQUFDO0FBQzVCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3JELE9BQU8sRUFDTCxPQUFPLEVBQ1AsY0FBYyxFQUNkLGdCQUFnQixFQUNoQix3QkFBd0IsRUFDeEIsb0JBQW9CLEVBQ3BCLG9CQUFvQixFQUNwQixlQUFlLEVBQ2Ysa0JBQWtCLEVBQ2xCLGdCQUFnQixFQUNoQixZQUFZLEdBQ2IsTUFBTSxjQUFjLENBQUM7QUFDdEIsT0FBTyxFQUNMLFlBQVksRUFDWiwrQkFBK0IsRUFDL0IseUJBQXlCLEVBQ3pCLHVCQUF1QixFQUN2QixpQkFBaUIsR0FDbEIsTUFBTSxtQkFBbUIsQ0FBQztBQUMzQixPQUFPLEVBQ0wsT0FBTyxFQUNQLGdCQUFnQixFQUNoQix3QkFBd0IsRUFDeEIsMEJBQTBCLEVBQzFCLHlCQUF5QixFQUN6QixrQkFBa0IsRUFDbEIsaUJBQWlCLEdBQ2xCLE1BQU0sYUFBYSxDQUFDO0FBRXJCOzs7O0dBSUc7QUFFSCxNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUc7SUFDMUIsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLFFBQVE7UUFDakIsUUFBUSxFQUFFLFVBQVU7UUFFcEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsT0FBTyxFQUFFLFNBQVM7UUFFbEIsSUFBSSxFQUFFLE1BQU07UUFDWixJQUFJLEVBQUUsTUFBTTtRQUVaLElBQUksRUFBRSxNQUFNO1FBRVosTUFBTSxFQUFFLFFBQVE7UUFFaEIsR0FBRyxFQUFFLEtBQUs7UUFDVixNQUFNLEVBQUUsaUJBQWlCO1FBQ3pCLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLGVBQWU7UUFDckIsTUFBTSxFQUFFLFFBQVE7UUFFaEIsTUFBTSxFQUFFLFFBQVE7UUFFaEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsT0FBTyxFQUFFLFNBQVM7UUFFbEIsUUFBUSxFQUFFO1lBQ1IsU0FBUyxFQUFFLG1CQUFtQjtTQUMvQjtRQUNELFNBQVMsRUFBRTtZQUNULGdCQUFnQixFQUFFLFVBQVU7WUFDNUIsZ0JBQWdCLEVBQUUsVUFBVTtZQUM1QixlQUFlLEVBQUUsU0FBUztZQUMxQixhQUFhLEVBQUUsT0FBTztTQUN2QjtRQUVELFVBQVUsRUFBRSxjQUFjO1FBRTFCLFlBQVksRUFBRTtZQUNaLHVCQUF1QixFQUFFLCtDQUErQztZQUN4RSxRQUFRLEVBQUUsMEJBQTBCO1lBQ3BDLFFBQVEsRUFBRSxpQ0FBaUM7U0FDNUM7UUFFRCxZQUFZLEVBQUU7WUFDWixNQUFNLEVBQUUsUUFBUTtZQUNoQixPQUFPLEVBQUUsU0FBUztZQUNsQixPQUFPLEVBQUUsU0FBUztZQUNsQixNQUFNLEVBQUUsUUFBUTtTQUNqQjtRQUVELFlBQVksRUFBRTtZQUNaLFFBQVEsRUFBRTtnQkFDUixNQUFNLEVBQUUsNkNBQTZDO2dCQUNyRCxVQUFVLEVBQUUsa0RBQWtEO2dCQUM5RCxJQUFJLEVBQUUseURBQXlEO2dCQUMvRCxJQUFJLEVBQUUsMkNBQTJDO2dCQUNqRCxTQUFTLEVBQUUsOENBQThDO2dCQUN6RCxVQUFVLEVBQUUsMERBQTBEO2dCQUN0RSxPQUFPLEVBQUUsMEJBQTBCO2FBQ3BDO1NBQ0Y7S0FDRjtJQUVELHFDQUFxQztJQUNyQyxhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLDRCQUE0QjtJQUM1QixTQUFTO0lBQ1QsNEJBQTRCO0lBQzVCLE9BQU87SUFDUCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHdCQUF3QjtJQUN4QixvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFFZCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6Qix1QkFBdUI7SUFDdkIsK0JBQStCO0lBQy9CLE9BQU87SUFDUCxpQkFBaUI7SUFDakIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQix3QkFBd0I7SUFDeEIsa0JBQWtCO0lBQ2xCLDBCQUEwQjtJQUMxQixnQkFBZ0I7Q0FDakIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9yZ0J1ZGdldCwgb3JnQnVkZ2V0QXNzaWduZWRDb3N0Q2VudGVycyB9IGZyb20gJy4vYnVkZ2V0LmkxOG4nO1xuaW1wb3J0IHtcbiAgb3JnQ29zdENlbnRlcixcbiAgb3JnQ29zdENlbnRlckFzc2lnbmVkQnVkZ2V0cyxcbiAgb3JnQ29zdENlbnRlckJ1ZGdldHMsXG59IGZyb20gJy4vY29zdC1jZW50ZXIuaTE4bic7XG5pbXBvcnQgeyBvcmdQdXJjaGFzZUxpbWl0IH0gZnJvbSAnLi9wZXJtaXNzaW9uLmkxOG4nO1xuaW1wb3J0IHtcbiAgb3JnVW5pdCxcbiAgb3JnVW5pdEFkZHJlc3MsXG4gIG9yZ1VuaXRBcHByb3ZlcnMsXG4gIG9yZ1VuaXRBc3NpZ25lZEFwcHJvdmVycyxcbiAgb3JnVW5pdEFzc2lnbmVkUm9sZXMsXG4gIG9yZ1VuaXRBc3NpZ25lZFVzZXJzLFxuICBvcmdVbml0Q2hpbGRyZW4sXG4gIG9yZ1VuaXRDb3N0Q2VudGVycyxcbiAgb3JnVW5pdFVzZXJSb2xlcyxcbiAgb3JnVW5pdFVzZXJzLFxufSBmcm9tICcuL3VuaXRzLmkxOG4nO1xuaW1wb3J0IHtcbiAgb3JnVXNlckdyb3VwLFxuICBvcmdVc2VyR3JvdXBBc3NpZ25lZFBlcm1pc3Npb25zLFxuICBvcmdVc2VyR3JvdXBBc3NpZ25lZFVzZXJzLFxuICBvcmdVc2VyR3JvdXBQZXJtaXNzaW9ucyxcbiAgb3JnVXNlckdyb3VwVXNlcnMsXG59IGZyb20gJy4vdXNlci1ncm91cC5pMThuJztcbmltcG9ydCB7XG4gIG9yZ1VzZXIsXG4gIG9yZ1VzZXJBcHByb3ZlcnMsXG4gIG9yZ1VzZXJBc3NpZ25lZEFwcHJvdmVycyxcbiAgb3JnVXNlckFzc2lnbmVkUGVybWlzc2lvbnMsXG4gIG9yZ1VzZXJBc3NpZ25lZFVzZXJHcm91cHMsXG4gIG9yZ1VzZXJQZXJtaXNzaW9ucyxcbiAgb3JnVXNlclVzZXJHcm91cHMsXG59IGZyb20gJy4vdXNlci5pMThuJztcblxuLyoqXG4gKiBUaGUgb3JnYW5pemF0aW9uIGkxOG4gbGFiZWxzIHByb3ZpZGUgZ2VuZXJpYyBsYWJlbHMgZm9yIGFsbCBvcmdhbml6YXRpb24gc3ViIGZlYXR1cmVzLlxuICogT25jZSAjNzE1NCBpcyBpbiBwbGFjZSwgd2UgY2FuIHN0YXJ0IGFkZGluZyBzcGVjaWZpYyBpMThuIGxhYmVscy4gVGhlIG9yZ2FuaXphdGlvbiBsYWJlbHNcbiAqIHdpbGwgdGhlbiBzZXJ2ZSBhcyBhIGJhY2t1cC5cbiAqL1xuXG5leHBvcnQgY29uc3Qgb3JnYW5pemF0aW9uID0ge1xuICBvcmdhbml6YXRpb246IHtcbiAgICBlbmFibGVkOiAnQWN0aXZlJyxcbiAgICBkaXNhYmxlZDogJ0Rpc2FibGVkJyxcblxuICAgIGVuYWJsZTogJ0VuYWJsZScsXG4gICAgZGlzYWJsZTogJ0Rpc2FibGUnLFxuXG4gICAgbmFtZTogJ05hbWUnLFxuICAgIGNvZGU6ICdDb2RlJyxcblxuICAgIGRvbmU6ICdkb25lJyxcblxuICAgIGNhbmNlbDogJ0NhbmNlbCcsXG5cbiAgICBhZGQ6ICdBZGQnLFxuICAgIGNyZWF0ZTogJ0NyZWF0ZSB7e25hbWV9fScsXG4gICAgZWRpdDogJ0VkaXQnLFxuICAgIHNhdmU6ICdTYXZlIHt7bmFtZX19JyxcbiAgICBkZWxldGU6ICdEZWxldGUnLFxuXG4gICAgYXNzaWduOiAnTWFuYWdlJyxcblxuICAgIGFjdGl2ZTogJ0FjdGl2ZScsXG4gICAgc3RhdHVzOiAnU3RhdHVzJyxcbiAgICBkZXRhaWxzOiAnRGV0YWlscycsXG5cbiAgICBtZXNzYWdlczoge1xuICAgICAgZW1wdHlMaXN0OiAnVGhlIGxpc3QgaXMgZW1wdHknLFxuICAgIH0sXG4gICAgdXNlclJvbGVzOiB7XG4gICAgICBiMmJjdXN0b21lcmdyb3VwOiAnQ3VzdG9tZXInLFxuICAgICAgYjJiYXBwcm92ZXJncm91cDogJ0FwcHJvdmVyJyxcbiAgICAgIGIyYm1hbmFnZXJncm91cDogJ01hbmFnZXInLFxuICAgICAgYjJiYWRtaW5ncm91cDogJ0FkbWluJyxcbiAgICB9LFxuXG4gICAgYnJlYWRjcnVtYjogJ09yZ2FuaXphdGlvbicsXG5cbiAgICBub3RpZmljYXRpb246IHtcbiAgICAgIG5vU3VmZmljaWVudFBlcm1pc3Npb25zOiAnTm8gc3VmZmljaWVudCBwZXJtaXNzaW9ucyB0byBhY2Nlc3MgdGhpcyBwYWdlJyxcbiAgICAgIG5vdEV4aXN0OiAnVGhpcyBpdGVtIGRvZXMgbm90IGV4aXN0JyxcbiAgICAgIGRpc2FibGVkOiAnWW91IGNhbm5vdCBlZGl0IGEgZGlzYWJsZWQgaXRlbScsXG4gICAgfSxcblxuICAgIGNvbmZpcm1hdGlvbjoge1xuICAgICAgY2FuY2VsOiAnQ0FOQ0VMJyxcbiAgICAgIGNvbmZpcm06ICdDT05GSVJNJyxcbiAgICAgIGRpc2FibGU6ICdESVNBQkxFJyxcbiAgICAgIGRlbGV0ZTogJ0RFTEVURScsXG4gICAgfSxcblxuICAgIGh0dHBIYW5kbGVyczoge1xuICAgICAgY29uZmxpY3Q6IHtcbiAgICAgICAgYnVkZ2V0OiAnQnVkZ2V0IHdpdGggY29kZSB7eyBjb2RlIH19IGFscmVhZHkgZXhpc3RzLicsXG4gICAgICAgIGNvc3RDZW50ZXI6ICdDb3N0IGNlbnRlciB3aXRoIGNvZGUge3sgY29kZSB9fSBhbHJlYWR5IGV4aXN0cy4nLFxuICAgICAgICB1bml0OiAnT3JnYW5pemF0aW9uYWwgdW5pdCB3aXRoIHVpZCB7eyBjb2RlIH19IGFscmVhZHkgZXhpc3RzLicsXG4gICAgICAgIHVzZXI6ICdVc2VyIHdpdGggZW1haWwge3sgY29kZSB9fSBhbHJlYWR5IGV4aXN0cycsXG4gICAgICAgIHVzZXJHcm91cDogJ1VzZXIgR3JvdXAgd2l0aCBpZCB7eyBjb2RlIH19IGFscmVhZHkgZXhpc3RzJyxcbiAgICAgICAgcGVybWlzc2lvbjogJ0FwcHJvdmFsIFBlcm1pc3Npb24gd2l0aCBjb2RlIHt7IGNvZGUgfX0gYWxyZWFkeSBleGlzdHMuJyxcbiAgICAgICAgdW5rbm93bjogJ1NlcnZlciB2YWxpZGF0aW9uIGVycm9yLicsXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG5cbiAgLy8gc3ViIGZlYXR1cmUgbGFiZWxzIGFyZSBhZGRlZCBiZWxvd1xuICBvcmdDb3N0Q2VudGVyLFxuICBvcmdDb3N0Q2VudGVyQnVkZ2V0cyxcbiAgb3JnQ29zdENlbnRlckFzc2lnbmVkQnVkZ2V0cyxcbiAgb3JnQnVkZ2V0LFxuICBvcmdCdWRnZXRBc3NpZ25lZENvc3RDZW50ZXJzLFxuICBvcmdVbml0LFxuICBvcmdVbml0Q2hpbGRyZW4sXG4gIG9yZ1VuaXRBcHByb3ZlcnMsXG4gIG9yZ1VuaXRBc3NpZ25lZEFwcHJvdmVycyxcbiAgb3JnVW5pdEFzc2lnbmVkUm9sZXMsXG4gIG9yZ1VuaXRVc2VycyxcbiAgb3JnVW5pdFVzZXJSb2xlcyxcbiAgb3JnVW5pdEFzc2lnbmVkVXNlcnMsXG4gIG9yZ1VuaXRDb3N0Q2VudGVycyxcbiAgb3JnVW5pdEFkZHJlc3MsXG5cbiAgb3JnVXNlckdyb3VwLFxuICBvcmdVc2VyR3JvdXBVc2VycyxcbiAgb3JnVXNlckdyb3VwQXNzaWduZWRVc2VycyxcbiAgb3JnVXNlckdyb3VwUGVybWlzc2lvbnMsXG4gIG9yZ1VzZXJHcm91cEFzc2lnbmVkUGVybWlzc2lvbnMsXG4gIG9yZ1VzZXIsXG4gIG9yZ1VzZXJVc2VyR3JvdXBzLFxuICBvcmdVc2VyQXNzaWduZWRVc2VyR3JvdXBzLFxuICBvcmdVc2VyQXBwcm92ZXJzLFxuICBvcmdVc2VyQXNzaWduZWRBcHByb3ZlcnMsXG4gIG9yZ1VzZXJQZXJtaXNzaW9ucyxcbiAgb3JnVXNlckFzc2lnbmVkUGVybWlzc2lvbnMsXG4gIG9yZ1B1cmNoYXNlTGltaXQsXG59O1xuIl19