export const orgBudget = {
    header: 'All budgets ({{count}})',
    code: 'Code',
    name: 'Name',
    active: 'Status',
    currency: 'Currency',
    amount: 'Amount',
    unit: 'Unit',
    businessUnits: 'Unit',
    dateRange: 'Start - End',
    startDate: 'Start',
    endDate: 'End',
    actions: '',
    sortBy: 'Sort by',
    sort: {
        byName: 'Name',
        byUnitName: 'Unit',
        byCode: 'Code',
        byValue: 'Value',
    },
    hint: 'Budgets set overall purchase limits and are assigned to cost centers. A buyer selects a cost center when checking out.',
    details: {
        title: 'Budget Details',
        subtitle: 'Budget: {{ item.name }}',
    },
    edit: {
        title: 'Edit Budget',
        subtitle: 'Budget: {{ item.name }}',
    },
    create: {
        title: 'Create Budget',
        subtitle: '',
    },
    messages: {
        deactivateTitle: 'Disable this budget?',
        deactivate: 'Disabled budgets no longer apply to the cost centers they are assigned to. Ensure that the associated cost center has at least one budget.',
        confirmEnabled: 'Budget {{ item.name }} enabled successfully',
        confirmDisabled: 'Budget {{ item.name }} disabled successfully',
        update: 'Budget {{ item.name }} updated successfully',
        create: 'Budget {{ item.name }} created successfully',
    },
    info: {
        disabledEdit: 'Enable the budget to allow editing.',
        disabledEnable: 'Unit must be enabled before this budget may be enabled.',
    },
    links: {
        costCenters: 'Cost Centers',
    },
    breadcrumbs: {
        list: 'All budgets',
        details: '{{name}}',
    },
};
export const orgBudgetAssignedCostCenters = {
    title: 'Cost centers',
    subtitle: 'Budget: {{ item.name }}',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVkZ2V0LmkxOG4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2Fzc2V0cy90cmFuc2xhdGlvbnMvZW4vYnVkZ2V0LmkxOG4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHO0lBQ3ZCLE1BQU0sRUFBRSx5QkFBeUI7SUFFakMsSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsTUFBTTtJQUNaLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLFFBQVEsRUFBRSxVQUFVO0lBQ3BCLE1BQU0sRUFBRSxRQUFRO0lBQ2hCLElBQUksRUFBRSxNQUFNO0lBQ1osYUFBYSxFQUFFLE1BQU07SUFDckIsU0FBUyxFQUFFLGFBQWE7SUFDeEIsU0FBUyxFQUFFLE9BQU87SUFDbEIsT0FBTyxFQUFFLEtBQUs7SUFDZCxPQUFPLEVBQUUsRUFBRTtJQUVYLE1BQU0sRUFBRSxTQUFTO0lBQ2pCLElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRSxNQUFNO1FBQ2QsVUFBVSxFQUFFLE1BQU07UUFDbEIsTUFBTSxFQUFFLE1BQU07UUFDZCxPQUFPLEVBQUUsT0FBTztLQUNqQjtJQUVELElBQUksRUFBRSx3SEFBd0g7SUFFOUgsT0FBTyxFQUFFO1FBQ1AsS0FBSyxFQUFFLGdCQUFnQjtRQUN2QixRQUFRLEVBQUUseUJBQXlCO0tBQ3BDO0lBRUQsSUFBSSxFQUFFO1FBQ0osS0FBSyxFQUFFLGFBQWE7UUFDcEIsUUFBUSxFQUFFLHlCQUF5QjtLQUNwQztJQUVELE1BQU0sRUFBRTtRQUNOLEtBQUssRUFBRSxlQUFlO1FBQ3RCLFFBQVEsRUFBRSxFQUFFO0tBQ2I7SUFFRCxRQUFRLEVBQUU7UUFDUixlQUFlLEVBQUUsc0JBQXNCO1FBQ3ZDLFVBQVUsRUFDUiw0SUFBNEk7UUFDOUksY0FBYyxFQUFFLDZDQUE2QztRQUM3RCxlQUFlLEVBQUUsOENBQThDO1FBQy9ELE1BQU0sRUFBRSw2Q0FBNkM7UUFDckQsTUFBTSxFQUFFLDZDQUE2QztLQUN0RDtJQUNELElBQUksRUFBRTtRQUNKLFlBQVksRUFBRSxxQ0FBcUM7UUFDbkQsY0FBYyxFQUFFLHlEQUF5RDtLQUMxRTtJQUVELEtBQUssRUFBRTtRQUNMLFdBQVcsRUFBRSxjQUFjO0tBQzVCO0lBRUQsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLGFBQWE7UUFDbkIsT0FBTyxFQUFFLFVBQVU7S0FDcEI7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUc7SUFDMUMsS0FBSyxFQUFFLGNBQWM7SUFDckIsUUFBUSxFQUFFLHlCQUF5QjtDQUNwQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IG9yZ0J1ZGdldCA9IHtcbiAgaGVhZGVyOiAnQWxsIGJ1ZGdldHMgKHt7Y291bnR9fSknLFxuXG4gIGNvZGU6ICdDb2RlJyxcbiAgbmFtZTogJ05hbWUnLFxuICBhY3RpdmU6ICdTdGF0dXMnLFxuICBjdXJyZW5jeTogJ0N1cnJlbmN5JyxcbiAgYW1vdW50OiAnQW1vdW50JyxcbiAgdW5pdDogJ1VuaXQnLFxuICBidXNpbmVzc1VuaXRzOiAnVW5pdCcsXG4gIGRhdGVSYW5nZTogJ1N0YXJ0IC0gRW5kJyxcbiAgc3RhcnREYXRlOiAnU3RhcnQnLFxuICBlbmREYXRlOiAnRW5kJyxcbiAgYWN0aW9uczogJycsXG5cbiAgc29ydEJ5OiAnU29ydCBieScsXG4gIHNvcnQ6IHtcbiAgICBieU5hbWU6ICdOYW1lJyxcbiAgICBieVVuaXROYW1lOiAnVW5pdCcsXG4gICAgYnlDb2RlOiAnQ29kZScsXG4gICAgYnlWYWx1ZTogJ1ZhbHVlJyxcbiAgfSxcblxuICBoaW50OiAnQnVkZ2V0cyBzZXQgb3ZlcmFsbCBwdXJjaGFzZSBsaW1pdHMgYW5kIGFyZSBhc3NpZ25lZCB0byBjb3N0IGNlbnRlcnMuIEEgYnV5ZXIgc2VsZWN0cyBhIGNvc3QgY2VudGVyIHdoZW4gY2hlY2tpbmcgb3V0LicsXG5cbiAgZGV0YWlsczoge1xuICAgIHRpdGxlOiAnQnVkZ2V0IERldGFpbHMnLFxuICAgIHN1YnRpdGxlOiAnQnVkZ2V0OiB7eyBpdGVtLm5hbWUgfX0nLFxuICB9LFxuXG4gIGVkaXQ6IHtcbiAgICB0aXRsZTogJ0VkaXQgQnVkZ2V0JyxcbiAgICBzdWJ0aXRsZTogJ0J1ZGdldDoge3sgaXRlbS5uYW1lIH19JyxcbiAgfSxcblxuICBjcmVhdGU6IHtcbiAgICB0aXRsZTogJ0NyZWF0ZSBCdWRnZXQnLFxuICAgIHN1YnRpdGxlOiAnJyxcbiAgfSxcblxuICBtZXNzYWdlczoge1xuICAgIGRlYWN0aXZhdGVUaXRsZTogJ0Rpc2FibGUgdGhpcyBidWRnZXQ/JyxcbiAgICBkZWFjdGl2YXRlOlxuICAgICAgJ0Rpc2FibGVkIGJ1ZGdldHMgbm8gbG9uZ2VyIGFwcGx5IHRvIHRoZSBjb3N0IGNlbnRlcnMgdGhleSBhcmUgYXNzaWduZWQgdG8uIEVuc3VyZSB0aGF0IHRoZSBhc3NvY2lhdGVkIGNvc3QgY2VudGVyIGhhcyBhdCBsZWFzdCBvbmUgYnVkZ2V0LicsXG4gICAgY29uZmlybUVuYWJsZWQ6ICdCdWRnZXQge3sgaXRlbS5uYW1lIH19IGVuYWJsZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgICBjb25maXJtRGlzYWJsZWQ6ICdCdWRnZXQge3sgaXRlbS5uYW1lIH19IGRpc2FibGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgdXBkYXRlOiAnQnVkZ2V0IHt7IGl0ZW0ubmFtZSB9fSB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgY3JlYXRlOiAnQnVkZ2V0IHt7IGl0ZW0ubmFtZSB9fSBjcmVhdGVkIHN1Y2Nlc3NmdWxseScsXG4gIH0sXG4gIGluZm86IHtcbiAgICBkaXNhYmxlZEVkaXQ6ICdFbmFibGUgdGhlIGJ1ZGdldCB0byBhbGxvdyBlZGl0aW5nLicsXG4gICAgZGlzYWJsZWRFbmFibGU6ICdVbml0IG11c3QgYmUgZW5hYmxlZCBiZWZvcmUgdGhpcyBidWRnZXQgbWF5IGJlIGVuYWJsZWQuJyxcbiAgfSxcblxuICBsaW5rczoge1xuICAgIGNvc3RDZW50ZXJzOiAnQ29zdCBDZW50ZXJzJyxcbiAgfSxcblxuICBicmVhZGNydW1iczoge1xuICAgIGxpc3Q6ICdBbGwgYnVkZ2V0cycsXG4gICAgZGV0YWlsczogJ3t7bmFtZX19JyxcbiAgfSxcbn07XG5cbmV4cG9ydCBjb25zdCBvcmdCdWRnZXRBc3NpZ25lZENvc3RDZW50ZXJzID0ge1xuICB0aXRsZTogJ0Nvc3QgY2VudGVycycsXG4gIHN1YnRpdGxlOiAnQnVkZ2V0OiB7eyBpdGVtLm5hbWUgfX0nLFxufTtcbiJdfQ==