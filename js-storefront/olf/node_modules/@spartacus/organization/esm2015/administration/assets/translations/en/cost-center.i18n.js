export const orgCostCenter = {
    header: 'All cost centers ({{count}})',
    code: 'Code',
    active: 'Status',
    name: 'Name',
    currency: 'Currency',
    unit: 'Parent Unit',
    actions: '',
    sortBy: 'Sort by',
    sort: {
        byName: 'Name',
        byUnitName: 'Unit',
        byCode: 'Code',
    },
    hint: "All orders placed through your organization's purchase account are linked to a cost center for tracking purposes. Each unit can have multiple cost centers. To limit spending, budgets are assigned to cost centers. A buyer selects a cost center when checking out.",
    disable: {
        confirm: 'Disable',
    },
    messages: {
        deactivateTitle: 'Disable this cost center?',
        deactivate: 'Disabled cost centers cannot be used for placing new orders. Ensure that your unit has at least one cost center. Existing orders are not affected.',
        confirmEnabled: 'Cost Center {{ item.name }} enabled successfully',
        confirmDisabled: 'Cost Center {{ item.name }} disabled successfully',
        update: 'Cost Center {{ item.name }} updated successfully',
        create: 'Cost Center {{ item.name }} created successfully',
    },
    info: {
        disabledEdit: 'Enable the cost center to allow editing.',
        disabledEnable: 'Unit must be enabled before this cost center may be enabled.',
    },
    details: {
        title: 'Cost Center Details',
        subtitle: 'Cost Center: {{ item.name }}',
    },
    edit: {
        title: 'Edit Cost Center',
        subtitle: 'Cost Center: {{ item.name }}',
    },
    create: {
        title: 'Create Cost Center',
        subtitle: '',
    },
    budget: {
        link: 'Budgets',
    },
    breadcrumbs: {
        list: 'All cost centers',
        details: '{{name}}',
        budgets: 'Budgets',
    },
};
export const orgCostCenterAssignedBudgets = {
    title: 'Assigned budgets',
    subtitle: 'Cost Center: {{ item.name }}',
    assigned: 'Budget {{ item.name }} assigned successfully',
    unassigned: 'Budget {{ item.name }} unassigned successfully',
};
export const orgCostCenterBudgets = {
    title: 'Manage budgets',
    subtitle: 'Cost Center: {{ item.name }}',
    assigned: 'Budget {{ item.name }} assigned successfully',
    unassigned: 'Budget {{ item.name }} unassigned successfully',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdC1jZW50ZXIuaTE4bi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vYXNzZXRzL3RyYW5zbGF0aW9ucy9lbi9jb3N0LWNlbnRlci5pMThuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRztJQUMzQixNQUFNLEVBQUUsOEJBQThCO0lBRXRDLElBQUksRUFBRSxNQUFNO0lBQ1osTUFBTSxFQUFFLFFBQVE7SUFDaEIsSUFBSSxFQUFFLE1BQU07SUFDWixRQUFRLEVBQUUsVUFBVTtJQUNwQixJQUFJLEVBQUUsYUFBYTtJQUNuQixPQUFPLEVBQUUsRUFBRTtJQUVYLE1BQU0sRUFBRSxTQUFTO0lBQ2pCLElBQUksRUFBRTtRQUNKLE1BQU0sRUFBRSxNQUFNO1FBQ2QsVUFBVSxFQUFFLE1BQU07UUFDbEIsTUFBTSxFQUFFLE1BQU07S0FDZjtJQUVELElBQUksRUFBRSx1UUFBdVE7SUFDN1EsT0FBTyxFQUFFO1FBQ1AsT0FBTyxFQUFFLFNBQVM7S0FDbkI7SUFFRCxRQUFRLEVBQUU7UUFDUixlQUFlLEVBQUUsMkJBQTJCO1FBQzVDLFVBQVUsRUFDUixvSkFBb0o7UUFDdEosY0FBYyxFQUFFLGtEQUFrRDtRQUNsRSxlQUFlLEVBQUUsbURBQW1EO1FBQ3BFLE1BQU0sRUFBRSxrREFBa0Q7UUFDMUQsTUFBTSxFQUFFLGtEQUFrRDtLQUMzRDtJQUNELElBQUksRUFBRTtRQUNKLFlBQVksRUFBRSwwQ0FBMEM7UUFDeEQsY0FBYyxFQUNaLDhEQUE4RDtLQUNqRTtJQUVELE9BQU8sRUFBRTtRQUNQLEtBQUssRUFBRSxxQkFBcUI7UUFDNUIsUUFBUSxFQUFFLDhCQUE4QjtLQUN6QztJQUVELElBQUksRUFBRTtRQUNKLEtBQUssRUFBRSxrQkFBa0I7UUFDekIsUUFBUSxFQUFFLDhCQUE4QjtLQUN6QztJQUVELE1BQU0sRUFBRTtRQUNOLEtBQUssRUFBRSxvQkFBb0I7UUFDM0IsUUFBUSxFQUFFLEVBQUU7S0FDYjtJQUVELE1BQU0sRUFBRTtRQUNOLElBQUksRUFBRSxTQUFTO0tBQ2hCO0lBRUQsV0FBVyxFQUFFO1FBQ1gsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixPQUFPLEVBQUUsVUFBVTtRQUNuQixPQUFPLEVBQUUsU0FBUztLQUNuQjtDQUNGLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSw0QkFBNEIsR0FBRztJQUMxQyxLQUFLLEVBQUUsa0JBQWtCO0lBQ3pCLFFBQVEsRUFBRSw4QkFBOEI7SUFDeEMsUUFBUSxFQUFFLDhDQUE4QztJQUN4RCxVQUFVLEVBQUUsZ0RBQWdEO0NBQzdELENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRztJQUNsQyxLQUFLLEVBQUUsZ0JBQWdCO0lBQ3ZCLFFBQVEsRUFBRSw4QkFBOEI7SUFDeEMsUUFBUSxFQUFFLDhDQUE4QztJQUN4RCxVQUFVLEVBQUUsZ0RBQWdEO0NBQzdELENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3Qgb3JnQ29zdENlbnRlciA9IHtcbiAgaGVhZGVyOiAnQWxsIGNvc3QgY2VudGVycyAoe3tjb3VudH19KScsXG5cbiAgY29kZTogJ0NvZGUnLFxuICBhY3RpdmU6ICdTdGF0dXMnLFxuICBuYW1lOiAnTmFtZScsXG4gIGN1cnJlbmN5OiAnQ3VycmVuY3knLFxuICB1bml0OiAnUGFyZW50IFVuaXQnLFxuICBhY3Rpb25zOiAnJyxcblxuICBzb3J0Qnk6ICdTb3J0IGJ5JyxcbiAgc29ydDoge1xuICAgIGJ5TmFtZTogJ05hbWUnLFxuICAgIGJ5VW5pdE5hbWU6ICdVbml0JyxcbiAgICBieUNvZGU6ICdDb2RlJyxcbiAgfSxcblxuICBoaW50OiBcIkFsbCBvcmRlcnMgcGxhY2VkIHRocm91Z2ggeW91ciBvcmdhbml6YXRpb24ncyBwdXJjaGFzZSBhY2NvdW50IGFyZSBsaW5rZWQgdG8gYSBjb3N0IGNlbnRlciBmb3IgdHJhY2tpbmcgcHVycG9zZXMuIEVhY2ggdW5pdCBjYW4gaGF2ZSBtdWx0aXBsZSBjb3N0IGNlbnRlcnMuIFRvIGxpbWl0IHNwZW5kaW5nLCBidWRnZXRzIGFyZSBhc3NpZ25lZCB0byBjb3N0IGNlbnRlcnMuIEEgYnV5ZXIgc2VsZWN0cyBhIGNvc3QgY2VudGVyIHdoZW4gY2hlY2tpbmcgb3V0LlwiLFxuICBkaXNhYmxlOiB7XG4gICAgY29uZmlybTogJ0Rpc2FibGUnLFxuICB9LFxuXG4gIG1lc3NhZ2VzOiB7XG4gICAgZGVhY3RpdmF0ZVRpdGxlOiAnRGlzYWJsZSB0aGlzIGNvc3QgY2VudGVyPycsXG4gICAgZGVhY3RpdmF0ZTpcbiAgICAgICdEaXNhYmxlZCBjb3N0IGNlbnRlcnMgY2Fubm90IGJlIHVzZWQgZm9yIHBsYWNpbmcgbmV3IG9yZGVycy4gRW5zdXJlIHRoYXQgeW91ciB1bml0IGhhcyBhdCBsZWFzdCBvbmUgY29zdCBjZW50ZXIuIEV4aXN0aW5nIG9yZGVycyBhcmUgbm90IGFmZmVjdGVkLicsXG4gICAgY29uZmlybUVuYWJsZWQ6ICdDb3N0IENlbnRlciB7eyBpdGVtLm5hbWUgfX0gZW5hYmxlZCBzdWNjZXNzZnVsbHknLFxuICAgIGNvbmZpcm1EaXNhYmxlZDogJ0Nvc3QgQ2VudGVyIHt7IGl0ZW0ubmFtZSB9fSBkaXNhYmxlZCBzdWNjZXNzZnVsbHknLFxuICAgIHVwZGF0ZTogJ0Nvc3QgQ2VudGVyIHt7IGl0ZW0ubmFtZSB9fSB1cGRhdGVkIHN1Y2Nlc3NmdWxseScsXG4gICAgY3JlYXRlOiAnQ29zdCBDZW50ZXIge3sgaXRlbS5uYW1lIH19IGNyZWF0ZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgfSxcbiAgaW5mbzoge1xuICAgIGRpc2FibGVkRWRpdDogJ0VuYWJsZSB0aGUgY29zdCBjZW50ZXIgdG8gYWxsb3cgZWRpdGluZy4nLFxuICAgIGRpc2FibGVkRW5hYmxlOlxuICAgICAgJ1VuaXQgbXVzdCBiZSBlbmFibGVkIGJlZm9yZSB0aGlzIGNvc3QgY2VudGVyIG1heSBiZSBlbmFibGVkLicsXG4gIH0sXG5cbiAgZGV0YWlsczoge1xuICAgIHRpdGxlOiAnQ29zdCBDZW50ZXIgRGV0YWlscycsXG4gICAgc3VidGl0bGU6ICdDb3N0IENlbnRlcjoge3sgaXRlbS5uYW1lIH19JyxcbiAgfSxcblxuICBlZGl0OiB7XG4gICAgdGl0bGU6ICdFZGl0IENvc3QgQ2VudGVyJyxcbiAgICBzdWJ0aXRsZTogJ0Nvc3QgQ2VudGVyOiB7eyBpdGVtLm5hbWUgfX0nLFxuICB9LFxuXG4gIGNyZWF0ZToge1xuICAgIHRpdGxlOiAnQ3JlYXRlIENvc3QgQ2VudGVyJyxcbiAgICBzdWJ0aXRsZTogJycsXG4gIH0sXG5cbiAgYnVkZ2V0OiB7XG4gICAgbGluazogJ0J1ZGdldHMnLFxuICB9LFxuXG4gIGJyZWFkY3J1bWJzOiB7XG4gICAgbGlzdDogJ0FsbCBjb3N0IGNlbnRlcnMnLFxuICAgIGRldGFpbHM6ICd7e25hbWV9fScsXG4gICAgYnVkZ2V0czogJ0J1ZGdldHMnLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IG9yZ0Nvc3RDZW50ZXJBc3NpZ25lZEJ1ZGdldHMgPSB7XG4gIHRpdGxlOiAnQXNzaWduZWQgYnVkZ2V0cycsXG4gIHN1YnRpdGxlOiAnQ29zdCBDZW50ZXI6IHt7IGl0ZW0ubmFtZSB9fScsXG4gIGFzc2lnbmVkOiAnQnVkZ2V0IHt7IGl0ZW0ubmFtZSB9fSBhc3NpZ25lZCBzdWNjZXNzZnVsbHknLFxuICB1bmFzc2lnbmVkOiAnQnVkZ2V0IHt7IGl0ZW0ubmFtZSB9fSB1bmFzc2lnbmVkIHN1Y2Nlc3NmdWxseScsXG59O1xuXG5leHBvcnQgY29uc3Qgb3JnQ29zdENlbnRlckJ1ZGdldHMgPSB7XG4gIHRpdGxlOiAnTWFuYWdlIGJ1ZGdldHMnLFxuICBzdWJ0aXRsZTogJ0Nvc3QgQ2VudGVyOiB7eyBpdGVtLm5hbWUgfX0nLFxuICBhc3NpZ25lZDogJ0J1ZGdldCB7eyBpdGVtLm5hbWUgfX0gYXNzaWduZWQgc3VjY2Vzc2Z1bGx5JyxcbiAgdW5hc3NpZ25lZDogJ0J1ZGdldCB7eyBpdGVtLm5hbWUgfX0gdW5hc3NpZ25lZCBzdWNjZXNzZnVsbHknLFxufTtcbiJdfQ==