import { B2BUserActions, OrgUnitActions, UserGroupActions, } from '../actions/index';
export const b2bUserInitialState = undefined;
export const b2bUsersInitialState = undefined;
export function b2bUserEntitiesReducer(state = b2bUserInitialState, action) {
    var _a, _b, _c;
    switch (action.type) {
        case B2BUserActions.LOAD_B2B_USER_SUCCESS:
        case B2BUserActions.CREATE_B2B_USER_SUCCESS:
        case B2BUserActions.UPDATE_B2B_USER_SUCCESS:
            return action.payload;
        case OrgUnitActions.ASSIGN_ROLE_SUCCESS:
        case OrgUnitActions.ASSIGN_APPROVER_SUCCESS:
            return Object.assign(Object.assign({}, state), { selected: (_a = action.payload) === null || _a === void 0 ? void 0 : _a.selected, roles: [...((state === null || state === void 0 ? void 0 : state.roles) || []), (_b = action.payload) === null || _b === void 0 ? void 0 : _b.roleId] });
        case OrgUnitActions.UNASSIGN_ROLE_SUCCESS:
        case OrgUnitActions.UNASSIGN_APPROVER_SUCCESS:
            return Object.assign(Object.assign({}, state), { selected: (_c = action.payload) === null || _c === void 0 ? void 0 : _c.selected, roles: [...((state === null || state === void 0 ? void 0 : state.roles) || [])].filter((role) => { var _a; return role !== ((_a = action.payload) === null || _a === void 0 ? void 0 : _a.roleId); }) });
        case B2BUserActions.ASSIGN_B2B_USER_APPROVER_SUCCESS:
        case B2BUserActions.UNASSIGN_B2B_USER_APPROVER_SUCCESS:
        case UserGroupActions.USER_GROUP_ASSIGN_MEMBER_SUCCESS:
        case UserGroupActions.USER_GROUP_UNASSIGN_MEMBER_SUCCESS:
        case UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS:
            return Object.assign(Object.assign({}, state), action.payload);
    }
    return state;
}
export function userListReducer(state = b2bUsersInitialState, action) {
    switch (action.type) {
        case B2BUserActions.LOAD_B2B_USERS_SUCCESS:
            return action.payload.page;
    }
    return state;
}
export function b2bUserApproverListReducer(state = b2bUsersInitialState, action) {
    switch (action.type) {
        case B2BUserActions.LOAD_B2B_USER_APPROVERS_SUCCESS:
            return action.payload.page;
    }
    return state;
}
export function b2bUserPermissionListReducer(state = b2bUsersInitialState, action) {
    switch (action.type) {
        case B2BUserActions.LOAD_B2B_USER_PERMISSIONS_SUCCESS:
            return action.payload.page;
    }
    return state;
}
export function b2bUserUserGroupListReducer(state = b2bUsersInitialState, action) {
    switch (action.type) {
        case B2BUserActions.LOAD_B2B_USER_USER_GROUPS_SUCCESS:
            return action.payload.page;
    }
    return state;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYjJiLXVzZXIucmVkdWNlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZS9zdG9yZS9yZWR1Y2Vycy9iMmItdXNlci5yZWR1Y2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFDTCxjQUFjLEVBQ2QsY0FBYyxFQUNkLGdCQUFnQixHQUNqQixNQUFNLGtCQUFrQixDQUFDO0FBRzFCLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLFNBQVMsQ0FBQztBQUM3QyxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxTQUFTLENBQUM7QUFFOUMsTUFBTSxVQUFVLHNCQUFzQixDQUNwQyxRQUFpQixtQkFBbUIsRUFDcEMsTUFBK0I7O0lBRS9CLFFBQVEsTUFBTSxDQUFDLElBQUksRUFBRTtRQUNuQixLQUFLLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQztRQUMxQyxLQUFLLGNBQWMsQ0FBQyx1QkFBdUIsQ0FBQztRQUM1QyxLQUFLLGNBQWMsQ0FBQyx1QkFBdUI7WUFDekMsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDO1FBQ3hCLEtBQUssY0FBYyxDQUFDLG1CQUFtQixDQUFDO1FBQ3hDLEtBQUssY0FBYyxDQUFDLHVCQUF1QjtZQUN6Qyx1Q0FDSyxLQUFLLEtBQ1IsUUFBUSxFQUFFLE1BQUEsTUFBTSxDQUFDLE9BQU8sMENBQUUsUUFBUSxFQUNsQyxLQUFLLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQSxLQUFLLGFBQUwsS0FBSyx1QkFBTCxLQUFLLENBQUUsS0FBSyxLQUFJLEVBQUUsQ0FBQyxFQUFFLE1BQUEsTUFBTSxDQUFDLE9BQU8sMENBQUUsTUFBTSxDQUFDLElBQ3hEO1FBQ0osS0FBSyxjQUFjLENBQUMscUJBQXFCLENBQUM7UUFDMUMsS0FBSyxjQUFjLENBQUMseUJBQXlCO1lBQzNDLHVDQUNLLEtBQUssS0FDUixRQUFRLEVBQUUsTUFBQSxNQUFNLENBQUMsT0FBTywwQ0FBRSxRQUFRLEVBQ2xDLEtBQUssRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFBLEtBQUssYUFBTCxLQUFLLHVCQUFMLEtBQUssQ0FBRSxLQUFLLEtBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQ3JDLENBQUMsSUFBSSxFQUFFLEVBQUUsV0FBQyxPQUFBLElBQUksTUFBSyxNQUFBLE1BQU0sQ0FBQyxPQUFPLDBDQUFFLE1BQU0sQ0FBQSxDQUFBLEVBQUEsQ0FDMUMsSUFDRDtRQUNKLEtBQUssY0FBYyxDQUFDLGdDQUFnQyxDQUFDO1FBQ3JELEtBQUssY0FBYyxDQUFDLGtDQUFrQyxDQUFDO1FBQ3ZELEtBQUssZ0JBQWdCLENBQUMsZ0NBQWdDLENBQUM7UUFDdkQsS0FBSyxnQkFBZ0IsQ0FBQyxrQ0FBa0MsQ0FBQztRQUN6RCxLQUFLLGdCQUFnQixDQUFDLHVDQUF1QztZQUMzRCx1Q0FDSyxLQUFLLEdBQ0wsTUFBTSxDQUFDLE9BQU8sRUFDakI7S0FDTDtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sVUFBVSxlQUFlLENBQzdCLEtBQUssR0FBRyxvQkFBb0IsRUFDNUIsTUFBK0I7SUFFL0IsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ25CLEtBQUssY0FBYyxDQUFDLHNCQUFzQjtZQUN4QyxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0tBQzlCO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDO0FBRUQsTUFBTSxVQUFVLDBCQUEwQixDQUN4QyxLQUFLLEdBQUcsb0JBQW9CLEVBQzVCLE1BQStCO0lBRS9CLFFBQVEsTUFBTSxDQUFDLElBQUksRUFBRTtRQUNuQixLQUFLLGNBQWMsQ0FBQywrQkFBK0I7WUFDakQsT0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztLQUM5QjtJQUNELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQUVELE1BQU0sVUFBVSw0QkFBNEIsQ0FDMUMsS0FBSyxHQUFHLG9CQUFvQixFQUM1QixNQUErQjtJQUUvQixRQUFRLE1BQU0sQ0FBQyxJQUFJLEVBQUU7UUFDbkIsS0FBSyxjQUFjLENBQUMsaUNBQWlDO1lBQ25ELE9BQU8sTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUM7S0FDOUI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFFRCxNQUFNLFVBQVUsMkJBQTJCLENBQ3pDLEtBQUssR0FBRyxvQkFBb0IsRUFDNUIsTUFBK0I7SUFFL0IsUUFBUSxNQUFNLENBQUMsSUFBSSxFQUFFO1FBQ25CLEtBQUssY0FBYyxDQUFDLGlDQUFpQztZQUNuRCxPQUFPLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDO0tBQzlCO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQjJCVXNlckFjdGlvbnMsXG4gIE9yZ1VuaXRBY3Rpb25zLFxuICBVc2VyR3JvdXBBY3Rpb25zLFxufSBmcm9tICcuLi9hY3Rpb25zL2luZGV4JztcbmltcG9ydCB7IEIyQlVzZXIsIFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuXG5leHBvcnQgY29uc3QgYjJiVXNlckluaXRpYWxTdGF0ZSA9IHVuZGVmaW5lZDtcbmV4cG9ydCBjb25zdCBiMmJVc2Vyc0luaXRpYWxTdGF0ZSA9IHVuZGVmaW5lZDtcblxuZXhwb3J0IGZ1bmN0aW9uIGIyYlVzZXJFbnRpdGllc1JlZHVjZXIoXG4gIHN0YXRlOiBCMkJVc2VyID0gYjJiVXNlckluaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBTdGF0ZVV0aWxzLkxvYWRlckFjdGlvblxuKTogQjJCVXNlciB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlIEIyQlVzZXJBY3Rpb25zLkxPQURfQjJCX1VTRVJfU1VDQ0VTUzpcbiAgICBjYXNlIEIyQlVzZXJBY3Rpb25zLkNSRUFURV9CMkJfVVNFUl9TVUNDRVNTOlxuICAgIGNhc2UgQjJCVXNlckFjdGlvbnMuVVBEQVRFX0IyQl9VU0VSX1NVQ0NFU1M6XG4gICAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQ7XG4gICAgY2FzZSBPcmdVbml0QWN0aW9ucy5BU1NJR05fUk9MRV9TVUNDRVNTOlxuICAgIGNhc2UgT3JnVW5pdEFjdGlvbnMuQVNTSUdOX0FQUFJPVkVSX1NVQ0NFU1M6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgc2VsZWN0ZWQ6IGFjdGlvbi5wYXlsb2FkPy5zZWxlY3RlZCxcbiAgICAgICAgcm9sZXM6IFsuLi4oc3RhdGU/LnJvbGVzIHx8IFtdKSwgYWN0aW9uLnBheWxvYWQ/LnJvbGVJZF0sXG4gICAgICB9O1xuICAgIGNhc2UgT3JnVW5pdEFjdGlvbnMuVU5BU1NJR05fUk9MRV9TVUNDRVNTOlxuICAgIGNhc2UgT3JnVW5pdEFjdGlvbnMuVU5BU1NJR05fQVBQUk9WRVJfU1VDQ0VTUzpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBzZWxlY3RlZDogYWN0aW9uLnBheWxvYWQ/LnNlbGVjdGVkLFxuICAgICAgICByb2xlczogWy4uLihzdGF0ZT8ucm9sZXMgfHwgW10pXS5maWx0ZXIoXG4gICAgICAgICAgKHJvbGUpID0+IHJvbGUgIT09IGFjdGlvbi5wYXlsb2FkPy5yb2xlSWRcbiAgICAgICAgKSxcbiAgICAgIH07XG4gICAgY2FzZSBCMkJVc2VyQWN0aW9ucy5BU1NJR05fQjJCX1VTRVJfQVBQUk9WRVJfU1VDQ0VTUzpcbiAgICBjYXNlIEIyQlVzZXJBY3Rpb25zLlVOQVNTSUdOX0IyQl9VU0VSX0FQUFJPVkVSX1NVQ0NFU1M6XG4gICAgY2FzZSBVc2VyR3JvdXBBY3Rpb25zLlVTRVJfR1JPVVBfQVNTSUdOX01FTUJFUl9TVUNDRVNTOlxuICAgIGNhc2UgVXNlckdyb3VwQWN0aW9ucy5VU0VSX0dST1VQX1VOQVNTSUdOX01FTUJFUl9TVUNDRVNTOlxuICAgIGNhc2UgVXNlckdyb3VwQWN0aW9ucy5VU0VSX0dST1VQX1VOQVNTSUdOX0FMTF9NRU1CRVJTX1NVQ0NFU1M6XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgLi4uYWN0aW9uLnBheWxvYWQsXG4gICAgICB9O1xuICB9XG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZXJMaXN0UmVkdWNlcihcbiAgc3RhdGUgPSBiMmJVc2Vyc0luaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBTdGF0ZVV0aWxzLkxvYWRlckFjdGlvblxuKTogYW55IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgQjJCVXNlckFjdGlvbnMuTE9BRF9CMkJfVVNFUlNfU1VDQ0VTUzpcbiAgICAgIHJldHVybiBhY3Rpb24ucGF5bG9hZC5wYWdlO1xuICB9XG4gIHJldHVybiBzdGF0ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGIyYlVzZXJBcHByb3Zlckxpc3RSZWR1Y2VyKFxuICBzdGF0ZSA9IGIyYlVzZXJzSW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IFN0YXRlVXRpbHMuTG9hZGVyQWN0aW9uXG4pOiBhbnkge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBCMkJVc2VyQWN0aW9ucy5MT0FEX0IyQl9VU0VSX0FQUFJPVkVSU19TVUNDRVNTOlxuICAgICAgcmV0dXJuIGFjdGlvbi5wYXlsb2FkLnBhZ2U7XG4gIH1cbiAgcmV0dXJuIHN0YXRlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYjJiVXNlclBlcm1pc3Npb25MaXN0UmVkdWNlcihcbiAgc3RhdGUgPSBiMmJVc2Vyc0luaXRpYWxTdGF0ZSxcbiAgYWN0aW9uOiBTdGF0ZVV0aWxzLkxvYWRlckFjdGlvblxuKTogYW55IHtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgQjJCVXNlckFjdGlvbnMuTE9BRF9CMkJfVVNFUl9QRVJNSVNTSU9OU19TVUNDRVNTOlxuICAgICAgcmV0dXJuIGFjdGlvbi5wYXlsb2FkLnBhZ2U7XG4gIH1cbiAgcmV0dXJuIHN0YXRlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYjJiVXNlclVzZXJHcm91cExpc3RSZWR1Y2VyKFxuICBzdGF0ZSA9IGIyYlVzZXJzSW5pdGlhbFN0YXRlLFxuICBhY3Rpb246IFN0YXRlVXRpbHMuTG9hZGVyQWN0aW9uXG4pOiBhbnkge1xuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBCMkJVc2VyQWN0aW9ucy5MT0FEX0IyQl9VU0VSX1VTRVJfR1JPVVBTX1NVQ0NFU1M6XG4gICAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQucGFnZTtcbiAgfVxuICByZXR1cm4gc3RhdGU7XG59XG4iXX0=