export const ORGANIZATION_FEATURE = 'organization';
export const BUDGET_FEATURE = 'budget';
export const BUDGET_ENTITIES = 'budget-entities';
export const BUDGET_LIST = 'budget-list';
export const COST_CENTER_FEATURE = 'costCenter';
export const COST_CENTER_ENTITIES = 'costCenter-entities';
export const COST_CENTER_LIST = 'costCenter-list';
export const COST_CENTER_ASSIGNED_BUDGETS = 'costCenter-assigned-budgets';
export const PERMISSION_FEATURE = 'permission';
export const PERMISSION_ENTITIES = 'permission-entities';
export const PERMISSION_LIST = 'permission-list';
export const PERMISSION_TYPES = 'permission-types';
export const PERMISSION_TYPES_LIST = 'permission-types-list';
export const ORG_UNIT_FEATURE = 'orgUnit';
export const ORG_UNIT_NODE_ENTITIES = 'orgUnitNode-entities';
export const ORG_UNIT_NODE_LIST = 'orgUnitNode-list';
export const ORG_UNIT_ENTITIES = 'orgUnit-entities';
export const ORG_UNIT_TREE_ENTITY = 'orgUnit-tree';
export const ORG_UNIT_APPROVAL_PROCESSES_ENTITIES = 'orgUnit-approval-processes';
export const ORG_UNIT_ASSIGNED_USERS = 'orgUnit-assigned-users';
export const ORG_UNIT_TREE = 'tree';
export const ORG_UNIT_APPROVAL_PROCESSES = 'approvalProcesses';
export const ORG_UNIT_NODES = 'availableOrgUnitNodes';
export const B2B_USER_FEATURE = 'b2bUser';
export const B2B_USER_ENTITIES = 'b2bUser-entities';
export const USER_LIST = 'b2bUser-list';
export const B2B_USER_APPROVERS = 'b2bUser-approvers';
export const B2B_USER_PERMISSIONS = 'b2bUser-permissions';
export const B2B_USER_USER_GROUPS = 'b2bUser-user-groups';
export const USER_GROUP_FEATURE = 'userGroup';
export const USER_GROUP_ENTITIES = 'userGroup-entities';
export const USER_GROUP_LIST = 'userGroup-list';
export const USER_GROUP_PERMISSIONS = 'userGroup-available-order-approval-permissions';
export const USER_GROUP_AVAILABLE_CUSTOMERS = 'userGroup-available-org-customers';
export const ADDRESS_ENTITIES = 'addresses-entities';
export const ADDRESS_LIST = 'addresses-list';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JnYW5pemF0aW9uLXN0YXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlL3N0b3JlL29yZ2FuaXphdGlvbi1zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFlQSxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxjQUFjLENBQUM7QUFFbkQsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLFFBQVEsQ0FBQztBQUN2QyxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsaUJBQWlCLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLGFBQWEsQ0FBQztBQUV6QyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxZQUFZLENBQUM7QUFDaEQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcscUJBQXFCLENBQUM7QUFDMUQsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsaUJBQWlCLENBQUM7QUFDbEQsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsNkJBQTZCLENBQUM7QUFFMUUsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsWUFBWSxDQUFDO0FBQy9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLHFCQUFxQixDQUFDO0FBQ3pELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxpQkFBaUIsQ0FBQztBQUVqRCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyx1QkFBdUIsQ0FBQztBQUU3RCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLENBQUM7QUFDMUMsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsc0JBQXNCLENBQUM7QUFDN0QsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7QUFDckQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsa0JBQWtCLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsY0FBYyxDQUFDO0FBQ25ELE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUMvQyw0QkFBNEIsQ0FBQztBQUMvQixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyx3QkFBd0IsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsTUFBTSxDQUFDO0FBQ3BDLE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFHLG1CQUFtQixDQUFDO0FBQy9ELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyx1QkFBdUIsQ0FBQztBQUV0RCxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxTQUFTLENBQUM7QUFDMUMsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsa0JBQWtCLENBQUM7QUFDcEQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLGNBQWMsQ0FBQztBQUN4QyxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQztBQUN0RCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxxQkFBcUIsQ0FBQztBQUMxRCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxxQkFBcUIsQ0FBQztBQUUxRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxXQUFXLENBQUM7QUFDOUMsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsb0JBQW9CLENBQUM7QUFDeEQsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLGdCQUFnQixDQUFDO0FBQ2hELE1BQU0sQ0FBQyxNQUFNLHNCQUFzQixHQUNqQyxnREFBZ0QsQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FDekMsbUNBQW1DLENBQUM7QUFDdEMsTUFBTSxDQUFDLE1BQU0sZ0JBQWdCLEdBQUcsb0JBQW9CLENBQUM7QUFDckQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLGdCQUFnQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWRkcmVzcyxcbiAgQjJCQXBwcm92YWxQcm9jZXNzLFxuICBCMkJVbml0LFxuICBCMkJVc2VyLFxuICBDb3N0Q2VudGVyLFxuICBMaXN0TW9kZWwsXG4gIE9yZGVyQXBwcm92YWxQZXJtaXNzaW9uVHlwZSxcbiAgU3RhdGVVdGlscyxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IEJ1ZGdldCB9IGZyb20gJy4uL21vZGVsL2J1ZGdldC5tb2RlbCc7XG5pbXBvcnQgeyBQZXJtaXNzaW9uIH0gZnJvbSAnLi4vbW9kZWwvcGVybWlzc2lvbi5tb2RlbCc7XG5pbXBvcnQgeyBCMkJVbml0Tm9kZSB9IGZyb20gJy4uL21vZGVsL3VuaXQtbm9kZS5tb2RlbCc7XG5pbXBvcnQgeyBVc2VyR3JvdXAgfSBmcm9tICcuLi9tb2RlbC91c2VyLWdyb3VwLm1vZGVsJztcblxuZXhwb3J0IGNvbnN0IE9SR0FOSVpBVElPTl9GRUFUVVJFID0gJ29yZ2FuaXphdGlvbic7XG5cbmV4cG9ydCBjb25zdCBCVURHRVRfRkVBVFVSRSA9ICdidWRnZXQnO1xuZXhwb3J0IGNvbnN0IEJVREdFVF9FTlRJVElFUyA9ICdidWRnZXQtZW50aXRpZXMnO1xuZXhwb3J0IGNvbnN0IEJVREdFVF9MSVNUID0gJ2J1ZGdldC1saXN0JztcblxuZXhwb3J0IGNvbnN0IENPU1RfQ0VOVEVSX0ZFQVRVUkUgPSAnY29zdENlbnRlcic7XG5leHBvcnQgY29uc3QgQ09TVF9DRU5URVJfRU5USVRJRVMgPSAnY29zdENlbnRlci1lbnRpdGllcyc7XG5leHBvcnQgY29uc3QgQ09TVF9DRU5URVJfTElTVCA9ICdjb3N0Q2VudGVyLWxpc3QnO1xuZXhwb3J0IGNvbnN0IENPU1RfQ0VOVEVSX0FTU0lHTkVEX0JVREdFVFMgPSAnY29zdENlbnRlci1hc3NpZ25lZC1idWRnZXRzJztcblxuZXhwb3J0IGNvbnN0IFBFUk1JU1NJT05fRkVBVFVSRSA9ICdwZXJtaXNzaW9uJztcbmV4cG9ydCBjb25zdCBQRVJNSVNTSU9OX0VOVElUSUVTID0gJ3Blcm1pc3Npb24tZW50aXRpZXMnO1xuZXhwb3J0IGNvbnN0IFBFUk1JU1NJT05fTElTVCA9ICdwZXJtaXNzaW9uLWxpc3QnO1xuXG5leHBvcnQgY29uc3QgUEVSTUlTU0lPTl9UWVBFUyA9ICdwZXJtaXNzaW9uLXR5cGVzJztcbmV4cG9ydCBjb25zdCBQRVJNSVNTSU9OX1RZUEVTX0xJU1QgPSAncGVybWlzc2lvbi10eXBlcy1saXN0JztcblxuZXhwb3J0IGNvbnN0IE9SR19VTklUX0ZFQVRVUkUgPSAnb3JnVW5pdCc7XG5leHBvcnQgY29uc3QgT1JHX1VOSVRfTk9ERV9FTlRJVElFUyA9ICdvcmdVbml0Tm9kZS1lbnRpdGllcyc7XG5leHBvcnQgY29uc3QgT1JHX1VOSVRfTk9ERV9MSVNUID0gJ29yZ1VuaXROb2RlLWxpc3QnO1xuZXhwb3J0IGNvbnN0IE9SR19VTklUX0VOVElUSUVTID0gJ29yZ1VuaXQtZW50aXRpZXMnO1xuZXhwb3J0IGNvbnN0IE9SR19VTklUX1RSRUVfRU5USVRZID0gJ29yZ1VuaXQtdHJlZSc7XG5leHBvcnQgY29uc3QgT1JHX1VOSVRfQVBQUk9WQUxfUFJPQ0VTU0VTX0VOVElUSUVTID1cbiAgJ29yZ1VuaXQtYXBwcm92YWwtcHJvY2Vzc2VzJztcbmV4cG9ydCBjb25zdCBPUkdfVU5JVF9BU1NJR05FRF9VU0VSUyA9ICdvcmdVbml0LWFzc2lnbmVkLXVzZXJzJztcblxuZXhwb3J0IGNvbnN0IE9SR19VTklUX1RSRUUgPSAndHJlZSc7XG5leHBvcnQgY29uc3QgT1JHX1VOSVRfQVBQUk9WQUxfUFJPQ0VTU0VTID0gJ2FwcHJvdmFsUHJvY2Vzc2VzJztcbmV4cG9ydCBjb25zdCBPUkdfVU5JVF9OT0RFUyA9ICdhdmFpbGFibGVPcmdVbml0Tm9kZXMnO1xuXG5leHBvcnQgY29uc3QgQjJCX1VTRVJfRkVBVFVSRSA9ICdiMmJVc2VyJztcbmV4cG9ydCBjb25zdCBCMkJfVVNFUl9FTlRJVElFUyA9ICdiMmJVc2VyLWVudGl0aWVzJztcbmV4cG9ydCBjb25zdCBVU0VSX0xJU1QgPSAnYjJiVXNlci1saXN0JztcbmV4cG9ydCBjb25zdCBCMkJfVVNFUl9BUFBST1ZFUlMgPSAnYjJiVXNlci1hcHByb3ZlcnMnO1xuZXhwb3J0IGNvbnN0IEIyQl9VU0VSX1BFUk1JU1NJT05TID0gJ2IyYlVzZXItcGVybWlzc2lvbnMnO1xuZXhwb3J0IGNvbnN0IEIyQl9VU0VSX1VTRVJfR1JPVVBTID0gJ2IyYlVzZXItdXNlci1ncm91cHMnO1xuXG5leHBvcnQgY29uc3QgVVNFUl9HUk9VUF9GRUFUVVJFID0gJ3VzZXJHcm91cCc7XG5leHBvcnQgY29uc3QgVVNFUl9HUk9VUF9FTlRJVElFUyA9ICd1c2VyR3JvdXAtZW50aXRpZXMnO1xuZXhwb3J0IGNvbnN0IFVTRVJfR1JPVVBfTElTVCA9ICd1c2VyR3JvdXAtbGlzdCc7XG5leHBvcnQgY29uc3QgVVNFUl9HUk9VUF9QRVJNSVNTSU9OUyA9XG4gICd1c2VyR3JvdXAtYXZhaWxhYmxlLW9yZGVyLWFwcHJvdmFsLXBlcm1pc3Npb25zJztcbmV4cG9ydCBjb25zdCBVU0VSX0dST1VQX0FWQUlMQUJMRV9DVVNUT01FUlMgPVxuICAndXNlckdyb3VwLWF2YWlsYWJsZS1vcmctY3VzdG9tZXJzJztcbmV4cG9ydCBjb25zdCBBRERSRVNTX0VOVElUSUVTID0gJ2FkZHJlc3Nlcy1lbnRpdGllcyc7XG5leHBvcnQgY29uc3QgQUREUkVTU19MSVNUID0gJ2FkZHJlc3Nlcy1saXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBNYW5hZ2VtZW50PFR5cGU+IGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMaXN0U3RhdGU8VHlwZT4ge31cblxuZXhwb3J0IGludGVyZmFjZSBCdWRnZXRNYW5hZ2VtZW50IGV4dGVuZHMgTWFuYWdlbWVudDxCdWRnZXQ+IHt9XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3JnVW5pdHMge1xuICBhdmFpbGFibGVPcmdVbml0Tm9kZXM6IFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8QjJCVW5pdE5vZGVbXT47XG4gIGVudGl0aWVzOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPEIyQlVuaXQ+O1xuICB0cmVlOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPEIyQlVuaXROb2RlPjtcbiAgYXBwcm92YWxQcm9jZXNzZXM6IFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8QjJCQXBwcm92YWxQcm9jZXNzW10+O1xuICB1c2VyczogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xuICBhZGRyZXNzTGlzdDogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xuICBhZGRyZXNzRW50aXRpZXM6IFN0YXRlVXRpbHMuRW50aXR5TG9hZGVyU3RhdGU8QWRkcmVzcz47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlckdyb3VwTWFuYWdlbWVudCBleHRlbmRzIE1hbmFnZW1lbnQ8VXNlckdyb3VwPiB7XG4gIHBlcm1pc3Npb25zOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPExpc3RNb2RlbD47XG4gIGN1c3RvbWVyczogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBlcm1pc3Npb25NYW5hZ2VtZW50IGV4dGVuZHMgTWFuYWdlbWVudDxQZXJtaXNzaW9uPiB7XG4gIHBlcm1pc3Npb25UeXBlczogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxPcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGVbXT47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29zdENlbnRlck1hbmFnZW1lbnQgZXh0ZW5kcyBNYW5hZ2VtZW50PENvc3RDZW50ZXI+IHtcbiAgYnVkZ2V0czogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEIyQlVzZXJNYW5hZ2VtZW50IGV4dGVuZHMgTWFuYWdlbWVudDxCMkJVc2VyPiB7XG4gIGFwcHJvdmVyczogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xuICBwZXJtaXNzaW9uczogU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxMaXN0TW9kZWw+O1xuICB1c2VyR3JvdXBzOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPExpc3RNb2RlbD47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RhdGVXaXRoT3JnYW5pemF0aW9uIHtcbiAgW09SR0FOSVpBVElPTl9GRUFUVVJFXTogT3JnYW5pemF0aW9uU3RhdGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgT3JnYW5pemF0aW9uU3RhdGUge1xuICBbQlVER0VUX0ZFQVRVUkVdOiBCdWRnZXRNYW5hZ2VtZW50O1xuICBbT1JHX1VOSVRfRkVBVFVSRV06IE9yZ1VuaXRzO1xuICBbVVNFUl9HUk9VUF9GRUFUVVJFXTogVXNlckdyb3VwTWFuYWdlbWVudDtcbiAgW1BFUk1JU1NJT05fRkVBVFVSRV06IFBlcm1pc3Npb25NYW5hZ2VtZW50O1xuICBbQ09TVF9DRU5URVJfRkVBVFVSRV06IENvc3RDZW50ZXJNYW5hZ2VtZW50O1xuICBbQjJCX1VTRVJfRkVBVFVSRV06IEIyQlVzZXJNYW5hZ2VtZW50O1xufVxuIl19