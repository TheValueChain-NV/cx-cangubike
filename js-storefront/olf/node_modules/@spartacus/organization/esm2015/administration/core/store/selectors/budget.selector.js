import { createSelector } from '@ngrx/store';
import { StateUtils } from '@spartacus/core';
import { BUDGET_FEATURE, } from '../organization-state';
import { getOrganizationState } from './feature.selector';
export const getBudgetManagementState = createSelector(getOrganizationState, (state) => state[BUDGET_FEATURE]);
export const getBudgetsState = createSelector(getBudgetManagementState, (state) => state && state.entities);
export const getBudget = (budgetCode) => createSelector(getBudgetsState, (state) => StateUtils.entityLoaderStateSelector(state, budgetCode));
export const getBudgetValue = (budgetCode) => {
    return createSelector(getBudget(budgetCode), (budgetState) => StateUtils.loaderValueSelector(budgetState));
};
export const getBudgetList = (params) => createSelector(getBudgetManagementState, (state) => StateUtils.denormalizeSearch(state, params));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVkZ2V0LnNlbGVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlL3N0b3JlL3NlbGVjdG9ycy9idWRnZXQuc2VsZWN0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLGNBQWMsRUFBb0IsTUFBTSxhQUFhLENBQUM7QUFDL0QsT0FBTyxFQUErQixVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUxRSxPQUFPLEVBQ0wsY0FBYyxHQUlmLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFMUQsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBR2pDLGNBQWMsQ0FDaEIsb0JBQW9CLEVBQ3BCLENBQUMsS0FBd0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUNwRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUd4QixjQUFjLENBQ2hCLHdCQUF3QixFQUN4QixDQUFDLEtBQXVCLEVBQUUsRUFBRSxDQUFDLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxDQUNyRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQ3ZCLFVBQWtCLEVBQ3VELEVBQUUsQ0FDM0UsY0FBYyxDQUNaLGVBQWUsRUFDZixDQUFDLEtBQTJDLEVBQUUsRUFBRSxDQUM5QyxVQUFVLENBQUMseUJBQXlCLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUMxRCxDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLENBQzVCLFVBQWtCLEVBQytCLEVBQUU7SUFDbkQsT0FBTyxjQUFjLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FDM0QsVUFBVSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxDQUM1QyxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLE1BQW9CLEVBSXBCLEVBQUUsQ0FDRixjQUFjLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxLQUF1QixFQUFFLEVBQUUsQ0FDbkUsVUFBVSxDQUFDLGlCQUFpQixDQUFTLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FDcEQsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgRW50aXRpZXNNb2RlbCwgU2VhcmNoQ29uZmlnLCBTdGF0ZVV0aWxzIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IEJ1ZGdldCB9IGZyb20gJy4uLy4uL21vZGVsL2J1ZGdldC5tb2RlbCc7XG5pbXBvcnQge1xuICBCVURHRVRfRkVBVFVSRSxcbiAgQnVkZ2V0TWFuYWdlbWVudCxcbiAgT3JnYW5pemF0aW9uU3RhdGUsXG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbn0gZnJvbSAnLi4vb3JnYW5pemF0aW9uLXN0YXRlJztcbmltcG9ydCB7IGdldE9yZ2FuaXphdGlvblN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcblxuZXhwb3J0IGNvbnN0IGdldEJ1ZGdldE1hbmFnZW1lbnRTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoT3JnYW5pemF0aW9uLFxuICBCdWRnZXRNYW5hZ2VtZW50XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldE9yZ2FuaXphdGlvblN0YXRlLFxuICAoc3RhdGU6IE9yZ2FuaXphdGlvblN0YXRlKSA9PiBzdGF0ZVtCVURHRVRfRkVBVFVSRV1cbik7XG5cbmV4cG9ydCBjb25zdCBnZXRCdWRnZXRzU3RhdGU6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbiAgU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJTdGF0ZTxCdWRnZXQ+XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldEJ1ZGdldE1hbmFnZW1lbnRTdGF0ZSxcbiAgKHN0YXRlOiBCdWRnZXRNYW5hZ2VtZW50KSA9PiBzdGF0ZSAmJiBzdGF0ZS5lbnRpdGllc1xuKTtcblxuZXhwb3J0IGNvbnN0IGdldEJ1ZGdldCA9IChcbiAgYnVkZ2V0Q29kZTogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aE9yZ2FuaXphdGlvbiwgU3RhdGVVdGlscy5Mb2FkZXJTdGF0ZTxCdWRnZXQ+PiA9PlxuICBjcmVhdGVTZWxlY3RvcihcbiAgICBnZXRCdWRnZXRzU3RhdGUsXG4gICAgKHN0YXRlOiBTdGF0ZVV0aWxzLkVudGl0eUxvYWRlclN0YXRlPEJ1ZGdldD4pID0+XG4gICAgICBTdGF0ZVV0aWxzLmVudGl0eUxvYWRlclN0YXRlU2VsZWN0b3Ioc3RhdGUsIGJ1ZGdldENvZGUpXG4gICk7XG5cbmV4cG9ydCBjb25zdCBnZXRCdWRnZXRWYWx1ZSA9IChcbiAgYnVkZ2V0Q29kZTogc3RyaW5nXG4pOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aE9yZ2FuaXphdGlvbiwgQnVkZ2V0PiA9PiB7XG4gIHJldHVybiBjcmVhdGVTZWxlY3RvcihnZXRCdWRnZXQoYnVkZ2V0Q29kZSksIChidWRnZXRTdGF0ZSkgPT5cbiAgICBTdGF0ZVV0aWxzLmxvYWRlclZhbHVlU2VsZWN0b3IoYnVkZ2V0U3RhdGUpXG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QnVkZ2V0TGlzdCA9IChcbiAgcGFyYW1zOiBTZWFyY2hDb25maWdcbik6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZ2FuaXphdGlvbixcbiAgU3RhdGVVdGlscy5Mb2FkZXJTdGF0ZTxFbnRpdGllc01vZGVsPEJ1ZGdldD4+XG4+ID0+XG4gIGNyZWF0ZVNlbGVjdG9yKGdldEJ1ZGdldE1hbmFnZW1lbnRTdGF0ZSwgKHN0YXRlOiBCdWRnZXRNYW5hZ2VtZW50KSA9PlxuICAgIFN0YXRlVXRpbHMuZGVub3JtYWxpemVTZWFyY2g8QnVkZ2V0PihzdGF0ZSwgcGFyYW1zKVxuICApO1xuIl19