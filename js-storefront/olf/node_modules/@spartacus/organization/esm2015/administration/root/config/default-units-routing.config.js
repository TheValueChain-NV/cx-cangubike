import { ROUTE_PARAMS } from '../route-params';
const listPath = `organization/units/:${ROUTE_PARAMS.unitCode}`;
const paramsMapping = {
    unitCode: 'uid',
    addressId: 'id',
    userCode: 'customerId',
};
export const defaultUnitsRoutingConfig = {
    routing: {
        routes: {
            orgUnits: {
                paths: ['organization/units'],
            },
            orgUnitCreate: {
                paths: ['organization/units/create'],
            },
            orgUnitDetails: {
                paths: [listPath],
                paramsMapping,
            },
            orgUnitEdit: {
                paths: [`${listPath}/edit`],
                paramsMapping,
            },
            orgUnitChildren: {
                paths: [`${listPath}/children`],
                paramsMapping,
            },
            orgUnitCreateChild: {
                paths: [`${listPath}/children/create`],
                paramsMapping,
            },
            orgUnitUserList: {
                paths: [`${listPath}/users`],
                paramsMapping,
            },
            orgUnitCreateUser: {
                paths: [`${listPath}/users/create`],
                paramsMapping,
            },
            orgUnitUserRoles: {
                paths: [`${listPath}/users/:userCode/roles`],
                paramsMapping,
            },
            orgUnitApprovers: {
                paths: [`${listPath}/approvers`],
                paramsMapping,
            },
            orgUnitAssignApprovers: {
                paths: [`${listPath}/approvers/assign`],
                paramsMapping,
            },
            orgUnitAddressList: {
                paths: [`${listPath}/addresses`],
                paramsMapping,
            },
            orgUnitAddressCreate: {
                paths: [`${listPath}/addresses/create`],
                paramsMapping,
            },
            orgUnitAddressDetails: {
                paths: [`${listPath}/addresses/:addressId`],
                paramsMapping,
            },
            orgUnitAddressEdit: {
                paths: [`${listPath}/addresses/:addressId/edit`],
                paramsMapping,
            },
            orgUnitCostCenters: {
                paths: [`${listPath}/cost-centers`],
                paramsMapping,
            },
            orgUnitCreateCostCenter: {
                paths: [`${listPath}/cost-centers/create`],
                paramsMapping,
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC11bml0cy1yb3V0aW5nLmNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vcm9vdC9jb25maWcvZGVmYXVsdC11bml0cy1yb3V0aW5nLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsTUFBTSxRQUFRLEdBQUcsdUJBQXVCLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUNoRSxNQUFNLGFBQWEsR0FBa0I7SUFDbkMsUUFBUSxFQUFFLEtBQUs7SUFDZixTQUFTLEVBQUUsSUFBSTtJQUNmLFFBQVEsRUFBRSxZQUFZO0NBQ3ZCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBa0I7SUFDdEQsT0FBTyxFQUFFO1FBQ1AsTUFBTSxFQUFFO1lBQ04sUUFBUSxFQUFFO2dCQUNSLEtBQUssRUFBRSxDQUFDLG9CQUFvQixDQUFDO2FBQzlCO1lBQ0QsYUFBYSxFQUFFO2dCQUNiLEtBQUssRUFBRSxDQUFDLDJCQUEyQixDQUFDO2FBQ3JDO1lBQ0QsY0FBYyxFQUFFO2dCQUNkLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFDakIsYUFBYTthQUNkO1lBQ0QsV0FBVyxFQUFFO2dCQUNYLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxPQUFPLENBQUM7Z0JBQzNCLGFBQWE7YUFDZDtZQUNELGVBQWUsRUFBRTtnQkFDZixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsV0FBVyxDQUFDO2dCQUMvQixhQUFhO2FBQ2Q7WUFDRCxrQkFBa0IsRUFBRTtnQkFDbEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLGtCQUFrQixDQUFDO2dCQUN0QyxhQUFhO2FBQ2Q7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLFFBQVEsQ0FBQztnQkFDNUIsYUFBYTthQUNkO1lBQ0QsaUJBQWlCLEVBQUU7Z0JBQ2pCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxlQUFlLENBQUM7Z0JBQ25DLGFBQWE7YUFDZDtZQUNELGdCQUFnQixFQUFFO2dCQUNoQixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsd0JBQXdCLENBQUM7Z0JBQzVDLGFBQWE7YUFDZDtZQUNELGdCQUFnQixFQUFFO2dCQUNoQixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsWUFBWSxDQUFDO2dCQUNoQyxhQUFhO2FBQ2Q7WUFDRCxzQkFBc0IsRUFBRTtnQkFDdEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLG1CQUFtQixDQUFDO2dCQUN2QyxhQUFhO2FBQ2Q7WUFDRCxrQkFBa0IsRUFBRTtnQkFDbEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLFlBQVksQ0FBQztnQkFDaEMsYUFBYTthQUNkO1lBQ0Qsb0JBQW9CLEVBQUU7Z0JBQ3BCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxtQkFBbUIsQ0FBQztnQkFDdkMsYUFBYTthQUNkO1lBQ0QscUJBQXFCLEVBQUU7Z0JBQ3JCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSx1QkFBdUIsQ0FBQztnQkFDM0MsYUFBYTthQUNkO1lBQ0Qsa0JBQWtCLEVBQUU7Z0JBQ2xCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSw0QkFBNEIsQ0FBQztnQkFDaEQsYUFBYTthQUNkO1lBQ0Qsa0JBQWtCLEVBQUU7Z0JBQ2xCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxlQUFlLENBQUM7Z0JBQ25DLGFBQWE7YUFDZDtZQUNELHVCQUF1QixFQUFFO2dCQUN2QixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsc0JBQXNCLENBQUM7Z0JBQzFDLGFBQWE7YUFDZDtTQUNGO0tBQ0Y7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyYW1zTWFwcGluZywgUm91dGluZ0NvbmZpZyB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBST1VURV9QQVJBTVMgfSBmcm9tICcuLi9yb3V0ZS1wYXJhbXMnO1xuXG5jb25zdCBsaXN0UGF0aCA9IGBvcmdhbml6YXRpb24vdW5pdHMvOiR7Uk9VVEVfUEFSQU1TLnVuaXRDb2RlfWA7XG5jb25zdCBwYXJhbXNNYXBwaW5nOiBQYXJhbXNNYXBwaW5nID0ge1xuICB1bml0Q29kZTogJ3VpZCcsXG4gIGFkZHJlc3NJZDogJ2lkJyxcbiAgdXNlckNvZGU6ICdjdXN0b21lcklkJyxcbn07XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0VW5pdHNSb3V0aW5nQ29uZmlnOiBSb3V0aW5nQ29uZmlnID0ge1xuICByb3V0aW5nOiB7XG4gICAgcm91dGVzOiB7XG4gICAgICBvcmdVbml0czoge1xuICAgICAgICBwYXRoczogWydvcmdhbml6YXRpb24vdW5pdHMnXSxcbiAgICAgIH0sXG4gICAgICBvcmdVbml0Q3JlYXRlOiB7XG4gICAgICAgIHBhdGhzOiBbJ29yZ2FuaXphdGlvbi91bml0cy9jcmVhdGUnXSxcbiAgICAgIH0sXG4gICAgICBvcmdVbml0RGV0YWlsczoge1xuICAgICAgICBwYXRoczogW2xpc3RQYXRoXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVbml0RWRpdDoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS9lZGl0YF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVW5pdENoaWxkcmVuOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2NoaWxkcmVuYF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVW5pdENyZWF0ZUNoaWxkOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2NoaWxkcmVuL2NyZWF0ZWBdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRVc2VyTGlzdDoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS91c2Vyc2BdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRDcmVhdGVVc2VyOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L3VzZXJzL2NyZWF0ZWBdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRVc2VyUm9sZXM6IHtcbiAgICAgICAgcGF0aHM6IFtgJHtsaXN0UGF0aH0vdXNlcnMvOnVzZXJDb2RlL3JvbGVzYF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVW5pdEFwcHJvdmVyczoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS9hcHByb3ZlcnNgXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVbml0QXNzaWduQXBwcm92ZXJzOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2FwcHJvdmVycy9hc3NpZ25gXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVbml0QWRkcmVzc0xpc3Q6IHtcbiAgICAgICAgcGF0aHM6IFtgJHtsaXN0UGF0aH0vYWRkcmVzc2VzYF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVW5pdEFkZHJlc3NDcmVhdGU6IHtcbiAgICAgICAgcGF0aHM6IFtgJHtsaXN0UGF0aH0vYWRkcmVzc2VzL2NyZWF0ZWBdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRBZGRyZXNzRGV0YWlsczoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS9hZGRyZXNzZXMvOmFkZHJlc3NJZGBdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRBZGRyZXNzRWRpdDoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS9hZGRyZXNzZXMvOmFkZHJlc3NJZC9lZGl0YF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVW5pdENvc3RDZW50ZXJzOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2Nvc3QtY2VudGVyc2BdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VuaXRDcmVhdGVDb3N0Q2VudGVyOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2Nvc3QtY2VudGVycy9jcmVhdGVgXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn07XG4iXX0=