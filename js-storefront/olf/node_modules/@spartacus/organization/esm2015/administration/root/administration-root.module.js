import { NgModule } from '@angular/core';
import { HttpErrorHandler, provideDefaultConfig, provideDefaultConfigFactory, } from '@spartacus/core';
import { OrganizationBadRequestHandler, OrganizationConflictHandler, } from '@spartacus/organization/administration/core';
import { defaultBudgetRoutingConfig } from './config/default-budget-routing.config';
import { defaultCostCenterRoutingConfig } from './config/default-cost-center-routing.config';
import { defaultOrganizationLayoutConfig } from './config/default-organization-layout.config';
import { defaultPermissionRoutingConfig } from './config/default-permission-routing.config';
import { defaultUnitsRoutingConfig } from './config/default-units-routing.config';
import { defaultUserGroupRoutingConfig } from './config/default-user-group-routing.config';
import { defaultUserRoutingConfig } from './config/default-user-routing.config';
import { ORGANIZATION_ADMINISTRATION_FEATURE } from './feature-name';
import * as i0 from "@angular/core";
// TODO: Inline this factory when we start releasing Ivy compiled libraries
export function defaultOrganizationAdministrationComponentsConfig() {
    const config = {
        featureModules: {
            [ORGANIZATION_ADMINISTRATION_FEATURE]: {
                cmsComponents: [
                    'ManageBudgetsListComponent',
                    'ManageCostCentersListComponent',
                    'ManagePermissionsListComponent',
                    'ManageUnitsListComponent',
                    'ManageUsersListComponent',
                    'ManageUserGroupsListComponent',
                ],
            },
        },
    };
    return config;
}
export class AdministrationRootModule {
}
AdministrationRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AdministrationRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AdministrationRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AdministrationRootModule });
AdministrationRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AdministrationRootModule, providers: [
        provideDefaultConfig(defaultOrganizationLayoutConfig),
        provideDefaultConfig({
            routing: { routes: { organization: { paths: ['organization'] } } },
        }),
        provideDefaultConfig(defaultBudgetRoutingConfig),
        provideDefaultConfig(defaultCostCenterRoutingConfig),
        provideDefaultConfig(defaultPermissionRoutingConfig),
        provideDefaultConfig(defaultUnitsRoutingConfig),
        provideDefaultConfig(defaultUserRoutingConfig),
        provideDefaultConfig(defaultUserGroupRoutingConfig),
        provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig),
        {
            provide: HttpErrorHandler,
            useExisting: OrganizationConflictHandler,
            multi: true,
        },
        {
            provide: HttpErrorHandler,
            useExisting: OrganizationBadRequestHandler,
            multi: true,
        },
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AdministrationRootModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [
                        provideDefaultConfig(defaultOrganizationLayoutConfig),
                        provideDefaultConfig({
                            routing: { routes: { organization: { paths: ['organization'] } } },
                        }),
                        provideDefaultConfig(defaultBudgetRoutingConfig),
                        provideDefaultConfig(defaultCostCenterRoutingConfig),
                        provideDefaultConfig(defaultPermissionRoutingConfig),
                        provideDefaultConfig(defaultUnitsRoutingConfig),
                        provideDefaultConfig(defaultUserRoutingConfig),
                        provideDefaultConfig(defaultUserGroupRoutingConfig),
                        provideDefaultConfigFactory(defaultOrganizationAdministrationComponentsConfig),
                        {
                            provide: HttpErrorHandler,
                            useExisting: OrganizationConflictHandler,
                            multi: true,
                        },
                        {
                            provide: HttpErrorHandler,
                            useExisting: OrganizationBadRequestHandler,
                            multi: true,
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRtaW5pc3RyYXRpb24tcm9vdC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL3Jvb3QvYWRtaW5pc3RyYXRpb24tcm9vdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBRUwsZ0JBQWdCLEVBQ2hCLG9CQUFvQixFQUNwQiwyQkFBMkIsR0FFNUIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQ0wsNkJBQTZCLEVBQzdCLDJCQUEyQixHQUM1QixNQUFNLDZDQUE2QyxDQUFDO0FBQ3JELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzdGLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQzlGLE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzVGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQzNGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOztBQUVyRSwyRUFBMkU7QUFDM0UsTUFBTSxVQUFVLGlEQUFpRDtJQUMvRCxNQUFNLE1BQU0sR0FBYztRQUN4QixjQUFjLEVBQUU7WUFDZCxDQUFDLG1DQUFtQyxDQUFDLEVBQUU7Z0JBQ3JDLGFBQWEsRUFBRTtvQkFDYiw0QkFBNEI7b0JBQzVCLGdDQUFnQztvQkFDaEMsZ0NBQWdDO29CQUNoQywwQkFBMEI7b0JBQzFCLDBCQUEwQjtvQkFDMUIsK0JBQStCO2lCQUNoQzthQUNGO1NBQ0Y7S0FDRixDQUFDO0lBRUYsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQStCRCxNQUFNLE9BQU8sd0JBQXdCOztxSEFBeEIsd0JBQXdCO3NIQUF4Qix3QkFBd0I7c0hBQXhCLHdCQUF3QixhQTVCeEI7UUFDVCxvQkFBb0IsQ0FBQywrQkFBK0IsQ0FBQztRQUVyRCxvQkFBb0IsQ0FBZ0I7WUFDbEMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsWUFBWSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsY0FBYyxDQUFDLEVBQUUsRUFBRSxFQUFFO1NBQ25FLENBQUM7UUFDRixvQkFBb0IsQ0FBQywwQkFBMEIsQ0FBQztRQUNoRCxvQkFBb0IsQ0FBQyw4QkFBOEIsQ0FBQztRQUNwRCxvQkFBb0IsQ0FBQyw4QkFBOEIsQ0FBQztRQUNwRCxvQkFBb0IsQ0FBQyx5QkFBeUIsQ0FBQztRQUMvQyxvQkFBb0IsQ0FBQyx3QkFBd0IsQ0FBQztRQUM5QyxvQkFBb0IsQ0FBQyw2QkFBNkIsQ0FBQztRQUVuRCwyQkFBMkIsQ0FDekIsaURBQWlELENBQ2xEO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsZ0JBQWdCO1lBQ3pCLFdBQVcsRUFBRSwyQkFBMkI7WUFDeEMsS0FBSyxFQUFFLElBQUk7U0FDWjtRQUNEO1lBQ0UsT0FBTyxFQUFFLGdCQUFnQjtZQUN6QixXQUFXLEVBQUUsNkJBQTZCO1lBQzFDLEtBQUssRUFBRSxJQUFJO1NBQ1o7S0FDRjsyRkFFVSx3QkFBd0I7a0JBN0JwQyxRQUFRO21CQUFDO29CQUNSLFNBQVMsRUFBRTt3QkFDVCxvQkFBb0IsQ0FBQywrQkFBK0IsQ0FBQzt3QkFFckQsb0JBQW9CLENBQWdCOzRCQUNsQyxPQUFPLEVBQUUsRUFBRSxNQUFNLEVBQUUsRUFBRSxZQUFZLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFLEVBQUU7eUJBQ25FLENBQUM7d0JBQ0Ysb0JBQW9CLENBQUMsMEJBQTBCLENBQUM7d0JBQ2hELG9CQUFvQixDQUFDLDhCQUE4QixDQUFDO3dCQUNwRCxvQkFBb0IsQ0FBQyw4QkFBOEIsQ0FBQzt3QkFDcEQsb0JBQW9CLENBQUMseUJBQXlCLENBQUM7d0JBQy9DLG9CQUFvQixDQUFDLHdCQUF3QixDQUFDO3dCQUM5QyxvQkFBb0IsQ0FBQyw2QkFBNkIsQ0FBQzt3QkFFbkQsMkJBQTJCLENBQ3pCLGlEQUFpRCxDQUNsRDt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsZ0JBQWdCOzRCQUN6QixXQUFXLEVBQUUsMkJBQTJCOzRCQUN4QyxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsZ0JBQWdCOzRCQUN6QixXQUFXLEVBQUUsNkJBQTZCOzRCQUMxQyxLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDbXNDb25maWcsXG4gIEh0dHBFcnJvckhhbmRsZXIsXG4gIHByb3ZpZGVEZWZhdWx0Q29uZmlnLFxuICBwcm92aWRlRGVmYXVsdENvbmZpZ0ZhY3RvcnksXG4gIFJvdXRpbmdDb25maWcsXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQge1xuICBPcmdhbml6YXRpb25CYWRSZXF1ZXN0SGFuZGxlcixcbiAgT3JnYW5pemF0aW9uQ29uZmxpY3RIYW5kbGVyLFxufSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlJztcbmltcG9ydCB7IGRlZmF1bHRCdWRnZXRSb3V0aW5nQ29uZmlnIH0gZnJvbSAnLi9jb25maWcvZGVmYXVsdC1idWRnZXQtcm91dGluZy5jb25maWcnO1xuaW1wb3J0IHsgZGVmYXVsdENvc3RDZW50ZXJSb3V0aW5nQ29uZmlnIH0gZnJvbSAnLi9jb25maWcvZGVmYXVsdC1jb3N0LWNlbnRlci1yb3V0aW5nLmNvbmZpZyc7XG5pbXBvcnQgeyBkZWZhdWx0T3JnYW5pemF0aW9uTGF5b3V0Q29uZmlnIH0gZnJvbSAnLi9jb25maWcvZGVmYXVsdC1vcmdhbml6YXRpb24tbGF5b3V0LmNvbmZpZyc7XG5pbXBvcnQgeyBkZWZhdWx0UGVybWlzc2lvblJvdXRpbmdDb25maWcgfSBmcm9tICcuL2NvbmZpZy9kZWZhdWx0LXBlcm1pc3Npb24tcm91dGluZy5jb25maWcnO1xuaW1wb3J0IHsgZGVmYXVsdFVuaXRzUm91dGluZ0NvbmZpZyB9IGZyb20gJy4vY29uZmlnL2RlZmF1bHQtdW5pdHMtcm91dGluZy5jb25maWcnO1xuaW1wb3J0IHsgZGVmYXVsdFVzZXJHcm91cFJvdXRpbmdDb25maWcgfSBmcm9tICcuL2NvbmZpZy9kZWZhdWx0LXVzZXItZ3JvdXAtcm91dGluZy5jb25maWcnO1xuaW1wb3J0IHsgZGVmYXVsdFVzZXJSb3V0aW5nQ29uZmlnIH0gZnJvbSAnLi9jb25maWcvZGVmYXVsdC11c2VyLXJvdXRpbmcuY29uZmlnJztcbmltcG9ydCB7IE9SR0FOSVpBVElPTl9BRE1JTklTVFJBVElPTl9GRUFUVVJFIH0gZnJvbSAnLi9mZWF0dXJlLW5hbWUnO1xuXG4vLyBUT0RPOiBJbmxpbmUgdGhpcyBmYWN0b3J5IHdoZW4gd2Ugc3RhcnQgcmVsZWFzaW5nIEl2eSBjb21waWxlZCBsaWJyYXJpZXNcbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0T3JnYW5pemF0aW9uQWRtaW5pc3RyYXRpb25Db21wb25lbnRzQ29uZmlnKCk6IENtc0NvbmZpZyB7XG4gIGNvbnN0IGNvbmZpZzogQ21zQ29uZmlnID0ge1xuICAgIGZlYXR1cmVNb2R1bGVzOiB7XG4gICAgICBbT1JHQU5JWkFUSU9OX0FETUlOSVNUUkFUSU9OX0ZFQVRVUkVdOiB7XG4gICAgICAgIGNtc0NvbXBvbmVudHM6IFtcbiAgICAgICAgICAnTWFuYWdlQnVkZ2V0c0xpc3RDb21wb25lbnQnLFxuICAgICAgICAgICdNYW5hZ2VDb3N0Q2VudGVyc0xpc3RDb21wb25lbnQnLFxuICAgICAgICAgICdNYW5hZ2VQZXJtaXNzaW9uc0xpc3RDb21wb25lbnQnLFxuICAgICAgICAgICdNYW5hZ2VVbml0c0xpc3RDb21wb25lbnQnLFxuICAgICAgICAgICdNYW5hZ2VVc2Vyc0xpc3RDb21wb25lbnQnLFxuICAgICAgICAgICdNYW5hZ2VVc2VyR3JvdXBzTGlzdENvbXBvbmVudCcsXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG5cbiAgcmV0dXJuIGNvbmZpZztcbn1cblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgcHJvdmlkZURlZmF1bHRDb25maWcoZGVmYXVsdE9yZ2FuaXphdGlvbkxheW91dENvbmZpZyksXG5cbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyg8Um91dGluZ0NvbmZpZz57XG4gICAgICByb3V0aW5nOiB7IHJvdXRlczogeyBvcmdhbml6YXRpb246IHsgcGF0aHM6IFsnb3JnYW5pemF0aW9uJ10gfSB9IH0sXG4gICAgfSksXG4gICAgcHJvdmlkZURlZmF1bHRDb25maWcoZGVmYXVsdEJ1ZGdldFJvdXRpbmdDb25maWcpLFxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnKGRlZmF1bHRDb3N0Q2VudGVyUm91dGluZ0NvbmZpZyksXG4gICAgcHJvdmlkZURlZmF1bHRDb25maWcoZGVmYXVsdFBlcm1pc3Npb25Sb3V0aW5nQ29uZmlnKSxcbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyhkZWZhdWx0VW5pdHNSb3V0aW5nQ29uZmlnKSxcbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyhkZWZhdWx0VXNlclJvdXRpbmdDb25maWcpLFxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnKGRlZmF1bHRVc2VyR3JvdXBSb3V0aW5nQ29uZmlnKSxcblxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnRmFjdG9yeShcbiAgICAgIGRlZmF1bHRPcmdhbml6YXRpb25BZG1pbmlzdHJhdGlvbkNvbXBvbmVudHNDb25maWdcbiAgICApLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEh0dHBFcnJvckhhbmRsZXIsXG4gICAgICB1c2VFeGlzdGluZzogT3JnYW5pemF0aW9uQ29uZmxpY3RIYW5kbGVyLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIdHRwRXJyb3JIYW5kbGVyLFxuICAgICAgdXNlRXhpc3Rpbmc6IE9yZ2FuaXphdGlvbkJhZFJlcXVlc3RIYW5kbGVyLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgfSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQWRtaW5pc3RyYXRpb25Sb290TW9kdWxlIHt9XG4iXX0=