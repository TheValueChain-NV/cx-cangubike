import { ROUTE_PARAMS } from '../route-params';
const listPath = `organization/users/:${ROUTE_PARAMS.userCode}`;
const paramsMapping = {
    userCode: 'customerId',
};
export const defaultUserRoutingConfig = {
    routing: {
        routes: {
            orgUser: {
                paths: ['organization/users'],
            },
            orgUserCreate: {
                paths: ['organization/users/create'],
            },
            orgUserDetails: {
                paths: [listPath],
                paramsMapping,
            },
            orgUserEdit: {
                paths: [`${listPath}/edit`],
                paramsMapping,
            },
            orgUserChangePassword: {
                paths: [`${listPath}/change-password`],
                paramsMapping,
            },
            orgUserApprovers: {
                paths: [`${listPath}/approvers`],
                paramsMapping,
            },
            orgUserAssignApprovers: {
                paths: [`${listPath}/approvers/assign`],
                paramsMapping,
            },
            orgUserPermissions: {
                paths: [`${listPath}/purchase-limits`],
                paramsMapping,
            },
            orgUserAssignPermissions: {
                paths: [`${listPath}/purchase-limits/assign`],
                paramsMapping,
            },
            orgUserUserGroups: {
                paths: [`${listPath}/user-groups`],
                paramsMapping,
            },
            orgUserAssignUserGroups: {
                paths: [`${listPath}/user-groups/assign`],
                paramsMapping,
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC11c2VyLXJvdXRpbmcuY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9yb290L2NvbmZpZy9kZWZhdWx0LXVzZXItcm91dGluZy5jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE1BQU0sUUFBUSxHQUFHLHVCQUF1QixZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDaEUsTUFBTSxhQUFhLEdBQWtCO0lBQ25DLFFBQVEsRUFBRSxZQUFZO0NBQ3ZCLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBa0I7SUFDckQsT0FBTyxFQUFFO1FBQ1AsTUFBTSxFQUFFO1lBQ04sT0FBTyxFQUFFO2dCQUNQLEtBQUssRUFBRSxDQUFDLG9CQUFvQixDQUFDO2FBQzlCO1lBQ0QsYUFBYSxFQUFFO2dCQUNiLEtBQUssRUFBRSxDQUFDLDJCQUEyQixDQUFDO2FBQ3JDO1lBQ0QsY0FBYyxFQUFFO2dCQUNkLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQztnQkFDakIsYUFBYTthQUNkO1lBQ0QsV0FBVyxFQUFFO2dCQUNYLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxPQUFPLENBQUM7Z0JBQzNCLGFBQWE7YUFDZDtZQUNELHFCQUFxQixFQUFFO2dCQUNyQixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsa0JBQWtCLENBQUM7Z0JBQ3RDLGFBQWE7YUFDZDtZQUNELGdCQUFnQixFQUFFO2dCQUNoQixLQUFLLEVBQUUsQ0FBQyxHQUFHLFFBQVEsWUFBWSxDQUFDO2dCQUNoQyxhQUFhO2FBQ2Q7WUFDRCxzQkFBc0IsRUFBRTtnQkFDdEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLG1CQUFtQixDQUFDO2dCQUN2QyxhQUFhO2FBQ2Q7WUFDRCxrQkFBa0IsRUFBRTtnQkFDbEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLGtCQUFrQixDQUFDO2dCQUN0QyxhQUFhO2FBQ2Q7WUFDRCx3QkFBd0IsRUFBRTtnQkFDeEIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLHlCQUF5QixDQUFDO2dCQUM3QyxhQUFhO2FBQ2Q7WUFDRCxpQkFBaUIsRUFBRTtnQkFDakIsS0FBSyxFQUFFLENBQUMsR0FBRyxRQUFRLGNBQWMsQ0FBQztnQkFDbEMsYUFBYTthQUNkO1lBQ0QsdUJBQXVCLEVBQUU7Z0JBQ3ZCLEtBQUssRUFBRSxDQUFDLEdBQUcsUUFBUSxxQkFBcUIsQ0FBQztnQkFDekMsYUFBYTthQUNkO1NBQ0Y7S0FDRjtDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYXJhbXNNYXBwaW5nLCBSb3V0aW5nQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IFJPVVRFX1BBUkFNUyB9IGZyb20gJy4uL3JvdXRlLXBhcmFtcyc7XG5cbmNvbnN0IGxpc3RQYXRoID0gYG9yZ2FuaXphdGlvbi91c2Vycy86JHtST1VURV9QQVJBTVMudXNlckNvZGV9YDtcbmNvbnN0IHBhcmFtc01hcHBpbmc6IFBhcmFtc01hcHBpbmcgPSB7XG4gIHVzZXJDb2RlOiAnY3VzdG9tZXJJZCcsXG59O1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFVzZXJSb3V0aW5nQ29uZmlnOiBSb3V0aW5nQ29uZmlnID0ge1xuICByb3V0aW5nOiB7XG4gICAgcm91dGVzOiB7XG4gICAgICBvcmdVc2VyOiB7XG4gICAgICAgIHBhdGhzOiBbJ29yZ2FuaXphdGlvbi91c2VycyddLFxuICAgICAgfSxcbiAgICAgIG9yZ1VzZXJDcmVhdGU6IHtcbiAgICAgICAgcGF0aHM6IFsnb3JnYW5pemF0aW9uL3VzZXJzL2NyZWF0ZSddLFxuICAgICAgfSxcbiAgICAgIG9yZ1VzZXJEZXRhaWxzOiB7XG4gICAgICAgIHBhdGhzOiBbbGlzdFBhdGhdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VzZXJFZGl0OiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2VkaXRgXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVc2VyQ2hhbmdlUGFzc3dvcmQ6IHtcbiAgICAgICAgcGF0aHM6IFtgJHtsaXN0UGF0aH0vY2hhbmdlLXBhc3N3b3JkYF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVXNlckFwcHJvdmVyczoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS9hcHByb3ZlcnNgXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVc2VyQXNzaWduQXBwcm92ZXJzOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L2FwcHJvdmVycy9hc3NpZ25gXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVc2VyUGVybWlzc2lvbnM6IHtcbiAgICAgICAgcGF0aHM6IFtgJHtsaXN0UGF0aH0vcHVyY2hhc2UtbGltaXRzYF0sXG4gICAgICAgIHBhcmFtc01hcHBpbmcsXG4gICAgICB9LFxuICAgICAgb3JnVXNlckFzc2lnblBlcm1pc3Npb25zOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L3B1cmNoYXNlLWxpbWl0cy9hc3NpZ25gXSxcbiAgICAgICAgcGFyYW1zTWFwcGluZyxcbiAgICAgIH0sXG4gICAgICBvcmdVc2VyVXNlckdyb3Vwczoge1xuICAgICAgICBwYXRoczogW2Ake2xpc3RQYXRofS91c2VyLWdyb3Vwc2BdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICAgIG9yZ1VzZXJBc3NpZ25Vc2VyR3JvdXBzOiB7XG4gICAgICAgIHBhdGhzOiBbYCR7bGlzdFBhdGh9L3VzZXItZ3JvdXBzL2Fzc2lnbmBdLFxuICAgICAgICBwYXJhbXNNYXBwaW5nLFxuICAgICAgfSxcbiAgICB9LFxuICB9LFxufTtcbiJdfQ==