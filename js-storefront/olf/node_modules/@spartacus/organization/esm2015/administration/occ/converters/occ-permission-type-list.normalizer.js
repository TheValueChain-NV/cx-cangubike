import { Injectable } from '@angular/core';
import { PERMISSION_TYPE_NORMALIZER } from '@spartacus/organization/administration/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
export class OccPermissionTypeListNormalizer {
    constructor(converter) {
        this.converter = converter;
    }
    convert(source, target) {
        target = source.orderApprovalPermissionTypes.map((permissionType) => this.converter.convert(permissionType, PERMISSION_TYPE_NORMALIZER));
        return target;
    }
}
OccPermissionTypeListNormalizer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OccPermissionTypeListNormalizer, deps: [{ token: i1.ConverterService }], target: i0.ɵɵFactoryTarget.Injectable });
OccPermissionTypeListNormalizer.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OccPermissionTypeListNormalizer, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OccPermissionTypeListNormalizer, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.ConverterService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib2NjLXBlcm1pc3Npb24tdHlwZS1saXN0Lm5vcm1hbGl6ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL29jYy9jb252ZXJ0ZXJzL29jYy1wZXJtaXNzaW9uLXR5cGUtbGlzdC5ub3JtYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFPM0MsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sNkNBQTZDLENBQUM7OztBQUt6RixNQUFNLE9BQU8sK0JBQStCO0lBTzFDLFlBQW9CLFNBQTJCO1FBQTNCLGNBQVMsR0FBVCxTQUFTLENBQWtCO0lBQUcsQ0FBQztJQUVuRCxPQUFPLENBQ0wsTUFBMkMsRUFDM0MsTUFBc0M7UUFFdEMsTUFBTSxHQUFHLE1BQU0sQ0FBQyw0QkFBNEIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUNsRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsMEJBQTBCLENBQUMsQ0FDbkUsQ0FBQztRQUVGLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7OzRIQWxCVSwrQkFBK0I7Z0lBQS9CLCtCQUErQixjQUY5QixNQUFNOzJGQUVQLCtCQUErQjtrQkFIM0MsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb252ZXJ0ZXIsXG4gIENvbnZlcnRlclNlcnZpY2UsXG4gIE9jYyxcbiAgT3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlLFxufSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgUEVSTUlTU0lPTl9UWVBFX05PUk1BTElaRVIgfSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIE9jY1Blcm1pc3Npb25UeXBlTGlzdE5vcm1hbGl6ZXJcbiAgaW1wbGVtZW50c1xuICAgIENvbnZlcnRlcjxcbiAgICAgIE9jYy5PcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGVMaXN0LFxuICAgICAgT3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlW11cbiAgICA+XG57XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29udmVydGVyOiBDb252ZXJ0ZXJTZXJ2aWNlKSB7fVxuXG4gIGNvbnZlcnQoXG4gICAgc291cmNlOiBPY2MuT3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlTGlzdCxcbiAgICB0YXJnZXQ/OiBPcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGVbXVxuICApOiBPcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGVbXSB7XG4gICAgdGFyZ2V0ID0gc291cmNlLm9yZGVyQXBwcm92YWxQZXJtaXNzaW9uVHlwZXMubWFwKChwZXJtaXNzaW9uVHlwZSkgPT5cbiAgICAgIHRoaXMuY29udmVydGVyLmNvbnZlcnQocGVybWlzc2lvblR5cGUsIFBFUk1JU1NJT05fVFlQRV9OT1JNQUxJWkVSKVxuICAgICk7XG5cbiAgICByZXR1cm4gdGFyZ2V0O1xuICB9XG59XG4iXX0=