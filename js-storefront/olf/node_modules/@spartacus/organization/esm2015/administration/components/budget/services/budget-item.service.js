import { Injectable } from '@angular/core';
import { ItemService } from '../../shared/item.service';
import * as i0 from "@angular/core";
import * as i1 from "./current-budget.service";
import * as i2 from "@spartacus/core";
import * as i3 from "../form/budget-form.service";
import * as i4 from "@spartacus/organization/administration/core";
export class BudgetItemService extends ItemService {
    constructor(currentItemService, routingService, formService, budgetService) {
        super(currentItemService, routingService, formService);
        this.currentItemService = currentItemService;
        this.routingService = routingService;
        this.formService = formService;
        this.budgetService = budgetService;
    }
    /**
     * @override
     * Returns the budget for the given code.
     *
     * Loads the budget each time, to ensure accurate data is resolved.
     */
    load(code) {
        this.budgetService.loadBudget(code);
        return this.budgetService.get(code);
    }
    update(code, value) {
        this.budgetService.update(code, value);
        return this.budgetService.getLoadingStatus(value.code);
    }
    create(value) {
        this.budgetService.create(value);
        return this.budgetService.getLoadingStatus(value.code);
    }
    /**
     * @override
     * Returns 'budgetDetails'
     */
    getDetailsRoute() {
        return 'orgBudgetDetails';
    }
}
BudgetItemService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BudgetItemService, deps: [{ token: i1.CurrentBudgetService }, { token: i2.RoutingService }, { token: i3.BudgetFormService }, { token: i4.BudgetService }], target: i0.ɵɵFactoryTarget.Injectable });
BudgetItemService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BudgetItemService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BudgetItemService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentBudgetService }, { type: i2.RoutingService }, { type: i3.BudgetFormService }, { type: i4.BudgetService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVkZ2V0LWl0ZW0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9idWRnZXQvc2VydmljZXMvYnVkZ2V0LWl0ZW0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBUTNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7O0FBT3hELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSxXQUFtQjtJQUN4RCxZQUNZLGtCQUF3QyxFQUN4QyxjQUE4QixFQUM5QixXQUE4QixFQUM5QixhQUE0QjtRQUV0QyxLQUFLLENBQUMsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBTDdDLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBc0I7UUFDeEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLGdCQUFXLEdBQVgsV0FBVyxDQUFtQjtRQUM5QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUd4QyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxJQUFJLENBQUMsSUFBWTtRQUNmLElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3BDLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBYTtRQUN4QixJQUFJLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDdkMsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRVMsTUFBTSxDQUFDLEtBQWE7UUFDNUIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDakMsT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN6RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ08sZUFBZTtRQUN2QixPQUFPLGtCQUFrQixDQUFDO0lBQzVCLENBQUM7OzhHQXJDVSxpQkFBaUI7a0hBQWpCLGlCQUFpQixjQUZoQixNQUFNOzJGQUVQLGlCQUFpQjtrQkFIN0IsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0aW5nU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQge1xuICBCdWRnZXQsXG4gIEJ1ZGdldFNlcnZpY2UsXG4gIE9yZ2FuaXphdGlvbkl0ZW1TdGF0dXMsXG59IGZyb20gJ0BzcGFydGFjdXMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSXRlbVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvaXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IEJ1ZGdldEZvcm1TZXJ2aWNlIH0gZnJvbSAnLi4vZm9ybS9idWRnZXQtZm9ybS5zZXJ2aWNlJztcbmltcG9ydCB7IEN1cnJlbnRCdWRnZXRTZXJ2aWNlIH0gZnJvbSAnLi9jdXJyZW50LWJ1ZGdldC5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEJ1ZGdldEl0ZW1TZXJ2aWNlIGV4dGVuZHMgSXRlbVNlcnZpY2U8QnVkZ2V0PiB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBjdXJyZW50SXRlbVNlcnZpY2U6IEN1cnJlbnRCdWRnZXRTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCByb3V0aW5nU2VydmljZTogUm91dGluZ1NlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGZvcm1TZXJ2aWNlOiBCdWRnZXRGb3JtU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgYnVkZ2V0U2VydmljZTogQnVkZ2V0U2VydmljZVxuICApIHtcbiAgICBzdXBlcihjdXJyZW50SXRlbVNlcnZpY2UsIHJvdXRpbmdTZXJ2aWNlLCBmb3JtU2VydmljZSk7XG4gIH1cblxuICAvKipcbiAgICogQG92ZXJyaWRlXG4gICAqIFJldHVybnMgdGhlIGJ1ZGdldCBmb3IgdGhlIGdpdmVuIGNvZGUuXG4gICAqXG4gICAqIExvYWRzIHRoZSBidWRnZXQgZWFjaCB0aW1lLCB0byBlbnN1cmUgYWNjdXJhdGUgZGF0YSBpcyByZXNvbHZlZC5cbiAgICovXG4gIGxvYWQoY29kZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxCdWRnZXQ+IHtcbiAgICB0aGlzLmJ1ZGdldFNlcnZpY2UubG9hZEJ1ZGdldChjb2RlKTtcbiAgICByZXR1cm4gdGhpcy5idWRnZXRTZXJ2aWNlLmdldChjb2RlKTtcbiAgfVxuXG4gIHVwZGF0ZShjb2RlLCB2YWx1ZTogQnVkZ2V0KTogT2JzZXJ2YWJsZTxPcmdhbml6YXRpb25JdGVtU3RhdHVzPEJ1ZGdldD4+IHtcbiAgICB0aGlzLmJ1ZGdldFNlcnZpY2UudXBkYXRlKGNvZGUsIHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcy5idWRnZXRTZXJ2aWNlLmdldExvYWRpbmdTdGF0dXModmFsdWUuY29kZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgY3JlYXRlKHZhbHVlOiBCdWRnZXQpOiBPYnNlcnZhYmxlPE9yZ2FuaXphdGlvbkl0ZW1TdGF0dXM8QnVkZ2V0Pj4ge1xuICAgIHRoaXMuYnVkZ2V0U2VydmljZS5jcmVhdGUodmFsdWUpO1xuICAgIHJldHVybiB0aGlzLmJ1ZGdldFNlcnZpY2UuZ2V0TG9hZGluZ1N0YXR1cyh2YWx1ZS5jb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3ZlcnJpZGVcbiAgICogUmV0dXJucyAnYnVkZ2V0RGV0YWlscydcbiAgICovXG4gIHByb3RlY3RlZCBnZXREZXRhaWxzUm91dGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ29yZ0J1ZGdldERldGFpbHMnO1xuICB9XG59XG4iXX0=