import { Injectable } from '@angular/core';
import { ROUTE_PARAMS } from '@spartacus/organization/administration/root';
import { CurrentItemService } from '../../shared/current-item.service';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "@spartacus/organization/administration/core";
export class CurrentUserGroupService extends CurrentItemService {
    constructor(routingService, userGroupService) {
        super(routingService);
        this.routingService = routingService;
        this.userGroupService = userGroupService;
    }
    getParamKey() {
        return ROUTE_PARAMS.userGroupCode;
    }
    getItem(code) {
        return this.userGroupService.get(code);
    }
    getError(code) {
        return this.userGroupService.getErrorState(code);
    }
}
CurrentUserGroupService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUserGroupService, deps: [{ token: i1.RoutingService }, { token: i2.UserGroupService }], target: i0.ɵɵFactoryTarget.Injectable });
CurrentUserGroupService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUserGroupService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUserGroupService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RoutingService }, { type: i2.UserGroupService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VycmVudC11c2VyLWdyb3VwLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvdXNlci1ncm91cC9zZXJ2aWNlcy9jdXJyZW50LXVzZXItZ3JvdXAuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTTNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUUzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQUt2RSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsa0JBQTZCO0lBQ3hFLFlBQ1ksY0FBOEIsRUFDOUIsZ0JBQWtDO1FBRTVDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUhaLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0lBRzlDLENBQUM7SUFFUyxXQUFXO1FBQ25CLE9BQU8sWUFBWSxDQUFDLGFBQWEsQ0FBQztJQUNwQyxDQUFDO0lBRVMsT0FBTyxDQUFDLElBQVk7UUFDNUIsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pDLENBQUM7SUFFRCxRQUFRLENBQUMsSUFBWTtRQUNuQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDbkQsQ0FBQzs7b0hBbEJVLHVCQUF1Qjt3SEFBdkIsdUJBQXVCLGNBRnRCLE1BQU07MkZBRVAsdUJBQXVCO2tCQUhuQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIFVzZXJHcm91cCxcbiAgVXNlckdyb3VwU2VydmljZSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBST1VURV9QQVJBTVMgfSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9yb290JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEN1cnJlbnRJdGVtU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9jdXJyZW50LWl0ZW0uc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBDdXJyZW50VXNlckdyb3VwU2VydmljZSBleHRlbmRzIEN1cnJlbnRJdGVtU2VydmljZTxVc2VyR3JvdXA+IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgdXNlckdyb3VwU2VydmljZTogVXNlckdyb3VwU2VydmljZVxuICApIHtcbiAgICBzdXBlcihyb3V0aW5nU2VydmljZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0UGFyYW1LZXkoKSB7XG4gICAgcmV0dXJuIFJPVVRFX1BBUkFNUy51c2VyR3JvdXBDb2RlO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldEl0ZW0oY29kZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxVc2VyR3JvdXA+IHtcbiAgICByZXR1cm4gdGhpcy51c2VyR3JvdXBTZXJ2aWNlLmdldChjb2RlKTtcbiAgfVxuXG4gIGdldEVycm9yKGNvZGU6IHN0cmluZyk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIHJldHVybiB0aGlzLnVzZXJHcm91cFNlcnZpY2UuZ2V0RXJyb3JTdGF0ZShjb2RlKTtcbiAgfVxufVxuIl19