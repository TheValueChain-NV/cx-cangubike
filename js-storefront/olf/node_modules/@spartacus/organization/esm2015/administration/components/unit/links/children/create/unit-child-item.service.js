import { Injectable } from '@angular/core';
import { UnitItemService } from '../../../services/unit-item.service';
import * as i0 from "@angular/core";
import * as i1 from "./current-unit-child.service";
import * as i2 from "@spartacus/core";
import * as i3 from "../../../form/unit-form.service";
import * as i4 from "@spartacus/organization/administration/core";
export class UnitChildItemService extends UnitItemService {
    constructor(currentItemService, routingService, formService, unitService) {
        super(currentItemService, routingService, formService, unitService);
        this.currentItemService = currentItemService;
        this.routingService = routingService;
        this.formService = formService;
        this.unitService = unitService;
    }
    save(form, key) {
        var _a;
        // we enable the parentOrgUnit temporarily so that the underlying
        // save method can read the complete form.value.
        (_a = form.get('parentOrgUnit')) === null || _a === void 0 ? void 0 : _a.enable();
        return super.save(form, key);
    }
    /**
     * @override
     * Returns 'unitDetails'
     */
    getDetailsRoute() {
        return 'orgUnitChildren';
    }
    buildRouteParams(item) {
        return { uid: item.parentOrgUnit.uid };
    }
}
UnitChildItemService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitChildItemService, deps: [{ token: i1.CurrentUnitChildService }, { token: i2.RoutingService }, { token: i3.UnitFormService }, { token: i4.OrgUnitService }], target: i0.ɵɵFactoryTarget.Injectable });
UnitChildItemService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitChildItemService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitChildItemService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentUnitChildService }, { type: i2.RoutingService }, { type: i3.UnitFormService }, { type: i4.OrgUnitService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1jaGlsZC1pdGVtLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvdW5pdC9saW5rcy9jaGlsZHJlbi9jcmVhdGUvdW5pdC1jaGlsZC1pdGVtLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMzQyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7OztBQU10RSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsZUFBZTtJQUN2RCxZQUNZLGtCQUEyQyxFQUMzQyxjQUE4QixFQUM5QixXQUE0QixFQUM1QixXQUEyQjtRQUVyQyxLQUFLLENBQUMsa0JBQWtCLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUwxRCx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQXlCO1FBQzNDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixnQkFBVyxHQUFYLFdBQVcsQ0FBaUI7UUFDNUIsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO0lBR3ZDLENBQUM7SUFFRCxJQUFJLENBQ0YsSUFBZSxFQUNmLEdBQVk7O1FBRVosaUVBQWlFO1FBQ2pFLGdEQUFnRDtRQUNoRCxNQUFBLElBQUksQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLDBDQUFFLE1BQU0sRUFBRSxDQUFDO1FBQ3BDLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVEOzs7T0FHRztJQUNPLGVBQWU7UUFDdkIsT0FBTyxpQkFBaUIsQ0FBQztJQUMzQixDQUFDO0lBRVMsZ0JBQWdCLENBQUMsSUFBYTtRQUN0QyxPQUFPLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDekMsQ0FBQzs7aUhBOUJVLG9CQUFvQjtxSEFBcEIsb0JBQW9CLGNBRm5CLE1BQU07MkZBRVAsb0JBQW9CO2tCQUhoQyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEIyQlVuaXQsIFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIE9yZ1VuaXRTZXJ2aWNlLFxuICBPcmdhbml6YXRpb25JdGVtU3RhdHVzLFxufSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlJztcbmltcG9ydCB7IFVuaXRGb3JtU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL2Zvcm0vdW5pdC1mb3JtLnNlcnZpY2UnO1xuaW1wb3J0IHsgVW5pdEl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vc2VydmljZXMvdW5pdC1pdGVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ3VycmVudFVuaXRDaGlsZFNlcnZpY2UgfSBmcm9tICcuL2N1cnJlbnQtdW5pdC1jaGlsZC5zZXJ2aWNlJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFVuaXRDaGlsZEl0ZW1TZXJ2aWNlIGV4dGVuZHMgVW5pdEl0ZW1TZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGN1cnJlbnRJdGVtU2VydmljZTogQ3VycmVudFVuaXRDaGlsZFNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgZm9ybVNlcnZpY2U6IFVuaXRGb3JtU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgdW5pdFNlcnZpY2U6IE9yZ1VuaXRTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGN1cnJlbnRJdGVtU2VydmljZSwgcm91dGluZ1NlcnZpY2UsIGZvcm1TZXJ2aWNlLCB1bml0U2VydmljZSk7XG4gIH1cblxuICBzYXZlKFxuICAgIGZvcm06IEZvcm1Hcm91cCxcbiAgICBrZXk/OiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxPcmdhbml6YXRpb25JdGVtU3RhdHVzPEIyQlVuaXQ+PiB7XG4gICAgLy8gd2UgZW5hYmxlIHRoZSBwYXJlbnRPcmdVbml0IHRlbXBvcmFyaWx5IHNvIHRoYXQgdGhlIHVuZGVybHlpbmdcbiAgICAvLyBzYXZlIG1ldGhvZCBjYW4gcmVhZCB0aGUgY29tcGxldGUgZm9ybS52YWx1ZS5cbiAgICBmb3JtLmdldCgncGFyZW50T3JnVW5pdCcpPy5lbmFibGUoKTtcbiAgICByZXR1cm4gc3VwZXIuc2F2ZShmb3JtLCBrZXkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKiBSZXR1cm5zICd1bml0RGV0YWlscydcbiAgICovXG4gIHByb3RlY3RlZCBnZXREZXRhaWxzUm91dGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ29yZ1VuaXRDaGlsZHJlbic7XG4gIH1cblxuICBwcm90ZWN0ZWQgYnVpbGRSb3V0ZVBhcmFtcyhpdGVtOiBCMkJVbml0KSB7XG4gICAgcmV0dXJuIHsgdWlkOiBpdGVtLnBhcmVudE9yZ1VuaXQudWlkIH07XG4gIH1cbn1cbiJdfQ==