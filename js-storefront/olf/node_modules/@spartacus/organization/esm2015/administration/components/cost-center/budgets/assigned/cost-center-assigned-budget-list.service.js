import { Injectable } from '@angular/core';
import { map } from 'rxjs/operators';
import { OrganizationTableType } from '../../../shared/organization.model';
import { CostCenterBudgetListService } from '../cost-center-budget-list.service';
import * as i0 from "@angular/core";
export class CostCenterAssignedBudgetListService extends CostCenterBudgetListService {
    constructor() {
        super(...arguments);
        this.tableType = OrganizationTableType.COST_CENTER_ASSIGNED_BUDGETS;
    }
    load(pagination, code) {
        return super
            .load(pagination, code)
            .pipe(map((budgets) => this.filterSelected(budgets)));
    }
}
CostCenterAssignedBudgetListService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterAssignedBudgetListService, deps: null, target: i0.ɵɵFactoryTarget.Injectable });
CostCenterAssignedBudgetListService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterAssignedBudgetListService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterAssignedBudgetListService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdC1jZW50ZXItYXNzaWduZWQtYnVkZ2V0LWxpc3Quc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9jb3N0LWNlbnRlci9idWRnZXRzL2Fzc2lnbmVkL2Nvc3QtY2VudGVyLWFzc2lnbmVkLWJ1ZGdldC1saXN0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDM0UsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7O0FBS2pGLE1BQU0sT0FBTyxtQ0FBb0MsU0FBUSwyQkFBMkI7SUFIcEY7O1FBSVksY0FBUyxHQUFHLHFCQUFxQixDQUFDLDRCQUE0QixDQUFDO0tBVTFFO0lBUlcsSUFBSSxDQUNaLFVBQTJCLEVBQzNCLElBQVk7UUFFWixPQUFPLEtBQUs7YUFDVCxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQzthQUN0QixJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUMxRCxDQUFDOztnSUFWVSxtQ0FBbUM7b0lBQW5DLG1DQUFtQyxjQUZsQyxNQUFNOzJGQUVQLG1DQUFtQztrQkFIL0MsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbnRpdGllc01vZGVsLCBQYWdpbmF0aW9uTW9kZWwgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgQnVkZ2V0IH0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBPcmdhbml6YXRpb25UYWJsZVR5cGUgfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvb3JnYW5pemF0aW9uLm1vZGVsJztcbmltcG9ydCB7IENvc3RDZW50ZXJCdWRnZXRMaXN0U2VydmljZSB9IGZyb20gJy4uL2Nvc3QtY2VudGVyLWJ1ZGdldC1saXN0LnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgQ29zdENlbnRlckFzc2lnbmVkQnVkZ2V0TGlzdFNlcnZpY2UgZXh0ZW5kcyBDb3N0Q2VudGVyQnVkZ2V0TGlzdFNlcnZpY2Uge1xuICBwcm90ZWN0ZWQgdGFibGVUeXBlID0gT3JnYW5pemF0aW9uVGFibGVUeXBlLkNPU1RfQ0VOVEVSX0FTU0lHTkVEX0JVREdFVFM7XG5cbiAgcHJvdGVjdGVkIGxvYWQoXG4gICAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbk1vZGVsLFxuICAgIGNvZGU6IHN0cmluZ1xuICApOiBPYnNlcnZhYmxlPEVudGl0aWVzTW9kZWw8QnVkZ2V0Pj4ge1xuICAgIHJldHVybiBzdXBlclxuICAgICAgLmxvYWQocGFnaW5hdGlvbiwgY29kZSlcbiAgICAgIC5waXBlKG1hcCgoYnVkZ2V0cykgPT4gdGhpcy5maWx0ZXJTZWxlY3RlZChidWRnZXRzKSkpO1xuICB9XG59XG4iXX0=