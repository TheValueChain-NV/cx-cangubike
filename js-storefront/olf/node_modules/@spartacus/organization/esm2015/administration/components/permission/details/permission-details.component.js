import { ChangeDetectionStrategy, Component } from '@angular/core';
import { startWith, switchMap } from 'rxjs/operators';
import { ItemService } from '../../shared/item.service';
import { PermissionItemService } from '../services/permission-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../shared/item.service";
import * as i2 from "../../shared/card/card.component";
import * as i3 from "../../shared/detail/toggle-status-action/toggle-status.component";
import * as i4 from "../../shared/detail/disable-info/disable-info.component";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/storefront";
import * as i7 from "@angular/router";
import * as i8 from "../../shared/item-exists.directive";
import * as i9 from "@spartacus/core";
export class PermissionDetailsComponent {
    constructor(itemService) {
        this.itemService = itemService;
        this.model$ = this.itemService.key$.pipe(switchMap((code) => this.itemService.load(code)), startWith({}));
        this.isInEditMode$ = this.itemService.isInEditMode$;
    }
}
PermissionDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PermissionDetailsComponent, deps: [{ token: i1.ItemService }], target: i0.ɵɵFactoryTarget.Component });
PermissionDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: PermissionDetailsComponent, selector: "cx-org-permission-details", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: PermissionItemService,
        },
    ], ngImport: i0, template: "<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgPurchaseLimit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgPurchaseLimitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    i18nRoot=\"orgPurchaseLimit\"\n    [disabled]=\"false\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgPurchaseLimit\"\n    [displayInfoConfig]=\"{ disabledEnable: false }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n</cx-org-card>\n", components: [{ type: i2.CardComponent, selector: "cx-org-card", inputs: ["i18nRoot", "previous", "subtitle", "showHint"] }, { type: i3.ToggleStatusComponent, selector: "cx-org-toggle-status", inputs: ["i18nRoot", "key", "disabled"] }, { type: i4.DisableInfoComponent, selector: "cx-org-disable-info", inputs: ["i18nRoot", "displayInfoConfig", "displayCustomInfo"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { type: i7.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i8.ItemExistsDirective, selector: "[cxOrgItemExists]" }], pipes: { "async": i5.AsyncPipe, "cxUrl": i9.UrlPipe, "cxTranslate": i9.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PermissionDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-permission-details',
                    templateUrl: './permission-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: ItemService,
                            useExisting: PermissionItemService,
                        },
                    ],
                    host: { class: 'content-wrapper' },
                }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi1kZXRhaWxzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9wZXJtaXNzaW9uL2RldGFpbHMvcGVybWlzc2lvbi1kZXRhaWxzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9wZXJtaXNzaW9uL2RldGFpbHMvcGVybWlzc2lvbi1kZXRhaWxzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7Ozs7Ozs7O0FBYzVFLE1BQU0sT0FBTywwQkFBMEI7SUFPckMsWUFBc0IsV0FBb0M7UUFBcEMsZ0JBQVcsR0FBWCxXQUFXLENBQXlCO1FBTjFELFdBQU0sR0FBMkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUN6RCxTQUFTLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQ2hELFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FDZCxDQUFDO1FBQ0Ysa0JBQWEsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQztJQUVjLENBQUM7O3VIQVBuRCwwQkFBMEI7MkdBQTFCLDBCQUEwQixpR0FSMUI7UUFDVDtZQUNFLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLFdBQVcsRUFBRSxxQkFBcUI7U0FDbkM7S0FDRiwwQkNoQkgseTBFQXFGQTsyRkRsRWEsMEJBQTBCO2tCQVp0QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFdBQVcsRUFBRSxxQ0FBcUM7b0JBQ2xELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO29CQUMvQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLFdBQVc7NEJBQ3BCLFdBQVcsRUFBRSxxQkFBcUI7eUJBQ25DO3FCQUNGO29CQUNELElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRTtpQkFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQZXJtaXNzaW9uIH0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzdGFydFdpdGgsIHN3aXRjaE1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IEl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2l0ZW0uc2VydmljZSc7XG5pbXBvcnQgeyBQZXJtaXNzaW9uSXRlbVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9wZXJtaXNzaW9uLWl0ZW0uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LW9yZy1wZXJtaXNzaW9uLWRldGFpbHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGVybWlzc2lvbi1kZXRhaWxzLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEl0ZW1TZXJ2aWNlLFxuICAgICAgdXNlRXhpc3Rpbmc6IFBlcm1pc3Npb25JdGVtU2VydmljZSxcbiAgICB9LFxuICBdLFxuICBob3N0OiB7IGNsYXNzOiAnY29udGVudC13cmFwcGVyJyB9LFxufSlcbmV4cG9ydCBjbGFzcyBQZXJtaXNzaW9uRGV0YWlsc0NvbXBvbmVudCB7XG4gIG1vZGVsJDogT2JzZXJ2YWJsZTxQZXJtaXNzaW9uPiA9IHRoaXMuaXRlbVNlcnZpY2Uua2V5JC5waXBlKFxuICAgIHN3aXRjaE1hcCgoY29kZSkgPT4gdGhpcy5pdGVtU2VydmljZS5sb2FkKGNvZGUpKSxcbiAgICBzdGFydFdpdGgoe30pXG4gICk7XG4gIGlzSW5FZGl0TW9kZSQgPSB0aGlzLml0ZW1TZXJ2aWNlLmlzSW5FZGl0TW9kZSQ7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGl0ZW1TZXJ2aWNlOiBJdGVtU2VydmljZTxQZXJtaXNzaW9uPikge31cbn1cbiIsIjxjeC1vcmctY2FyZFxuICAqbmdJZj1cIm1vZGVsJCB8IGFzeW5jIGFzIG1vZGVsXCJcbiAgaTE4blJvb3Q9XCJvcmdQdXJjaGFzZUxpbWl0LmRldGFpbHNcIlxuICBbY3hGb2N1c109XCJ7IHJlZnJlc2hGb2N1czogbW9kZWwgfVwiXG4+XG4gIDxhXG4gICAgYWN0aW9uc1xuICAgIGNsYXNzPVwibGluayBlZGl0XCJcbiAgICBbY2xhc3MuZGlzYWJsZWRdPVwiIW1vZGVsLmFjdGl2ZSB8fCAoaXNJbkVkaXRNb2RlJCB8IGFzeW5jKVwiXG4gICAgW3JvdXRlckxpbmtdPVwieyBjeFJvdXRlOiAnb3JnUHVyY2hhc2VMaW1pdEVkaXQnLCBwYXJhbXM6IG1vZGVsIH0gfCBjeFVybFwiXG4gID5cbiAgICB7eyAnb3JnYW5pemF0aW9uLmVkaXQnIHwgY3hUcmFuc2xhdGUgfX1cbiAgPC9hPlxuXG4gIDxjeC1vcmctdG9nZ2xlLXN0YXR1c1xuICAgIGFjdGlvbnNcbiAgICBpMThuUm9vdD1cIm9yZ1B1cmNoYXNlTGltaXRcIlxuICAgIFtkaXNhYmxlZF09XCJmYWxzZVwiXG4gID48L2N4LW9yZy10b2dnbGUtc3RhdHVzPlxuXG4gIDxjeC1vcmctZGlzYWJsZS1pbmZvXG4gICAgaW5mb1xuICAgIGkxOG5Sb290PVwib3JnUHVyY2hhc2VMaW1pdFwiXG4gICAgW2Rpc3BsYXlJbmZvQ29uZmlnXT1cInsgZGlzYWJsZWRFbmFibGU6IGZhbHNlIH1cIlxuICA+XG4gIDwvY3gtb3JnLWRpc2FibGUtaW5mbz5cblxuICA8c2VjdGlvbiBtYWluIGNsYXNzPVwiZGV0YWlsc1wiIGN4T3JnSXRlbUV4aXN0cz5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgIDxsYWJlbD57eyAnb3JnUHVyY2hhc2VMaW1pdC5jb2RlJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAge3sgbW9kZWwuY29kZSB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1B1cmNoYXNlTGltaXQuYWN0aXZlJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIiBbY2xhc3MuaXMtYWN0aXZlXT1cIm1vZGVsLmFjdGl2ZVwiPlxuICAgICAgICB7e1xuICAgICAgICAgIChtb2RlbC5hY3RpdmUgPyAnb3JnYW5pemF0aW9uLmVuYWJsZWQnIDogJ29yZ2FuaXphdGlvbi5kaXNhYmxlZCcpXG4gICAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgIH19XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgIDxsYWJlbD57e1xuICAgICAgICAnb3JnUHVyY2hhc2VMaW1pdC5vcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGUnIHwgY3hUcmFuc2xhdGVcbiAgICAgIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAge3sgbW9kZWwub3JkZXJBcHByb3ZhbFBlcm1pc3Npb25UeXBlPy5uYW1lIH19XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIiAqbmdJZj1cIm1vZGVsLnRocmVzaG9sZCB8fCBtb2RlbC50aHJlc2hvbGQgPT09IDBcIj5cbiAgICAgIDxsYWJlbD57eyAnb3JnUHVyY2hhc2VMaW1pdC50aHJlc2hvbGQnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPlxuICAgICAgICB7eyBtb2RlbC50aHJlc2hvbGQgfX0ge3sgbW9kZWwuY3VycmVuY3k/LnN5bWJvbCB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCIgKm5nSWY9XCJtb2RlbC5wZXJpb2RSYW5nZVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdQdXJjaGFzZUxpbWl0LnBlcmlvZFJhbmdlJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAge3sgbW9kZWwucGVyaW9kUmFuZ2UgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdQdXJjaGFzZUxpbWl0LnVuaXQnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgPGFcbiAgICAgICAgKm5nSWY9XCJtb2RlbC5jb2RlXCJcbiAgICAgICAgY2xhc3M9XCJ2YWx1ZVwiXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cIlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGN4Um91dGU6ICdvcmdVbml0RGV0YWlscycsXG4gICAgICAgICAgICBwYXJhbXM6IG1vZGVsLm9yZ1VuaXRcbiAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgXCJcbiAgICAgID5cbiAgICAgICAge3sgbW9kZWwub3JnVW5pdD8ubmFtZSB9fVxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICA8L3NlY3Rpb24+XG48L2N4LW9yZy1jYXJkPlxuIl19