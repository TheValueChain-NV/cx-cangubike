import { Component, ChangeDetectionStrategy } from '@angular/core';
import { CellComponent } from '../../shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@spartacus/core";
export class PermissionDetailsCellComponent extends CellComponent {
}
PermissionDetailsCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PermissionDetailsCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PermissionDetailsCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: PermissionDetailsCellComponent, selector: "cx-org-permission-details-cell", usesInheritance: true, ngImport: i0, template: "<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgPurchaseLimitDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.code }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.code }}\n</button>\n", directives: [{ type: i1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PopoverDirective, selector: "[cxPopover]", inputs: ["cxPopover", "cxPopoverOptions"], outputs: ["openPopover", "closePopover"] }], pipes: { "cxTranslate": i4.TranslatePipe, "cxUrl": i4.UrlPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PermissionDetailsCellComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-permission-details-cell',
                    templateUrl: './permission-details-cell.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi1kZXRhaWxzLWNlbGwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3Blcm1pc3Npb24vZGV0YWlscy1jZWxsL3Blcm1pc3Npb24tZGV0YWlscy1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9wZXJtaXNzaW9uL2RldGFpbHMtY2VsbC9wZXJtaXNzaW9uLWRldGFpbHMtY2VsbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxjQUFjLENBQUM7Ozs7OztBQU83QyxNQUFNLE9BQU8sOEJBQStCLFNBQVEsYUFBYTs7MkhBQXBELDhCQUE4QjsrR0FBOUIsOEJBQThCLDZGQ1IzQywyakVBZ0ZBOzJGRHhFYSw4QkFBOEI7a0JBTDFDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLGdDQUFnQztvQkFDMUMsV0FBVyxFQUFFLDBDQUEwQztvQkFDdkQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2VsbENvbXBvbmVudCB9IGZyb20gJy4uLy4uL3NoYXJlZCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LW9yZy1wZXJtaXNzaW9uLWRldGFpbHMtY2VsbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9wZXJtaXNzaW9uLWRldGFpbHMtY2VsbC5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBQZXJtaXNzaW9uRGV0YWlsc0NlbGxDb21wb25lbnQgZXh0ZW5kcyBDZWxsQ29tcG9uZW50IHt9XG4iLCI8bmctdGVtcGxhdGUgI2RldGFpbHM+XG4gIDxkaXYgY2xhc3M9XCJwb3BvdmVyLWRldGFpbHNcIj5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgIDxsYWJlbD57eyAnb3JnUHVyY2hhc2VMaW1pdC5jb2RlJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzPVwidmFsdWVcIlxuICAgICAgICBbcm91dGVyTGlua109XCJcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjeFJvdXRlOiAnb3JnUHVyY2hhc2VMaW1pdERldGFpbHMnLFxuICAgICAgICAgICAgcGFyYW1zOiBtb2RlbFxuICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICB7eyBtb2RlbC5jb2RlIH19XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgIDxsYWJlbD57eyAnb3JnUHVyY2hhc2VMaW1pdC5hY3RpdmUnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiIFtjbGFzcy5pcy1hY3RpdmVdPVwibW9kZWwuYWN0aXZlXCI+XG4gICAgICAgIHt7XG4gICAgICAgICAgKG1vZGVsLmFjdGl2ZSA/ICdvcmdhbml6YXRpb24uZW5hYmxlZCcgOiAnb3JnYW5pemF0aW9uLmRpc2FibGVkJylcbiAgICAgICAgICAgIHwgY3hUcmFuc2xhdGVcbiAgICAgICAgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7XG4gICAgICAgICdvcmdQdXJjaGFzZUxpbWl0Lm9yZGVyQXBwcm92YWxQZXJtaXNzaW9uVHlwZScgfCBjeFRyYW5zbGF0ZVxuICAgICAgfX08L2xhYmVsPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPlxuICAgICAgICB7eyBtb2RlbC5vcmRlckFwcHJvdmFsUGVybWlzc2lvblR5cGU/Lm5hbWUgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiICpuZ0lmPVwibW9kZWwudGhyZXNob2xkIHx8IG1vZGVsLnRocmVzaG9sZCA9PT0gMFwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdQdXJjaGFzZUxpbWl0LnRocmVzaG9sZCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLnRocmVzaG9sZCB9fSB7eyBtb2RlbC5jdXJyZW5jeT8uc3ltYm9sIH19XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIiAqbmdJZj1cIm1vZGVsLnBlcmlvZFJhbmdlXCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1B1cmNoYXNlTGltaXQucGVyaW9kUmFuZ2UnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPlxuICAgICAgICB7eyBtb2RlbC5wZXJpb2RSYW5nZSB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1B1cmNoYXNlTGltaXQudW5pdCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8YVxuICAgICAgICAqbmdJZj1cIm1vZGVsLmNvZGVcIlxuICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAge1xuICAgICAgICAgICAgY3hSb3V0ZTogJ29yZ1VuaXREZXRhaWxzJyxcbiAgICAgICAgICAgIHBhcmFtczogbW9kZWwub3JnVW5pdFxuICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICB7eyBtb2RlbC5vcmdVbml0Py5uYW1lIH19XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPGJ1dHRvblxuICBjbGFzcz1cImJ1dHRvbiB0ZXh0XCJcbiAgW2N4UG9wb3Zlcl09XCJkZXRhaWxzXCJcbiAgW2N4UG9wb3Zlck9wdGlvbnNdPVwie1xuICAgIHBsYWNlbWVudDogJ2F1dG8nLFxuICAgIGNsYXNzOiAnbXktY29tcGFueS1wb3BvdmVyJyxcbiAgICBhcHBlbmRUb0JvZHk6IHRydWUsXG4gICAgZGlzcGxheUNsb3NlQnV0dG9uOiB0cnVlXG4gIH1cIlxuPlxuICB7eyBtb2RlbC5jb2RlIH19XG48L2J1dHRvbj5cbiJdfQ==