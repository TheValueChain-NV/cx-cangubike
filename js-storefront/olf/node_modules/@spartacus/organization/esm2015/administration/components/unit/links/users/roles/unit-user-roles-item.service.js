import { Injectable } from '@angular/core';
import { ItemService } from '../../../../shared/item.service';
import * as i0 from "@angular/core";
import * as i1 from "../services/current-unit-user.service";
import * as i2 from "@spartacus/core";
import * as i3 from "./unit-user-roles-form.service";
import * as i4 from "@spartacus/organization/administration/core";
export class UnitUserRolesItemService extends ItemService {
    constructor(currentItemService, routingService, formService, unitService, b2bUserService) {
        super(currentItemService, routingService, formService);
        this.currentItemService = currentItemService;
        this.routingService = routingService;
        this.formService = formService;
        this.unitService = unitService;
        this.b2bUserService = b2bUserService;
    }
    save(form, key) {
        // we enable the unit so that the underlying
        // save method can read the complete form.value.
        form.get('orgUnit').enable();
        return super.save(form, key);
    }
    load(unitUid) {
        return this.b2bUserService.get(unitUid);
    }
    update(customerId, _user) {
        return this.b2bUserService.getLoadingStatus(customerId);
    }
    create(_customer) {
        return this.b2bUserService.getLoadingStatus(null);
    }
    getDetailsRoute() {
        return this.currentItemService.getDetailsRoute();
    }
}
UnitUserRolesItemService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitUserRolesItemService, deps: [{ token: i1.CurrentUnitUserService }, { token: i2.RoutingService }, { token: i3.UnitUserRolesFormService }, { token: i4.OrgUnitService }, { token: i4.B2BUserService }], target: i0.ɵɵFactoryTarget.Injectable });
UnitUserRolesItemService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitUserRolesItemService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitUserRolesItemService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentUnitUserService }, { type: i2.RoutingService }, { type: i3.UnitUserRolesFormService }, { type: i4.OrgUnitService }, { type: i4.B2BUserService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC11c2VyLXJvbGVzLWl0ZW0uc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91bml0L2xpbmtzL3VzZXJzL3JvbGVzL3VuaXQtdXNlci1yb2xlcy1pdGVtLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVMzQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7OztBQU05RCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBb0I7SUFDaEUsWUFDWSxrQkFBMEMsRUFDMUMsY0FBOEIsRUFDOUIsV0FBcUMsRUFDckMsV0FBMkIsRUFDM0IsY0FBOEI7UUFFeEMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLGNBQWMsRUFBRSxXQUFXLENBQUMsQ0FBQztRQU43Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQXdCO1FBQzFDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtRQUM5QixnQkFBVyxHQUFYLFdBQVcsQ0FBMEI7UUFDckMsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO1FBQzNCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUcxQyxDQUFDO0lBRUQsSUFBSSxDQUNGLElBQWUsRUFDZixHQUFZO1FBRVosNENBQTRDO1FBQzVDLGdEQUFnRDtRQUNoRCxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQzdCLE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksQ0FBQyxPQUFlO1FBQ2xCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELE1BQU0sQ0FDSixVQUFrQixFQUNsQixLQUFjO1FBRWQsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFUyxNQUFNLENBQ2QsU0FBa0I7UUFFbEIsT0FBTyxJQUFJLENBQUMsY0FBYyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFUyxlQUFlO1FBQ3ZCLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ25ELENBQUM7O3FIQXhDVSx3QkFBd0I7eUhBQXhCLHdCQUF3QixjQUZ2QixNQUFNOzJGQUVQLHdCQUF3QjtrQkFIcEMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBCMkJVc2VyLCBSb3V0aW5nU2VydmljZSB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQge1xuICBCMkJVc2VyU2VydmljZSxcbiAgT3JnYW5pemF0aW9uSXRlbVN0YXR1cyxcbiAgT3JnVW5pdFNlcnZpY2UsXG59IGZyb20gJ0BzcGFydGFjdXMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgSXRlbVNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi9zaGFyZWQvaXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IEN1cnJlbnRVbml0VXNlclNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9jdXJyZW50LXVuaXQtdXNlci5zZXJ2aWNlJztcbmltcG9ydCB7IFVuaXRVc2VyUm9sZXNGb3JtU2VydmljZSB9IGZyb20gJy4vdW5pdC11c2VyLXJvbGVzLWZvcm0uc2VydmljZSc7XG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVW5pdFVzZXJSb2xlc0l0ZW1TZXJ2aWNlIGV4dGVuZHMgSXRlbVNlcnZpY2U8QjJCVXNlcj4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgY3VycmVudEl0ZW1TZXJ2aWNlOiBDdXJyZW50VW5pdFVzZXJTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCByb3V0aW5nU2VydmljZTogUm91dGluZ1NlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGZvcm1TZXJ2aWNlOiBVbml0VXNlclJvbGVzRm9ybVNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHVuaXRTZXJ2aWNlOiBPcmdVbml0U2VydmljZSxcbiAgICBwcm90ZWN0ZWQgYjJiVXNlclNlcnZpY2U6IEIyQlVzZXJTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGN1cnJlbnRJdGVtU2VydmljZSwgcm91dGluZ1NlcnZpY2UsIGZvcm1TZXJ2aWNlKTtcbiAgfVxuXG4gIHNhdmUoXG4gICAgZm9ybTogRm9ybUdyb3VwLFxuICAgIGtleT86IHN0cmluZ1xuICApOiBPYnNlcnZhYmxlPE9yZ2FuaXphdGlvbkl0ZW1TdGF0dXM8QjJCVXNlcj4+IHtcbiAgICAvLyB3ZSBlbmFibGUgdGhlIHVuaXQgc28gdGhhdCB0aGUgdW5kZXJseWluZ1xuICAgIC8vIHNhdmUgbWV0aG9kIGNhbiByZWFkIHRoZSBjb21wbGV0ZSBmb3JtLnZhbHVlLlxuICAgIGZvcm0uZ2V0KCdvcmdVbml0JykuZW5hYmxlKCk7XG4gICAgcmV0dXJuIHN1cGVyLnNhdmUoZm9ybSwga2V5KTtcbiAgfVxuXG4gIGxvYWQodW5pdFVpZDogc3RyaW5nKTogT2JzZXJ2YWJsZTxCMkJVc2VyPiB7XG4gICAgcmV0dXJuIHRoaXMuYjJiVXNlclNlcnZpY2UuZ2V0KHVuaXRVaWQpO1xuICB9XG5cbiAgdXBkYXRlKFxuICAgIGN1c3RvbWVySWQ6IHN0cmluZyxcbiAgICBfdXNlcjogQjJCVXNlclxuICApOiBPYnNlcnZhYmxlPE9yZ2FuaXphdGlvbkl0ZW1TdGF0dXM8QjJCVXNlcj4+IHtcbiAgICByZXR1cm4gdGhpcy5iMmJVc2VyU2VydmljZS5nZXRMb2FkaW5nU3RhdHVzKGN1c3RvbWVySWQpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGNyZWF0ZShcbiAgICBfY3VzdG9tZXI6IEIyQlVzZXJcbiAgKTogT2JzZXJ2YWJsZTxPcmdhbml6YXRpb25JdGVtU3RhdHVzPEIyQlVzZXI+PiB7XG4gICAgcmV0dXJuIHRoaXMuYjJiVXNlclNlcnZpY2UuZ2V0TG9hZGluZ1N0YXR1cyhudWxsKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXREZXRhaWxzUm91dGUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5jdXJyZW50SXRlbVNlcnZpY2UuZ2V0RGV0YWlsc1JvdXRlKCk7XG4gIH1cbn1cbiJdfQ==