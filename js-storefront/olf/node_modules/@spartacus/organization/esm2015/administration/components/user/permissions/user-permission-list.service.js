import { Injectable } from '@angular/core';
import { SubListService } from '../../shared/sub-list/sub-list.service';
import { OrganizationTableType } from '../../shared/organization.model';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "@spartacus/organization/administration/core";
export class UserPermissionListService extends SubListService {
    constructor(tableService, userService, permissionService) {
        super(tableService);
        this.tableService = tableService;
        this.userService = userService;
        this.permissionService = permissionService;
        this.tableType = OrganizationTableType.USER_PERMISSIONS;
        this._domainType = OrganizationTableType.PERMISSION;
    }
    load(pagination, code) {
        return this.userService.getPermissions(code, pagination);
    }
    /**
     * @override
     * Assign permission to the user.
     */
    assign(userCode, code) {
        this.userService.assignPermission(userCode, code);
        return this.permissionService.getLoadingStatus(code);
    }
    /**
     * @override
     * Unassign the permission from the user.
     */
    unassign(userCode, code) {
        this.userService.unassignPermission(userCode, code);
        return this.permissionService.getLoadingStatus(code);
    }
}
UserPermissionListService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserPermissionListService, deps: [{ token: i1.TableService }, { token: i2.B2BUserService }, { token: i2.PermissionService }], target: i0.ɵɵFactoryTarget.Injectable });
UserPermissionListService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserPermissionListService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserPermissionListService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.TableService }, { type: i2.B2BUserService }, { type: i2.PermissionService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1wZXJtaXNzaW9uLWxpc3Quc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91c2VyL3Blcm1pc3Npb25zL3VzZXItcGVybWlzc2lvbi1saXN0LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQVUzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDeEUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7QUFLeEUsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGNBQTBCO0lBSXZFLFlBQ1ksWUFBMEIsRUFDMUIsV0FBMkIsRUFDM0IsaUJBQW9DO1FBRTlDLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUpWLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQzFCLGdCQUFXLEdBQVgsV0FBVyxDQUFnQjtRQUMzQixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO1FBTnRDLGNBQVMsR0FBRyxxQkFBcUIsQ0FBQyxnQkFBZ0IsQ0FBQztRQUNuRCxnQkFBVyxHQUFHLHFCQUFxQixDQUFDLFVBQVUsQ0FBQztJQVF6RCxDQUFDO0lBRVMsSUFBSSxDQUNaLFVBQTJCLEVBQzNCLElBQVk7UUFFWixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxVQUFVLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsTUFBTSxDQUNKLFFBQWdCLEVBQ2hCLElBQVk7UUFFWixJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNsRCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDO0lBRUQ7OztPQUdHO0lBQ0gsUUFBUSxDQUNOLFFBQWdCLEVBQ2hCLElBQVk7UUFFWixJQUFJLENBQUMsV0FBVyxDQUFDLGtCQUFrQixDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNwRCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2RCxDQUFDOztzSEF6Q1UseUJBQXlCOzBIQUF6Qix5QkFBeUIsY0FGeEIsTUFBTTsyRkFFUCx5QkFBeUI7a0JBSHJDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07aUJBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQjJCVXNlciwgRW50aXRpZXNNb2RlbCwgUGFnaW5hdGlvbk1vZGVsIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIEIyQlVzZXJTZXJ2aWNlLFxuICBQZXJtaXNzaW9uU2VydmljZSxcbiAgUGVybWlzc2lvbixcbiAgT3JnYW5pemF0aW9uSXRlbVN0YXR1cyxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBUYWJsZVNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgU3ViTGlzdFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvc3ViLWxpc3Qvc3ViLWxpc3Quc2VydmljZSc7XG5pbXBvcnQgeyBPcmdhbml6YXRpb25UYWJsZVR5cGUgfSBmcm9tICcuLi8uLi9zaGFyZWQvb3JnYW5pemF0aW9uLm1vZGVsJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJQZXJtaXNzaW9uTGlzdFNlcnZpY2UgZXh0ZW5kcyBTdWJMaXN0U2VydmljZTxQZXJtaXNzaW9uPiB7XG4gIHByb3RlY3RlZCB0YWJsZVR5cGUgPSBPcmdhbml6YXRpb25UYWJsZVR5cGUuVVNFUl9QRVJNSVNTSU9OUztcbiAgcHJvdGVjdGVkIF9kb21haW5UeXBlID0gT3JnYW5pemF0aW9uVGFibGVUeXBlLlBFUk1JU1NJT047XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIHRhYmxlU2VydmljZTogVGFibGVTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCB1c2VyU2VydmljZTogQjJCVXNlclNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHBlcm1pc3Npb25TZXJ2aWNlOiBQZXJtaXNzaW9uU2VydmljZVxuICApIHtcbiAgICBzdXBlcih0YWJsZVNlcnZpY2UpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGxvYWQoXG4gICAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbk1vZGVsLFxuICAgIGNvZGU6IHN0cmluZ1xuICApOiBPYnNlcnZhYmxlPEVudGl0aWVzTW9kZWw8QjJCVXNlcj4+IHtcbiAgICByZXR1cm4gdGhpcy51c2VyU2VydmljZS5nZXRQZXJtaXNzaW9ucyhjb2RlLCBwYWdpbmF0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAb3ZlcnJpZGVcbiAgICogQXNzaWduIHBlcm1pc3Npb24gdG8gdGhlIHVzZXIuXG4gICAqL1xuICBhc3NpZ24oXG4gICAgdXNlckNvZGU6IHN0cmluZyxcbiAgICBjb2RlOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxPcmdhbml6YXRpb25JdGVtU3RhdHVzPFBlcm1pc3Npb24+PiB7XG4gICAgdGhpcy51c2VyU2VydmljZS5hc3NpZ25QZXJtaXNzaW9uKHVzZXJDb2RlLCBjb2RlKTtcbiAgICByZXR1cm4gdGhpcy5wZXJtaXNzaW9uU2VydmljZS5nZXRMb2FkaW5nU3RhdHVzKGNvZGUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBvdmVycmlkZVxuICAgKiBVbmFzc2lnbiB0aGUgcGVybWlzc2lvbiBmcm9tIHRoZSB1c2VyLlxuICAgKi9cbiAgdW5hc3NpZ24oXG4gICAgdXNlckNvZGU6IHN0cmluZyxcbiAgICBjb2RlOiBzdHJpbmdcbiAgKTogT2JzZXJ2YWJsZTxPcmdhbml6YXRpb25JdGVtU3RhdHVzPFBlcm1pc3Npb24+PiB7XG4gICAgdGhpcy51c2VyU2VydmljZS51bmFzc2lnblBlcm1pc3Npb24odXNlckNvZGUsIGNvZGUpO1xuICAgIHJldHVybiB0aGlzLnBlcm1pc3Npb25TZXJ2aWNlLmdldExvYWRpbmdTdGF0dXMoY29kZSk7XG4gIH1cbn1cbiJdfQ==