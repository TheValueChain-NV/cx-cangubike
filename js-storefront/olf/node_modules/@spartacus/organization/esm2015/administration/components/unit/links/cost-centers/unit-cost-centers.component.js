import { ChangeDetectionStrategy, Component } from '@angular/core';
import { of } from 'rxjs';
import { ListService } from '../../../shared/list/list.service';
import { UnitCostCenterListService } from './unit-cost-centers.service';
import * as i0 from "@angular/core";
import * as i1 from "../../services/current-unit.service";
import * as i2 from "../../../shared/sub-list/sub-list.component";
import * as i3 from "../../../shared/detail/disable-info/disable-info.component";
import * as i4 from "@angular/router";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/core";
export class UnitCostCenterListComponent {
    constructor(currentUnitService) {
        this.currentUnitService = currentUnitService;
        this.unit$ = this.currentUnitService
            ? this.currentUnitService.item$
            : of({ active: true });
    }
}
UnitCostCenterListComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitCostCenterListComponent, deps: [{ token: i1.CurrentUnitService }], target: i0.ɵɵFactoryTarget.Component });
UnitCostCenterListComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: UnitCostCenterListComponent, selector: "cx-org-unit-cost-centers", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ListService,
            useExisting: UnitCostCenterListService,
        },
    ], ngImport: i0, template: "<cx-org-sub-list [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitCostCenters\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n", components: [{ type: i2.SubListComponent, selector: "cx-org-sub-list", inputs: ["previous", "key", "showHint", "routerKey"] }, { type: i3.DisableInfoComponent, selector: "cx-org-disable-info", inputs: ["i18nRoot", "displayInfoConfig", "displayCustomInfo"] }], directives: [{ type: i4.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "async": i5.AsyncPipe, "cxTranslate": i6.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitCostCenterListComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-unit-cost-centers',
                    templateUrl: './unit-cost-centers.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: { class: 'content-wrapper' },
                    providers: [
                        {
                            provide: ListService,
                            useExisting: UnitCostCenterListService,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentUnitService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1jb3N0LWNlbnRlcnMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3VuaXQvbGlua3MvY29zdC1jZW50ZXJzL3VuaXQtY29zdC1jZW50ZXJzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91bml0L2xpbmtzL2Nvc3QtY2VudGVycy91bml0LWNvc3QtY2VudGVycy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRW5FLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDdEMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBRWhFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7Ozs7OztBQWN4RSxNQUFNLE9BQU8sMkJBQTJCO0lBS3RDLFlBQXNCLGtCQUFzQztRQUF0Qyx1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBSjVELFVBQUssR0FBd0IsSUFBSSxDQUFDLGtCQUFrQjtZQUNsRCxDQUFDLENBQUMsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUs7WUFDL0IsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBRXNDLENBQUM7O3dIQUxyRCwyQkFBMkI7NEdBQTNCLDJCQUEyQixnR0FQM0I7UUFDVDtZQUNFLE9BQU8sRUFBRSxXQUFXO1lBQ3BCLFdBQVcsRUFBRSx5QkFBeUI7U0FDdkM7S0FDRiwwQkNqQkgsZ2RBb0JBOzJGRERhLDJCQUEyQjtrQkFadkMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsMEJBQTBCO29CQUNwQyxXQUFXLEVBQUUsb0NBQW9DO29CQUNqRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFO29CQUNsQyxTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLFdBQVc7NEJBQ3BCLFdBQVcsRUFBRSx5QkFBeUI7eUJBQ3ZDO3FCQUNGO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQjJCVW5pdCB9IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTGlzdFNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zaGFyZWQvbGlzdC9saXN0LnNlcnZpY2UnO1xuaW1wb3J0IHsgQ3VycmVudFVuaXRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY3VycmVudC11bml0LnNlcnZpY2UnO1xuaW1wb3J0IHsgVW5pdENvc3RDZW50ZXJMaXN0U2VydmljZSB9IGZyb20gJy4vdW5pdC1jb3N0LWNlbnRlcnMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LW9yZy11bml0LWNvc3QtY2VudGVycycsXG4gIHRlbXBsYXRlVXJsOiAnLi91bml0LWNvc3QtY2VudGVycy5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBob3N0OiB7IGNsYXNzOiAnY29udGVudC13cmFwcGVyJyB9LFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBMaXN0U2VydmljZSxcbiAgICAgIHVzZUV4aXN0aW5nOiBVbml0Q29zdENlbnRlckxpc3RTZXJ2aWNlLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFVuaXRDb3N0Q2VudGVyTGlzdENvbXBvbmVudCB7XG4gIHVuaXQkOiBPYnNlcnZhYmxlPEIyQlVuaXQ+ID0gdGhpcy5jdXJyZW50VW5pdFNlcnZpY2VcbiAgICA/IHRoaXMuY3VycmVudFVuaXRTZXJ2aWNlLml0ZW0kXG4gICAgOiBvZih7IGFjdGl2ZTogdHJ1ZSB9KTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3VycmVudFVuaXRTZXJ2aWNlOiBDdXJyZW50VW5pdFNlcnZpY2UpIHt9XG59XG4iLCI8Y3gtb3JnLXN1Yi1saXN0IFtzaG93SGludF09XCJ0cnVlXCI+XG4gIDxhXG4gICAgYWN0aW9uc1xuICAgIGNsYXNzPVwibGlua1wiXG4gICAgcm91dGVyTGluaz1cImNyZWF0ZVwiXG4gICAgW2NsYXNzLmRpc2FibGVkXT1cIiEodW5pdCQgfCBhc3luYyk/LmFjdGl2ZVwiXG4gID5cbiAgICB7eyAnb3JnYW5pemF0aW9uLmNyZWF0ZScgfCBjeFRyYW5zbGF0ZSB9fVxuICA8L2E+XG4gIDxjeC1vcmctZGlzYWJsZS1pbmZvXG4gICAgaW5mb1xuICAgIGkxOG5Sb290PVwib3JnVW5pdENvc3RDZW50ZXJzXCJcbiAgICBbZGlzcGxheUluZm9Db25maWddPVwie1xuICAgICAgZGlzYWJsZWRDcmVhdGU6IHRydWUsXG4gICAgICBkaXNhYmxlZEVuYWJsZTogZmFsc2UsXG4gICAgICBkaXNhYmxlZEVkaXQ6IGZhbHNlXG4gICAgfVwiXG4gID5cbiAgPC9jeC1vcmctZGlzYWJsZS1pbmZvPlxuPC9jeC1vcmctc3ViLWxpc3Q+XG4iXX0=