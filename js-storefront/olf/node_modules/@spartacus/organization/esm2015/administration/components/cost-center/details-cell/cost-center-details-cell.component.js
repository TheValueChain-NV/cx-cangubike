import { Component, ChangeDetectionStrategy } from '@angular/core';
import { CellComponent } from '../../shared';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@angular/common";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@spartacus/core";
export class CostCenterDetailsCellComponent extends CellComponent {
}
CostCenterDetailsCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterDetailsCellComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
CostCenterDetailsCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CostCenterDetailsCellComponent, selector: "cx-org-cost-center-details-cell", usesInheritance: true, ngImport: i0, template: "<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgCostCenterDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.active' | cxTranslate }}</label>\n      <span\n        class=\"value\"\n        [class.is-active]=\"model.active\"\n        [class.is-inactive]=\"!model.active\"\n      >\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.currency' | cxTranslate }}</label>\n\n      <span class=\"value\">\n        {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.unit\">\n      <label>{{ 'orgCostCenter.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.unit\n          } | cxUrl\n        \"\n      >\n        {{ model.unit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n", directives: [{ type: i1.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.PopoverDirective, selector: "[cxPopover]", inputs: ["cxPopover", "cxPopoverOptions"], outputs: ["openPopover", "closePopover"] }], pipes: { "cxTranslate": i4.TranslatePipe, "cxUrl": i4.UrlPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterDetailsCellComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-cost-center-details-cell',
                    templateUrl: './cost-center-details-cell.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdC1jZW50ZXItZGV0YWlscy1jZWxsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9jb3N0LWNlbnRlci9kZXRhaWxzLWNlbGwvY29zdC1jZW50ZXItZGV0YWlscy1jZWxsLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy9jb3N0LWNlbnRlci9kZXRhaWxzLWNlbGwvY29zdC1jZW50ZXItZGV0YWlscy1jZWxsLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGNBQWMsQ0FBQzs7Ozs7O0FBTzdDLE1BQU0sT0FBTyw4QkFBK0IsU0FBUSxhQUFhOzsySEFBcEQsOEJBQThCOytHQUE5Qiw4QkFBOEIsOEZDUjNDLHl2REEyRUE7MkZEbkVhLDhCQUE4QjtrQkFMMUMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsaUNBQWlDO29CQUMzQyxXQUFXLEVBQUUsMkNBQTJDO29CQUN4RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi4vLi4vc2hhcmVkJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtb3JnLWNvc3QtY2VudGVyLWRldGFpbHMtY2VsbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb3N0LWNlbnRlci1kZXRhaWxzLWNlbGwuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgQ29zdENlbnRlckRldGFpbHNDZWxsQ29tcG9uZW50IGV4dGVuZHMgQ2VsbENvbXBvbmVudCB7fVxuIiwiPG5nLXRlbXBsYXRlICNkZXRhaWxzPlxuICA8ZGl2IGNsYXNzPVwicG9wb3Zlci1kZXRhaWxzXCI+XG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ0Nvc3RDZW50ZXIubmFtZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8YVxuICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAge1xuICAgICAgICAgICAgY3hSb3V0ZTogJ29yZ0Nvc3RDZW50ZXJEZXRhaWxzJyxcbiAgICAgICAgICAgIHBhcmFtczogbW9kZWxcbiAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgXCJcbiAgICAgID5cbiAgICAgICAge3sgbW9kZWwubmFtZSB9fVxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ0Nvc3RDZW50ZXIuY29kZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLmNvZGUgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdDb3N0Q2VudGVyLmFjdGl2ZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhblxuICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgW2NsYXNzLmlzLWFjdGl2ZV09XCJtb2RlbC5hY3RpdmVcIlxuICAgICAgICBbY2xhc3MuaXMtaW5hY3RpdmVdPVwiIW1vZGVsLmFjdGl2ZVwiXG4gICAgICA+XG4gICAgICAgIHt7XG4gICAgICAgICAgKG1vZGVsLmFjdGl2ZSA/ICdvcmdhbml6YXRpb24uZW5hYmxlZCcgOiAnb3JnYW5pemF0aW9uLmRpc2FibGVkJylcbiAgICAgICAgICAgIHwgY3hUcmFuc2xhdGVcbiAgICAgICAgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdDb3N0Q2VudGVyLmN1cnJlbmN5JyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cblxuICAgICAgPHNwYW4gY2xhc3M9XCJ2YWx1ZVwiPlxuICAgICAgICB7eyBtb2RlbC5jdXJyZW5jeT8uaXNvY29kZSB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCIgKm5nSWY9XCJtb2RlbC51bml0XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ0Nvc3RDZW50ZXIudW5pdCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8YVxuICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAge1xuICAgICAgICAgICAgY3hSb3V0ZTogJ29yZ1VuaXREZXRhaWxzJyxcbiAgICAgICAgICAgIHBhcmFtczogbW9kZWwudW5pdFxuICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICB7eyBtb2RlbC51bml0Py5uYW1lIH19XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT5cblxuPGJ1dHRvblxuICBjbGFzcz1cImJ1dHRvbiB0ZXh0XCJcbiAgW2N4UG9wb3Zlcl09XCJkZXRhaWxzXCJcbiAgW2N4UG9wb3Zlck9wdGlvbnNdPVwie1xuICAgIHBsYWNlbWVudDogJ2F1dG8nLFxuICAgIGNsYXNzOiAnbXktY29tcGFueS1wb3BvdmVyJyxcbiAgICBhcHBlbmRUb0JvZHk6IHRydWUsXG4gICAgZGlzcGxheUNsb3NlQnV0dG9uOiB0cnVlXG4gIH1cIlxuPlxuICB7eyBtb2RlbC5uYW1lIH19XG48L2J1dHRvbj5cbiJdfQ==