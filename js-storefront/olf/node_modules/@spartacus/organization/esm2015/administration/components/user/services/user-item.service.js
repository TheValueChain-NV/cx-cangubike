import { Injectable } from '@angular/core';
import { ItemService } from '../../shared/item.service';
import * as i0 from "@angular/core";
import * as i1 from "./current-user.service";
import * as i2 from "@spartacus/core";
import * as i3 from "../form/user-form.service";
import * as i4 from "@spartacus/organization/administration/core";
export class UserItemService extends ItemService {
    constructor(currentItemService, routingService, formService, userService) {
        super(currentItemService, routingService, formService);
        this.currentItemService = currentItemService;
        this.routingService = routingService;
        this.formService = formService;
        this.userService = userService;
    }
    load(code) {
        this.userService.load(code);
        return this.userService.get(code);
    }
    update(code, value) {
        delete value.approvers;
        this.userService.update(code, value);
        return this.userService.getLoadingStatus(code);
    }
    create(value) {
        this.userService.create(value);
        return this.userService.getLoadingStatus(null);
    }
    getDetailsRoute() {
        return 'orgUserDetails';
    }
    // @override to avoid errors while creation
    launchDetails(item) {
        if (item.customerId !== null) {
            super.launchDetails(item);
        }
    }
}
UserItemService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserItemService, deps: [{ token: i1.CurrentUserService }, { token: i2.RoutingService }, { token: i3.UserFormService }, { token: i4.B2BUserService }], target: i0.ɵɵFactoryTarget.Injectable });
UserItemService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserItemService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserItemService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentUserService }, { type: i2.RoutingService }, { type: i3.UserFormService }, { type: i4.B2BUserService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1pdGVtLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvdXNlci9zZXJ2aWNlcy91c2VyLWl0ZW0uc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBTzNDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQzs7Ozs7O0FBT3hELE1BQU0sT0FBTyxlQUFnQixTQUFRLFdBQW9CO0lBQ3ZELFlBQ1ksa0JBQXNDLEVBQ3RDLGNBQThCLEVBQzlCLFdBQTRCLEVBQzVCLFdBQTJCO1FBRXJDLEtBQUssQ0FBQyxrQkFBa0IsRUFBRSxjQUFjLEVBQUUsV0FBVyxDQUFDLENBQUM7UUFMN0MsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsZ0JBQVcsR0FBWCxXQUFXLENBQWlCO1FBQzVCLGdCQUFXLEdBQVgsV0FBVyxDQUFnQjtJQUd2QyxDQUFDO0lBRUQsSUFBSSxDQUFDLElBQVk7UUFDZixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM1QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBSSxFQUFFLEtBQWM7UUFDekIsT0FBTyxLQUFLLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQztRQUNyQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVTLE1BQU0sQ0FDZCxLQUFjO1FBRWQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2pELENBQUM7SUFFUyxlQUFlO1FBQ3ZCLE9BQU8sZ0JBQWdCLENBQUM7SUFDMUIsQ0FBQztJQUVELDJDQUEyQztJQUMzQyxhQUFhLENBQUMsSUFBYTtRQUN6QixJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO1lBQzVCLEtBQUssQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDOzs0R0FyQ1UsZUFBZTtnSEFBZixlQUFlLGNBRmQsTUFBTTsyRkFFUCxlQUFlO2tCQUgzQixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEIyQlVzZXIsIFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7XG4gIEIyQlVzZXJTZXJ2aWNlLFxuICBPcmdhbml6YXRpb25JdGVtU3RhdHVzLFxufSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2l0ZW0uc2VydmljZSc7XG5pbXBvcnQgeyBVc2VyRm9ybVNlcnZpY2UgfSBmcm9tICcuLi9mb3JtL3VzZXItZm9ybS5zZXJ2aWNlJztcbmltcG9ydCB7IEN1cnJlbnRVc2VyU2VydmljZSB9IGZyb20gJy4vY3VycmVudC11c2VyLnNlcnZpY2UnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290Jyxcbn0pXG5leHBvcnQgY2xhc3MgVXNlckl0ZW1TZXJ2aWNlIGV4dGVuZHMgSXRlbVNlcnZpY2U8QjJCVXNlcj4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgY3VycmVudEl0ZW1TZXJ2aWNlOiBDdXJyZW50VXNlclNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHJvdXRpbmdTZXJ2aWNlOiBSb3V0aW5nU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgZm9ybVNlcnZpY2U6IFVzZXJGb3JtU2VydmljZSxcbiAgICBwcm90ZWN0ZWQgdXNlclNlcnZpY2U6IEIyQlVzZXJTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKGN1cnJlbnRJdGVtU2VydmljZSwgcm91dGluZ1NlcnZpY2UsIGZvcm1TZXJ2aWNlKTtcbiAgfVxuXG4gIGxvYWQoY29kZTogc3RyaW5nKTogT2JzZXJ2YWJsZTxCMkJVc2VyPiB7XG4gICAgdGhpcy51c2VyU2VydmljZS5sb2FkKGNvZGUpO1xuICAgIHJldHVybiB0aGlzLnVzZXJTZXJ2aWNlLmdldChjb2RlKTtcbiAgfVxuXG4gIHVwZGF0ZShjb2RlLCB2YWx1ZTogQjJCVXNlcik6IE9ic2VydmFibGU8T3JnYW5pemF0aW9uSXRlbVN0YXR1czxCMkJVc2VyPj4ge1xuICAgIGRlbGV0ZSB2YWx1ZS5hcHByb3ZlcnM7XG4gICAgdGhpcy51c2VyU2VydmljZS51cGRhdGUoY29kZSwgdmFsdWUpO1xuICAgIHJldHVybiB0aGlzLnVzZXJTZXJ2aWNlLmdldExvYWRpbmdTdGF0dXMoY29kZSk7XG4gIH1cblxuICBwcm90ZWN0ZWQgY3JlYXRlKFxuICAgIHZhbHVlOiBCMkJVc2VyXG4gICk6IE9ic2VydmFibGU8T3JnYW5pemF0aW9uSXRlbVN0YXR1czxCMkJVc2VyPj4ge1xuICAgIHRoaXMudXNlclNlcnZpY2UuY3JlYXRlKHZhbHVlKTtcbiAgICByZXR1cm4gdGhpcy51c2VyU2VydmljZS5nZXRMb2FkaW5nU3RhdHVzKG51bGwpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldERldGFpbHNSb3V0ZSgpOiBzdHJpbmcge1xuICAgIHJldHVybiAnb3JnVXNlckRldGFpbHMnO1xuICB9XG5cbiAgLy8gQG92ZXJyaWRlIHRvIGF2b2lkIGVycm9ycyB3aGlsZSBjcmVhdGlvblxuICBsYXVuY2hEZXRhaWxzKGl0ZW06IEIyQlVzZXIpOiB2b2lkIHtcbiAgICBpZiAoaXRlbS5jdXN0b21lcklkICE9PSBudWxsKSB7XG4gICAgICBzdXBlci5sYXVuY2hEZXRhaWxzKGl0ZW0pO1xuICAgIH1cbiAgfVxufVxuIl19