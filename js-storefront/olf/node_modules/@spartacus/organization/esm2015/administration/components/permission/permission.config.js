import { AuthGuard } from '@spartacus/core';
import { AdminGuard } from '@spartacus/organization/administration/core';
import { ROUTE_PARAMS } from '@spartacus/organization/administration/root';
import { ItemService } from '../shared/item.service';
import { ListComponent } from '../shared/list/list.component';
import { ListService } from '../shared/list/list.service';
import { OrganizationTableType } from '../shared/organization.model';
import { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';
import { LimitCellComponent } from '../shared/table/limit/limit-cell.component';
import { StatusCellComponent } from '../shared/table/status/status-cell.component';
import { UnitCellComponent } from '../shared/table/unit/unit-cell.component';
import { PermissionDetailsComponent } from './details/permission-details.component';
import { PermissionFormComponent } from './form/permission-form.component';
import { PermissionItemService } from './services/permission-item.service';
import { PermissionListService } from './services/permission-list.service';
import { PermissionRoutePageMetaResolver } from './services/permission-route-page-meta.resolver';
export const permissionCmsConfig = {
    cmsComponents: {
        ManagePermissionsListComponent: {
            component: ListComponent,
            providers: [
                {
                    provide: ListService,
                    useExisting: PermissionListService,
                },
                {
                    provide: ItemService,
                    useExisting: PermissionItemService,
                },
            ],
            childRoutes: {
                parent: {
                    data: {
                        cxPageMeta: {
                            breadcrumb: 'orgPurchaseLimit.breadcrumbs.list',
                            resolver: PermissionRoutePageMetaResolver,
                        },
                    },
                },
                children: [
                    {
                        path: 'create',
                        component: PermissionFormComponent,
                    },
                    {
                        path: `:${ROUTE_PARAMS.permissionCode}`,
                        component: PermissionDetailsComponent,
                        data: {
                            cxPageMeta: {
                                breadcrumb: 'orgPurchaseLimit.breadcrumbs.details',
                            },
                        },
                        children: [
                            {
                                path: 'edit',
                                component: PermissionFormComponent,
                            },
                        ],
                    },
                ],
            },
            guards: [AuthGuard, AdminGuard],
        },
    },
};
export function permissionTableConfigFactory() {
    return permissionTableConfig;
}
export const permissionTableConfig = {
    table: {
        [OrganizationTableType.PERMISSION]: {
            cells: ['code', 'active', 'limit', 'unit'],
            options: {
                cells: {
                    code: {
                        dataComponent: ActiveLinkCellComponent,
                    },
                    active: {
                        dataComponent: StatusCellComponent,
                    },
                    unit: {
                        dataComponent: UnitCellComponent,
                    },
                    limit: {
                        dataComponent: LimitCellComponent,
                    },
                },
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVybWlzc2lvbi5jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvcGVybWlzc2lvbi9wZXJtaXNzaW9uLmNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0saUJBQWlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUUzRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDckQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzlELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQUNqRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNuRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNwRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUVqRyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBYztJQUM1QyxhQUFhLEVBQUU7UUFDYiw4QkFBOEIsRUFBRTtZQUM5QixTQUFTLEVBQUUsYUFBYTtZQUN4QixTQUFTLEVBQUU7Z0JBQ1Q7b0JBQ0UsT0FBTyxFQUFFLFdBQVc7b0JBQ3BCLFdBQVcsRUFBRSxxQkFBcUI7aUJBQ25DO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxXQUFXO29CQUNwQixXQUFXLEVBQUUscUJBQXFCO2lCQUNuQzthQUNGO1lBQ0QsV0FBVyxFQUFFO2dCQUNYLE1BQU0sRUFBRTtvQkFDTixJQUFJLEVBQUU7d0JBQ0osVUFBVSxFQUFFOzRCQUNWLFVBQVUsRUFBRSxtQ0FBbUM7NEJBQy9DLFFBQVEsRUFBRSwrQkFBK0I7eUJBQzFDO3FCQUNGO2lCQUNGO2dCQUNELFFBQVEsRUFBRTtvQkFDUjt3QkFDRSxJQUFJLEVBQUUsUUFBUTt3QkFDZCxTQUFTLEVBQUUsdUJBQXVCO3FCQUNuQztvQkFDRDt3QkFDRSxJQUFJLEVBQUUsSUFBSSxZQUFZLENBQUMsY0FBYyxFQUFFO3dCQUN2QyxTQUFTLEVBQUUsMEJBQTBCO3dCQUNyQyxJQUFJLEVBQUU7NEJBQ0osVUFBVSxFQUFFO2dDQUNWLFVBQVUsRUFBRSxzQ0FBc0M7NkJBQ25EO3lCQUNGO3dCQUNELFFBQVEsRUFBRTs0QkFDUjtnQ0FDRSxJQUFJLEVBQUUsTUFBTTtnQ0FDWixTQUFTLEVBQUUsdUJBQXVCOzZCQUNuQzt5QkFDRjtxQkFDRjtpQkFDRjthQUNGO1lBQ0QsTUFBTSxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQztTQUNoQztLQUNGO0NBQ0YsQ0FBQztBQUVGLE1BQU0sVUFBVSw0QkFBNEI7SUFDMUMsT0FBTyxxQkFBcUIsQ0FBQztBQUMvQixDQUFDO0FBRUQsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQWdCO0lBQ2hELEtBQUssRUFBRTtRQUNMLENBQUMscUJBQXFCLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDbEMsS0FBSyxFQUFFLENBQUMsTUFBTSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDO1lBQzFDLE9BQU8sRUFBRTtnQkFDUCxLQUFLLEVBQUU7b0JBQ0wsSUFBSSxFQUFFO3dCQUNKLGFBQWEsRUFBRSx1QkFBdUI7cUJBQ3ZDO29CQUNELE1BQU0sRUFBRTt3QkFDTixhQUFhLEVBQUUsbUJBQW1CO3FCQUNuQztvQkFDRCxJQUFJLEVBQUU7d0JBQ0osYUFBYSxFQUFFLGlCQUFpQjtxQkFDakM7b0JBQ0QsS0FBSyxFQUFFO3dCQUNMLGFBQWEsRUFBRSxrQkFBa0I7cUJBQ2xDO2lCQUNGO2FBQ0Y7U0FDRjtLQUNGO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF1dGhHdWFyZCwgQ21zQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IEFkbWluR3VhcmQgfSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb3JlJztcbmltcG9ydCB7IFJPVVRFX1BBUkFNUyB9IGZyb20gJ0BzcGFydGFjdXMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL3Jvb3QnO1xuaW1wb3J0IHsgVGFibGVDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgSXRlbVNlcnZpY2UgfSBmcm9tICcuLi9zaGFyZWQvaXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IExpc3RDb21wb25lbnQgfSBmcm9tICcuLi9zaGFyZWQvbGlzdC9saXN0LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBMaXN0U2VydmljZSB9IGZyb20gJy4uL3NoYXJlZC9saXN0L2xpc3Quc2VydmljZSc7XG5pbXBvcnQgeyBPcmdhbml6YXRpb25UYWJsZVR5cGUgfSBmcm9tICcuLi9zaGFyZWQvb3JnYW5pemF0aW9uLm1vZGVsJztcbmltcG9ydCB7IEFjdGl2ZUxpbmtDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi4vc2hhcmVkL3RhYmxlL2FjdGl2ZS1saW5rL2FjdGl2ZS1saW5rLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IExpbWl0Q2VsbENvbXBvbmVudCB9IGZyb20gJy4uL3NoYXJlZC90YWJsZS9saW1pdC9saW1pdC1jZWxsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGF0dXNDZWxsQ29tcG9uZW50IH0gZnJvbSAnLi4vc2hhcmVkL3RhYmxlL3N0YXR1cy9zdGF0dXMtY2VsbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVW5pdENlbGxDb21wb25lbnQgfSBmcm9tICcuLi9zaGFyZWQvdGFibGUvdW5pdC91bml0LWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IFBlcm1pc3Npb25EZXRhaWxzQ29tcG9uZW50IH0gZnJvbSAnLi9kZXRhaWxzL3Blcm1pc3Npb24tZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGVybWlzc2lvbkZvcm1Db21wb25lbnQgfSBmcm9tICcuL2Zvcm0vcGVybWlzc2lvbi1mb3JtLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBQZXJtaXNzaW9uSXRlbVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3Blcm1pc3Npb24taXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IFBlcm1pc3Npb25MaXN0U2VydmljZSB9IGZyb20gJy4vc2VydmljZXMvcGVybWlzc2lvbi1saXN0LnNlcnZpY2UnO1xuaW1wb3J0IHsgUGVybWlzc2lvblJvdXRlUGFnZU1ldGFSZXNvbHZlciB9IGZyb20gJy4vc2VydmljZXMvcGVybWlzc2lvbi1yb3V0ZS1wYWdlLW1ldGEucmVzb2x2ZXInO1xuXG5leHBvcnQgY29uc3QgcGVybWlzc2lvbkNtc0NvbmZpZzogQ21zQ29uZmlnID0ge1xuICBjbXNDb21wb25lbnRzOiB7XG4gICAgTWFuYWdlUGVybWlzc2lvbnNMaXN0Q29tcG9uZW50OiB7XG4gICAgICBjb21wb25lbnQ6IExpc3RDb21wb25lbnQsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IExpc3RTZXJ2aWNlLFxuICAgICAgICAgIHVzZUV4aXN0aW5nOiBQZXJtaXNzaW9uTGlzdFNlcnZpY2UsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBJdGVtU2VydmljZSxcbiAgICAgICAgICB1c2VFeGlzdGluZzogUGVybWlzc2lvbkl0ZW1TZXJ2aWNlLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIGNoaWxkUm91dGVzOiB7XG4gICAgICAgIHBhcmVudDoge1xuICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIGN4UGFnZU1ldGE6IHtcbiAgICAgICAgICAgICAgYnJlYWRjcnVtYjogJ29yZ1B1cmNoYXNlTGltaXQuYnJlYWRjcnVtYnMubGlzdCcsXG4gICAgICAgICAgICAgIHJlc29sdmVyOiBQZXJtaXNzaW9uUm91dGVQYWdlTWV0YVJlc29sdmVyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHBhdGg6ICdjcmVhdGUnLFxuICAgICAgICAgICAgY29tcG9uZW50OiBQZXJtaXNzaW9uRm9ybUNvbXBvbmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHBhdGg6IGA6JHtST1VURV9QQVJBTVMucGVybWlzc2lvbkNvZGV9YCxcbiAgICAgICAgICAgIGNvbXBvbmVudDogUGVybWlzc2lvbkRldGFpbHNDb21wb25lbnQsXG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgIGN4UGFnZU1ldGE6IHtcbiAgICAgICAgICAgICAgICBicmVhZGNydW1iOiAnb3JnUHVyY2hhc2VMaW1pdC5icmVhZGNydW1icy5kZXRhaWxzJyxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcGF0aDogJ2VkaXQnLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogUGVybWlzc2lvbkZvcm1Db21wb25lbnQsXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICAgIH0sXG4gICAgICAgIF0sXG4gICAgICB9LFxuICAgICAgZ3VhcmRzOiBbQXV0aEd1YXJkLCBBZG1pbkd1YXJkXSxcbiAgICB9LFxuICB9LFxufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHBlcm1pc3Npb25UYWJsZUNvbmZpZ0ZhY3RvcnkoKTogVGFibGVDb25maWcge1xuICByZXR1cm4gcGVybWlzc2lvblRhYmxlQ29uZmlnO1xufVxuXG5leHBvcnQgY29uc3QgcGVybWlzc2lvblRhYmxlQ29uZmlnOiBUYWJsZUNvbmZpZyA9IHtcbiAgdGFibGU6IHtcbiAgICBbT3JnYW5pemF0aW9uVGFibGVUeXBlLlBFUk1JU1NJT05dOiB7XG4gICAgICBjZWxsczogWydjb2RlJywgJ2FjdGl2ZScsICdsaW1pdCcsICd1bml0J10sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGNlbGxzOiB7XG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgZGF0YUNvbXBvbmVudDogQWN0aXZlTGlua0NlbGxDb21wb25lbnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhY3RpdmU6IHtcbiAgICAgICAgICAgIGRhdGFDb21wb25lbnQ6IFN0YXR1c0NlbGxDb21wb25lbnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB1bml0OiB7XG4gICAgICAgICAgICBkYXRhQ29tcG9uZW50OiBVbml0Q2VsbENvbXBvbmVudCxcbiAgICAgICAgICB9LFxuICAgICAgICAgIGxpbWl0OiB7XG4gICAgICAgICAgICBkYXRhQ29tcG9uZW50OiBMaW1pdENlbGxDb21wb25lbnQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgfSxcbn07XG4iXX0=