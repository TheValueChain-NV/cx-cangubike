import { ChangeDetectionStrategy, Component } from '@angular/core';
import { startWith, switchMap } from 'rxjs/operators';
import { ItemService } from '../../shared/item.service';
import { UnitItemService } from '../services/unit-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../shared/item.service";
import * as i2 from "../../shared/card/card.component";
import * as i3 from "../../shared/detail/toggle-status-action/toggle-status.component";
import * as i4 from "../../shared/detail/disable-info/disable-info.component";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/storefront";
import * as i7 from "@angular/router";
import * as i8 from "../../shared/item-exists.directive";
import * as i9 from "@spartacus/core";
export class UnitDetailsComponent {
    constructor(itemService) {
        this.itemService = itemService;
        this.model$ = this.itemService.key$.pipe(switchMap((code) => this.itemService.load(code)), startWith({}));
        this.isInEditMode$ = this.itemService.isInEditMode$;
    }
}
UnitDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitDetailsComponent, deps: [{ token: i1.ItemService }], target: i0.ɵɵFactoryTarget.Component });
UnitDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: UnitDetailsComponent, selector: "cx-org-unit-details", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UnitItemService,
        },
    ], ngImport: i0, template: "<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUnit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n  [showHint]=\"true\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUnitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUnit\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnit\"\n    [displayInfoConfig]=\"{ disabledDisable: true }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.approvalProcess?.name\">\n      <label>{{ 'orgUnit.approvalProcess' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.approvalProcess?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.parentOrgUnit\">\n      <label>{{ 'orgUnit.parentUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.parentOrgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.parentOrgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitChildren', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.units' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitUserList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.users' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitAddressList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.shippingAddresses' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitCostCenters', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.costCenters' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n", components: [{ type: i2.CardComponent, selector: "cx-org-card", inputs: ["i18nRoot", "previous", "subtitle", "showHint"] }, { type: i3.ToggleStatusComponent, selector: "cx-org-toggle-status", inputs: ["i18nRoot", "key", "disabled"] }, { type: i4.DisableInfoComponent, selector: "cx-org-disable-info", inputs: ["i18nRoot", "displayInfoConfig", "displayCustomInfo"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i6.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { type: i7.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i8.ItemExistsDirective, selector: "[cxOrgItemExists]" }, { type: i7.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }], pipes: { "async": i5.AsyncPipe, "cxUrl": i9.UrlPipe, "cxTranslate": i9.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-unit-details',
                    templateUrl: './unit-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: ItemService,
                            useExisting: UnitItemService,
                        },
                    ],
                    host: { class: 'content-wrapper' },
                }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1kZXRhaWxzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91bml0L2RldGFpbHMvdW5pdC1kZXRhaWxzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91bml0L2RldGFpbHMvdW5pdC1kZXRhaWxzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLCtCQUErQixDQUFDOzs7Ozs7Ozs7OztBQWNoRSxNQUFNLE9BQU8sb0JBQW9CO0lBTy9CLFlBQXNCLFdBQWlDO1FBQWpDLGdCQUFXLEdBQVgsV0FBVyxDQUFzQjtRQU52RCxXQUFNLEdBQXdCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FDdEQsU0FBUyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxFQUNoRCxTQUFTLENBQUMsRUFBRSxDQUFDLENBQ2QsQ0FBQztRQUNGLGtCQUFhLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUM7SUFFVyxDQUFDOztpSEFQaEQsb0JBQW9CO3FHQUFwQixvQkFBb0IsMkZBUnBCO1FBQ1Q7WUFDRSxPQUFPLEVBQUUsV0FBVztZQUNwQixXQUFXLEVBQUUsZUFBZTtTQUM3QjtLQUNGLDBCQ2hCSCwwdEdBb0hBOzJGRGpHYSxvQkFBb0I7a0JBWmhDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHFCQUFxQjtvQkFDL0IsV0FBVyxFQUFFLCtCQUErQjtvQkFDNUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsV0FBVyxFQUFFLGVBQWU7eUJBQzdCO3FCQUNGO29CQUNELElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBRTtpQkFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCMkJVbml0IH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHN0YXJ0V2l0aCwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgSXRlbVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zaGFyZWQvaXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IFVuaXRJdGVtU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3VuaXQtaXRlbS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtb3JnLXVuaXQtZGV0YWlscycsXG4gIHRlbXBsYXRlVXJsOiAnLi91bml0LWRldGFpbHMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogSXRlbVNlcnZpY2UsXG4gICAgICB1c2VFeGlzdGluZzogVW5pdEl0ZW1TZXJ2aWNlLFxuICAgIH0sXG4gIF0sXG4gIGhvc3Q6IHsgY2xhc3M6ICdjb250ZW50LXdyYXBwZXInIH0sXG59KVxuZXhwb3J0IGNsYXNzIFVuaXREZXRhaWxzQ29tcG9uZW50IHtcbiAgbW9kZWwkOiBPYnNlcnZhYmxlPEIyQlVuaXQ+ID0gdGhpcy5pdGVtU2VydmljZS5rZXkkLnBpcGUoXG4gICAgc3dpdGNoTWFwKChjb2RlKSA9PiB0aGlzLml0ZW1TZXJ2aWNlLmxvYWQoY29kZSkpLFxuICAgIHN0YXJ0V2l0aCh7fSlcbiAgKTtcbiAgaXNJbkVkaXRNb2RlJCA9IHRoaXMuaXRlbVNlcnZpY2UuaXNJbkVkaXRNb2RlJDtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgaXRlbVNlcnZpY2U6IEl0ZW1TZXJ2aWNlPEIyQlVuaXQ+KSB7fVxufVxuIiwiPGN4LW9yZy1jYXJkXG4gICpuZ0lmPVwibW9kZWwkIHwgYXN5bmMgYXMgbW9kZWxcIlxuICBpMThuUm9vdD1cIm9yZ1VuaXQuZGV0YWlsc1wiXG4gIFtjeEZvY3VzXT1cInsgcmVmcmVzaEZvY3VzOiBtb2RlbCB9XCJcbiAgW3Nob3dIaW50XT1cInRydWVcIlxuPlxuICA8YVxuICAgIGFjdGlvbnNcbiAgICBjbGFzcz1cImxpbmsgZWRpdFwiXG4gICAgW2NsYXNzLmRpc2FibGVkXT1cIiFtb2RlbC5hY3RpdmUgfHwgKGlzSW5FZGl0TW9kZSQgfCBhc3luYylcIlxuICAgIFtyb3V0ZXJMaW5rXT1cInsgY3hSb3V0ZTogJ29yZ1VuaXRFZGl0JywgcGFyYW1zOiBtb2RlbCB9IHwgY3hVcmxcIlxuICA+XG4gICAge3sgJ29yZ2FuaXphdGlvbi5lZGl0JyB8IGN4VHJhbnNsYXRlIH19XG4gIDwvYT5cblxuICA8Y3gtb3JnLXRvZ2dsZS1zdGF0dXNcbiAgICBhY3Rpb25zXG4gICAga2V5PVwidWlkXCJcbiAgICBpMThuUm9vdD1cIm9yZ1VuaXRcIlxuICA+PC9jeC1vcmctdG9nZ2xlLXN0YXR1cz5cblxuICA8Y3gtb3JnLWRpc2FibGUtaW5mb1xuICAgIGluZm9cbiAgICBpMThuUm9vdD1cIm9yZ1VuaXRcIlxuICAgIFtkaXNwbGF5SW5mb0NvbmZpZ109XCJ7IGRpc2FibGVkRGlzYWJsZTogdHJ1ZSB9XCJcbiAgPlxuICA8L2N4LW9yZy1kaXNhYmxlLWluZm8+XG5cbiAgPHNlY3Rpb24gbWFpbiBjbGFzcz1cImRldGFpbHNcIiBjeE9yZ0l0ZW1FeGlzdHM+XG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1VuaXQubmFtZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLm5hbWUgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdVbml0LnVpZCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLnVpZCB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1VuaXQuYWN0aXZlJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIiBbY2xhc3MuaXMtYWN0aXZlXT1cIm1vZGVsLmFjdGl2ZVwiPlxuICAgICAgICB7e1xuICAgICAgICAgIChtb2RlbC5hY3RpdmUgPyAnb3JnYW5pemF0aW9uLmVuYWJsZWQnIDogJ29yZ2FuaXphdGlvbi5kaXNhYmxlZCcpXG4gICAgICAgICAgICB8IGN4VHJhbnNsYXRlXG4gICAgICAgIH19XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIiAqbmdJZj1cIm1vZGVsLmFwcHJvdmFsUHJvY2Vzcz8ubmFtZVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdVbml0LmFwcHJvdmFsUHJvY2VzcycgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLmFwcHJvdmFsUHJvY2Vzcz8ubmFtZSB9fVxuICAgICAgPC9zcGFuPlxuICAgIDwvZGl2PlxuXG4gICAgPGRpdiBjbGFzcz1cInByb3BlcnR5XCIgKm5nSWY9XCJtb2RlbC5wYXJlbnRPcmdVbml0XCI+XG4gICAgICA8bGFiZWw+e3sgJ29yZ1VuaXQucGFyZW50VW5pdCcgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8YVxuICAgICAgICBjbGFzcz1cInZhbHVlXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAge1xuICAgICAgICAgICAgY3hSb3V0ZTogJ29yZ1VuaXREZXRhaWxzJyxcbiAgICAgICAgICAgIHBhcmFtczogbW9kZWwucGFyZW50T3JnVW5pdFxuICAgICAgICAgIH0gfCBjeFVybFxuICAgICAgICBcIlxuICAgICAgPlxuICAgICAgICB7eyBtb2RlbC5wYXJlbnRPcmdVbml0Py5uYW1lIH19XG4gICAgICA8L2E+XG4gICAgPC9kaXY+XG4gIDwvc2VjdGlvbj5cblxuICA8c2VjdGlvbiBtYWluIGNsYXNzPVwibGluay1saXN0XCI+XG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIm1vZGVsLnVpZFwiPlxuICAgICAgPGFcbiAgICAgICAgY2xhc3M9XCJsaW5rXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwieyBjeFJvdXRlOiAnb3JnVW5pdENoaWxkcmVuJywgcGFyYW1zOiBtb2RlbCB9IHwgY3hVcmxcIlxuICAgICAgICByb3V0ZXJMaW5rQWN0aXZlPVwiaXMtY3VycmVudFwiXG4gICAgICA+XG4gICAgICAgIHt7ICdvcmdVbml0LmxpbmtzLnVuaXRzJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2E+XG4gICAgICA8YVxuICAgICAgICBjbGFzcz1cImxpbmtcIlxuICAgICAgICBbcm91dGVyTGlua109XCJ7IGN4Um91dGU6ICdvcmdVbml0VXNlckxpc3QnLCBwYXJhbXM6IG1vZGVsIH0gfCBjeFVybFwiXG4gICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJpcy1jdXJyZW50XCJcbiAgICAgID5cbiAgICAgICAge3sgJ29yZ1VuaXQubGlua3MudXNlcnMnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgIDwvYT5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzPVwibGlua1wiXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cInsgY3hSb3V0ZTogJ29yZ1VuaXRBcHByb3ZlcnMnLCBwYXJhbXM6IG1vZGVsIH0gfCBjeFVybFwiXG4gICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJpcy1jdXJyZW50XCJcbiAgICAgID5cbiAgICAgICAge3sgJ29yZ1VuaXQubGlua3MuYXBwcm92ZXJzJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2E+XG4gICAgICA8YVxuICAgICAgICBjbGFzcz1cImxpbmtcIlxuICAgICAgICBbcm91dGVyTGlua109XCJ7IGN4Um91dGU6ICdvcmdVbml0QWRkcmVzc0xpc3QnLCBwYXJhbXM6IG1vZGVsIH0gfCBjeFVybFwiXG4gICAgICAgIHJvdXRlckxpbmtBY3RpdmU9XCJpcy1jdXJyZW50XCJcbiAgICAgID5cbiAgICAgICAge3sgJ29yZ1VuaXQubGlua3Muc2hpcHBpbmdBZGRyZXNzZXMnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgIDwvYT5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzPVwibGlua1wiXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cInsgY3hSb3V0ZTogJ29yZ1VuaXRDb3N0Q2VudGVycycsIHBhcmFtczogbW9kZWwgfSB8IGN4VXJsXCJcbiAgICAgICAgcm91dGVyTGlua0FjdGl2ZT1cImlzLWN1cnJlbnRcIlxuICAgICAgPlxuICAgICAgICB7eyAnb3JnVW5pdC5saW5rcy5jb3N0Q2VudGVycycgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgPC9hPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L3NlY3Rpb24+XG48L2N4LW9yZy1jYXJkPlxuIl19