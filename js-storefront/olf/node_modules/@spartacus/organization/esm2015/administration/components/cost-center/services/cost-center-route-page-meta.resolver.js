import { Injectable } from '@angular/core';
import { DefaultRoutePageMetaResolver, } from '@spartacus/core';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "./current-cost-center.service";
export class CostCenterRoutePageMetaResolver extends DefaultRoutePageMetaResolver {
    constructor(translation, currentItemService) {
        super(translation);
        this.currentItemService = currentItemService;
    }
    getParams() {
        return this.currentItemService.item$;
    }
}
CostCenterRoutePageMetaResolver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterRoutePageMetaResolver, deps: [{ token: i1.TranslationService }, { token: i2.CurrentCostCenterService }], target: i0.ɵɵFactoryTarget.Injectable });
CostCenterRoutePageMetaResolver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterRoutePageMetaResolver, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CostCenterRoutePageMetaResolver, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.TranslationService }, { type: i2.CurrentCostCenterService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29zdC1jZW50ZXItcm91dGUtcGFnZS1tZXRhLnJlc29sdmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL2Nvc3QtY2VudGVyL3NlcnZpY2VzL2Nvc3QtY2VudGVyLXJvdXRlLXBhZ2UtbWV0YS5yZXNvbHZlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFFTCw0QkFBNEIsR0FFN0IsTUFBTSxpQkFBaUIsQ0FBQzs7OztBQUt6QixNQUFNLE9BQU8sK0JBQWdDLFNBQVEsNEJBQTRCO0lBQy9FLFlBQ0UsV0FBK0IsRUFDckIsa0JBQTRDO1FBRXRELEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUZULHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBMEI7SUFHeEQsQ0FBQztJQUVTLFNBQVM7UUFDakIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDO0lBQ3ZDLENBQUM7OzRIQVZVLCtCQUErQjtnSUFBL0IsK0JBQStCLGNBRGxCLE1BQU07MkZBQ25CLCtCQUErQjtrQkFEM0MsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3N0Q2VudGVyLFxuICBEZWZhdWx0Um91dGVQYWdlTWV0YVJlc29sdmVyLFxuICBUcmFuc2xhdGlvblNlcnZpY2UsXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBDdXJyZW50Q29zdENlbnRlclNlcnZpY2UgfSBmcm9tICcuL2N1cnJlbnQtY29zdC1jZW50ZXIuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgQ29zdENlbnRlclJvdXRlUGFnZU1ldGFSZXNvbHZlciBleHRlbmRzIERlZmF1bHRSb3V0ZVBhZ2VNZXRhUmVzb2x2ZXIge1xuICBjb25zdHJ1Y3RvcihcbiAgICB0cmFuc2xhdGlvbjogVHJhbnNsYXRpb25TZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBjdXJyZW50SXRlbVNlcnZpY2U6IEN1cnJlbnRDb3N0Q2VudGVyU2VydmljZVxuICApIHtcbiAgICBzdXBlcih0cmFuc2xhdGlvbik7XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0UGFyYW1zKCk6IE9ic2VydmFibGU8Q29zdENlbnRlcj4ge1xuICAgIHJldHVybiB0aGlzLmN1cnJlbnRJdGVtU2VydmljZS5pdGVtJDtcbiAgfVxufVxuIl19