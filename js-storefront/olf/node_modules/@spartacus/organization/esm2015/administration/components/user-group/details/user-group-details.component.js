import { ChangeDetectionStrategy, Component } from '@angular/core';
import { startWith, switchMap } from 'rxjs/operators';
import { ItemService } from '../../shared/item.service';
import { UserGroupItemService } from '../services/user-group-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../shared/item.service";
import * as i2 from "../../shared/card/card.component";
import * as i3 from "../../shared/detail/delete-item-action/delete-item.component";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/storefront";
import * as i6 from "@angular/router";
import * as i7 from "../../shared/item-exists.directive";
import * as i8 from "@spartacus/core";
export class UserGroupDetailsComponent {
    constructor(itemService) {
        this.itemService = itemService;
        this.model$ = this.itemService.key$.pipe(switchMap((code) => this.itemService.load(code)), startWith({}));
        this.isInEditMode$ = this.itemService.isInEditMode$;
    }
}
UserGroupDetailsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserGroupDetailsComponent, deps: [{ token: i1.ItemService }], target: i0.ɵɵFactoryTarget.Component });
UserGroupDetailsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: UserGroupDetailsComponent, selector: "cx-org-user-group-details", host: { classAttribute: "content-wrapper" }, providers: [
        {
            provide: ItemService,
            useExisting: UserGroupItemService,
        },
    ], ngImport: i0, template: "<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUserGroup.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [routerLink]=\"{ cxRoute: 'orgUserGroupEdit', params: model } | cxUrl\"\n    [class.disabled]=\"isInEditMode$ | async\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-delete-item\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUserGroup\"\n  ></cx-org-delete-item>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserGroupUsers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.user' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserGroupPermissions', params: model } | cxUrl\n        \"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n", components: [{ type: i2.CardComponent, selector: "cx-org-card", inputs: ["i18nRoot", "previous", "subtitle", "showHint"] }, { type: i3.DeleteItemComponent, selector: "cx-org-delete-item", inputs: ["i18nRoot", "key", "additionalParam"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.FocusDirective, selector: "[cxFocus]", inputs: ["cxFocus"] }, { type: i6.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i7.ItemExistsDirective, selector: "[cxOrgItemExists]" }, { type: i6.RouterLinkActive, selector: "[routerLinkActive]", inputs: ["routerLinkActiveOptions", "routerLinkActive"], exportAs: ["routerLinkActive"] }], pipes: { "async": i4.AsyncPipe, "cxUrl": i8.UrlPipe, "cxTranslate": i8.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserGroupDetailsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-user-group-details',
                    templateUrl: './user-group-details.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [
                        {
                            provide: ItemService,
                            useExisting: UserGroupItemService,
                        },
                    ],
                    host: { class: 'content-wrapper' },
                }]
        }], ctorParameters: function () { return [{ type: i1.ItemService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1ncm91cC1kZXRhaWxzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91c2VyLWdyb3VwL2RldGFpbHMvdXNlci1ncm91cC1kZXRhaWxzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29tcG9uZW50cy91c2VyLWdyb3VwL2RldGFpbHMvdXNlci1ncm91cC1kZXRhaWxzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHbkUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0scUNBQXFDLENBQUM7Ozs7Ozs7Ozs7QUFjM0UsTUFBTSxPQUFPLHlCQUF5QjtJQU9wQyxZQUFzQixXQUFtQztRQUFuQyxnQkFBVyxHQUFYLFdBQVcsQ0FBd0I7UUFOekQsV0FBTSxHQUEwQixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQ3hELFNBQVMsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsRUFDaEQsU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUNkLENBQUM7UUFDRixrQkFBYSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsYUFBYSxDQUFDO0lBRWEsQ0FBQzs7c0hBUGxELHlCQUF5QjswR0FBekIseUJBQXlCLGlHQVJ6QjtRQUNUO1lBQ0UsT0FBTyxFQUFFLFdBQVc7WUFDcEIsV0FBVyxFQUFFLG9CQUFvQjtTQUNsQztLQUNGLDBCQ2hCSCw0MERBd0VBOzJGRHJEYSx5QkFBeUI7a0JBWnJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsV0FBVyxFQUFFLHFDQUFxQztvQkFDbEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRTt3QkFDVDs0QkFDRSxPQUFPLEVBQUUsV0FBVzs0QkFDcEIsV0FBVyxFQUFFLG9CQUFvQjt5QkFDbEM7cUJBQ0Y7b0JBQ0QsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFO2lCQUNuQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJHcm91cCB9IGZyb20gJ0BzcGFydGFjdXMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc3RhcnRXaXRoLCBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJdGVtU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9pdGVtLnNlcnZpY2UnO1xuaW1wb3J0IHsgVXNlckdyb3VwSXRlbVNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy91c2VyLWdyb3VwLWl0ZW0uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LW9yZy11c2VyLWdyb3VwLWRldGFpbHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vdXNlci1ncm91cC1kZXRhaWxzLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEl0ZW1TZXJ2aWNlLFxuICAgICAgdXNlRXhpc3Rpbmc6IFVzZXJHcm91cEl0ZW1TZXJ2aWNlLFxuICAgIH0sXG4gIF0sXG4gIGhvc3Q6IHsgY2xhc3M6ICdjb250ZW50LXdyYXBwZXInIH0sXG59KVxuZXhwb3J0IGNsYXNzIFVzZXJHcm91cERldGFpbHNDb21wb25lbnQge1xuICBtb2RlbCQ6IE9ic2VydmFibGU8VXNlckdyb3VwPiA9IHRoaXMuaXRlbVNlcnZpY2Uua2V5JC5waXBlKFxuICAgIHN3aXRjaE1hcCgoY29kZSkgPT4gdGhpcy5pdGVtU2VydmljZS5sb2FkKGNvZGUpKSxcbiAgICBzdGFydFdpdGgoe30pXG4gICk7XG4gIGlzSW5FZGl0TW9kZSQgPSB0aGlzLml0ZW1TZXJ2aWNlLmlzSW5FZGl0TW9kZSQ7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGl0ZW1TZXJ2aWNlOiBJdGVtU2VydmljZTxVc2VyR3JvdXA+KSB7fVxufVxuIiwiPGN4LW9yZy1jYXJkXG4gICpuZ0lmPVwibW9kZWwkIHwgYXN5bmMgYXMgbW9kZWxcIlxuICBpMThuUm9vdD1cIm9yZ1VzZXJHcm91cC5kZXRhaWxzXCJcbiAgW2N4Rm9jdXNdPVwieyByZWZyZXNoRm9jdXM6IG1vZGVsIH1cIlxuPlxuICA8YVxuICAgIGFjdGlvbnNcbiAgICBjbGFzcz1cImxpbmsgZWRpdFwiXG4gICAgW3JvdXRlckxpbmtdPVwieyBjeFJvdXRlOiAnb3JnVXNlckdyb3VwRWRpdCcsIHBhcmFtczogbW9kZWwgfSB8IGN4VXJsXCJcbiAgICBbY2xhc3MuZGlzYWJsZWRdPVwiaXNJbkVkaXRNb2RlJCB8IGFzeW5jXCJcbiAgPlxuICAgIHt7ICdvcmdhbml6YXRpb24uZWRpdCcgfCBjeFRyYW5zbGF0ZSB9fVxuICA8L2E+XG5cbiAgPGN4LW9yZy1kZWxldGUtaXRlbVxuICAgIGFjdGlvbnNcbiAgICBrZXk9XCJ1aWRcIlxuICAgIGkxOG5Sb290PVwib3JnVXNlckdyb3VwXCJcbiAgPjwvY3gtb3JnLWRlbGV0ZS1pdGVtPlxuXG4gIDxzZWN0aW9uIG1haW4gY2xhc3M9XCJkZXRhaWxzXCIgY3hPcmdJdGVtRXhpc3RzPlxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdVc2VyR3JvdXAubmFtZScgfCBjeFRyYW5zbGF0ZSB9fTwvbGFiZWw+XG4gICAgICA8c3BhbiBjbGFzcz1cInZhbHVlXCI+XG4gICAgICAgIHt7IG1vZGVsLm5hbWUgfX1cbiAgICAgIDwvc3Bhbj5cbiAgICA8L2Rpdj5cblxuICAgIDxkaXYgY2xhc3M9XCJwcm9wZXJ0eVwiPlxuICAgICAgPGxhYmVsPnt7ICdvcmdVc2VyR3JvdXAudWlkJyB8IGN4VHJhbnNsYXRlIH19PC9sYWJlbD5cbiAgICAgIDxzcGFuIGNsYXNzPVwidmFsdWVcIj5cbiAgICAgICAge3sgbW9kZWwudWlkIH19XG4gICAgICA8L3NwYW4+XG4gICAgPC9kaXY+XG5cbiAgICA8ZGl2IGNsYXNzPVwicHJvcGVydHlcIj5cbiAgICAgIDxsYWJlbD57eyAnb3JnVXNlckdyb3VwLm9yZ1VuaXQnIHwgY3hUcmFuc2xhdGUgfX08L2xhYmVsPlxuICAgICAgPGFcbiAgICAgICAgY2xhc3M9XCJ2YWx1ZVwiXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cIlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGN4Um91dGU6ICdvcmdVbml0RGV0YWlscycsXG4gICAgICAgICAgICBwYXJhbXM6IG1vZGVsLm9yZ1VuaXRcbiAgICAgICAgICB9IHwgY3hVcmxcbiAgICAgICAgXCJcbiAgICAgID5cbiAgICAgICAge3sgbW9kZWwub3JnVW5pdD8ubmFtZSB9fVxuICAgICAgPC9hPlxuICAgIDwvZGl2PlxuICA8L3NlY3Rpb24+XG5cbiAgPHNlY3Rpb24gbWFpbiBjbGFzcz1cImxpbmstbGlzdFwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC51aWRcIj5cbiAgICAgIDxhXG4gICAgICAgIGNsYXNzPVwibGlua1wiXG4gICAgICAgIFtyb3V0ZXJMaW5rXT1cInsgY3hSb3V0ZTogJ29yZ1VzZXJHcm91cFVzZXJzJywgcGFyYW1zOiBtb2RlbCB9IHwgY3hVcmxcIlxuICAgICAgICByb3V0ZXJMaW5rQWN0aXZlPVwiaXMtY3VycmVudFwiXG4gICAgICA+XG4gICAgICAgIHt7ICdvcmdVc2VyR3JvdXAubGlua3MudXNlcicgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgPC9hPlxuICAgICAgPGFcbiAgICAgICAgY2xhc3M9XCJsaW5rXCJcbiAgICAgICAgW3JvdXRlckxpbmtdPVwiXG4gICAgICAgICAgeyBjeFJvdXRlOiAnb3JnVXNlckdyb3VwUGVybWlzc2lvbnMnLCBwYXJhbXM6IG1vZGVsIH0gfCBjeFVybFxuICAgICAgICBcIlxuICAgICAgICByb3V0ZXJMaW5rQWN0aXZlPVwiaXMtY3VycmVudFwiXG4gICAgICA+XG4gICAgICAgIHt7ICdvcmdVc2VyR3JvdXAubGlua3MucGVybWlzc2lvbicgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgPC9hPlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L3NlY3Rpb24+XG48L2N4LW9yZy1jYXJkPlxuIl19