import { ChangeDetectionStrategy, Component } from '@angular/core';
import { CostCenterItemService } from '../../../../cost-center/services/cost-center-item.service';
import { UnitCostCenterItemService } from './unit-cost-center-item.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../services/current-unit.service";
import * as i2 from "../../../../cost-center/form/cost-center-form.component";
import * as i3 from "@angular/common";
export class UnitCostCenterCreateComponent {
    constructor(unitService) {
        this.unitService = unitService;
        this.unitKey$ = this.unitService.key$;
    }
}
UnitCostCenterCreateComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitCostCenterCreateComponent, deps: [{ token: i1.CurrentUnitService }], target: i0.ɵɵFactoryTarget.Component });
UnitCostCenterCreateComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: UnitCostCenterCreateComponent, selector: "cx-org-unit-cost-center-create", host: { classAttribute: "content-wrapper" }, providers: [
        // we provide a specific version of the `CostCenterItemService` to
        // let the form component work with unit cost centers.
        {
            provide: CostCenterItemService,
            useExisting: UnitCostCenterItemService,
        },
    ], ngImport: i0, template: "<cx-org-cost-center-form [unitKey]=\"unitKey$ | async\"></cx-org-cost-center-form>\n", components: [{ type: i2.CostCenterFormComponent, selector: "cx-org-cost-center-form", inputs: ["unitKey"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UnitCostCenterCreateComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-org-unit-cost-center-create',
                    templateUrl: './unit-cost-center-create.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    host: { class: 'content-wrapper' },
                    providers: [
                        // we provide a specific version of the `CostCenterItemService` to
                        // let the form component work with unit cost centers.
                        {
                            provide: CostCenterItemService,
                            useExisting: UnitCostCenterItemService,
                        },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentUnitService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pdC1jb3N0LWNlbnRlci1jcmVhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9jb21wb25lbnRzL3VuaXQvbGlua3MvY29zdC1jZW50ZXJzL2NyZWF0ZS91bml0LWNvc3QtY2VudGVyLWNyZWF0ZS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvdW5pdC9saW5rcy9jb3N0LWNlbnRlcnMvY3JlYXRlL3VuaXQtY29zdC1jZW50ZXItY3JlYXRlLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkRBQTJELENBQUM7QUFFbEcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0saUNBQWlDLENBQUM7Ozs7O0FBZ0I1RSxNQUFNLE9BQU8sNkJBQTZCO0lBRXhDLFlBQXNCLFdBQStCO1FBQS9CLGdCQUFXLEdBQVgsV0FBVyxDQUFvQjtRQURyRCxhQUFRLEdBQXVCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDO0lBQ0csQ0FBQzs7MEhBRjlDLDZCQUE2Qjs4R0FBN0IsNkJBQTZCLHNHQVQ3QjtRQUNULGtFQUFrRTtRQUNsRSxzREFBc0Q7UUFDdEQ7WUFDRSxPQUFPLEVBQUUscUJBQXFCO1lBQzlCLFdBQVcsRUFBRSx5QkFBeUI7U0FDdkM7S0FDRiwwQkNsQkgsc0ZBQ0E7MkZEbUJhLDZCQUE2QjtrQkFkekMsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZ0NBQWdDO29CQUMxQyxXQUFXLEVBQUUsMENBQTBDO29CQUN2RCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtvQkFDL0MsSUFBSSxFQUFFLEVBQUUsS0FBSyxFQUFFLGlCQUFpQixFQUFFO29CQUNsQyxTQUFTLEVBQUU7d0JBQ1Qsa0VBQWtFO3dCQUNsRSxzREFBc0Q7d0JBQ3REOzRCQUNFLE9BQU8sRUFBRSxxQkFBcUI7NEJBQzlCLFdBQVcsRUFBRSx5QkFBeUI7eUJBQ3ZDO3FCQUNGO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQ29zdENlbnRlckl0ZW1TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vY29zdC1jZW50ZXIvc2VydmljZXMvY29zdC1jZW50ZXItaXRlbS5zZXJ2aWNlJztcbmltcG9ydCB7IEN1cnJlbnRVbml0U2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3NlcnZpY2VzL2N1cnJlbnQtdW5pdC5zZXJ2aWNlJztcbmltcG9ydCB7IFVuaXRDb3N0Q2VudGVySXRlbVNlcnZpY2UgfSBmcm9tICcuL3VuaXQtY29zdC1jZW50ZXItaXRlbS5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtb3JnLXVuaXQtY29zdC1jZW50ZXItY3JlYXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3VuaXQtY29zdC1jZW50ZXItY3JlYXRlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIGhvc3Q6IHsgY2xhc3M6ICdjb250ZW50LXdyYXBwZXInIH0sXG4gIHByb3ZpZGVyczogW1xuICAgIC8vIHdlIHByb3ZpZGUgYSBzcGVjaWZpYyB2ZXJzaW9uIG9mIHRoZSBgQ29zdENlbnRlckl0ZW1TZXJ2aWNlYCB0b1xuICAgIC8vIGxldCB0aGUgZm9ybSBjb21wb25lbnQgd29yayB3aXRoIHVuaXQgY29zdCBjZW50ZXJzLlxuICAgIHtcbiAgICAgIHByb3ZpZGU6IENvc3RDZW50ZXJJdGVtU2VydmljZSxcbiAgICAgIHVzZUV4aXN0aW5nOiBVbml0Q29zdENlbnRlckl0ZW1TZXJ2aWNlLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFVuaXRDb3N0Q2VudGVyQ3JlYXRlQ29tcG9uZW50IHtcbiAgdW5pdEtleSQ6IE9ic2VydmFibGU8c3RyaW5nPiA9IHRoaXMudW5pdFNlcnZpY2Uua2V5JDtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHVuaXRTZXJ2aWNlOiBDdXJyZW50VW5pdFNlcnZpY2UpIHt9XG59XG4iLCI8Y3gtb3JnLWNvc3QtY2VudGVyLWZvcm0gW3VuaXRLZXldPVwidW5pdEtleSQgfCBhc3luY1wiPjwvY3gtb3JnLWNvc3QtY2VudGVyLWZvcm0+XG4iXX0=