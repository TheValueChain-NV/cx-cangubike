import { Injectable } from '@angular/core';
import { ROUTE_PARAMS } from '@spartacus/organization/administration/root';
import { CurrentItemService } from '../../shared/current-item.service';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "@spartacus/organization/administration/core";
export class CurrentUnitService extends CurrentItemService {
    constructor(routingService, orgUnitService) {
        super(routingService);
        this.routingService = routingService;
        this.orgUnitService = orgUnitService;
    }
    getParamKey() {
        return ROUTE_PARAMS.unitCode;
    }
    getItem(code) {
        return this.orgUnitService.get(code);
    }
    getError(code) {
        return this.orgUnitService.getErrorState(code);
    }
}
CurrentUnitService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUnitService, deps: [{ token: i1.RoutingService }, { token: i2.OrgUnitService }], target: i0.ɵɵFactoryTarget.Injectable });
CurrentUnitService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUnitService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CurrentUnitService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.RoutingService }, { type: i2.OrgUnitService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VycmVudC11bml0LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JnYW5pemF0aW9uL2FkbWluaXN0cmF0aW9uL2NvbXBvbmVudHMvdW5pdC9zZXJ2aWNlcy9jdXJyZW50LXVuaXQuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw2Q0FBNkMsQ0FBQztBQUUzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQzs7OztBQUt2RSxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsa0JBQTJCO0lBQ2pFLFlBQ1ksY0FBOEIsRUFDOUIsY0FBOEI7UUFFeEMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBSFosbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtJQUcxQyxDQUFDO0lBRVMsV0FBVztRQUNuQixPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUM7SUFDL0IsQ0FBQztJQUVTLE9BQU8sQ0FBQyxJQUFZO1FBQzVCLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELFFBQVEsQ0FBQyxJQUFZO1FBQ25CLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakQsQ0FBQzs7K0dBbEJVLGtCQUFrQjttSEFBbEIsa0JBQWtCLGNBRmpCLE1BQU07MkZBRVAsa0JBQWtCO2tCQUg5QixVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEIyQlVuaXQsIFJvdXRpbmdTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9yZ1VuaXRTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9vcmdhbml6YXRpb24vYWRtaW5pc3RyYXRpb24vY29yZSc7XG5pbXBvcnQgeyBST1VURV9QQVJBTVMgfSBmcm9tICdAc3BhcnRhY3VzL29yZ2FuaXphdGlvbi9hZG1pbmlzdHJhdGlvbi9yb290JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEN1cnJlbnRJdGVtU2VydmljZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9jdXJyZW50LWl0ZW0uc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBDdXJyZW50VW5pdFNlcnZpY2UgZXh0ZW5kcyBDdXJyZW50SXRlbVNlcnZpY2U8QjJCVW5pdD4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgcm91dGluZ1NlcnZpY2U6IFJvdXRpbmdTZXJ2aWNlLFxuICAgIHByb3RlY3RlZCBvcmdVbml0U2VydmljZTogT3JnVW5pdFNlcnZpY2VcbiAgKSB7XG4gICAgc3VwZXIocm91dGluZ1NlcnZpY2UpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGdldFBhcmFtS2V5KCkge1xuICAgIHJldHVybiBST1VURV9QQVJBTVMudW5pdENvZGU7XG4gIH1cblxuICBwcm90ZWN0ZWQgZ2V0SXRlbShjb2RlOiBzdHJpbmcpOiBPYnNlcnZhYmxlPEIyQlVuaXQ+IHtcbiAgICByZXR1cm4gdGhpcy5vcmdVbml0U2VydmljZS5nZXQoY29kZSk7XG4gIH1cblxuICBnZXRFcnJvcihjb2RlOiBzdHJpbmcpOiBPYnNlcnZhYmxlPGJvb2xlYW4+IHtcbiAgICByZXR1cm4gdGhpcy5vcmdVbml0U2VydmljZS5nZXRFcnJvclN0YXRlKGNvZGUpO1xuICB9XG59XG4iXX0=