import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./order-approval.adapter";
export class OrderApprovalConnector {
    constructor(adapter) {
        this.adapter = adapter;
    }
    get(userId, orderApprovalCode) {
        return this.adapter.load(userId, orderApprovalCode);
    }
    getList(userId, params) {
        return this.adapter.loadList(userId, params);
    }
    makeDecision(userId, orderApprovalCode, orderApprovalDecision) {
        return this.adapter.makeDecision(userId, orderApprovalCode, orderApprovalDecision);
    }
}
OrderApprovalConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderApprovalConnector, deps: [{ token: i1.OrderApprovalAdapter }], target: i0.ɵɵFactoryTarget.Injectable });
OrderApprovalConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderApprovalConnector, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderApprovalConnector, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.OrderApprovalAdapter }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItYXBwcm92YWwuY29ubmVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZ2FuaXphdGlvbi9vcmRlci1hcHByb3ZhbC9jb3JlL2Nvbm5lY3RvcnMvb3JkZXItYXBwcm92YWwuY29ubmVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQVkzQyxNQUFNLE9BQU8sc0JBQXNCO0lBQ2pDLFlBQXNCLE9BQTZCO1FBQTdCLFlBQU8sR0FBUCxPQUFPLENBQXNCO0lBQUcsQ0FBQztJQUV2RCxHQUFHLENBQUMsTUFBYyxFQUFFLGlCQUF5QjtRQUMzQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3RELENBQUM7SUFFRCxPQUFPLENBQ0wsTUFBYyxFQUNkLE1BQXFCO1FBRXJCLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFRCxZQUFZLENBQ1YsTUFBYyxFQUNkLGlCQUF5QixFQUN6QixxQkFBNEM7UUFFNUMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FDOUIsTUFBTSxFQUNOLGlCQUFpQixFQUNqQixxQkFBcUIsQ0FDdEIsQ0FBQztJQUNKLENBQUM7O21IQXhCVSxzQkFBc0I7dUhBQXRCLHNCQUFzQixjQUZyQixNQUFNOzJGQUVQLHNCQUFzQjtrQkFIbEMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbnRpdGllc01vZGVsLCBTZWFyY2hDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgT3JkZXJBcHByb3ZhbCxcbiAgT3JkZXJBcHByb3ZhbERlY2lzaW9uLFxufSBmcm9tICcuLi9tb2RlbC9vcmRlci1hcHByb3ZhbC5tb2RlbCc7XG5pbXBvcnQgeyBPcmRlckFwcHJvdmFsQWRhcHRlciB9IGZyb20gJy4vb3JkZXItYXBwcm92YWwuYWRhcHRlcic7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBPcmRlckFwcHJvdmFsQ29ubmVjdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGFkYXB0ZXI6IE9yZGVyQXBwcm92YWxBZGFwdGVyKSB7fVxuXG4gIGdldCh1c2VySWQ6IHN0cmluZywgb3JkZXJBcHByb3ZhbENvZGU6IHN0cmluZyk6IE9ic2VydmFibGU8T3JkZXJBcHByb3ZhbD4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIubG9hZCh1c2VySWQsIG9yZGVyQXBwcm92YWxDb2RlKTtcbiAgfVxuXG4gIGdldExpc3QoXG4gICAgdXNlcklkOiBzdHJpbmcsXG4gICAgcGFyYW1zPzogU2VhcmNoQ29uZmlnXG4gICk6IE9ic2VydmFibGU8RW50aXRpZXNNb2RlbDxPcmRlckFwcHJvdmFsPj4ge1xuICAgIHJldHVybiB0aGlzLmFkYXB0ZXIubG9hZExpc3QodXNlcklkLCBwYXJhbXMpO1xuICB9XG5cbiAgbWFrZURlY2lzaW9uKFxuICAgIHVzZXJJZDogc3RyaW5nLFxuICAgIG9yZGVyQXBwcm92YWxDb2RlOiBzdHJpbmcsXG4gICAgb3JkZXJBcHByb3ZhbERlY2lzaW9uOiBPcmRlckFwcHJvdmFsRGVjaXNpb25cbiAgKTogT2JzZXJ2YWJsZTxPcmRlckFwcHJvdmFsRGVjaXNpb24+IHtcbiAgICByZXR1cm4gdGhpcy5hZGFwdGVyLm1ha2VEZWNpc2lvbihcbiAgICAgIHVzZXJJZCxcbiAgICAgIG9yZGVyQXBwcm92YWxDb2RlLFxuICAgICAgb3JkZXJBcHByb3ZhbERlY2lzaW9uXG4gICAgKTtcbiAgfVxufVxuIl19