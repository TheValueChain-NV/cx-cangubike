{"version":3,"file":"spartacus-organization-administration-components.js","sources":["../../../feature-libs/organization/administration/components/shared/current-item.service.ts","../../../feature-libs/organization/administration/components/shared/form/form.service.ts","../../../feature-libs/organization/administration/components/shared/item.service.ts","../../../feature-libs/organization/administration/components/shared/message/services/message.service.ts","../../../feature-libs/organization/administration/components/shared/item-active.directive.ts","../../../feature-libs/organization/administration/components/shared/item-active.module.ts","../../../feature-libs/organization/administration/components/shared/message/message.model.ts","../../../feature-libs/organization/administration/components/shared/message/base-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.component.html","../../../feature-libs/organization/administration/components/shared/message/services/message-render.service.ts","../../../feature-libs/organization/administration/components/shared/message/message.component.ts","../../../feature-libs/organization/administration/components/shared/message/message.component.html","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.module.ts","../../../feature-libs/organization/administration/components/shared/message/message.module.ts","../../../feature-libs/organization/administration/components/shared/card/card.component.ts","../../../feature-libs/organization/administration/components/shared/card/card.component.html","../../../feature-libs/organization/administration/components/shared/card/card.module.ts","../../../feature-libs/organization/administration/components/shared/form/form.component.ts","../../../feature-libs/organization/administration/components/shared/form/form.component.html","../../../feature-libs/organization/administration/components/shared/form/form.module.ts","../../../feature-libs/organization/administration/components/shared/list/list.service.ts","../../../feature-libs/organization/administration/components/shared/list/list.component.ts","../../../feature-libs/organization/administration/components/shared/list/list.component.html","../../../feature-libs/organization/administration/components/shared/list/list.module.ts","../../../feature-libs/organization/administration/components/shared/table/cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/cell.component.html","../../../feature-libs/organization/administration/components/shared/sub-list/assign-cell.component.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.component.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.component.html","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.module.ts","../../../feature-libs/organization/administration/components/shared/shared-organization.module.ts","../../../feature-libs/organization/administration/components/constants.ts","../../../feature-libs/organization/administration/components/shared/item-exists.directive.ts","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.component.html","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.service.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.component.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.component.html","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.module.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.module.ts","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.component.ts","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.component.html","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.module.ts","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.component.ts","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.component.html","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.module.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.service.ts","../../../feature-libs/organization/administration/components/shared/table/active-link/active-link-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/amount/amount-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/date-range/date-range-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/date-range/date-range-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/limit/limit-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/limit/limit-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/roles/roles-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/roles/roles-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/status/status-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/status/status-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/unit/unit-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/cell.module.ts","../../../feature-libs/organization/administration/components/shared/organization.model.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.component.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.component.html","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.service.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.component.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.component.html","../../../feature-libs/organization/administration/components/budget/services/current-budget.service.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.service.ts","../../../feature-libs/organization/administration/components/budget/services/budget-item.service.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.component.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.component.html","../../../feature-libs/organization/administration/components/shared/utility/entity-code.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.component.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.component.html","../../../feature-libs/organization/administration/components/budget/services/budget-list.service.ts","../../../feature-libs/organization/administration/components/budget/services/budget-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/budget/budget.config.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.module.ts","../../../feature-libs/organization/administration/components/shared/item-exists.module.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.module.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.module.ts","../../../feature-libs/organization/administration/components/budget/budget-components.module.ts","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.component.ts","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.component.html","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.module.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.component.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.component.html","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.component.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.component.html","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.module.ts","../../../feature-libs/organization/administration/components/cost-center/services/current-cost-center.service.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.service.ts","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-item.service.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.component.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.component.html","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.component.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.component.html","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/cost-center/cost-center.config.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.module.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.module.ts","../../../feature-libs/organization/administration/components/cost-center/cost-center-components.module.ts","../../../feature-libs/organization/administration/components/permission/services/current-permission.service.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.service.ts","../../../feature-libs/organization/administration/components/permission/services/permission-item.service.ts","../../../feature-libs/organization/administration/components/permission/details/permission-details.component.ts","../../../feature-libs/organization/administration/components/permission/details/permission-details.component.html","../../../feature-libs/organization/administration/components/permission/details/permission-details.module.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.component.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.component.html","../../../feature-libs/organization/administration/components/permission/form/permission-form.module.ts","../../../feature-libs/organization/administration/components/permission/services/permission-list.service.ts","../../../feature-libs/organization/administration/components/permission/services/permission-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/permission/permission.config.ts","../../../feature-libs/organization/administration/components/permission/permission-components.module.ts","../../../feature-libs/organization/administration/components/unit/services/current-unit.service.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.service.ts","../../../feature-libs/organization/administration/components/unit/services/unit-item.service.ts","../../../feature-libs/organization/administration/components/unit/details/unit-details.component.ts","../../../feature-libs/organization/administration/components/unit/details/unit-details.component.html","../../../feature-libs/organization/administration/components/unit/details/unit-details.module.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.component.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.component.html","../../../feature-libs/organization/administration/components/unit/form/unit-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/services/current-unit-address.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/services/unit-address-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/unit-address.module.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.component.html","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.component.html","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.component.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.component.html","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.module.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.service.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.component.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.component.html","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/services/unit-user-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.component.html","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/services/current-unit-user.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles-form.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles-item.service.ts","../../../feature-libs/organization/administration/components/user/services/current-user.service.ts","../../../feature-libs/organization/administration/components/user/form/user-form.service.ts","../../../feature-libs/organization/administration/components/user/services/user-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.component.html","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/unit-user-list.module.ts","../../../feature-libs/organization/administration/components/unit/services/unit-tree.model.ts","../../../feature-libs/organization/administration/components/unit/services/unit-tree.service.ts","../../../feature-libs/organization/administration/components/unit/list/unit-list.component.ts","../../../feature-libs/organization/administration/components/unit/list/unit-list.component.html","../../../feature-libs/organization/administration/components/unit/list/toggle-link/toggle-link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/list/toggle-link/toggle-link-cell.component.html","../../../feature-libs/organization/administration/components/unit/list/unit-list.module.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.component.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.component.html","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.component.ts","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.component.html","../../../feature-libs/organization/administration/components/unit/links/children/create/current-unit-child.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.component.html","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.module.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.component.html","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-item.service.ts","../../../feature-libs/organization/administration/components/user/form/user-form.component.ts","../../../feature-libs/organization/administration/components/user/form/user-form.component.html","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.component.html","../../../feature-libs/organization/administration/components/user/form/user-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.module.ts","../../../feature-libs/organization/administration/components/unit/services/unit-address-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/unit/services/unit-list.service.ts","../../../feature-libs/organization/administration/components/unit/services/unit-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/unit/units.config.ts","../../../feature-libs/organization/administration/components/unit/units-components.module.ts","../../../feature-libs/organization/administration/components/user-group/services/current-user-group.service.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.service.ts","../../../feature-libs/organization/administration/components/user-group/services/user-group-item.service.ts","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.component.ts","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.component.html","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.module.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.component.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.component.html","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.module.ts","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.service.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.service.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.component.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.component.html","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.component.ts","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.component.html","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.module.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.component.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.component.html","../../../feature-libs/organization/administration/components/user-group/services/user-group-list.service.ts","../../../feature-libs/organization/administration/components/user-group/services/user-group-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.service.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.service.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.component.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.component.html","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.component.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.component.html","../../../feature-libs/organization/administration/components/user-group/user-group.config.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.module.ts","../../../feature-libs/organization/administration/components/user-group/user-group-components.module.ts","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.service.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.service.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.component.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.component.html","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.component.ts","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.component.html","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.module.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.service.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.component.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.component.html","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.module.ts","../../../feature-libs/organization/administration/components/user/details/user-details.component.ts","../../../feature-libs/organization/administration/components/user/details/user-details.component.html","../../../feature-libs/organization/administration/components/user/details/user-details.module.ts","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.service.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.service.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.component.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.component.html","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.component.ts","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.component.html","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.module.ts","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.service.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.service.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.component.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.component.html","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.component.ts","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.component.html","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.module.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.component.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.component.html","../../../feature-libs/organization/administration/components/user/services/user-list.service.ts","../../../feature-libs/organization/administration/components/user/services/user-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/user/user.config.ts","../../../feature-libs/organization/administration/components/user/user-components.module.ts","../../../feature-libs/organization/administration/components/administration-components.module.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.module.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.module.ts","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.module.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.module.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.module.ts","../../../feature-libs/organization/administration/components/spartacus-organization-administration-components.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, switchMap } from 'rxjs/operators';\n\n/**\n * Abstract Base class for all organization entities. This class simplifies\n * the various entity implementation, that only differ by dependencies and\n * data model.\n */\n@Injectable()\nexport abstract class CurrentItemService<T> {\n  constructor(protected routingService: RoutingService) {}\n\n  /**\n   * Observes the key for the active organization item. The active key is observed\n   * from the list of route parameters. The full route parameter list is evaluated,\n   * including child routes.\n   *\n   * To allow for specific (\"semantic\") route parameters, the route parameter _key_ is\n   * retrieved from the `getParamKey`.\n   */\n  readonly key$: Observable<string> = this.routingService\n    .getParams()\n    .pipe(pluck(this.getParamKey()), distinctUntilChanged());\n\n  /**\n   * Observes the active item.\n   *\n   * The active item is loaded by the active `key$`.\n   */\n  readonly item$: Observable<T> = this.key$.pipe(\n    switchMap((code: string) => (code ? this.getItem(code) : of(null)))\n  );\n\n  /**\n   * Observes the b2bUnit based on the unitCode route parameter.\n   */\n  readonly b2bUnit$: Observable<string> = this.routingService\n    .getParams()\n    .pipe(pluck(ROUTE_PARAMS.unitCode), distinctUntilChanged());\n\n  /**\n   * Returns the route parameter key for the item. The route parameter key differs\n   * per item, so that route parameters are distinguished in the route configuration.\n   */\n  protected abstract getParamKey(): string;\n\n  /**\n   * Emits the current model or null, if there is no model available\n   */\n  protected abstract getItem(...params: any[]): Observable<T>;\n\n  getRouterParam(paramKey: string): Observable<string> {\n    return this.routingService\n      .getParams()\n      .pipe(map((params) => params[paramKey]));\n  }\n\n  abstract getError(_key: string): Observable<boolean>;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BaseItem } from '../organization.model';\n\n@Injectable()\nexport abstract class FormService<T> {\n  protected form: FormGroup;\n\n  /**\n   * Builds the form structure.\n   */\n  protected abstract build(item?: T): void;\n\n  getForm(item?: T): FormGroup {\n    if (this.form && !!item) {\n      this.patchData(item);\n      return this.form;\n    }\n\n    if (!this.form) {\n      this.build(item);\n    }\n\n    // while we should be able to reset with initial value, this doesn't always work\n    // hence, we're patching afterwards.\n    this.form.reset();\n\n    this.form.enable();\n    this.patchData(item);\n    return this.form;\n  }\n\n  protected patchData(item?: T): void {\n    this.toggleFreeze(item);\n    this.form.patchValue({ ...this.defaultValue, ...item });\n  }\n\n  private toggleFreeze(item?: T): void {\n    if (this.form.enabled && (item as BaseItem)?.active === false) {\n      this.form.disable();\n    }\n    if (this.form.disabled && (item as BaseItem)?.active === true) {\n      this.form.enable();\n    }\n  }\n  /**\n   * returns the default form value.\n   */\n  protected get defaultValue(): T {\n    return {} as T;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { FormUtils } from '@spartacus/storefront';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CurrentItemService } from './current-item.service';\nimport { FormService } from './form/form.service';\n\n/**\n * Provides CRUD operations for all organization entities.\n *\n * This base class simplifies the various entity implementation, and ensures a consistent\n * component implementation.\n */\n@Injectable()\nexport abstract class ItemService<T> {\n  constructor(\n    protected currentItemService: CurrentItemService<T>,\n    protected routingService: RoutingService,\n    protected formService: FormService<T>\n  ) {}\n\n  key$ = this.currentItemService.key$;\n  current$ = this.currentItemService.item$;\n\n  isInEditMode$: Observable<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Returns the current business unit code.\n   *\n   * The current unit is driven by the route parameter.\n   */\n  unit$: Observable<string> = this.currentItemService.b2bUnit$;\n\n  error$: Observable<boolean> = this.key$.pipe(\n    switchMap((key) => this.currentItemService.getError(key))\n  );\n\n  save(form: FormGroup, key?: string): Observable<OrganizationItemStatus<T>> {\n    if (form.invalid) {\n      form.markAllAsTouched();\n      FormUtils.deepUpdateValueAndValidity(form);\n      return of();\n    } else {\n      /**\n       * This assignment is needed to re-use form value after `form.disable()` call\n       * In some cases value was converted by `form.disable()` into empty object\n       */\n      const formValue = form.value;\n      form.disable();\n\n      return key ? this.update(key, formValue) : this.create(formValue);\n    }\n  }\n\n  /**\n   * Deletes an item.\n   */\n  delete?(\n    key: string,\n    additionalParam?: string\n  ): Observable<OrganizationItemStatus<T>>;\n  /**\n   * Loads an item.\n   */\n  abstract load(...params: any[]): Observable<T>;\n\n  /**\n   * Creates a new item.\n   */\n  protected abstract create(value: T): Observable<OrganizationItemStatus<T>>;\n\n  /**\n   * Updates an existing item.\n   */\n  abstract update(key: string, value: T): Observable<OrganizationItemStatus<T>>;\n\n  /**\n   * Returns the detailed cxRoute for the organization item.\n   */\n  protected abstract getDetailsRoute(): string;\n\n  getForm(item?: T): FormGroup {\n    return this.formService.getForm(item);\n  }\n\n  /**\n   * Launches the detailed route for the given item item.\n   */\n  launchDetails(item: T): void {\n    const cxRoute = this.getDetailsRoute();\n    const params = this.buildRouteParams(item);\n    if (cxRoute && item && Object.keys(item).length > 0) {\n      this.routingService.go({ cxRoute, params });\n    }\n  }\n\n  /**\n   * Returns the route parameters that are used when launching the\n   * details page. The route parameters default to the actual item,\n   * but can be further populated in implementations.\n   *\n   * Customized route parameters are useful in case the actual item\n   * doesn't match the expected route parameters. You can manipulate\n   * the parameter data.\n   */\n  protected buildRouteParams(item: T): any {\n    return item;\n  }\n\n  getRouterParam(key: string): Observable<string> {\n    return this.currentItemService.getRouterParam(key);\n  }\n\n  /**\n   * Sets to true when the user is on the entity item form page\n   */\n  setEditMode(isInEdit: boolean) {\n    (this.isInEditMode$ as BehaviorSubject<boolean>).next(isInEdit);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { MessageData, MessageEventData } from '../message.model';\n\nconst DEFAULT_INFO_TIMEOUT = 3000;\n\n@Injectable()\nexport class MessageService<\n  O extends MessageEventData = MessageEventData,\n  T extends MessageData<O> = MessageData<O>\n> {\n  protected data$: ReplaySubject<MessageData> = new ReplaySubject();\n\n  get(): Observable<MessageData> {\n    return this.data$;\n  }\n\n  add(message: T): Subject<O> {\n    message = { ...this.getDefaultMessage(message), ...message };\n    message.events = new Subject<O>();\n    this.data$.next(message);\n    return message.events;\n  }\n\n  close(message: Subject<MessageEventData>) {\n    message.next({ close: true });\n  }\n\n  /**\n   * Sets the message type to INFO, and adds a default timeout\n   * for info messages.\n   */\n  protected getDefaultMessage(message: T): MessageData {\n    const defaultMessage: MessageData = {\n      type: GlobalMessageType.MSG_TYPE_INFO,\n    };\n    if (\n      !message.type ||\n      (message.type === GlobalMessageType.MSG_TYPE_INFO && !message.timeout)\n    ) {\n      defaultMessage.timeout = DEFAULT_INFO_TIMEOUT;\n    }\n    return defaultMessage;\n  }\n\n  clear(): void {\n    this.data$.next();\n  }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { ItemService } from './item.service';\nimport { MessageService } from './message/services/message.service';\nimport { BaseItem } from './organization.model';\n\n@Directive({\n  selector: '[cxOrgItemActive]',\n})\nexport class ItemActiveDirective<T = BaseItem> implements OnInit, OnDestroy {\n  protected subscription;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.itemService.current$\n      .pipe(\n        distinctUntilChanged(\n          (previous: BaseItem, current: BaseItem) =>\n            previous?.active === current?.active\n        ),\n        filter((item) => item && item?.active === false)\n      )\n      .subscribe((item) => this.handleDisabledItems(item));\n  }\n\n  protected handleDisabledItems(item: BaseItem) {\n    this.messageService.add({\n      message: {\n        key: 'organization.notification.disabled',\n        params: { item },\n      },\n      type: GlobalMessageType.MSG_TYPE_ERROR,\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemActiveDirective } from './item-active.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ItemActiveDirective],\n  exports: [ItemActiveDirective],\n})\nexport class ItemActiveModule {}\n","import { Type } from '@angular/core';\nimport { GlobalMessageType, Translatable } from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Subject } from 'rxjs';\nimport { BaseMessageComponent } from './base-message.component';\n\nexport class MessageData<\n  O extends MessageEventData = MessageEventData,\n  T extends BaseMessageComponent = BaseMessageComponent\n> {\n  /**\n   * The message contains the `translatable` message that is rendered\n   * inside the message component.\n   */\n  message?: Translatable;\n  messageTitle?: Translatable;\n  cancel?: Translatable;\n  confirm?: Translatable;\n\n  /**\n   * Icon used to display next to the message.\n   */\n  messageIcon?: ICON_TYPE;\n\n  /**\n   * The type of message is used to render the style of the message.\n   */\n  type?: GlobalMessageType;\n\n  /**\n   * The timeout is used to remove the message component automatically\n   * without any user interaction.\n   */\n  timeout?: number;\n\n  /**\n   * The (optional) component is rendered inside message component.\n   *\n   * If no specific component is given, the `NotificationMessageComponent` is used.\n   */\n  component?: Type<T>;\n\n  /**\n   * The event data subject can be used to publish and observe custom events.\n   */\n  events?: Subject<O>;\n}\n\nexport interface MessageEventData {\n  close?: boolean;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  HostBinding,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { GlobalMessageType, Translatable } from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { MessageData } from './message.model';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class BaseMessageComponent implements OnInit {\n  @HostBinding('class') type: string;\n  @HostBinding('class.terminated') terminated = false;\n\n  message: Translatable;\n  messageTitle?: Translatable;\n\n  /**\n   * Icon used to display next to the message.\n   */\n  messageIcon: ICON_TYPE;\n\n  constructor(\n    protected messageData: MessageData,\n    @Inject(PLATFORM_ID) protected platformId: any\n  ) {}\n\n  ngOnInit() {\n    this.message = this.messageData.message ?? {};\n    this.messageTitle = this.messageData.messageTitle;\n    this.type = this.resolveType();\n    this.messageIcon = this.messageData.messageIcon;\n\n    if (this.messageData.timeout) {\n      this.handleAutoHide();\n    }\n  }\n\n  close(): void {\n    this.messageData.events.next({ close: true });\n  }\n\n  protected resolveType(): string {\n    if (\n      !this.messageData.type ||\n      this.messageData.type === GlobalMessageType.MSG_TYPE_INFO\n    ) {\n      return 'info';\n    }\n    if (this.messageData.type === GlobalMessageType.MSG_TYPE_ERROR) {\n      return 'error';\n    }\n    if (this.messageData.type === GlobalMessageType.MSG_TYPE_WARNING) {\n      return 'warning';\n    }\n  }\n\n  protected handleAutoHide() {\n    if (isPlatformBrowser(this.platformId)) {\n      // we don't want to run this logic when doing SSR\n      setTimeout(() => {\n        this.close();\n      }, this.messageData.timeout);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { BaseMessageComponent } from '../base-message.component';\n\n@Component({\n  selector: 'cx-org-notification',\n  templateUrl: './notification-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationMessageComponent extends BaseMessageComponent {\n  closeIcon = ICON_TYPE.CLOSE;\n}\n","<div\n  class=\"inner\"\n  [cxFocus]=\"{ autofocus: true, focusOnEscape: true }\"\n  (esc)=\"close()\"\n>\n  <cx-icon *ngIf=\"messageIcon\" [type]=\"messageIcon\"></cx-icon>\n  <p>{{ message | cxTranslate }}</p>\n  <button class=\"close\" (click)=\"close()\" type=\"button\">\n    <cx-icon [type]=\"closeIcon\"></cx-icon>\n  </button>\n</div>\n","import {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport { MessageData } from '../message.model';\nimport { NotificationMessageComponent } from '../notification/notification-message.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageRenderService {\n  constructor(protected componentFactoryResolver: ComponentFactoryResolver) {}\n\n  getComponent(msg: MessageData): ComponentFactory<any> {\n    return this.componentFactoryResolver.resolveComponentFactory(\n      msg.component || NotificationMessageComponent\n    );\n  }\n\n  getInjector(componentData: MessageData, parent?: Injector): Injector {\n    return Injector.create({\n      providers: [\n        {\n          provide: MessageData,\n          useValue: componentData,\n        },\n      ],\n      parent,\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { BaseMessageComponent } from './base-message.component';\nimport { MessageData, MessageEventData } from './message.model';\nimport { MessageRenderService } from './services/message-render.service';\nimport { MessageService } from './services/message.service';\n\n@Component({\n  selector: 'cx-org-message',\n  templateUrl: './message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MessageComponent implements AfterViewInit, OnDestroy {\n  // We use a child view container ref, as creating components will become siblings.\n  // We like the message components to appear inside the `cx-org-message` instead.\n  @ViewChild('vcr', { read: ViewContainerRef }) vcr: ViewContainerRef;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected messageService: MessageService,\n    protected renderService: MessageRenderService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscription.add(\n      this.messageService.get().subscribe((msg) => {\n        if (msg) {\n          this.render(msg);\n        } else {\n          this.vcr?.clear();\n        }\n      })\n    );\n  }\n\n  protected render(msg: MessageData) {\n    const ref: ComponentRef<BaseMessageComponent> = this.vcr.createComponent(\n      this.renderService.getComponent(msg),\n      0,\n      this.renderService.getInjector(msg, this.vcr.injector)\n    );\n    ref.injector.get(ChangeDetectorRef).markForCheck();\n\n    this.subscription.add(\n      msg.events\n        .pipe(filter((event: MessageEventData) => !!event.close))\n        .subscribe(() => this.terminate(ref))\n    );\n  }\n\n  /**\n   * Terminates the message component in 2 steps. It starts to toggle the terminate\n   * state of the component and shortly after destroys the component completely. The\n   * termination state allows the CSS layer to play an animation before destroying.\n   */\n  protected terminate(ref: ComponentRef<BaseMessageComponent>) {\n    ref.instance.terminated = true;\n    ref.injector.get(ChangeDetectorRef).markForCheck();\n    setTimeout(() => {\n      ref.destroy();\n    }, 500);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container #vcr></ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { NotificationMessageComponent } from './notification-message.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, KeyboardFocusModule],\n  declarations: [NotificationMessageComponent],\n})\nexport class NotificationMessageModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MessageComponent } from './message.component';\nimport { NotificationMessageModule } from './notification/notification-message.module';\n\n@NgModule({\n  imports: [CommonModule, NotificationMessageModule],\n  declarations: [MessageComponent],\n  exports: [MessageComponent],\n})\nexport class MessageModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { ViewComponent } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../item.service';\nimport { MessageService } from '../message/services/message.service';\nimport { BaseItem } from '../organization.model';\nimport { ICON_TYPE } from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-card',\n  templateUrl: './card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [MessageService],\n})\nexport class CardComponent<T extends BaseItem> {\n  @Input() i18nRoot: string;\n  @Input() previous: boolean | string = true;\n  @Input() subtitle?: string;\n  @Input() showHint? = false;\n\n  protected itemKey;\n\n  iconTypes = ICON_TYPE;\n\n  item$: Observable<T> = this.itemService.current$.pipe(\n    tap((item) => this.refreshMessages(item))\n  );\n\n  @ViewChild(ViewComponent, { read: ViewComponent }) view: ViewComponent;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  /**\n   * The views are router based, which means if we close a view, the router outlet is\n   * cleaned immediately. To prevent this, we're closing the view manually, before\n   * navigating back.\n   */\n  closeView(event: MouseEvent) {\n    event.stopPropagation();\n    this.view.toggle(true);\n\n    setTimeout(() => {\n      (event.target as HTMLElement)?.parentElement.click();\n    }, 500);\n\n    return false;\n  }\n\n  get previousLabel(): string {\n    return this.previous as string;\n  }\n\n  protected refreshMessages(item: T) {\n    if (\n      this.itemKey !== undefined &&\n      item?.code !== this.itemKey &&\n      item?.uid !== this.itemKey &&\n      item?.customerId !== this.itemKey\n    ) {\n      this.messageService.clear();\n    }\n    this.itemKey = item?.code ?? item?.uid ?? item?.customerId;\n  }\n}\n","<cx-view class=\"card\">\n  <div class=\"header\">\n    <div class=\"title-bar\">\n      <div class=\"title\">\n        <h3>\n          {{ i18nRoot + '.title' | cxTranslate: { item: item$ | async } }}\n          <button\n            *ngIf=\"showHint\"\n            [cxPopover]=\"detailHint\"\n            [cxPopoverOptions]=\"{\n              placement: 'auto',\n              class: 'hint-popover',\n              appendToBody: true,\n              displayCloseButton: true\n            }\"\n          >\n            <cx-icon [type]=\"iconTypes.INFO\"> </cx-icon>\n          </button>\n        </h3>\n        <h4>\n          {{\n            subtitle ||\n              (i18nRoot + '.subtitle' | cxTranslate: { item: item$ | async })\n          }}\n        </h4>\n      </div>\n      <div class=\"actions\">\n        <ng-content select=\"[actions]\"></ng-content>\n      </div>\n    </div>\n    <a *ngIf=\"!!previous\" class=\"link close\" routerLink=\"../\">\n      <cx-icon\n        *ngIf=\"previous === true; else prevLabel\"\n        type=\"CLOSE\"\n        (click)=\"closeView($event)\"\n      ></cx-icon>\n      <ng-template #prevLabel>{{ previousLabel | cxTranslate }}</ng-template>\n    </a>\n  </div>\n\n  <div class=\"main\">\n    <cx-org-message></cx-org-message>\n    <ng-content select=\"[info]\"></ng-content>\n    <ng-content select=\"[main]\"></ng-content>\n  </div>\n</cx-view>\n\n<router-outlet></router-outlet>\n\n<ng-template #detailHint>\n  <p>\n    {{ i18nRoot + '.hint' | cxTranslate }}\n  </p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule, SplitViewModule } from '@spartacus/storefront';\nimport { MessageModule } from '../message/message.module';\nimport { CardComponent } from './card.component';\nimport { PopoverModule } from '@spartacus/storefront';\n/**\n * Provides a reusable card UI component for the organization split views.\n *\n * The component does not intend to provide a complete set of card features, it's just\n * a reusable component inside the organization UI.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    SplitViewModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    UrlModule,\n    MessageModule,\n    PopoverModule,\n  ],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { first, map, switchMap, take } from 'rxjs/operators';\nimport { CardComponent } from '../card/card.component';\nimport { ItemService } from '../item.service';\nimport { MessageService } from '../message/services/message.service';\n\nconst DISABLED_STATUS = 'DISABLED';\n\n/**\n * Reusable component for creating and editing organization items. The component does not\n * know anything about form specific.\n */\n@Component({\n  selector: 'cx-org-form',\n  templateUrl: './form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class FormComponent<T> implements OnInit, OnDestroy {\n  /**\n   * i18n root for all localizations. The i18n root key is suffixed with\n   * either `.edit` or `.create`, depending on the usage of the component.\n   */\n  @Input() i18nRoot: string;\n\n  @Input() animateBack = true;\n  @Input() subtitle?: string;\n\n  /**\n   * i18n key for the localizations.\n   */\n  i18n: string;\n\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    map((item) => {\n      this.setI18nRoot(item);\n\n      if (!item) {\n        // we trick the form builder...\n        item = {} as any;\n      }\n      return this.itemService.getForm(item);\n    })\n  );\n\n  /**\n   * To handle the case of receiving a negative response during creation an item\n   */\n  disabled$ = this.form$.pipe(\n    switchMap((form) => form.statusChanges),\n    map((status) => status === DISABLED_STATUS)\n  );\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  save(form: FormGroup): void {\n    this.itemService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          this.itemService.save(form, key).pipe(\n            take(1),\n            map((data) => ({\n              item: data.item,\n              status: data.status,\n              action: key ? 'update' : 'create',\n            }))\n          )\n        )\n      )\n      .subscribe(({ item, action, status }) => {\n        if (status === LoadStatus.SUCCESS) {\n          this.itemService.launchDetails(item);\n          this.notify(item, action);\n        }\n        form.enable();\n      });\n  }\n\n  protected notify(item: T, action: string) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.${action}`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n\n  protected setI18nRoot(item: T): void {\n    // concatenate the i18n root with .edit or .create suffix\n    this.i18n = this.i18nRoot + (item ? '.edit' : '.create');\n  }\n\n  back(event: MouseEvent, card: CardComponent<any>) {\n    if (this.animateBack) {\n      card.closeView(event);\n    }\n  }\n\n  ngOnInit() {\n    this.itemService.setEditMode(true);\n  }\n\n  ngOnDestroy() {\n    this.itemService.setEditMode(false);\n  }\n}\n","<form *ngIf=\"form$ | async as form\" (submit)=\"save(form)\">\n  <cx-org-card\n    #card\n    [previous]=\"false\"\n    [i18nRoot]=\"i18n\"\n    cxOrgItemActive\n    [subtitle]=\"subtitle\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <button\n      actions\n      class=\"button primary\"\n      [disabled]=\"form.disabled || (disabled$ | async)\"\n    >\n      {{ 'organization.save' | cxTranslate }}\n    </button>\n    <button actions class=\"link\" routerLink=\"../\" type=\"button\">\n      <!--\n        We leverage the soft-close feature from the split view, so that the animation\n        has time to kick in before the router outlet is deleted.\n       -->\n      <span (click)=\"back($event, card)\">{{\n        'organization.cancel' | cxTranslate\n      }}</span>\n    </button>\n\n    <section main class=\"details\">\n      <ng-content select=\"[main]\" ngProjectAs=\"[main]\"></ng-content>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ItemActiveModule } from '../item-active.module';\nimport { CardModule } from '../card/card.module';\nimport { MessageModule } from '../message/message.module';\nimport { MessageService } from '../message/services/message.service';\nimport { FormComponent } from './form.component';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    I18nModule,\n    RouterModule,\n    CardModule,\n    MessageModule,\n    ItemActiveModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FormComponent],\n  providers: [MessageService],\n  exports: [FormComponent],\n})\nexport class FormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  ResponsiveTableConfiguration,\n  TableLayout,\n  TableService,\n  TableStructure,\n} from '@spartacus/storefront';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { OrganizationTableType } from '../organization.model';\n\n/**\n * The `ListService` deals with the table structure, list data and\n * pagination of tables inside the b2b organization.\n *\n * @property {OrganizationTableType} tableType\n *   Used to load the table structure configuration and generate table outlets.\n * @property {PaginationModel} pagination$\n *   The pagination state of the listing.\n */\n\n@Injectable()\nexport abstract class ListService<T, P = PaginationModel> {\n  /**\n   * The default table structure is used to add the default configuration for all\n   * organization list related tables. This avoids a lot of boilerplate configuration.\n   */\n  protected defaultTableStructure: ResponsiveTableConfiguration = {\n    options: { layout: TableLayout.VERTICAL_STACKED },\n    lg: { options: { layout: TableLayout.VERTICAL } },\n  };\n\n  /**\n   * The ghost data contains an empty list of objects that is used in the UI\n   * to render the HTML elements.\n   *\n   * This list contains 10 items, so that the ghost will show 10 rows by default.\n   */\n  protected ghostData = { values: new Array(10) } as EntitiesModel<T>;\n\n  notification$: Subject<any> = new Subject();\n\n  /**\n   * The `viewType` is used to load the proper table configuration and localizations for the view.\n   *\n   * TODO: rename to `viewType`\n   */\n  protected abstract tableType: OrganizationTableType;\n\n  /**\n   * The domain type is used to bind fields to localized fields based on the domain.\n   * This type differs from the `viewType`, which is related to a specific view\n   * configuration.\n   */\n  protected _domainType: string;\n\n  get viewType(): OrganizationTableType {\n    return this.tableType;\n  }\n\n  get domainType(): string {\n    return this._domainType ?? this.viewType;\n  }\n\n  /**\n   * The pagination state of the listing.\n   *\n   * The pagination size defaults to 10, but can be overridden by the\n   * table configuration for each entity type.\n   */\n  protected pagination$: BehaviorSubject<P> = new BehaviorSubject({\n    pageSize: 10,\n  } as any as P);\n\n  constructor(protected tableService: TableService) {}\n\n  /**\n   * Indicates the unique key for the item model. The key is different for various\n   * organizations, i.e. `budget.code`, `user.uid`.\n   */\n  key(): string {\n    return 'code';\n  }\n\n  /**\n   * Loads the data by delegating to the `load` method, which must be implemented\n   * in specific implementations of this abstract class.\n   *\n   * The load method is streamed from the `pagination$` stream, which is initialized\n   * with default pagination and structure drive properties.\n   */\n  getData(...args: any): Observable<EntitiesModel<T>> {\n    return this.pagination$.pipe(\n      // we merge any configured pagination from the table structure\n      switchMap((pagination) =>\n        this.getStructure().pipe(\n          map((config) => ({ ...pagination, ...config.options?.pagination }))\n        )\n      ),\n      switchMap((pagination) => this.load(pagination, ...args)),\n      startWith(this.ghostData)\n    );\n  }\n\n  /**\n   * Returns the `TableStructure` for the `OrganizationTableType`.\n   *\n   * The table structure is build by the `TableService` based on configuration.\n   * The `defaultTableStructure` is deep merged as a fallback configuration.\n   */\n  getStructure(): Observable<TableStructure> {\n    return this.tableService.buildStructure(\n      this.viewType,\n      this.defaultTableStructure\n    );\n  }\n\n  /**\n   * Views the page.\n   */\n  view(pagination: P, nextPage?: number): void {\n    this.pagination$.next({ ...pagination, currentPage: nextPage });\n  }\n\n  /**\n   * Updates the sort code for the PaginationModel.\n   *\n   * The `currentPage` is reset to 0.\n   */\n  sort(pagination: P, _obsoleteSort?: string): void {\n    this.view(pagination, 0);\n  }\n\n  /**\n   * Indicates whether the given data equals to the ghost data.\n   *\n   * This is used to validate the initial loading state, which is\n   * different from the loading state; the loading state occurs\n   * while sorting and paginating, where as the initial loading state\n   * only happens at the very first load.\n   */\n  hasGhostData(data: EntitiesModel<T>): boolean {\n    return data === this.ghostData;\n  }\n\n  /**\n   * Must be implemented to load the actual listing data. An unknown number of arguments\n   * is supported for loading the data. These arguments are passed from the `getData` method.\n   */\n  protected abstract load(\n    pagination: PaginationModel,\n    ...args: any\n  ): Observable<EntitiesModel<T>>;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Table, TableStructure } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../item.service';\nimport { OrganizationTableType } from '../organization.model';\nimport { ListService } from './list.service';\nimport { ICON_TYPE } from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-list',\n  templateUrl: './list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent<T = any, P = PaginationModel> {\n  @HostBinding('class.ghost') hasGhostData = false;\n\n  constructor(\n    protected service: ListService<T, P>,\n    protected organizationItemService: ItemService<T>\n  ) {}\n\n  @HostBinding('class')\n  viewType: OrganizationTableType = this.service.viewType;\n\n  domainType = this.service.domainType;\n\n  sortCode: string;\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * The current key represents the current selected item from the dataset.\n   * This key is used to load the item details as well as highlight the item in\n   * a list of items.\n   */\n  readonly currentKey$ = this.organizationItemService.key$;\n\n  readonly structure$: Observable<TableStructure> = this.service.getStructure();\n\n  readonly listData$: Observable<EntitiesModel<T>> = this.service\n    .getData()\n    .pipe(\n      tap((data) => {\n        this.sortCode = data.pagination?.sort;\n        this.hasGhostData = this.service.hasGhostData(data);\n      })\n    );\n\n  @Input() key = this.service.key();\n\n  /**\n   * Returns the total number of items.\n   */\n  getListCount(dataTable: Table): number {\n    return dataTable.pagination?.totalResults;\n  }\n\n  /**\n   * Browses to the given page number\n   */\n  browse(pagination: P, pageNumber: number) {\n    this.service.view(pagination, pageNumber);\n  }\n\n  /**\n   * Navigates to the detailed view of the selected list item.\n   */\n  launchItem(event: T): void {\n    this.organizationItemService.launchDetails(event);\n  }\n\n  /**\n   * Sorts the list.\n   */\n  sort(pagination: P): void {\n    this.service.sort({\n      ...pagination,\n      ...({ sort: this.sortCode } as PaginationModel),\n    });\n  }\n}\n","<cx-split-view [hideMode]=\"false\">\n  <ng-container *ngIf=\"structure$ | async as structure\">\n    <cx-view class=\"list\" *ngIf=\"listData$ | async as data\">\n      <div class=\"header\">\n        <div class=\"title\">\n          <h3>\n            {{\n              viewType + '.header' | cxTranslate: { count: getListCount(data) }\n            }}\n            <button\n              [cxPopover]=\"listHint\"\n              [cxPopoverOptions]=\"{\n                placement: 'auto',\n                class: 'hint-popover',\n                appendToBody: true,\n                displayCloseButton: true\n              }\"\n            >\n              <cx-icon [type]=\"iconTypes.INFO\"> </cx-icon>\n            </button>\n          </h3>\n        </div>\n\n        <div class=\"actions\">\n          <label>\n            <span *ngIf=\"data.pagination?.sort\">{{\n              structure.type + '.sortBy' | cxTranslate\n            }}</span>\n            <ng-select\n              name=\"sort\"\n              class=\"sort\"\n              *ngIf=\"data.pagination?.sort\"\n              [searchable]=\"false\"\n              [clearable]=\"false\"\n              (change)=\"sort(data.pagination)\"\n              [tabIndex]=\"0\"\n              [(ngModel)]=\"sortCode\"\n              [attr.aria-label]=\"\n                (sortCode\n                  ? structure.type + '.sort.' + sortCode\n                  : structure.type + '.sortBy'\n                ) | cxTranslate\n              \"\n            >\n              <ng-option *ngFor=\"let sort of data.sorts\" [value]=\"sort.code\">\n                {{ structure.type + '.sort.' + sort.code | cxTranslate }}\n              </ng-option>\n            </ng-select>\n          </label>\n\n          <ng-content select=\"[actions]\"></ng-content>\n\n          <a\n            class=\"button primary create\"\n            [routerLink]=\"{ cxRoute: structure.type + 'Create' } | cxUrl\"\n            routerLinkActive=\"disabled\"\n          >\n            {{ 'organization.add' | cxTranslate }}\n          </a>\n        </div>\n      </div>\n\n      <cx-table\n        *ngIf=\"data.values?.length > 0; else emptyList\"\n        [structure]=\"structure\"\n        [data]=\"data.values\"\n        [i18nRoot]=\"domainType\"\n        [currentItem]=\"{ property: key, value: currentKey$ | async }\"\n        (launch)=\"launchItem($event)\"\n        [cxFocus]=\"{ trap: 'both' }\"\n      >\n      </cx-table>\n\n      <div class=\"footer\">\n        <cx-pagination\n          [pagination]=\"data.pagination\"\n          (viewPageEvent)=\"browse(data.pagination, $event)\"\n        ></cx-pagination>\n      </div>\n    </cx-view>\n\n    <!-- nested split views are rendered inside child routes -->\n    <router-outlet></router-outlet>\n  </ng-container>\n</cx-split-view>\n\n<ng-template #emptyList>\n  <p class=\"instruction is-empty\">\n    {{ 'organization.messages.emptyList' | cxTranslate }}\n  </p>\n</ng-template>\n\n<ng-template #listHint>\n  <p>\n    {{ viewType + '.hint' | cxTranslate }}\n  </p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  IconModule,\n  KeyboardFocusModule,\n  PaginationModule,\n  SplitViewModule,\n  TableModule,\n} from '@spartacus/storefront';\nimport { MessageModule } from '../message/message.module';\nimport { ListComponent } from './list.component';\nimport { PopoverModule } from '@spartacus/storefront';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    SplitViewModule,\n    TableModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n    PaginationModule,\n    NgSelectModule,\n    FormsModule,\n    MessageModule,\n    KeyboardFocusModule,\n    PopoverModule,\n  ],\n  declarations: [ListComponent],\n  exports: [ListComponent],\n})\nexport class ListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n  TableFieldOptions,\n} from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-cell',\n  templateUrl: './cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CellComponent {\n  constructor(protected outlet: OutletContextData<TableDataOutletContext>) {}\n\n  get tabIndex(): number {\n    return -1;\n  }\n\n  get model(): TableDataOutletContext {\n    return this.outlet.context;\n  }\n\n  get property(): string {\n    return this.model?.[this.outlet?.context?._field];\n  }\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link is created to the detailed route\n   * of the given `_type`.\n   *\n   * Defaults to `true`.\n   */\n  get linkable(): boolean {\n    return this.property !== undefined && (this.cellOptions.linkable ?? true);\n  }\n\n  /**\n   * Helper method to access the cell options.\n   */\n  get cellOptions(): TableFieldOptions {\n    return (\n      this.outlet.context?._options?.cells?.[this.outlet.context?._field] ?? {}\n    );\n  }\n\n  /**\n   * Generates the configurable route to the detail page of the given context item.\n   */\n  get route(): string {\n    return this.outlet.context._type + 'Details';\n  }\n\n  get routeModel(): any {\n    return this.outlet.context;\n  }\n\n  get type(): string {\n    return this.model._type;\n  }\n\n  /**\n   * Indicates whether the item is loaded.\n   */\n  get hasItem(): boolean {\n    return !!this.item && Object.keys(this.item).length > 0;\n  }\n\n  protected get item(): any {\n    if (!this.outlet.context) {\n      return null;\n    }\n    const { _field, _options, _type, _i18nRoot, ...all } = this.outlet.context;\n    return all;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabIndex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span class=\"text\" title=\"{{ property }}\">{{ property }}</span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { filter, first, switchMap, take } from 'rxjs/operators';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport {\n  LoadStatus,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { ItemService } from '../item.service';\nimport { ListService } from '../list/list.service';\nimport { MessageService } from '../message/services/message.service';\nimport { SubListService } from './sub-list.service';\nimport { CellComponent } from '../table/cell.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-org-assign-cell',\n  template: `\n    <button type=\"button\" *ngIf=\"hasItem\" (click)=\"toggleAssign()\" class=\"link\">\n      {{ isAssigned ? 'unassign' : 'assign' }}\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignCellComponent<T> extends CellComponent {\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected organizationItemService: ItemService<T>,\n    protected messageService: MessageService,\n    protected organizationSubListService: ListService<T>\n  ) {\n    super(outlet);\n  }\n\n  get isAssigned(): boolean {\n    return (this.item as any)?.selected;\n  }\n\n  toggleAssign() {\n    const isAssigned = this.isAssigned;\n    this.organizationItemService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          isAssigned\n            ? this.unassign(key, this.link)\n            : this.assign(key, this.link)\n        ),\n        take(1),\n        filter(\n          (data: OrganizationItemStatus<T>) =>\n            data.status === LoadStatus.SUCCESS\n        )\n      )\n      .subscribe((data) =>\n        this.notify(data.item, isAssigned ? 'unassigned' : 'assigned')\n      );\n  }\n\n  protected assign(\n    key: string,\n    linkKey: string\n  ): Observable<OrganizationItemStatus<T>> {\n    return (this.organizationSubListService as SubListService<T>).assign(\n      key,\n      linkKey\n    );\n  }\n\n  protected unassign(\n    key: string,\n    linkKey: string\n  ): Observable<OrganizationItemStatus<T>> {\n    return (this.organizationSubListService as SubListService<T>).unassign(\n      key,\n      linkKey\n    );\n  }\n\n  /**\n   * Returns the key for the linked object.\n   *\n   * At the moment, we're using a generic approach to assign objects,\n   * but the object do not have a normalized shape. Therefor, we need\n   * to evaluate the context to return the right key for the associated\n   * item.\n   */\n  protected get link(): string {\n    return (\n      this.outlet.context.code ??\n      this.outlet.context.customerId ??\n      this.outlet.context.uid\n    );\n  }\n\n  protected notify(item, state) {\n    this.messageService.add({\n      message: {\n        key: `${this.organizationSubListService.viewType}.${state}`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport { TableStructure } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ListComponent } from '../list/list.component';\nimport { MessageService } from '../message/services/message.service';\n\n@Component({\n  selector: 'cx-org-sub-list',\n  templateUrl: './sub-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class SubListComponent extends ListComponent {\n  hostClass = '';\n\n  @ViewChild(MessageService, { read: MessageService })\n  messageService: MessageService;\n\n  @Input() previous: boolean | string = true;\n\n  @Input() key = this.service.key();\n\n  @Input() showHint? = false;\n\n  @Input() set routerKey(key: string) {\n    this.subKey$ = this.organizationItemService.getRouterParam(key);\n  }\n\n  @HostBinding('class.ghost') hasGhostData = false;\n\n  subKey$: Observable<string>;\n\n  readonly listData$: Observable<EntitiesModel<any>> = this.currentKey$.pipe(\n    switchMap((key) => this.service.getData(key)),\n    tap((data) => {\n      this.hasGhostData = this.service.hasGhostData(data);\n    })\n  );\n\n  readonly dataStructure$: Observable<TableStructure> =\n    this.service.getStructure();\n}\n","<cx-org-card\n  [previous]=\"previous\"\n  [i18nRoot]=\"viewType\"\n  [showHint]=\"showHint\"\n  [cxFocus]=\"{ autofocus: true }\"\n>\n  <ng-content select=\"[actions]\" ngProjectAs=\"[actions]\"></ng-content>\n  <ng-content select=\"[main]\" ngProjectAs=\"[main]\"></ng-content>\n  <ng-content select=\"[info]\" ngProjectAs=\"[info]\"></ng-content>\n\n  <ng-container main *ngIf=\"dataStructure$ | async as structure\">\n    <ng-container *ngIf=\"listData$ | async as data\">\n      <section>\n        <cx-table\n          *ngIf=\"data.values?.length > 0; else emptyList\"\n          [structure]=\"structure\"\n          [data]=\"data.values\"\n          [i18nRoot]=\"domainType\"\n          [currentItem]=\"{ property: key, value: subKey$ | async }\"\n        >\n        </cx-table>\n      </section>\n\n      <div class=\"footer\" *ngIf=\"data.pagination?.totalPages > 1\">\n        <cx-pagination\n          [pagination]=\"data.pagination\"\n          (viewPageEvent)=\"browse(data.pagination, $event)\"\n        ></cx-pagination>\n      </div>\n    </ng-container>\n  </ng-container>\n</cx-org-card>\n\n<ng-template #emptyList>\n  <p class=\"is-empty\">{{ 'organization.messages.emptyList' | cxTranslate }}</p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport {\n  KeyboardFocusModule,\n  PaginationModule,\n  TableModule,\n} from '@spartacus/storefront';\nimport { CardModule } from '../card/card.module';\nimport { MessageModule } from '../message/message.module';\nimport { AssignCellComponent } from './assign-cell.component';\nimport { SubListComponent } from './sub-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    CardModule,\n    TableModule,\n    PaginationModule,\n    MessageModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [SubListComponent, AssignCellComponent],\n  exports: [SubListComponent],\n})\nexport class SubListModule {}\n","import { NgModule } from '@angular/core';\nimport { FormModule } from './form/form.module';\nimport { ListModule } from './list/list.module';\nimport { SubListModule } from './sub-list/sub-list.module';\n\n@NgModule({\n  imports: [ListModule, SubListModule, FormModule],\n})\nexport class SharedOrganizationModule {}\n","// This is not for the public API\n// TODO:#my-account-architecture - Number.MAX_VALUE?\nexport const MAX_OCC_INTEGER_VALUE = 2147483647;\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\nimport { ItemService } from './item.service';\nimport { MessageService } from './message/services/message.service';\nimport { BaseItem } from './organization.model';\n\n@Directive({\n  selector: '[cxOrgItemExists]',\n})\nexport class ItemExistsDirective<T = BaseItem> implements OnInit, OnDestroy {\n  protected subscription;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.itemService.error$\n      .pipe(filter((error) => error))\n      .subscribe(() => this.handleErrorMessage());\n  }\n\n  protected handleErrorMessage() {\n    this.messageService.add({\n      message: {\n        key: 'organization.notification.notExist',\n      },\n      type: GlobalMessageType.MSG_TYPE_ERROR,\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { BaseMessageComponent } from '../base-message.component';\nimport { MessageData } from '../message.model';\nimport { MessageService } from '../services/message.service';\nimport { ConfirmationMessageData } from './confirmation-message.model';\nimport { Translatable } from '@spartacus/core';\n\n/**\n * Renders a confirmation message and cancel/confirm button in the message component.\n */\n@Component({\n  selector: 'cx-org-confirmation',\n  templateUrl: './confirmation-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmationMessageComponent\n  extends BaseMessageComponent\n  implements OnInit\n{\n  cancelText: Translatable = {\n    key: 'organization.confirmation.cancel',\n  };\n  confirmText: Translatable = {\n    key: 'organization.confirmation.confirm',\n  };\n\n  constructor(\n    protected data: MessageData<ConfirmationMessageData>,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected messageService: MessageService\n  ) {\n    super(data, platformId);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.cancelText = this.messageData.cancel ?? this.cancelText;\n    this.confirmText = this.messageData.confirm ?? this.confirmText;\n  }\n  /**\n   * Emits a confirmation event to the data events.\n   *\n   * The original author of the event message or other parties can observe\n   * the event data.\n   */\n  confirm() {\n    this.data.events.next({ confirm: true });\n  }\n}\n","<div class=\"inner\" [cxFocus]=\"{ focusOnEscape: true }\" (esc)=\"close()\">\n  <p class=\"messageTitle\" *ngIf=\"messageTitle\">\n    {{ messageTitle | cxTranslate }}\n  </p>\n  <div class=\"message\">\n    <cx-icon *ngIf=\"messageIcon\" [type]=\"messageIcon\"></cx-icon>\n    <p>\n      {{ message | cxTranslate }}\n    </p>\n  </div>\n  <div class=\"actions\" [cxFocus]=\"{ autofocus: 'button.primary' }\">\n    <button class=\"button cancel\" (click)=\"close()\">\n      {{ cancelText | cxTranslate }}\n    </button>\n\n    <button class=\"button primary confirm\" (click)=\"confirm()\">\n      {{ confirmText | cxTranslate }}\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { BaseItem } from '../../organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisableInfoService<T extends BaseItem> {\n  isItemDisabled(item: T): boolean {\n    return item?.active === false;\n  }\n\n  isParentDisabled(item: T): boolean {\n    return (\n      (item.orgUnit || item.unit || item.parentOrgUnit)?.active === false &&\n      !this.isRootUnit(item)\n    );\n  }\n\n  isRootUnit(item: B2BUnit): boolean {\n    return (\n      item?.uid &&\n      item?.name &&\n      !(item as T)?.orgUnit &&\n      !(item as T)?.unit &&\n      (!item?.parentOrgUnit || item?.uid === item?.parentOrgUnit)\n    );\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ItemService } from '../../item.service';\nimport { ConfirmationMessageComponent } from '../../message/confirmation/confirmation-message.component';\nimport { ConfirmationMessageData } from '../../message/confirmation/confirmation-message.model';\nimport { MessageService } from '../../message/services/message.service';\nimport { BaseItem } from '../../organization.model';\nimport { DisableInfoService } from '../disable-info/disable-info.service';\n\n/**\n * Reusable component in the my-company is to toggle the disabled state for\n * my company entities.\n */\n@Component({\n  selector: 'cx-org-toggle-status',\n  templateUrl: './toggle-status.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class ToggleStatusComponent<T extends BaseItem> implements OnDestroy {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].messages.deactivate`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * The key input can be used to add a custom key.\n   *\n   * Most _organization_ entities use the `code` key, but there is some variations.\n   */\n  @Input() key = 'code';\n\n  /**\n   * The disabled state is calculated but can be provided as well.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  /**\n   * resolves if the user is currently in the edit form.\n   */\n  isInEditMode$: Observable<boolean> = this.itemService.isInEditMode$;\n\n  protected subscription = new Subscription();\n  protected confirmation: Subject<ConfirmationMessageData>;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService<ConfirmationMessageData>,\n    protected disableInfoService: DisableInfoService<T>\n  ) {}\n\n  toggle(item: T) {\n    if (!item.active) {\n      // we do ask for confirmation when the entity gets activated\n      this.update(item);\n    } else {\n      if (!this.confirmation) {\n        this.confirmation = this.messageService.add({\n          message: {\n            key: this.i18nRoot + '.messages.deactivate',\n            params: { item },\n          },\n          messageTitle: {\n            key: this.i18nRoot + '.messages.deactivateTitle',\n            params: { item },\n          },\n          confirm: {\n            key: 'organization.confirmation.disable',\n          },\n          component: ConfirmationMessageComponent,\n        });\n\n        this.subscription.add(\n          this.confirmation.pipe(first()).subscribe((event) => {\n            if (event.close) {\n              this.confirmation = null;\n            }\n            if (event.confirm) {\n              this.messageService.close(this.confirmation);\n              this.update(item);\n              this.confirmation = null;\n            }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Indicates whether the status can be toggled or not.\n   */\n  isDisabled(item: T): boolean {\n    return (\n      this.disabled ??\n      (this.disableInfoService.isParentDisabled(item) ||\n        this.disableInfoService.isRootUnit(item))\n    );\n  }\n\n  protected update(item: T): void {\n    this.itemService\n      .update(item[this.key], this.getPatchedItem(item))\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => this.notify({ ...item, ...data.item }));\n  }\n\n  protected getPatchedItem(item: T): T {\n    const patch: BaseItem = {};\n    patch[this.key] = item[this.key];\n    patch.active = !item.active;\n    return patch as T;\n  }\n\n  protected notify(item: T) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.${\n          item.active ? 'confirmEnabled' : 'confirmDisabled'\n        }`,\n        params: { item },\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<button\n  *ngIf=\"current$ | async as item\"\n  class=\"button active\"\n  [disabled]=\"\n    isDisabled(item) ||\n    ((isInEditMode$ | async) && item.active && disabled !== true)\n  \"\n  (click)=\"toggle(item)\"\n>\n  {{ 'organization.' + (item.active ? 'disable' : 'enable') | cxTranslate }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FeaturesConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfirmationMessageComponent } from './confirmation-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [ConfirmationMessageComponent],\n})\nexport class ConfirmationMessageModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfirmationMessageModule } from '../../message/confirmation/confirmation-message.module';\nimport { MessageModule } from '../../message/message.module';\nimport { ToggleStatusComponent } from './toggle-status.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, MessageModule, ConfirmationMessageModule],\n  declarations: [ToggleStatusComponent],\n  exports: [ToggleStatusComponent],\n})\nexport class ToggleStatusModule {}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ItemService } from '../../item.service';\nimport { ConfirmationMessageComponent } from '../../message/confirmation/confirmation-message.component';\nimport { ConfirmationMessageData } from '../../message/confirmation/confirmation-message.model';\nimport { MessageService } from '../../message/services/message.service';\nimport { BaseItem } from '../../organization.model';\n\n/**\n * Reusable component in the my-company is to delete an item (if it's possible)\n */\n@Component({\n  selector: 'cx-org-delete-item',\n  templateUrl: './delete-item.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class DeleteItemComponent<T extends BaseItem> implements OnDestroy {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].messages.deactivate`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * The key input can be used to add a custom key.\n   *\n   * Most _organization_ entities use the `code` key, but there is some variations.\n   */\n  @Input() key = 'code';\n\n  /**\n   * The additionalParam input can be used to provide additional data if it's required\n   * for API request\n   */\n  @Input() additionalParam?: string;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  /**\n   * resolves if the user is currently in the edit form.\n   */\n  isInEditMode$: Observable<boolean> = this.itemService.isInEditMode$;\n\n  protected subscription = new Subscription();\n  protected confirmation: Subject<ConfirmationMessageData>;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService<ConfirmationMessageData>\n  ) {}\n\n  delete(item: T) {\n    if (!this.confirmation) {\n      this.confirmation = this.messageService.add({\n        message: {\n          key: this.i18nRoot + '.messages.delete',\n          params: { item },\n        },\n        messageTitle: {\n          key: this.i18nRoot + '.messages.deleteTitle',\n          params: { item },\n        },\n        component: ConfirmationMessageComponent,\n      });\n\n      this.subscription.add(\n        this.confirmation.pipe(first()).subscribe((event) => {\n          if (event.close) {\n            this.confirmation = null;\n          }\n          if (event.confirm) {\n            this.messageService.close(this.confirmation);\n            this.confirmDelete(item);\n            this.confirmation = null;\n          }\n        })\n      );\n    }\n  }\n\n  protected confirmDelete(item: T): void {\n    this.itemService\n      .delete(item[this.key], this.additionalParam)\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => this.notify({ ...item, ...data.item }));\n  }\n\n  protected notify(item: T) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.deleted`,\n        params: { item },\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<button\n  *ngIf=\"current$ | async as item\"\n  class=\"button active\"\n  [disabled]=\"isInEditMode$ | async\"\n  (click)=\"delete(item)\"\n>\n  {{ 'organization.delete' | cxTranslate }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfirmationMessageModule } from '../../message/confirmation/confirmation-message.module';\nimport { MessageModule } from '../../message/message.module';\nimport { DeleteItemComponent } from './delete-item.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, MessageModule, ConfirmationMessageModule],\n  declarations: [DeleteItemComponent],\n  exports: [DeleteItemComponent],\n})\nexport class DeleteItemModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../item.service';\nimport { BaseItem } from '../../organization.model';\nimport { DisableInfoService } from './disable-info.service';\n\n@Component({\n  selector: 'cx-org-disable-info',\n  templateUrl: './disable-info.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class DisableInfoComponent<T extends BaseItem> implements OnInit {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].info.disabledEdit`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * To configure the messages to display and override defaultMessageConfig\n   */\n  @Input() displayInfoConfig: {\n    disabledCreate?: boolean;\n    disabledEdit?: boolean;\n    disabledEnable?: boolean;\n    disabledDisable?: boolean;\n  };\n\n  /**\n   * Flag to enable display custom message(s) even if no condition has been met\n   */\n  @Input() displayCustomInfo = false;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected disableInfoService: DisableInfoService<T>\n  ) {}\n\n  protected get defaultInfoConfig() {\n    return {\n      disabledCreate: false,\n      disabledEdit: true,\n      disabledEnable: true,\n      disabledDisable: false,\n    };\n  }\n\n  ngOnInit() {\n    this.displayInfoConfig = {\n      ...this.defaultInfoConfig,\n      ...this.displayInfoConfig,\n    };\n  }\n\n  displayDisabledCreate(item: T) {\n    return (\n      this.displayInfoConfig?.disabledCreate &&\n      this.disableInfoService.isItemDisabled(item)\n    );\n  }\n\n  displayDisabledEdit(item: T) {\n    return (\n      this.displayInfoConfig?.disabledEdit &&\n      this.disableInfoService.isItemDisabled(item)\n    );\n  }\n\n  displayDisabledEnable(item: T) {\n    return (\n      this.displayInfoConfig?.disabledEnable &&\n      this.disableInfoService.isParentDisabled(item)\n    );\n  }\n\n  displayDisabledDisable(item: T) {\n    return (\n      this.displayInfoConfig?.disabledDisable &&\n      this.disableInfoService.isRootUnit(item)\n    );\n  }\n}\n","<ng-container *ngIf=\"current$ | async as item\">\n  <section\n    *ngIf=\"\n      displayDisabledCreate(item) ||\n      displayDisabledEdit(item) ||\n      displayDisabledEnable(item) ||\n      displayDisabledDisable(item) ||\n      displayCustomInfo\n    \"\n  >\n    <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    <ul>\n      <li *ngIf=\"displayDisabledEnable(item)\">\n        {{ i18nRoot + '.info.disabledEnable' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledCreate(item)\">\n        {{ i18nRoot + '.info.disabledCreate' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledEdit(item)\">\n        {{ i18nRoot + '.info.disabledEdit' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledDisable(item)\">\n        {{ i18nRoot + '.info.disabledDisable' | cxTranslate }}\n      </li>\n      <ng-content></ng-content>\n    </ul>\n  </section>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DisableInfoComponent } from './disable-info.component';\nimport { IconModule } from '@spartacus/storefront';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [DisableInfoComponent],\n  exports: [DisableInfoComponent],\n})\nexport class DisableInfoModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport {\n  ResponsiveTableConfiguration,\n  TableLayout,\n} from '@spartacus/storefront';\nimport { ListService } from '../list/list.service';\nimport { BaseItem } from '../organization.model';\nimport { Observable, of } from 'rxjs';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\n\n@Injectable()\nexport abstract class SubListService<\n  T extends BaseItem\n> extends ListService<T> {\n  /**\n   * The default table structure for sub lists is only showing tables with vertical layout.\n   */\n  protected defaultTableStructure: ResponsiveTableConfiguration = {\n    options: { layout: TableLayout.VERTICAL },\n  };\n\n  /**\n   * @override This sub list will show 3 items.\n   */\n  protected ghostData = { values: new Array(3) } as EntitiesModel<T>;\n\n  // TODO: abstract\n  assign?(_key: string, ..._args: any): Observable<OrganizationItemStatus<T>> {\n    return of();\n  }\n\n  unassign?(\n    _key: string,\n    ..._args: any\n  ): Observable<OrganizationItemStatus<T>> {\n    return of();\n  }\n\n  /**\n   * As we can't filter with the backend API, we do this client side.\n   */\n  protected filterSelected(list: EntitiesModel<T>): EntitiesModel<T> {\n    if (!list) {\n      return list;\n    }\n\n    const { pagination, sorts, values } = list;\n\n    return {\n      pagination,\n      sorts,\n      values: values.filter((value) => value.selected),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-active-link-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActiveLinkCellComponent extends CellComponent {\n  get tabIndex() {\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-amount-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmountCellComponent extends CellComponent {\n  get property(): string {\n    if (this.budget && this.currency) {\n      return this.budget + ' ' + this.currency;\n    }\n    return;\n  }\n\n  protected get budget() {\n    return this.model.budget;\n  }\n\n  protected get currency() {\n    return this.model.currency?.isocode || this.model.currency;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-date-range-cell',\n  templateUrl: './date-range-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DateRangeCellComponent extends CellComponent {\n  get linkable(): boolean {\n    return this.hasRange && (this.cellOptions.linkable ?? true);\n  }\n\n  get hasRange(): boolean {\n    return !!this.model.startDate && !!this.model.endDate;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span\n    class=\"text\"\n    title=\"{{ model.startDate | cxDate }} - {{ model.endDate | cxDate }}\"\n    *ngIf=\"hasRange\"\n  >\n    {{ model.startDate | cxDate }} - {{ model.endDate | cxDate }}\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-limit-cell',\n  templateUrl: './limit-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LimitCellComponent extends CellComponent {\n  get isTimeSpanThreshold(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BOrderThresholdTimespanPermission'\n    );\n  }\n\n  get isOrderThreshold(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BOrderThresholdPermission'\n    );\n  }\n\n  get isExceedPermission(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BBudgetExceededPermission'\n    );\n  }\n}\n","<a\n  *ngIf=\"linkable; else threshold\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"threshold\"></ng-container>\n</a>\n\n<ng-template #threshold>\n  <span\n    class=\"text\"\n    title=\"{{ model.threshold }} {{ model.currency?.symbol }} {{\n      'orgPurchaseLimit.per.' + model.periodRange | cxTranslate\n    }}\"\n    *ngIf=\"isTimeSpanThreshold\"\n  >\n    {{ model.threshold }} {{ model.currency?.symbol }}\n    {{ 'orgPurchaseLimit.per.' + model.periodRange | cxTranslate }}\n  </span>\n\n  <span\n    class=\"text\"\n    title=\"{{ model.threshold }} {{ model.currency?.symbol }}\"\n    *ngIf=\"isOrderThreshold\"\n  >\n    {{ model.threshold }} {{ model.currency?.symbol }}\n  </span>\n\n  <span\n    class=\"text\"\n    title=\"{{ model.orderApprovalPermissionType.name }}\"\n    *ngIf=\"isExceedPermission\"\n  >\n    {{ model.orderApprovalPermissionType.name }}\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-roles-cell',\n  templateUrl: './roles-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RolesCellComponent extends CellComponent {}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <ul class=\"text\">\n    <li\n      *ngFor=\"let role of model.roles\"\n      class=\"li\"\n      [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n    ></li>\n    <li *ngIf=\"model.roles?.length === 0\">-</li>\n  </ul>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-status-cell',\n  templateUrl: './status-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusCellComponent extends CellComponent {\n  get label() {\n    if (this.isActive === undefined) {\n      return;\n    }\n    return this.isActive ? 'organization.enabled' : 'organization.disabled';\n  }\n\n  get isActive(): boolean {\n    return this.model.active;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span\n    class=\"text\"\n    title=\"{{ label | cxTranslate }}\"\n    [class.is-active]=\"isActive\"\n    *ngIf=\"label\"\n  >\n    {{ label | cxTranslate }}</span\n  >\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-unit-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitCellComponent extends CellComponent {\n  get property() {\n    return this.model.unit?.name ?? this.model.orgUnit?.name;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ActiveLinkCellComponent } from './active-link/active-link-cell.component';\nimport { AmountCellComponent } from './amount/amount-cell.component';\nimport { DateRangeCellComponent } from './date-range/date-range-cell.component';\nimport { LimitCellComponent } from './limit/limit-cell.component';\nimport { CellComponent } from './cell.component';\nimport { RolesCellComponent } from './roles/roles-cell.component';\nimport { StatusCellComponent } from './status/status-cell.component';\nimport { UnitCellComponent } from './unit/unit-cell.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule, IconModule],\n  declarations: [\n    CellComponent,\n    ActiveLinkCellComponent,\n    AmountCellComponent,\n    DateRangeCellComponent,\n    LimitCellComponent,\n    RolesCellComponent,\n    StatusCellComponent,\n    UnitCellComponent,\n  ],\n})\nexport class CellModule {}\n","import { B2BUnit } from '@spartacus/core';\n\nexport enum OrganizationTableType {\n  BUDGET = 'orgBudget',\n  BUDGET_ASSIGNED_COST_CENTERS = 'orgBudgetAssignedCostCenters',\n  COST_CENTER = 'orgCostCenter',\n  COST_CENTER_BUDGETS = 'orgCostCenterBudgets',\n  COST_CENTER_ASSIGNED_BUDGETS = 'orgCostCenterAssignedBudgets',\n  UNIT = 'orgUnit',\n  UNIT_USERS = 'orgUnitUsers',\n  UNIT_CHILDREN = 'orgUnitChildren',\n  UNIT_APPROVERS = 'orgUnitApprovers',\n  UNIT_ASSIGNED_APPROVERS = 'orgUnitAssignedApprovers',\n  UNIT_ADDRESS = 'orgUnitAddress',\n  UNIT_COST_CENTERS = 'orgUnitCostCenters',\n  USER_GROUP = 'orgUserGroup',\n  USER_GROUP_USERS = 'orgUserGroupUsers',\n  USER_GROUP_ASSIGNED_USERS = 'orgUserGroupAssignedUsers',\n  USER_GROUP_PERMISSIONS = 'orgUserGroupPermissions',\n  USER_GROUP_ASSIGNED_PERMISSIONS = 'orgUserGroupAssignedPermissions',\n  USER = 'orgUser',\n  USER_APPROVERS = 'orgUserApprovers',\n  USER_ASSIGNED_APPROVERS = 'orgUserAssignedApprovers',\n  USER_PERMISSIONS = 'orgUserPermissions',\n  USER_ASSIGNED_PERMISSIONS = 'orgUserAssignedPermissions',\n  USER_USER_GROUPS = 'orgUserUserGroups',\n  USER_ASSIGNED_USER_GROUPS = 'orgUserAssignedUserGroups',\n  PERMISSION = 'orgPurchaseLimit',\n}\n\nexport type BaseItem = {\n  code?: string;\n  selected?: boolean;\n  // tmp alternative \"key\"\n  customerId?: string;\n  uid?: string;\n  id?: string;\n\n  active?: boolean;\n  // tmp alternative \"orgUnit\"\n  orgUnit?: B2BUnit;\n  parentOrgUnit?: B2BUnit;\n  unit?: B2BUnit;\n};\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-cost-center-details-cell',\n  templateUrl: './cost-center-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CostCenterDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgCostCenterDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.active' | cxTranslate }}</label>\n      <span\n        class=\"value\"\n        [class.is-active]=\"model.active\"\n        [class.is-inactive]=\"!model.active\"\n      >\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.currency' | cxTranslate }}</label>\n\n      <span class=\"value\">\n        {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.unit\">\n      <label>{{ 'orgCostCenter.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.unit\n          } | cxUrl\n        \"\n      >\n        {{ model.unit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetCostCenterListService extends SubListService<Budget> {\n  protected tableType = OrganizationTableType.BUDGET_ASSIGNED_COST_CENTERS;\n  protected _domainType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<CostCenter>> {\n    return this.budgetService.getCostCenters(code).pipe(\n      filter((list) => Boolean(list)),\n      map((costCenter) => this.filterSelected(costCenter))\n    );\n  }\n\n  /**\n   * As we can't filter with the backend API, we do this client side.\n   */\n  protected filterSelected({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<CostCenter>): EntitiesModel<CostCenter> {\n    return {\n      pagination,\n      sorts,\n      values: values.filter((value) => value.active),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { BudgetCostCenterListService } from './budget-cost-center-list.service';\n\n@Component({\n  selector: 'cx-org-budget-cost-center-list',\n  templateUrl: './budget-cost-center-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: BudgetCostCenterListService,\n    },\n  ],\n})\nexport class BudgetCostCenterListComponent {}\n","<cx-org-sub-list></cx-org-sub-list>\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentBudgetService extends CurrentItemService<Budget> {\n  constructor(\n    protected routingService: RoutingService,\n    protected budgetService: BudgetService\n  ) {\n    super(routingService);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgBudgetDetails';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.budgetCode;\n  }\n\n  protected getItem(code: string): Observable<Budget> {\n    return this.budgetService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.budgetService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators, DatePickerService } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetFormService extends FormService<Budget> {\n  constructor(protected datePickerService: DatePickerService) {\n    super();\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n    form.setControl(\n      'startDate',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.patternValidation((date) =>\n          this.datePickerService.isValidFormat(date)\n        ),\n      ])\n    );\n    form.setControl(\n      'endDate',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.patternValidation((date) =>\n          this.datePickerService.isValidFormat(date)\n        ),\n      ])\n    );\n    form.setControl(\n      'budget',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.mustBePositive,\n      ])\n    );\n\n    form.setControl(\n      'currency',\n      new FormGroup({\n        isocode: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setValidators(\n      CustomFormValidators.dateRange('startDate', 'endDate', (date) =>\n        this.datePickerService.getDate(date)\n      )\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetFormService } from '../form/budget-form.service';\nimport { CurrentBudgetService } from './current-budget.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetItemService extends ItemService<Budget> {\n  constructor(\n    protected currentItemService: CurrentBudgetService,\n    protected routingService: RoutingService,\n    protected formService: BudgetFormService,\n    protected budgetService: BudgetService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  /**\n   * @override\n   * Returns the budget for the given code.\n   *\n   * Loads the budget each time, to ensure accurate data is resolved.\n   */\n  load(code: string): Observable<Budget> {\n    this.budgetService.loadBudget(code);\n    return this.budgetService.get(code);\n  }\n\n  update(code, value: Budget): Observable<OrganizationItemStatus<Budget>> {\n    this.budgetService.update(code, value);\n    return this.budgetService.getLoadingStatus(value.code);\n  }\n\n  protected create(value: Budget): Observable<OrganizationItemStatus<Budget>> {\n    this.budgetService.create(value);\n    return this.budgetService.getLoadingStatus(value.code);\n  }\n\n  /**\n   * @override\n   * Returns 'budgetDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgBudgetDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetItemService } from '../services/budget-item.service';\n\n@Component({\n  selector: 'cx-org-budget-details',\n  templateUrl: './budget-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: BudgetItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class BudgetDetailsComponent implements OnInit {\n  model$: Observable<Budget>;\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  ngOnInit() {\n    this.model$ = this.itemService.key$.pipe(\n      switchMap((code) => this.itemService.load(code)),\n      startWith({})\n    );\n  }\n\n  constructor(protected itemService: ItemService<Budget>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgBudget.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgBudgetEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status actions i18nRoot=\"orgBudget\"></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgBudget\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgBudget.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.startDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.startDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.endDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.endDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.amount' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.budget }} {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <a\n      *ngIf=\"model.code\"\n      class=\"link\"\n      [routerLink]=\"{ cxRoute: 'orgBudgetCostCenters', params: model } | cxUrl\"\n      routerLinkActive=\"is-current\"\n    >\n      {{ 'orgBudget.links.costCenters' | cxTranslate }}\n    </a>\n  </section>\n</cx-org-card>\n","import { AbstractControl } from '@angular/forms';\n\nexport function createCodeForEntityName(\n  name: AbstractControl,\n  code: AbstractControl\n): void {\n  if (!code.value) {\n    const codeFromName = name.value?.replace(/\\s+/g, '-').toLowerCase();\n    code.patchValue(codeFromName);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Currency, CurrencyService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  Budget,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetItemService } from '../services/budget-item.service';\nimport { CurrentBudgetService } from '../services/current-budget.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-budget-form',\n  templateUrl: './budget-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: BudgetItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentBudgetService,\n    },\n  ],\n})\nexport class BudgetFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<Budget>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createCodeWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgBudget\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgBudget.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgBudget.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createCodeWithName(form.get('name'), form.get('code'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgBudget.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgBudget.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{\n        'orgBudget.startDate' | cxTranslate\n      }}</span>\n      <cx-date-picker\n        [control]=\"form.get('startDate')\"\n        [max]=\"form.get('endDate').value\"\n        (update)=\"form.get('endDate').updateValueAndValidity()\"\n      ></cx-date-picker>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{ 'orgBudget.endDate' | cxTranslate }}</span>\n      <cx-date-picker\n        [control]=\"form.get('endDate')\"\n        [min]=\"form.get('startDate').value\"\n        (update)=\"form.get('startDate').updateValueAndValidity()\"\n      ></cx-date-picker>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('currency')\">\n      <span class=\"label-content required\">{{\n        'orgBudget.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [class.invalid]=\"form.get('currency.isocode').invalid\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgBudget.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{ 'orgBudget.amount' | cxTranslate }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"number\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgBudget.amount' | cxTranslate }}\"\n        formControlName=\"budget\"\n        min=\"0\"\n      />\n      <cx-form-errors [control]=\"form.get('budget')\"></cx-form-errors>\n    </label>\n\n    <label\n      aria-required=\"true\"\n      *ngIf=\"units$ | async as units\"\n      [formGroup]=\"form.get('orgUnit')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgBudget.businessUnits' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgBudget.businessUnits' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * Service to populate Budget data to `Table` data. Budget\n * data is driven by the table configuration, using the `OrganizationTables.BUDGET`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetListService extends ListService<Budget> {\n  protected tableType = OrganizationTableType.BUDGET;\n\n  constructor(\n    protected tableService: TableService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<Budget>> {\n    return this.budgetService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertBudgets(raw))\n    );\n  }\n\n  /**\n   * Populates budget data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertBudgets({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<Budget>): EntitiesModel<Budget> {\n    const budgetModels: EntitiesModel<Budget> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        currency: value.currency?.isocode,\n        unit: value.orgUnit,\n      })),\n    };\n    return budgetModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentBudgetService } from './current-budget.service';\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentBudgetService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Budget> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { CostCenterDetailsCellComponent } from '../cost-center/details-cell/cost-center-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { ActiveLinkCellComponent } from '../shared/table';\nimport { AmountCellComponent } from '../shared/table/amount/amount-cell.component';\nimport { DateRangeCellComponent } from '../shared/table/date-range/date-range-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { BudgetCostCenterListComponent } from './cost-centers/budget-cost-center-list.component';\nimport { BudgetDetailsComponent } from './details/budget-details.component';\nimport { BudgetFormComponent } from './form/budget-form.component';\nimport { BudgetItemService } from './services/budget-item.service';\nimport { BudgetListService } from './services/budget-list.service';\nimport { BudgetRoutePageMetaResolver } from './services/budget-route-page-meta.resolver';\n\nexport const budgetCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageBudgetsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: BudgetListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: BudgetItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgBudget.breadcrumbs.list',\n              resolver: BudgetRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: BudgetFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.budgetCode}`,\n            component: BudgetDetailsComponent,\n            data: {\n              cxPageMeta: {\n                breadcrumb: 'orgBudget.breadcrumbs.details',\n              },\n            },\n            children: [\n              {\n                path: `edit`,\n                component: BudgetFormComponent,\n              },\n              {\n                path: 'cost-centers',\n                component: BudgetCostCenterListComponent,\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function budgetTableConfigFactory(): TableConfig {\n  return budgetTableConfig;\n}\n\nexport const budgetTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.BUDGET]: {\n      cells: ['name', 'active', 'amount', 'dateRange', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          amount: {\n            dataComponent: AmountCellComponent,\n          },\n          dateRange: {\n            dataComponent: DateRangeCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.BUDGET_ASSIGNED_COST_CENTERS]: {\n      cells: ['name'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: CostCenterDetailsCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { BudgetCostCenterListComponent } from './budget-cost-center-list.component';\n\n@NgModule({\n  imports: [CommonModule, SubListModule],\n  declarations: [BudgetCostCenterListComponent],\n})\nexport class BudgetCostCenterListModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemExistsDirective } from './item-exists.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ItemExistsDirective],\n  exports: [ItemExistsDirective],\n})\nexport class ItemExistsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { BudgetDetailsComponent } from './budget-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [BudgetDetailsComponent],\n})\nexport class BudgetDetailsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { DatePickerModule, FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { BudgetFormComponent } from './budget-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n    DatePickerModule,\n  ],\n  declarations: [BudgetFormComponent],\n})\nexport class BudgetFormModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { budgetCmsConfig, budgetTableConfigFactory } from './budget.config';\nimport { BudgetCostCenterListModule } from './cost-centers/budget-cost-center-list.module';\nimport { BudgetDetailsModule } from './details/budget-details.module';\nimport { BudgetFormModule } from './form/budget-form.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    BudgetDetailsModule,\n    BudgetFormModule,\n    BudgetCostCenterListModule,\n  ],\n  providers: [\n    provideDefaultConfig(budgetCmsConfig),\n    provideDefaultConfigFactory(budgetTableConfigFactory),\n  ],\n})\nexport class BudgetComponentsModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-budget-details-cell',\n  templateUrl: './budget-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BudgetDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgBudget.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgBudgetDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.startDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.startDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.endDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.endDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.amount' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.budget }} {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { BudgetDetailsCellComponent } from './budget-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [BudgetDetailsCellComponent],\n  exports: [BudgetDetailsCellComponent],\n})\nexport class BudgetDetailsCellModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n  CostCenterService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterBudgetListService extends SubListService<Budget> {\n  protected tableType = OrganizationTableType.COST_CENTER_BUDGETS;\n  protected _domainType = OrganizationTableType.BUDGET;\n\n  constructor(\n    protected tableService: TableService,\n    protected costCenterService: CostCenterService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Budget>> {\n    return this.costCenterService.getBudgets(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign budget to the cost center.\n   */\n  assign(\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    this.costCenterService.assignBudget(costCenterCode, budgetCode);\n    return this.budgetService.getLoadingStatus(budgetCode);\n  }\n\n  /**\n   * @override\n   * Unassign the budget from the cost center.\n   */\n  unassign(\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    this.costCenterService.unassignBudget(costCenterCode, budgetCode);\n    return this.budgetService.getLoadingStatus(budgetCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { CostCenterBudgetListService } from '../cost-center-budget-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterAssignedBudgetListService extends CostCenterBudgetListService {\n  protected tableType = OrganizationTableType.COST_CENTER_ASSIGNED_BUDGETS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Budget>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((budgets) => this.filterSelected(budgets)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CostCenterAssignedBudgetListService } from './cost-center-assigned-budget-list.service';\n\n@Component({\n  selector: 'cx-org-cost-center-assigned-budget-list',\n  templateUrl: './cost-center-assigned-budget-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: CostCenterAssignedBudgetListService,\n    },\n  ],\n})\nexport class CostCenterAssignedBudgetListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { CostCenterBudgetListService } from './cost-center-budget-list.service';\n\n@Component({\n  selector: 'cx-org-cost-center-budget-list',\n  templateUrl: './cost-center-budget-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: CostCenterBudgetListService,\n    },\n  ],\n})\nexport class CostCenterBudgetListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { CostCenterAssignedBudgetListComponent } from './assigned/cost-center-assigned-budget-list.component';\nimport { CostCenterBudgetListComponent } from './cost-center-budget-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    CostCenterAssignedBudgetListComponent,\n    CostCenterBudgetListComponent,\n  ],\n})\nexport class CostCenterBudgetListModule {}\n","import { Injectable } from '@angular/core';\nimport { CostCenter, RoutingService } from '@spartacus/core';\nimport { CostCenterService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentCostCenterService extends CurrentItemService<CostCenter> {\n  constructor(\n    protected routingService: RoutingService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.costCenterCode;\n  }\n\n  protected getItem(code: string): Observable<CostCenter> {\n    return this.costCenterService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.costCenterService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CostCenter } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterFormService extends FormService<CostCenter> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n\n    form.setControl(\n      'currency',\n      new FormGroup({\n        isocode: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl(\n      'unit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CostCenter, RoutingService } from '@spartacus/core';\nimport {\n  CostCenterService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterFormService } from '../form/cost-center-form.service';\nimport { CurrentCostCenterService } from './current-cost-center.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterItemService extends ItemService<CostCenter> {\n  constructor(\n    protected currentItemService: CurrentCostCenterService,\n    protected routingService: RoutingService,\n    protected formService: CostCenterFormService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<CostCenter> {\n    this.costCenterService.load(code);\n    return this.costCenterService.get(code);\n  }\n\n  update(\n    code,\n    value: CostCenter\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    this.costCenterService.update(code, value);\n    return this.costCenterService.getLoadingStatus(value.code);\n  }\n\n  protected create(\n    value: CostCenter\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    this.costCenterService.create(value);\n    return this.costCenterService.getLoadingStatus(value.code);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgCostCenterDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CostCenter } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterItemService } from '../services/cost-center-item.service';\n\n@Component({\n  selector: 'cx-org-cost-center-details',\n  templateUrl: './cost-center-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: CostCenterItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class CostCenterDetailsComponent {\n  model$: Observable<CostCenter> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<CostCenter>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgCostCenter.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgCostCenterEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status actions i18nRoot=\"orgCostCenter\"></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgCostCenter\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.active' | cxTranslate }}</label>\n      <span\n        class=\"value\"\n        [class.is-active]=\"model.active\"\n        [class.is-inactive]=\"!model.active\"\n      >\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.currency' | cxTranslate }}</label>\n\n      <span class=\"value\">\n        {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.unit\n          } | cxUrl\n        \"\n      >\n        {{ model.unit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <a\n      *ngIf=\"model.code\"\n      class=\"link\"\n      [routerLink]=\"{ cxRoute: 'orgCostCenterBudgets', params: model } | cxUrl\"\n      routerLinkActive=\"is-current\"\n    >\n      {{ 'orgCostCenter.budget.link' | cxTranslate }}\n    </a>\n  </section>\n</cx-org-card>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { CostCenter, Currency, CurrencyService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterItemService } from '../services/cost-center-item.service';\nimport { CurrentCostCenterService } from '../services/current-cost-center.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-cost-center-form',\n  templateUrl: './cost-center-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: CostCenterItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentCostCenterService,\n    },\n  ],\n})\nexport class CostCenterFormComponent {\n  form: FormGroup = this.itemService.getForm();\n  /**\n   * Initialize the business unit for the cost center.\n   *\n   * If there's a unit provided, we disable the form control.\n   */\n  @Input() set unitKey(value: string) {\n    if (value) {\n      this.form?.get('unit.uid').setValue(value);\n      this.form?.get('unit')?.disable();\n    }\n  }\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('unit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<CostCenter>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService\n  ) {}\n\n  createCodeWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgCostCenter\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgCostCenter.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgCostCenter.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createCodeWithName(form.get('name'), form.get('code'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgCostCenter.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgCostCenter.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" formGroupName=\"currency\">\n      <span class=\"label-content required\">{{\n        'orgCostCenter.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [class.invalid]=\"form.get('currency.isocode').invalid\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgCostCenter.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('unit')\">\n      <span class=\"label-content required\">{{\n        'orgCostCenter.unit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('unit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgCostCenter.unit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('unit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { CostCenterService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface CostCenterModel {\n  code?: string;\n  name?: string;\n  unit?: any;\n  currency?: string;\n  active?: boolean;\n}\n\n/**\n * Service to populate Cost Center data to `Table` data. The cost center\n * data is driven by the table configuration, using the `OrganizationTables.COST_CENTER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterListService extends ListService<CostCenterModel> {\n  protected tableType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<CostCenterModel>> {\n    return this.costCenterService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertCostCenters(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertCostCenters({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<CostCenter>): EntitiesModel<CostCenterModel> {\n    const costCenterModels: EntitiesModel<CostCenterModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        currency: value.currency?.isocode,\n      })),\n    };\n    return costCenterModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CostCenter,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentCostCenterService } from './current-cost-center.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CostCenterRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentCostCenterService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<CostCenter> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { BudgetDetailsCellComponent } from '../budget/details-cell/budget-details-cell.component';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { CostCenterAssignedBudgetListComponent } from './budgets/assigned/cost-center-assigned-budget-list.component';\nimport { CostCenterBudgetListComponent } from './budgets/cost-center-budget-list.component';\nimport { CostCenterDetailsComponent } from './details/cost-center-details.component';\nimport { CostCenterFormComponent } from './form/cost-center-form.component';\nimport { CostCenterItemService } from './services/cost-center-item.service';\nimport { CostCenterListService } from './services/cost-center-list.service';\nimport { CostCenterRoutePageMetaResolver } from './services/cost-center-route-page-meta.resolver';\n\nexport const costCenterCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageCostCentersListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: CostCenterListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: CostCenterItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgCostCenter.breadcrumbs.list',\n              resolver: CostCenterRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: CostCenterFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.costCenterCode}`,\n            component: CostCenterDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgCostCenter.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: CostCenterFormComponent,\n              },\n              {\n                path: 'budgets',\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgCostCenter.breadcrumbs.budgets',\n                  },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: CostCenterAssignedBudgetListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: CostCenterBudgetListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function costCenterTableConfigFactory(): TableConfig {\n  return costCenterTableConfig;\n}\n\nexport const costCenterTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.COST_CENTER]: {\n      cells: ['name', 'active', 'currency', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          currency: {\n            dataComponent: CellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.COST_CENTER_ASSIGNED_BUDGETS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: BudgetDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.COST_CENTER_BUDGETS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: BudgetDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { CostCenterDetailsComponent } from './cost-center-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [CostCenterDetailsComponent],\n  exports: [CostCenterDetailsComponent],\n})\nexport class CostCenterDetailsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CurrencyService, I18nModule, UrlModule } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { CostCenterFormComponent } from './cost-center-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n  ],\n  declarations: [CostCenterFormComponent],\n  exports: [CostCenterFormComponent],\n  providers: [CurrencyService, OrgUnitService],\n})\nexport class CostCenterFormModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { BudgetDetailsCellModule } from '../budget/details-cell/budget-details-cell.module';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { CostCenterBudgetListModule } from './budgets/cost-center-budget-list.module';\nimport {\n  costCenterCmsConfig,\n  costCenterTableConfigFactory,\n} from './cost-center.config';\nimport { CostCenterDetailsModule } from './details/cost-center-details.module';\nimport { CostCenterFormModule } from './form/cost-center-form.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    CostCenterDetailsModule,\n    CostCenterFormModule,\n    CostCenterBudgetListModule,\n    BudgetDetailsCellModule,\n  ],\n  providers: [\n    provideDefaultConfig(costCenterCmsConfig),\n    provideDefaultConfigFactory(costCenterTableConfigFactory),\n  ],\n})\nexport class CostCenterComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentPermissionService extends CurrentItemService<Permission> {\n  constructor(\n    protected routingService: RoutingService,\n    protected permissionService: PermissionService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.permissionCode;\n  }\n\n  protected getItem(code: string): Observable<Permission> {\n    return this.permissionService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.permissionService.getErrorState(code);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { FormService } from '../../shared/form/form.service';\n\nexport enum PermissionType {\n  ORDER = 'B2BOrderThresholdPermission',\n  TIME_SPAN = 'B2BOrderThresholdTimespanPermission',\n  EXCEEDED = 'B2BBudgetExceededPermission',\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionFormService\n  extends FormService<Permission>\n  implements OnDestroy\n{\n  protected subscription = new Subscription();\n\n  /**\n   * @override\n   * Builds a generic sub form for permissions and amends the form\n   * based on the for approval permission type.\n   */\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n\n    form.setControl(\n      'orderApprovalPermissionType',\n      new FormGroup({\n        code: new FormControl(undefined, Validators.required),\n      })\n    );\n\n    // subscribe to permission type changes and amend accordingly.\n    this.subscription.add(\n      form\n        .get('orderApprovalPermissionType')\n        .get('code')\n        .valueChanges.pipe(\n          distinctUntilChanged(),\n          filter((code) => !!code)\n        )\n        .subscribe((code) => this.amend(form, code))\n    );\n\n    this.form = form;\n  }\n\n  /**\n   * @override\n   * The form is using  `B2BBudgetExceededPermission` by default.\n   */\n  get defaultValue(): Permission {\n    return {\n      orderApprovalPermissionType: {\n        code: PermissionType.EXCEEDED,\n      },\n    };\n  }\n\n  /**\n   * Amends the form structure based on the `PermissionType`.\n   */\n  protected amend(form: FormGroup, code: PermissionType) {\n    if (code === PermissionType.EXCEEDED) {\n      form.removeControl('periodRange');\n      form.removeControl('currency');\n      form.removeControl('threshold');\n    }\n\n    if (code === PermissionType.TIME_SPAN || code === PermissionType.ORDER) {\n      if (!form.get('currency')) {\n        form.setControl(\n          'currency',\n          new FormGroup({\n            isocode: new FormControl(undefined, Validators.required),\n          })\n        );\n      }\n      if (!form.get('threshold')) {\n        form.setControl('threshold', new FormControl('', Validators.required));\n      }\n    }\n\n    if (code === PermissionType.ORDER) {\n      form.removeControl('periodRange');\n    }\n\n    if (code === PermissionType.TIME_SPAN) {\n      if (!form.get('periodRange')) {\n        form.setControl(\n          'periodRange',\n          new FormControl('', Validators.required)\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  protected patchData(item?) {\n    super.patchData(item);\n    if (item?.code !== undefined) {\n      this.form.get('orderApprovalPermissionType').disable();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { PermissionFormService } from '../form/permission-form.service';\nimport { CurrentPermissionService } from './current-permission.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionItemService extends ItemService<Permission> {\n  constructor(\n    protected currentItemService: CurrentPermissionService,\n    protected routingService: RoutingService,\n    protected formService: PermissionFormService,\n    protected permissionService: PermissionService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<Permission> {\n    this.permissionService.loadPermission(code);\n    return this.permissionService.get(code);\n  }\n\n  update(\n    code,\n    value: Permission\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.permissionService.update(code, value);\n    return this.permissionService.getLoadingStatus(value.code);\n  }\n\n  protected create(\n    value: Permission\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.permissionService.create(value);\n    return this.permissionService.getLoadingStatus(value.code);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgPurchaseLimitDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { PermissionItemService } from '../services/permission-item.service';\n\n@Component({\n  selector: 'cx-org-permission-details',\n  templateUrl: './permission-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: PermissionItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class PermissionDetailsComponent {\n  model$: Observable<Permission> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<Permission>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgPurchaseLimit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgPurchaseLimitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    i18nRoot=\"orgPurchaseLimit\"\n    [disabled]=\"false\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgPurchaseLimit\"\n    [displayInfoConfig]=\"{ disabledEnable: false }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { PermissionDetailsComponent } from './permission-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [PermissionDetailsComponent],\n  exports: [PermissionDetailsComponent],\n})\nexport class PermissionDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  Currency,\n  CurrencyService,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n  Period,\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentPermissionService } from '../services/current-permission.service';\nimport { PermissionItemService } from '../services/permission-item.service';\n\n@Component({\n  selector: 'cx-org-permission-form',\n  templateUrl: './permission-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: PermissionItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentPermissionService,\n    },\n  ],\n})\nexport class PermissionFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  types$: Observable<OrderApprovalPermissionType[]> =\n    this.permissionService.getTypes();\n\n  periods = Object.keys(Period);\n\n  constructor(\n    protected itemService: ItemService<Permission>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService,\n    protected permissionService: PermissionService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n}\n","<cx-org-form i18nRoot=\"orgPurchaseLimit\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgPurchaseLimit.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label\n      *ngIf=\"(types$ | async)?.length\"\n      aria-required=\"true\"\n      [formGroup]=\"form.get('orderApprovalPermissionType')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"types$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        [readonly]=\"form.disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"\n          'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n        \"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('orderApprovalPermissionType.code')\"\n      ></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" *ngIf=\"form.get('periodRange')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.periodRange' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"periodRange\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"periods\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgPurchaseLimit.periodRange' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('periodRange')\"></cx-form-errors>\n    </label>\n\n    <label\n      aria-required=\"true\"\n      *ngIf=\"form.get('currency')\"\n      [formGroup]=\"form.get('currency')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        *ngIf=\"currencies$ | async as currencies\"\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [placeholder]=\"'orgPurchaseLimit.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label *ngIf=\"form.get('threshold')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.threshold' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"number\"\n        required\n        placeholder=\"{{ 'orgPurchaseLimit.threshold' | cxTranslate }}\"\n        formControlName=\"threshold\"\n      />\n      <cx-form-errors [control]=\"form.get('threshold')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgPurchaseLimit.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { PermissionFormComponent } from './permission-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    FormModule,\n    ItemActiveModule,\n  ],\n  declarations: [PermissionFormComponent],\n  exports: [PermissionFormComponent],\n})\nexport class PermissionFormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  PermissionService,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the permission, which is a slightly flattened version\n * of the permission model.\n */\nexport interface PermissionModel {\n  code?: string;\n  orderApprovalPermissionType?: { name: string };\n  threshold?: any;\n  periodRange?: any;\n  orgUnit?: any;\n  currency?: { symbol: string };\n}\n\n/**\n * Service to populate permission data to `Table` data. The permission\n * data is driven by the table configuration, using the `OrganizationTables.PERMISSION`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionListService extends ListService<PermissionModel> {\n  protected tableType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected permissionsService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<PermissionModel>> {\n    return this.permissionsService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertPermissions(raw))\n    );\n  }\n\n  /**\n   * Populates the permission data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertPermissions({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<UserGroup>): EntitiesModel<PermissionModel> {\n    const permissionGroupModels: EntitiesModel<PermissionModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return permissionGroupModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentPermissionService } from './current-permission.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PermissionRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentPermissionService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Permission> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { LimitCellComponent } from '../shared/table/limit/limit-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { PermissionDetailsComponent } from './details/permission-details.component';\nimport { PermissionFormComponent } from './form/permission-form.component';\nimport { PermissionItemService } from './services/permission-item.service';\nimport { PermissionListService } from './services/permission-list.service';\nimport { PermissionRoutePageMetaResolver } from './services/permission-route-page-meta.resolver';\n\nexport const permissionCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManagePermissionsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: PermissionListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: PermissionItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgPurchaseLimit.breadcrumbs.list',\n              resolver: PermissionRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: PermissionFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.permissionCode}`,\n            component: PermissionDetailsComponent,\n            data: {\n              cxPageMeta: {\n                breadcrumb: 'orgPurchaseLimit.breadcrumbs.details',\n              },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: PermissionFormComponent,\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function permissionTableConfigFactory(): TableConfig {\n  return permissionTableConfig;\n}\n\nexport const permissionTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.PERMISSION]: {\n      cells: ['code', 'active', 'limit', 'unit'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n          limit: {\n            dataComponent: LimitCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { PermissionDetailsModule } from './details/permission-details.module';\nimport { PermissionFormModule } from './form/permission-form.module';\nimport {\n  permissionCmsConfig,\n  permissionTableConfigFactory,\n} from './permission.config';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    PermissionDetailsModule,\n    PermissionFormModule,\n  ],\n  providers: [\n    provideDefaultConfig(permissionCmsConfig),\n    provideDefaultConfigFactory(permissionTableConfigFactory),\n  ],\n})\nexport class PermissionComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitService extends CurrentItemService<B2BUnit> {\n  constructor(\n    protected routingService: RoutingService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.unitCode;\n  }\n\n  protected getItem(code: string): Observable<B2BUnit> {\n    return this.orgUnitService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.orgUnitService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { B2BUnit } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitFormService extends FormService<B2BUnit> {\n  protected patchData(item?: B2BUnit) {\n    this.toggleParentUnit(item);\n    super.patchData(item);\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'uid',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n\n    form.setControl(\n      'approvalProcess',\n      new FormGroup({\n        code: new FormControl(null),\n      })\n    );\n\n    this.form = form;\n    this.toggleParentUnit();\n  }\n\n  protected toggleParentUnit(item?: B2BUnit): void {\n    if (this.isRootUnit(item)) {\n      this.form?.removeControl('parentOrgUnit');\n    } else if (!this.form.get('parentOrgUnit')) {\n      this.form.setControl(\n        'parentOrgUnit',\n        new FormGroup({\n          uid: new FormControl(null, Validators.required),\n        })\n      );\n    }\n  }\n\n  protected isRootUnit(item: B2BUnit): boolean {\n    // as we don't have full response after toggle item status,\n    // we have situation where we have object like {uid, active},\n    // so decided to check name as alternative required property\n    return (\n      item?.uid &&\n      item?.name &&\n      (!item?.parentOrgUnit || item?.uid === item?.parentOrgUnit)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UnitFormService } from '../form/unit-form.service';\nimport { CurrentUnitService } from './current-unit.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitItemService extends ItemService<B2BUnit> {\n  constructor(\n    protected currentItemService: CurrentUnitService,\n    protected routingService: RoutingService,\n    protected formService: UnitFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  /**\n   * @override\n   * Returns the unit for the given code.\n   *\n   * Loads the unit each time, to ensure accurate data is resolved.\n   */\n  load(code: string): Observable<B2BUnit> {\n    this.unitService.load(code);\n    return this.unitService.get(code);\n  }\n\n  update(code, value: B2BUnit): Observable<OrganizationItemStatus<B2BUnit>> {\n    this.unitService.update(code, value);\n    return this.unitService.getLoadingStatus(value.uid);\n  }\n\n  protected create(\n    value: B2BUnit\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    this.unitService.create(value);\n    return this.unitService.getLoadingStatus(value.uid);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UnitItemService } from '../services/unit-item.service';\n\n@Component({\n  selector: 'cx-org-unit-details',\n  templateUrl: './unit-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UnitDetailsComponent {\n  model$: Observable<B2BUnit> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<B2BUnit>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUnit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n  [showHint]=\"true\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUnitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUnit\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnit\"\n    [displayInfoConfig]=\"{ disabledDisable: true }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.approvalProcess?.name\">\n      <label>{{ 'orgUnit.approvalProcess' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.approvalProcess?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.parentOrgUnit\">\n      <label>{{ 'orgUnit.parentUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.parentOrgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.parentOrgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitChildren', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.units' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitUserList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.users' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitAddressList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.shippingAddresses' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitCostCenters', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.costCenters' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../shared/card/card.module';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { UnitDetailsComponent } from './unit-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    KeyboardFocusModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitDetailsComponent],\n  exports: [UnitDetailsComponent],\n})\nexport class UnitDetailsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BApprovalProcess, B2BUnit } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentUnitService } from '../services/current-unit.service';\nimport { UnitItemService } from '../services/unit-item.service';\nimport { AbstractControl } from '@angular/forms';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-unit-form',\n  templateUrl: './unit-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentUnitService,\n    },\n  ],\n})\nexport class UnitFormComponent implements OnInit {\n  @Input() i18nRoot = 'orgUnit';\n\n  @Input() createChildUnit = false;\n\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.itemService.unit$.pipe(\n    tap((unit) => {\n      this.form.get('parentOrgUnit.uid')?.setValue(unit);\n      if (this.createChildUnit) {\n        this.form.get('parentOrgUnit')?.disable();\n      }\n    }),\n    switchMap(() =>\n      this.unitService.getActiveUnitList().pipe(\n        map((units) =>\n          units.filter((unit) => unit.id !== this.form?.value.uid)\n        ),\n        tap((units) => {\n          if (units.length === 1) {\n            this.form?.get('parentOrgUnit.uid')?.setValue(units[0]?.id);\n          }\n        })\n      )\n    )\n  );\n\n  approvalProcess$: Observable<B2BApprovalProcess[]> = this.unitService\n    .getApprovalProcesses()\n    .pipe(filter((items) => items?.length > 0));\n\n  constructor(\n    protected itemService: ItemService<B2BUnit>,\n    protected unitService: OrgUnitService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createUidWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form [i18nRoot]=\"i18nRoot\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUnit.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUnit.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label\n      formGroupName=\"approvalProcess\"\n      class=\"full-width\"\n      aria-required=\"true\"\n    >\n      <span class=\"label-content required\">{{\n        'orgUnit.approvalProcess' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [items]=\"approvalProcess$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.approvalProcess' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('approvalProcess.code')\"\n      ></cx-form-errors>\n    </label>\n\n    <label\n      *ngIf=\"form.get('parentOrgUnit')\"\n      aria-required=\"true\"\n      formGroupName=\"parentOrgUnit\"\n    >\n      <span class=\"label-content required\">{{\n        'orgUnit.form.parentOrgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.form.parentOrgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('parentOrgUnit.uid')\"\n      ></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { UnitFormComponent } from './unit-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n  ],\n  declarations: [UnitFormComponent],\n  exports: [UnitFormComponent],\n})\nexport class UnitFormModule {}\n","import { Injectable } from '@angular/core';\nimport { Address, RoutingService } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitAddressService extends CurrentItemService<Address> {\n  // override item$ as we need to use the unit code as well\n  readonly item$: Observable<Address> = this.b2bUnit$.pipe(\n    filter((unitUid) => Boolean(unitUid)),\n    switchMap((unitUid) =>\n      this.key$.pipe(switchMap((code: string) => this.getItem(unitUid, code)))\n    )\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected unitService: OrgUnitService\n  ) {\n    super(routingService);\n  }\n\n  getDetailsRoute(): string {\n    return 'orgUnitAddressDetails';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.addressCode;\n  }\n\n  protected getItem(unitUid: string, addressId: string): Observable<Address> {\n    return addressId\n      ? this.unitService.getAddress(unitUid, addressId)\n      : of(null);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.unitService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  Country,\n  Region,\n  Title,\n  UserAddressService,\n} from '@spartacus/core';\nimport { UserProfileFacade } from '@spartacus/user/profile/root';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { FormService } from '../../../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressFormService extends FormService<Address> {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userProfileFacade: UserProfileFacade\n  ) {\n    super();\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('id', new FormControl(''));\n    form.setControl('titleCode', new FormControl(''));\n    form.setControl('firstName', new FormControl('', Validators.required));\n    form.setControl('lastName', new FormControl('', Validators.required));\n    form.setControl('line1', new FormControl('', Validators.required));\n    form.setControl('line2', new FormControl(''));\n    form.setControl('town', new FormControl('', Validators.required));\n    form.setControl(\n      'country',\n      new FormGroup({\n        isocode: new FormControl(null, Validators.required),\n      })\n    );\n    form.setControl(\n      'region',\n      new FormGroup({\n        isocode: new FormControl(null, Validators.required),\n      })\n    );\n    form.setControl('postalCode', new FormControl('', Validators.required));\n    form.setControl('phone', new FormControl(''));\n\n    this.form = form;\n  }\n\n  getCountries(): Observable<Country[]> {\n    return this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n  }\n\n  getTitles(): Observable<Title[]> {\n    return this.userProfileFacade.getTitles();\n  }\n\n  getRegions(): Observable<Region[]> {\n    let selectedCountryCode = this.form.get('country.isocode').value;\n    let newCountryCode: string;\n\n    return this.getForm()\n      .get('country.isocode')\n      .valueChanges.pipe(\n        filter((countryIsoCode) => Boolean(countryIsoCode)),\n        switchMap((countryIsoCode) => {\n          newCountryCode = countryIsoCode;\n          return this.userAddressService.getRegions(countryIsoCode);\n        }),\n        tap((regions: Region[]) => {\n          const regionControl = this.form.get('region.isocode');\n          if (!regions || regions.length === 0) {\n            regionControl.disable();\n          } else {\n            regionControl.enable();\n          }\n          if (selectedCountryCode && newCountryCode !== selectedCountryCode) {\n            regionControl.reset();\n          }\n          selectedCountryCode = newCountryCode;\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Address, RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, first, pluck } from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { UnitAddressFormService } from '../form/unit-address-form.service';\nimport { CurrentUnitAddressService } from './current-unit-address.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressItemService extends ItemService<Address> {\n  constructor(\n    protected currentItemService: CurrentUnitAddressService,\n    protected routingService: RoutingService,\n    protected formService: UnitAddressFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  protected unitRouteParam$ = this.routingService\n    .getParams()\n    .pipe(pluck(ROUTE_PARAMS.unitCode), distinctUntilChanged());\n\n  load(unitUid: string, addressId: string): Observable<Address> {\n    return this.unitService\n      .getAddress(unitUid, addressId)\n      .pipe(filter((list) => Boolean(list)));\n  }\n\n  update(\n    addressCode: string,\n    address: Address\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n      this.unitService.updateAddress(unitCode, addressCode, address);\n    });\n    return this.unitService.getAddressLoadingStatus(addressCode);\n  }\n\n  protected create(\n    value: Address\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.unitRouteParam$\n      .pipe(first())\n      .subscribe((unitCode) => this.unitService.createAddress(unitCode, value));\n    return this.unitService.getAddressLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return this.currentItemService.getDetailsRoute();\n  }\n\n  delete(\n    addressId: string,\n    unitUid: string\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.launchList();\n    this.unitService.deleteAddress(unitUid, addressId);\n    return this.unitService.getAddressLoadingStatus(addressId);\n  }\n\n  launchDetails(item: Address): void {\n    if (!item.id) {\n      // since the ID is generated in the backend\n      // we redirect to the list instead.\n      this.launchList();\n    } else {\n      this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n        this.routingService.go({\n          cxRoute: this.getDetailsRoute(),\n          params: { ...item, uid: unitCode },\n        });\n      });\n    }\n  }\n\n  protected launchList() {\n    this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n      this.routingService.go({\n        cxRoute: 'orgUnitAddressList',\n        params: { uid: unitCode },\n      });\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Address, B2BUnit, Country, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitAddressItemService } from '../services/unit-address-item.service';\n\n@Component({\n  selector: 'cx-org-unit-address-details',\n  templateUrl: './unit-address-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitAddressItemService,\n    },\n  ],\n})\nexport class UnitAddressDetailsComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService.item$;\n\n  model$: Observable<Address> = this.itemService.key$.pipe(\n    withLatestFrom(this.unit$),\n    switchMap(([code, unit]) => this.itemService.load(unit.uid, code)),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  getCountry(isoCode): Observable<Country> {\n    return this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((countries) =>\n        countries.find((country) => country.isocode === isoCode)\n      )\n    );\n  }\n\n  constructor(\n    protected itemService: ItemService<Address>,\n    protected currentUnitService: CurrentUnitService,\n    protected userAddressService: UserAddressService\n  ) {}\n}\n","<ng-container *ngIf=\"unit$ | async as unit\">\n  <cx-org-card\n    *ngIf=\"model$ | async as model\"\n    i18nRoot=\"orgUnitAddress.details\"\n    [subtitle]=\"'orgUnitAddress.details.subtitle' | cxTranslate: { item: unit }\"\n    [cxFocus]=\"{ refreshFocus: model }\"\n  >\n    <a class=\"link\" actions routerLink=\"edit\">\n      {{ 'organization.edit' | cxTranslate }}\n    </a>\n\n    <cx-org-delete-item\n      actions\n      key=\"id\"\n      [additionalParam]=\"unit.uid\"\n      i18nRoot=\"orgUnitAddress\"\n    ></cx-org-delete-item>\n\n    <section main class=\"details\">\n      <div class=\"property\">\n        <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n        <span class=\"value\"> {{ model.firstName }} {{ model.lastName }} </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnit.unit' | cxTranslate }}</label>\n        <span class=\"value\">\n          <a\n            [routerLink]=\"\n              {\n                cxRoute: 'orgUnitDetails',\n                params: unit\n              } | cxUrl\n            \"\n          >\n            {{ unit.name }}\n          </a>\n        </span>\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUnitAddress.formattedAddress' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.formattedAddress }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnitAddress.country' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ (getCountry(model.country.isocode) | async)?.name }}\n        </span>\n      </div>\n    </section>\n  </cx-org-card>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../../../shared/card/card.module';\nimport { UnitAddressDetailsComponent } from './unit-address-details.component';\nimport { DeleteItemModule } from '../../../../shared/detail/delete-item-action/delete-item.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    DeleteItemModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UnitAddressDetailsComponent],\n})\nexport class UnitAddressDetailsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CellComponent } from '../../../../shared/table/cell.component';\n\n@Component({\n  selector: 'cx-org-link-cell',\n  template: `\n    <ng-container *ngIf=\"unitKey$ | async as uid\">\n      <a\n        *ngIf=\"linkable; else text\"\n        [routerLink]=\"{ cxRoute: route, params: getRouterModel(uid) } | cxUrl\"\n        [tabIndex]=\"tabIndex\"\n      >\n        <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n      </a>\n    </ng-container>\n\n    <ng-template #text>\n      <span class=\"text\" title=\"{{ property }}\">{{ property }}</span>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkCellComponent extends CellComponent {\n  unitKey$: Observable<string> = this.itemService.key$;\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected itemService: ItemService<B2BUnit>\n  ) {\n    super(outlet);\n  }\n\n  get tabIndex() {\n    return 0;\n  }\n\n  getRouterModel(uid: string): any {\n    return { ...this.outlet.context, uid };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Address, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressListService extends SubListService<Address> {\n  protected tableType = OrganizationTableType.UNIT_ADDRESS;\n  protected _domainType = OrganizationTableType.UNIT_ADDRESS;\n\n  constructor(\n    protected tableService: TableService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Address>> {\n    return this.orgUnitService.getAddresses(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { UnitAddressListService } from './unit-address-list.service';\n\n@Component({\n  selector: 'cx-org-unit-address-list',\n  templateUrl: './unit-address-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitAddressListService,\n    },\n  ],\n})\nexport class UnitAddressListComponent {\n  routerKey = ROUTE_PARAMS.addressCode;\n}\n","<cx-org-sub-list\n  key=\"id\"\n  [routerKey]=\"routerKey\"\n  class=\"has-nested-view\"\n  [showHint]=\"true\"\n>\n  <a actions class=\"link\" routerLink=\"create\">\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { SubListModule } from '../../../../shared/sub-list/sub-list.module';\nimport { LinkCellComponent } from './link-cell.component';\nimport { UnitAddressListComponent } from './unit-address-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, UrlModule, SubListModule],\n  declarations: [UnitAddressListComponent, LinkCellComponent],\n})\nexport class UnitAddressListModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Address, B2BUnit, Country, Region, Title } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { UnitAddressItemService } from '../services/unit-address-item.service';\nimport { UnitAddressFormService } from './unit-address-form.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\n\n@Component({\n  selector: 'cx-org-unit-address-form',\n  templateUrl: './unit-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitAddressItemService,\n    },\n  ],\n})\nexport class UnitAddressFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  key$ = this.itemService.key$;\n  countries$: Observable<Country[]> = this.formService.getCountries();\n  titles$: Observable<Title[]> = this.formService.getTitles();\n  regions$: Observable<Region[]> = this.formService.getRegions();\n\n  unit$: Observable<B2BUnit> = this.currentUnitService.item$;\n\n  constructor(\n    protected itemService: ItemService<Address>,\n    protected formService: UnitAddressFormService,\n    protected currentUnitService: CurrentUnitService\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<cx-org-form\n  i18nRoot=\"orgUnitAddress\"\n  [animateBack]=\"!(key$ | async)\"\n  [subtitle]=\"\n    'orgUnitAddress.details.subtitle' | cxTranslate: { item: (unit$ | async) }\n  \"\n>\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label aria-required=\"true\" formGroupName=\"country\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.country' | cxTranslate\n      }}</span>\n      <ng-select\n        class=\"country-select\"\n        formControlName=\"isocode\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"countries$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('country.isocode')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.titles' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.firstName' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"{{ 'orgUnitAddress.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.lastName' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.address1' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.streetAddress' | cxTranslate }}\"\n        formControlName=\"line1\"\n      />\n      <cx-form-errors [control]=\"form.get('line1')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.address2' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.aptSuite' | cxTranslate }}\"\n        formControlName=\"line2\"\n      />\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.phoneNumber' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.phoneNumber' | cxTranslate }}\"\n        formControlName=\"phone\"\n      />\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.city' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.city' | cxTranslate }}\"\n        formControlName=\"town\"\n      />\n      <cx-form-errors [control]=\"form.get('town')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.zipCode' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.zipCode' | cxTranslate }}\"\n        formControlName=\"postalCode\"\n      />\n      <cx-form-errors [control]=\"form.get('postalCode')\"></cx-form-errors>\n    </label>\n\n    <label></label>\n\n    <ng-container *ngIf=\"regions$ | async as regions\">\n      <label\n        class=\"full-width\"\n        aria-required=\"true\"\n        formGroupName=\"region\"\n        *ngIf=\"regions.length > 0\"\n      >\n        <span class=\"label-content required\">{{\n          'orgUnitAddress.state' | cxTranslate\n        }}</span>\n        <ng-select\n          class=\"region-select\"\n          formControlName=\"isocode\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"regions\"\n          bindLabel=\"name\"\n          bindValue=\"isocode\"\n          placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n          appendTo=\"cx-org-list\"\n        >\n        </ng-select>\n        <cx-form-errors [control]=\"form.get('region.isocode')\"></cx-form-errors>\n      </label>\n    </ng-container>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../../../shared/form/form.module';\nimport { UnitAddressFormComponent } from './unit-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  declarations: [UnitAddressFormComponent],\n})\nexport class UnitAddressFormModule {}\n","import { NgModule } from '@angular/core';\nimport { UnitAddressDetailsModule } from './details/unit-address-details.module';\nimport { UnitAddressListModule } from './list/unit-address-list.module';\nimport { UnitAddressFormModule } from './form/unit-address-form.module';\n\n@NgModule({\n  imports: [\n    UnitAddressListModule,\n    UnitAddressDetailsModule,\n    UnitAddressFormModule,\n  ],\n})\nexport class UnitAddressModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport {\n  OrgUnitService,\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitApproverListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_APPROVERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getUsers(code, B2BUserRole.APPROVER, pagination);\n  }\n\n  /**\n   * @override\n   * Assign budget to the cost center.\n   */\n  assign(\n    unitId: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.unitService.assignApprover(unitId, customerId, B2BUserRole.APPROVER);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  /**\n   * @override\n   * Unassign the budget from the cost center.\n   */\n  unassign(\n    unitId: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.unitService.unassignApprover(unitId, customerId, B2BUserRole.APPROVER);\n    return this.userService.getLoadingStatus(customerId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../../shared/index';\nimport { UnitApproverListService } from '../unit-approver-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAssignedApproverListService extends UnitApproverListService {\n  protected tableType = OrganizationTableType.UNIT_ASSIGNED_APPROVERS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    this.unitService.clearAssignedUsersList(\n      code,\n      B2BUserRole.APPROVER,\n      pagination\n    );\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { UnitAssignedApproverListService } from './unit-assigned-approver-list.service';\n\n@Component({\n  selector: 'cx-org-unit-assigned-approver-list',\n  templateUrl: './unit-assigned-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitAssignedApproverListService,\n    },\n  ],\n})\nexport class UnitAssignedApproverListComponent {}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UnitApproverListService } from './unit-approver-list.service';\n\n@Component({\n  selector: 'cx-org-unit-approver-list',\n  templateUrl: './unit-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitApproverListService,\n    },\n  ],\n})\nexport class UnitApproverListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitAssignedApproverListComponent } from './assigned/unit-assigned-approver-list.component';\nimport { UnitApproverListComponent } from './unit-approver-list.component';\n\n@NgModule({\n  imports: [I18nModule, RouterModule, SubListModule],\n  declarations: [UnitApproverListComponent, UnitAssignedApproverListComponent],\n})\nexport class UnitApproverListModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitChildrenService extends SubListService<B2BUnitNode> {\n  protected tableType = OrganizationTableType.UNIT_CHILDREN;\n  protected _domainType = OrganizationTableType.UNIT;\n\n  constructor(\n    protected tableService: TableService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  // method to be adjusted for proper children list when ready\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUnitNode>> {\n    return this.orgUnitService.getChildUnits(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../services/current-unit.service';\nimport { UnitChildrenService } from './unit-children.service';\n\n@Component({\n  selector: 'cx-org-unit-children',\n  templateUrl: './unit-children.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitChildrenService,\n    },\n  ],\n})\nexport class UnitChildrenComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitChildren\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../shared/detail/disable-info/disable-info.module';\nimport { ListModule } from '../../../shared/list/list.module';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitChildrenComponent } from './unit-children.component';\n\n@NgModule({\n  imports: [\n    ListModule,\n    I18nModule,\n    RouterModule,\n    SubListModule,\n    CommonModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitChildrenComponent],\n})\nexport class UnitChildrenModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitCostCenterListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_COST_CENTERS;\n  protected _domainType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getCostCenters(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../services/current-unit.service';\nimport { UnitCostCenterListService } from './unit-cost-centers.service';\n\n@Component({\n  selector: 'cx-org-unit-cost-centers',\n  templateUrl: './unit-cost-centers.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitCostCenterListService,\n    },\n  ],\n})\nexport class UnitCostCenterListComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitCostCenters\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../shared/detail/disable-info/disable-info.module';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitCostCenterListComponent } from './unit-cost-centers.component';\n\n@NgModule({\n  imports: [\n    I18nModule,\n    RouterModule,\n    SubListModule,\n    CommonModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitCostCenterListComponent],\n})\nexport class UnitCostCenterListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CellComponent } from '../../../../shared/table/cell.component';\n\n@Component({\n  selector: 'cx-org-unit-user-link-cell',\n  template: `\n    <a\n      *ngIf=\"hasItem && unitKey$ | async as uid\"\n      [routerLink]=\"\n        { cxRoute: 'orgUnitUserRoles', params: getRouterModel(uid) } | cxUrl\n      \"\n    >\n      {{ 'orgUser.roles' | cxTranslate }}\n    </a>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitUserRolesCellComponent extends CellComponent {\n  unitKey$: Observable<string> = this.itemService.key$;\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected itemService: ItemService<B2BUnit>\n  ) {\n    super(outlet);\n  }\n\n  getRouterModel(uid: string): any {\n    return { ...this.outlet.context, uid };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_USERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getUsers(code, B2BUserRole.CUSTOMER, pagination);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitUserListService } from '../services/unit-user-list.service';\n\n@Component({\n  selector: 'cx-org-unit-user-list',\n  templateUrl: './unit-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitUserListService,\n    },\n  ],\n})\nexport class UnitUserListComponent {\n  routerKey = ROUTE_PARAMS.userCode;\n\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list key=\"customerId\" [routerKey]=\"routerKey\" [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitUsers\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../../shared/detail/disable-info/disable-info.module';\nimport { SubListModule } from '../../../../shared/sub-list/sub-list.module';\nimport { UnitUserRolesCellComponent } from './unit-user-link-cell.component';\nimport { UnitUserListComponent } from './unit-user-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    SubListModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitUserListComponent, UnitUserRolesCellComponent],\n})\nexport class UnitUserListModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitUserService extends CurrentItemService<B2BUser> {\n  constructor(\n    protected routingService: RoutingService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(routingService);\n  }\n\n  getDetailsRoute(): string {\n    return 'orgUnitUserList';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userCode;\n  }\n\n  protected getItem(customerId: string): Observable<B2BUser> {\n    return this.b2bUserService.get(customerId);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.b2bUserService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { FormService } from '../../../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserRolesFormService extends FormService<B2BUser> {\n  availableRoles: B2BUserRole[] = this.userService.getAllRoles();\n\n  constructor(protected userService: B2BUserService) {\n    super();\n  }\n\n  getForm(item?: B2BUser): FormGroup {\n    // if form already exist, while switching between users\n    // it didn't patchData again, so used force rebuild\n    this.form = null;\n    return super.getForm(item);\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    this.availableRoles.forEach((role) =>\n      form.addControl(role, new FormControl())\n    );\n    this.form = form;\n  }\n\n  protected patchData(item: B2BUser) {\n    super.patchData(item);\n    if (item) {\n      item.roles?.forEach((role) => {\n        this.form.get(role).setValue(true);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CurrentUnitUserService } from '../services/current-unit-user.service';\nimport { UnitUserRolesFormService } from './unit-user-roles-form.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserRolesItemService extends ItemService<B2BUser> {\n  constructor(\n    protected currentItemService: CurrentUnitUserService,\n    protected routingService: RoutingService,\n    protected formService: UnitUserRolesFormService,\n    protected unitService: OrgUnitService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    // we enable the unit so that the underlying\n    // save method can read the complete form.value.\n    form.get('orgUnit').enable();\n    return super.save(form, key);\n  }\n\n  load(unitUid: string): Observable<B2BUser> {\n    return this.b2bUserService.get(unitUid);\n  }\n\n  update(\n    customerId: string,\n    _user: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return this.b2bUserService.getLoadingStatus(customerId);\n  }\n\n  protected create(\n    _customer: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return this.b2bUserService.getLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return this.currentItemService.getDetailsRoute();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUserService extends CurrentItemService<B2BUser> {\n  readonly name$: Observable<string> = this.item$.pipe(\n    map((user: B2BUser) => user.name)\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userCode;\n  }\n\n  protected getItem(code: string): Observable<B2BUser> {\n    return this.b2bUserService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.b2bUserService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFormService extends FormService<B2BUser> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('customerId', new FormControl(''));\n    form.setControl('titleCode', new FormControl(''));\n    form.setControl('firstName', new FormControl('', Validators.required));\n    form.setControl('lastName', new FormControl('', Validators.required));\n    form.setControl(\n      'email',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.emailValidator,\n      ])\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl('roles', new FormArray([]));\n    form.setControl('isAssignedToApprovers', new FormControl(false));\n\n    form.get('roles').valueChanges.subscribe((roles: string[]) => {\n      if (roles.includes(B2BUserRole.APPROVER)) {\n        form.get('isAssignedToApprovers').enable();\n      } else {\n        form.get('isAssignedToApprovers').disable();\n        form.get('isAssignedToApprovers').reset();\n      }\n    });\n\n    this.form = form;\n  }\n\n  protected patchData(item: B2BUser) {\n    super.patchData(item);\n    if (item) {\n      const roles = this.form.get('roles') as FormArray;\n      item.roles?.forEach((role) => {\n        if (!(roles.value as string[]).includes(role)) {\n          roles.push(new FormControl(role));\n        }\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UserFormService } from '../form/user-form.service';\nimport { CurrentUserService } from './current-user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserItemService extends ItemService<B2BUser> {\n  constructor(\n    protected currentItemService: CurrentUserService,\n    protected routingService: RoutingService,\n    protected formService: UserFormService,\n    protected userService: B2BUserService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<B2BUser> {\n    this.userService.load(code);\n    return this.userService.get(code);\n  }\n\n  update(code, value: B2BUser): Observable<OrganizationItemStatus<B2BUser>> {\n    delete value.approvers;\n    this.userService.update(code, value);\n    return this.userService.getLoadingStatus(code);\n  }\n\n  protected create(\n    value: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.create(value);\n    return this.userService.getLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgUserDetails';\n  }\n\n  // @override to avoid errors while creation\n  launchDetails(item: B2BUser): void {\n    if (item.customerId !== null) {\n      super.launchDetails(item);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport {\n  B2BUserService,\n  LoadStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { MessageService } from '../../../../shared/message/services/message.service';\nimport { UnitUserRolesFormService } from './unit-user-roles-form.service';\nimport { UnitUserRolesItemService } from './unit-user-roles-item.service';\nimport { UserItemService } from '../../../../user/services/user-item.service';\n\n@Component({\n  selector: 'cx-org-unit-user-roles',\n  templateUrl: './unit-user-roles.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitUserRolesItemService,\n    },\n  ],\n})\nexport class UnitUserRolesFormComponent {\n  protected item: B2BUser;\n\n  @ViewChild(MessageService, { read: MessageService })\n  messageService: MessageService;\n\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    tap((item) => {\n      if (!this.item) {\n        this.item = item;\n      }\n      if (this.item.roles?.join() !== item.roles?.join()) {\n        this.item = { ...this.item, ...item };\n      }\n    }),\n    map((item) => this.formService.getForm(item))\n  );\n\n  availableRoles: B2BUserRole[] = this.userService.getAllRoles();\n\n  constructor(\n    protected itemService: ItemService<B2BUser>,\n    protected formService: UnitUserRolesFormService,\n    protected userService: B2BUserService,\n    protected userItemService: UserItemService\n  ) {}\n\n  save(form: FormGroup) {\n    form.disable();\n    const roles = [...this.availableRoles].filter((r) => !!form.get(r).value);\n    this.userItemService\n      .update(this.item.customerId, { roles })\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => {\n        this.notify({ ...this.item, ...data.item });\n        form.enable();\n      });\n  }\n\n  protected notify(item: B2BUser) {\n    this.messageService.add({\n      message: {\n        key: 'orgUnitUserRoles.messages.rolesUpdated',\n        params: { item },\n      },\n    });\n  }\n}\n","<form *ngIf=\"form$ | async as form\" (submit)=\"save(form)\">\n  <cx-org-card\n    #card\n    [previous]=\"false\"\n    i18nRoot=\"orgUnitUserRoles\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <a actions routerLink=\"../../\">\n      <span (click)=\"card.closeView($event)\">\n        {{ 'organization.done' | cxTranslate }}\n      </span>\n    </a>\n\n    <section main class=\"details\" [formGroup]=\"form\">\n      <fieldset class=\"full-width\">\n        <label class=\"form-check\" *ngFor=\"let role of availableRoles\">\n          <input\n            type=\"checkbox\"\n            [formControlName]=\"role\"\n            (change)=\"save(form)\"\n          />\n          <span class=\"form-check-label\">\n            {{ 'organization.userRoles.' + role | cxTranslate }}\n          </span>\n        </label>\n      </fieldset>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../../../shared/card/card.module';\nimport { UnitUserRolesFormComponent } from './unit-user-roles.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    FormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UnitUserRolesFormComponent],\n})\nexport class UnitUserRolesModule {}\n","import { NgModule } from '@angular/core';\nimport { UnitUserListModule } from './list/unit-user-list.module';\nimport { UnitUserRolesModule } from './roles/unit-user-roles.module';\n\n@NgModule({\n  imports: [UnitUserListModule, UnitUserRolesModule],\n})\nexport class UnitUsersModule {}\n","export enum TREE_TOGGLE {\n  EXPANDED,\n  COLLAPSED,\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUnitNode,\n  B2BUnitTreeNode,\n} from '@spartacus/organization/administration/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TREE_TOGGLE } from './unit-tree.model';\n\n/**\n * Service to populate Unit data to `Table` data. Unit\n * data is driven by the table configuration, using the `OrganizationTables.UNIT`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitTreeService {\n  /**\n   * Indicates the minimum number of (initial) expanded units.\n   */\n  protected minimalExpanded = 1;\n\n  protected globalToggle$: BehaviorSubject<TREE_TOGGLE> = new BehaviorSubject(\n    undefined\n  );\n\n  treeToggle$: BehaviorSubject<Map<string, TREE_TOGGLE>> = new BehaviorSubject(\n    new Map()\n  );\n\n  /**\n   * Initializes the unit tree with an active unit.\n   *\n   * The active unit will be collapsed.\n   */\n  initialize(root: B2BUnitNode, activeUnitId: string): void {\n    if (activeUnitId) {\n      this.expandUntilActiveNode(root, activeUnitId);\n    }\n  }\n\n  /**\n   * Sets the global toggle state to _collapsed_ and clears the toggle state\n   * for individual units.\n   */\n  collapseAll() {\n    this.globalToggle$.next(TREE_TOGGLE.COLLAPSED);\n    this.treeToggle$.next(new Map());\n  }\n\n  /**\n   * Sets the global toggle state to _expanded_ and clears the toggle state\n   * for individual units.\n   */\n  expandAll() {\n    this.globalToggle$.next(TREE_TOGGLE.EXPANDED);\n    this.treeToggle$.next(new Map());\n  }\n\n  /**\n   * Indicates whether the give unit is expanded.\n   *\n   * The returned (boolean) expand state is driven by the global toggle\n   * state (expand / collapse all) and the toggle state for individual units.\n   * There's also the `minimalExpanded` taken into consideration.\n   */\n  isExpanded(unitId: string, level: number): boolean {\n    const toggleState = this.treeToggle$.value?.get(unitId);\n\n    if (\n      this.globalToggle$.value === TREE_TOGGLE.COLLAPSED &&\n      toggleState !== TREE_TOGGLE.EXPANDED\n    ) {\n      return false;\n    }\n\n    return (\n      // the current node is expanded\n      toggleState === TREE_TOGGLE.EXPANDED ||\n      // the node is not collapsed, but globally expanded (\"expand all\") or above\n      // the minimum visible nodes\n      ((this.globalToggle$.value === TREE_TOGGLE.EXPANDED ||\n        level < this.minimalExpanded) &&\n        toggleState !== TREE_TOGGLE.COLLAPSED)\n    );\n  }\n\n  toggle(unit: B2BUnitTreeNode) {\n    const currentState = this.treeToggle$.value;\n    currentState.set(\n      unit.id,\n      this.isExpanded(unit.id, unit.depthLevel)\n        ? TREE_TOGGLE.COLLAPSED\n        : TREE_TOGGLE.EXPANDED\n    );\n    this.treeToggle$.next(currentState);\n  }\n\n  /**\n   * Expands all tree nodes till the active unit, to ensure that the\n   * full tree is collapsed till the active item.\n   *\n   * This is useful while navigating the tree by the router.\n   */\n  protected expandUntilActiveNode(node: B2BUnitNode, activeUnitId: string) {\n    const hasActiveChild = (n: B2BUnitNode, id: string): boolean =>\n      !!n.children?.find(\n        (child) => child.id === id || hasActiveChild(child, id)\n      );\n\n    const findInvolvedTreeNodes = (\n      n: B2BUnitNode,\n      activeItems = []\n    ): string[] => {\n      if (hasActiveChild(n, activeUnitId)) {\n        activeItems.push(n.id);\n      }\n      n.children.forEach((child) => {\n        findInvolvedTreeNodes(child, activeItems);\n      });\n      return activeItems;\n    };\n\n    const m = this.treeToggle$.value;\n    findInvolvedTreeNodes(node).forEach((activeId) => {\n      if (m.get(activeId) !== TREE_TOGGLE.EXPANDED) {\n        m.set(activeId, TREE_TOGGLE.EXPANDED);\n      }\n    });\n    if (m !== this.treeToggle$.value) {\n      this.treeToggle$.next(m);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UnitTreeService } from '../services/unit-tree.service';\n\n@Component({\n  selector: 'cx-org-unit-list',\n  templateUrl: './unit-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitListComponent {\n  constructor(protected unitTreeService: UnitTreeService) {}\n\n  expandAll() {\n    this.unitTreeService.expandAll();\n  }\n\n  collapseAll() {\n    this.unitTreeService.collapseAll();\n  }\n}\n","<cx-org-list>\n  <ng-container actions>\n    <button class=\"link\" (click)=\"expandAll()\">\n      {{ 'orgUnit.tree.expandAll' | cxTranslate }}\n    </button>\n    <button class=\"link\" (click)=\"collapseAll()\">\n      {{ 'orgUnit.tree.collapseAll' | cxTranslate }}\n    </button>\n  </ng-container>\n</cx-org-list>\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { B2BUnitTreeNode } from '@spartacus/organization/administration/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { CellComponent } from '../../../shared/table/cell.component';\nimport { UnitTreeService } from '../../services/unit-tree.service';\n\n@Component({\n  selector: 'cx-org-toggle-link-cell',\n  templateUrl: './toggle-link-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleLinkCellComponent extends CellComponent {\n  @HostBinding('style.--cx-depth-level')\n  get depthLevel() {\n    return this.model.depthLevel;\n  }\n\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected unitTreeService: UnitTreeService\n  ) {\n    super(outlet);\n  }\n\n  get combinedName() {\n    return this.property ? `${this.property} (${this.count})` : '';\n  }\n\n  get tabIndex() {\n    return 0;\n  }\n\n  get expanded() {\n    return this.model.expanded;\n  }\n\n  /**\n   * Counts the number of descendants\n   */\n  get count() {\n    return this.model.count;\n  }\n\n  toggleItem(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.unitTreeService.toggle(this.model as unknown as B2BUnitTreeNode);\n  }\n\n  /**\n   * Indicates whether the tree item should have a toggle navigation.\n   *\n   * The toggle navigation is used in case the tree item has descendants,\n   * and if the tree item level is not configured to be shown anyway.\n   */\n  get isSwitchable(): boolean {\n    return this.count > 0;\n  }\n\n  // TODO: leverage these methods when available from future PR.\n  get hasItem(): boolean {\n    return !!this.item && Object.keys(this.item).length > 0;\n  }\n\n  protected get item(): B2BUnit | null {\n    if (!this.outlet.context) {\n      return null;\n    }\n    const { _field, _options, _type, _i18nRoot, ...all } = this.outlet.context;\n    return all as B2BUnit;\n  }\n}\n","<a\n  *ngIf=\"hasItem\"\n  class=\"hide-focus-border\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabIndex]=\"tabIndex\"\n>\n  <button\n    *ngIf=\"isSwitchable\"\n    class=\"button tree-item-toggle\"\n    type=\"button\"\n    (click)=\"toggleItem($event)\"\n  >\n    <cx-icon [type]=\"expanded ? 'CARET_DOWN' : 'CARET_RIGHT'\"></cx-icon>\n  </button>\n  <span class=\"text\" title=\"{{ combinedName }}\">{{ combinedName }}</span>\n</a>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { UnitListComponent } from './unit-list.component';\nimport { IconModule } from '@spartacus/storefront';\nimport { ListModule } from '../../shared/list/list.module';\nimport { ToggleLinkCellComponent } from './toggle-link/toggle-link-cell.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    ListModule,\n  ],\n  declarations: [UnitListComponent, ToggleLinkCellComponent],\n})\nexport class UnitListModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-user-details-cell',\n  templateUrl: './user-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUserDetails',\n            params: model\n          } | cxUrl\n        \"\n        >{{ model.name }}</a\n      >\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <li\n          *ngFor=\"let role of model.roles; let isLast = last\"\n          [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n        ></li>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model?.name }}\n</button>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-unit-details-cell',\n  templateUrl: './unit-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: { uid: model.id }\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.id }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.approvalProcess?.name\">\n      <label>{{ 'orgUnit.approvalProcess' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.approvalProcess?.name }}\n      </span>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitChildService extends CurrentUnitService {\n  protected getParamKey(): string {\n    // We must come up with a fake param key, to avoid that the (parent) unit\n    // code is loaded from the route parameter map.\n    return 'childUnitCode';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport {\n  OrgUnitService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { UnitFormService } from '../../../form/unit-form.service';\nimport { UnitItemService } from '../../../services/unit-item.service';\nimport { CurrentUnitChildService } from './current-unit-child.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitChildItemService extends UnitItemService {\n  constructor(\n    protected currentItemService: CurrentUnitChildService,\n    protected routingService: RoutingService,\n    protected formService: UnitFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService, unitService);\n  }\n\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    // we enable the parentOrgUnit temporarily so that the underlying\n    // save method can read the complete form.value.\n    form.get('parentOrgUnit')?.enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitChildren';\n  }\n\n  protected buildRouteParams(item: B2BUnit) {\n    return { uid: item.parentOrgUnit.uid };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitItemService } from '../../../services/unit-item.service';\nimport { UnitChildItemService } from './unit-child-item.service';\n\n@Component({\n  selector: 'cx-org-unit-child-create',\n  templateUrl: './unit-child-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `UnitItemService` to\n    // let the form component work with child units.\n    {\n      provide: UnitItemService,\n      useExisting: UnitChildItemService,\n    },\n  ],\n})\nexport class UnitChildCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-unit-form\n  [createChildUnit]=\"true\"\n  i18nRoot=\"orgUnit.children\"\n></cx-org-unit-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UnitFormModule } from '../../../form/unit-form.module';\nimport { UnitChildCreateComponent } from './unit-child-create.component';\n\n@NgModule({\n  imports: [CommonModule, UnitFormModule],\n  declarations: [UnitChildCreateComponent],\n})\nexport class UnitChildCreateModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { CostCenter } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { CostCenterItemService } from '../../../../cost-center/services/cost-center-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitCostCenterItemService extends CostCenterItemService {\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    // we enable the unit so that the underlying\n    // save method can read the complete form.value.\n    form.get('unit').enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'orgUnitCostCenters'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitCostCenters';\n  }\n\n  protected buildRouteParams(item: CostCenter) {\n    return { uid: item.unit.uid };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CostCenterItemService } from '../../../../cost-center/services/cost-center-item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitCostCenterItemService } from './unit-cost-center-item.service';\n\n@Component({\n  selector: 'cx-org-unit-cost-center-create',\n  templateUrl: './unit-cost-center-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `CostCenterItemService` to\n    // let the form component work with unit cost centers.\n    {\n      provide: CostCenterItemService,\n      useExisting: UnitCostCenterItemService,\n    },\n  ],\n})\nexport class UnitCostCenterCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-cost-center-form [unitKey]=\"unitKey$ | async\"></cx-org-cost-center-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CostCenterFormModule } from '../../../../cost-center/form/cost-center-form.module';\nimport { UnitCostCenterCreateComponent } from './unit-cost-center-create.component';\n\n@NgModule({\n  imports: [CommonModule, CostCenterFormModule],\n  declarations: [UnitCostCenterCreateComponent],\n})\nexport class UnitCostCenterCreateModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { B2BUser } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { UserItemService } from '../../../../user/services/user-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserItemService extends UserItemService {\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    // we enable the orgUnit temporarily so that the underlying\n    // save method can read the complete form.value.\n    form.get('orgUnit')?.enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitUserList';\n  }\n\n  protected buildRouteParams(item: B2BUser) {\n    return { uid: item.orgUnit.uid };\n  }\n\n  // @override to default method\n  launchDetails(item: B2BUser): void {\n    const cxRoute = this.getDetailsRoute();\n    const params = this.buildRouteParams(item);\n    if (cxRoute && item && Object.keys(item).length > 0) {\n      this.routingService.go({ cxRoute, params });\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole, Title, UserService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  B2BUserService,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentUserService } from '../services/current-user.service';\nimport { UserItemService } from '../services/user-item.service';\n\n@Component({\n  selector: 'cx-org-user-form',\n  templateUrl: './user-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentUserService,\n    },\n  ],\n})\nexport class UserFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  /**\n   * Initialize the business unit for the user.\n   *\n   * If there's a unit provided, we disable the unit form control.\n   */\n  @Input() set unitKey(value: string) {\n    if (value) {\n      this.form?.get('orgUnit.uid').setValue(value);\n      this.form?.get('orgUnit')?.disable();\n    }\n  }\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid').setValue(units[0]?.id);\n      }\n    })\n  );\n\n  titles$: Observable<Title[]> = this.userService.getTitles();\n\n  availableRoles: B2BUserRole[] = this.b2bUserService.getAllRoles();\n\n  constructor(\n    protected itemService: ItemService<B2BUser>,\n    protected unitService: OrgUnitService,\n    protected userService: UserService,\n    protected b2bUserService: B2BUserService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  updateRoles(event: MouseEvent) {\n    const { checked, value } = event.target as HTMLInputElement;\n    if (checked) {\n      this.roles.push(new FormControl(value));\n    } else {\n      this.roles.removeAt(this.roles.value.indexOf(value));\n    }\n  }\n\n  get roles(): FormArray {\n    return this.form.get('roles') as FormArray;\n  }\n\n  get isAssignedToApprovers(): FormControl {\n    return this.form.get('isAssignedToApprovers') as FormControl;\n  }\n}\n","<cx-org-form i18nRoot=\"orgUser\">\n  <ng-container main *ngIf=\"form\" [formGroup]=\"form\">\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.title' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUser.title' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('titleCode')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.firstName' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUser.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.lastName' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUser.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.email' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"email\"\n        required\n        placeholder=\"{{ 'orgUser.email' | cxTranslate }}\"\n        formControlName=\"email\"\n      />\n      <cx-form-errors [control]=\"form.get('email')\"></cx-form-errors>\n    </label>\n\n    <fieldset aria-required=\"true\" class=\"full-width\" formArrayName=\"roles\">\n      <legend class=\"label-content required\">\n        {{ 'orgUser.roles' | cxTranslate }}\n      </legend>\n\n      <label\n        class=\"form-check\"\n        *ngFor=\"let role of availableRoles; let i = index\"\n      >\n        <input\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          [value]=\"role\"\n          [checked]=\"roles?.value?.includes(role)\"\n          (change)=\"updateRoles($event)\"\n          [disabled]=\"form?.status === 'DISABLED'\"\n        />\n        <span class=\"form-check-label\">\n          {{ 'organization.userRoles.' + role | cxTranslate }}\n        </span>\n      </label>\n    </fieldset>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgUser.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUser.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n\n    <div *ngIf=\"isAssignedToApprovers\" class=\"full-width\">\n      <label class=\"form-check\">\n        <input\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          formControlName=\"isAssignedToApprovers\"\n        />\n        <span class=\"form-check-label\">{{\n          'orgUser.assignApprover' | cxTranslate\n        }}</span>\n      </label>\n    </div>\n  </ng-container>\n</cx-org-form>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserItemService } from '../../../../user/services/user-item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitUserItemService } from './unit-user-item.service';\n\n@Component({\n  selector: 'cx-org-unit-user-create',\n  templateUrl: './unit-user-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `UnitItemService` to\n    // let the form component work with child units.\n    {\n      provide: UserItemService,\n      useExisting: UnitUserItemService,\n    },\n  ],\n})\nexport class UnitUserCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-user-form\n  [unitKey]=\"unitKey$ | async\"\n  i18nRoot=\"orgUnit.users\"\n></cx-org-user-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { UserFormComponent } from './user-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  declarations: [UserFormComponent],\n  exports: [UserFormComponent],\n})\nexport class UserFormModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UserFormModule } from '../../../../user/form/user-form.module';\nimport { UnitUserCreateComponent } from './unit-user-create.component';\n\n@NgModule({\n  imports: [CommonModule, UserFormModule],\n  declarations: [UnitUserCreateComponent],\n})\nexport class UnitUserCreateModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitAddressService } from '../links/addresses/services/current-unit-address.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UnitAddressRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUnitAddressService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Address> {\n    return this.currentItemService.item$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  B2BUnitTreeNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\nimport { UnitItemService } from './unit-item.service';\nimport { UnitTreeService } from './unit-tree.service';\n\n/**\n * Service to populate Unit data to `Table` data. Unit\n * data is driven by the table configuration, using the `OrganizationTables.UNIT`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitListService extends ListService<B2BUnitTreeNode> {\n  protected tableType = OrganizationTableType.UNIT;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService,\n    protected unitItemService: UnitItemService,\n    protected unitTreeService: UnitTreeService\n  ) {\n    super(tableService);\n  }\n\n  protected load(): Observable<EntitiesModel<B2BUnitTreeNode>> {\n    return this.unitService.getTree().pipe(\n      switchMap((node) =>\n        this.unitItemService.key$.pipe(\n          map((key) => {\n            this.unitTreeService.initialize(node, key);\n            return node;\n          })\n        )\n      ),\n      switchMap((tree) =>\n        this.unitTreeService.treeToggle$.pipe(map(() => tree))\n      ),\n      map((tree: B2BUnitNode) => this.convertListItem(tree))\n    );\n  }\n\n  protected convertListItem(\n    unit: B2BUnitNode,\n    depthLevel = 0,\n    pagination = { totalResults: 0 }\n  ): EntitiesModel<B2BUnitTreeNode> {\n    let values = [];\n    if (!unit) {\n      return;\n    }\n\n    const node: B2BUnitTreeNode = {\n      ...unit,\n      count: unit.children?.length ?? 0,\n      expanded: this.unitTreeService.isExpanded(unit.id, depthLevel),\n      depthLevel,\n      // tmp, should be normalized\n      uid: unit.id,\n      children: [...unit.children].sort((unitA, unitB) =>\n        unitA.name.localeCompare(unitB.name)\n      ),\n    };\n\n    values.push(node);\n    pagination.totalResults++;\n\n    node.children.forEach((childUnit) => {\n      const childList = this.convertListItem(\n        childUnit,\n        depthLevel + 1,\n        pagination\n      )?.values;\n      if (node.expanded && childList.length > 0) {\n        values = values.concat(childList);\n      }\n    });\n\n    return { values, pagination };\n  }\n\n  key(): string {\n    return 'uid';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUnit,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitService } from './current-unit.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UnitRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUnitService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<B2BUnit> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { BREAKPOINT, TableConfig, TableLayout } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { CostCenterDetailsCellComponent } from '../cost-center/details-cell/cost-center-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserDetailsCellComponent } from '../user/details-cell/user-details-cell.component';\nimport { UnitDetailsCellComponent } from './details-cell/unit-details-cell.component';\nimport { UnitDetailsComponent } from './details/unit-details.component';\nimport { UnitFormComponent } from './form/unit-form.component';\nimport { UnitAddressDetailsComponent } from './links/addresses/details/unit-address-details.component';\nimport { UnitAddressFormComponent } from './links/addresses/form/unit-address-form.component';\nimport { LinkCellComponent } from './links/addresses/list/link-cell.component';\nimport { UnitAddressListComponent } from './links/addresses/list/unit-address-list.component';\nimport { UnitAssignedApproverListComponent } from './links/approvers/assigned/unit-assigned-approver-list.component';\nimport { UnitApproverListComponent } from './links/approvers/unit-approver-list.component';\nimport { UnitChildCreateComponent } from './links/children/create/unit-child-create.component';\nimport { UnitChildrenComponent } from './links/children/unit-children.component';\nimport { UnitCostCenterListComponent } from './links/cost-centers/unit-cost-centers.component';\nimport {\n  UnitCostCenterCreateComponent,\n  UnitUserCreateComponent,\n} from './links/index';\nimport { UnitUserRolesCellComponent } from './links/users/list/unit-user-link-cell.component';\nimport { UnitUserListComponent } from './links/users/list/unit-user-list.component';\nimport { UnitUserRolesFormComponent } from './links/users/roles/unit-user-roles.component';\nimport { ToggleLinkCellComponent } from './list/toggle-link/toggle-link-cell.component';\nimport { UnitListComponent } from './list/unit-list.component';\nimport { UnitAddressRoutePageMetaResolver } from './services/unit-address-route-page-meta.resolver';\nimport { UnitItemService } from './services/unit-item.service';\nimport { UnitListService } from './services/unit-list.service';\nimport { UnitRoutePageMetaResolver } from './services/unit-route-page-meta.resolver';\n\nexport const unitsCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUnitsListComponent: {\n      component: UnitListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UnitListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UnitItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUnit.breadcrumbs.list',\n              resolver: UnitRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UnitFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.unitCode}`,\n            component: UnitDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: UnitFormComponent,\n              },\n              {\n                path: 'children',\n                component: UnitChildrenComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.children' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitChildCreateComponent,\n                  },\n                ],\n              },\n              {\n                path: 'approvers',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.approvers' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UnitAssignedApproverListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UnitApproverListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'users',\n                component: UnitUserListComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.users' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitUserCreateComponent,\n                  },\n                  {\n                    path: `:${ROUTE_PARAMS.userCode}/roles`,\n                    component: UnitUserRolesFormComponent,\n                  },\n                ],\n              },\n              {\n                path: 'cost-centers',\n                component: UnitCostCenterListComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.costCenters' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitCostCenterCreateComponent,\n                  },\n                ],\n              },\n              {\n                path: 'addresses',\n                component: UnitAddressListComponent,\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgUnit.breadcrumbs.addresses',\n                    resolver: UnitAddressRoutePageMetaResolver,\n                  },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitAddressFormComponent,\n                  },\n                  {\n                    path: `:${ROUTE_PARAMS.addressCode}`,\n                    data: {\n                      cxPageMeta: {\n                        breadcrumb: 'orgUnit.breadcrumbs.addressDetails',\n                      },\n                    },\n                    children: [\n                      {\n                        path: '',\n                        component: UnitAddressDetailsComponent,\n                      },\n                      {\n                        path: 'edit',\n                        component: UnitAddressFormComponent,\n                      },\n                    ],\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function unitsTableConfigFactory(): TableConfig {\n  return unitsTableConfig;\n}\n\nexport const unitsTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.UNIT]: {\n      cells: ['name'],\n      options: {\n        layout: TableLayout.VERTICAL,\n        cells: {\n          name: {\n            dataComponent: ToggleLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n        },\n      },\n      [BREAKPOINT.lg]: {\n        cells: ['name', 'active', 'uid'],\n      },\n    },\n    [OrganizationTableType.UNIT_USERS]: {\n      cells: ['name', 'roles'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          roles: {\n            dataComponent: UnitUserRolesCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_CHILDREN]: {\n      cells: ['name', 'active'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UnitDetailsCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_APPROVERS]: {\n      cells: ['name', 'orgUnit', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n          orgUnit: {\n            dataComponent: UnitCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_ASSIGNED_APPROVERS]: {\n      cells: ['name', 'orgUnit', 'actions'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n          orgUnit: {\n            dataComponent: UnitCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_COST_CENTERS]: {\n      cells: ['name'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: CostCenterDetailsCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_ADDRESS]: {\n      cells: ['formattedAddress'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          formattedAddress: {\n            dataComponent: LinkCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { UnitDetailsModule } from './details/unit-details.module';\nimport { UnitFormModule } from './form/unit-form.module';\nimport { UnitAddressModule } from './links/addresses/unit-address.module';\nimport { UnitApproverListModule } from './links/approvers/unit-approver-list.module';\nimport { UnitChildrenModule } from './links/children/unit-children.module';\nimport { UnitCostCenterListModule } from './links/cost-centers/unit-cost-centers.module';\nimport { UnitUsersModule } from './links/users/unit-user-list.module';\nimport { UnitListModule } from './list/unit-list.module';\nimport { unitsCmsConfig, unitsTableConfigFactory } from './units.config';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    UnitListModule,\n    UnitDetailsModule,\n    UnitFormModule,\n    UnitChildrenModule,\n    UnitApproverListModule,\n    UnitUsersModule,\n    UnitCostCenterListModule,\n    UnitAddressModule,\n  ],\n  providers: [\n    provideDefaultConfig(unitsCmsConfig),\n    provideDefaultConfigFactory(unitsTableConfigFactory),\n  ],\n})\nexport class UnitsComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUserGroupService extends CurrentItemService<UserGroup> {\n  constructor(\n    protected routingService: RoutingService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userGroupCode;\n  }\n\n  protected getItem(code: string): Observable<UserGroup> {\n    return this.userGroupService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.userGroupService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupFormService extends FormService<UserGroup> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'uid',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupFormService } from '../form/user-group-form.service';\nimport { CurrentUserGroupService } from './current-user-group.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupItemService extends ItemService<UserGroup> {\n  constructor(\n    protected currentItemService: CurrentUserGroupService,\n    protected routingService: RoutingService,\n    protected formService: UserGroupFormService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<UserGroup> {\n    this.userGroupService.load(code);\n    return this.userGroupService.get(code);\n  }\n\n  update(\n    code: string,\n    value: UserGroup\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.update(code, value);\n    return this.userGroupService.getLoadingStatus(value.uid);\n  }\n\n  delete(code: string): Observable<OrganizationItemStatus<UserGroup>> {\n    this.launchList();\n    this.userGroupService.delete(code);\n    return this.userGroupService.getLoadingStatus(code);\n  }\n\n  protected create(\n    value: UserGroup\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.create(value);\n    return this.userGroupService.getLoadingStatus(value.uid);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgUserGroupDetails';\n  }\n\n  protected launchList() {\n    this.routingService.go({\n      cxRoute: 'orgUserGroup',\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupItemService } from '../services/user-group-item.service';\n\n@Component({\n  selector: 'cx-org-user-group-details',\n  templateUrl: './user-group-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserGroupItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UserGroupDetailsComponent {\n  model$: Observable<UserGroup> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<UserGroup>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUserGroup.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [routerLink]=\"{ cxRoute: 'orgUserGroupEdit', params: model } | cxUrl\"\n    [class.disabled]=\"isInEditMode$ | async\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-delete-item\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUserGroup\"\n  ></cx-org-delete-item>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserGroupUsers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.user' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserGroupPermissions', params: model } | cxUrl\n        \"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { DeleteItemModule } from '../../shared/detail/delete-item-action/delete-item.module';\nimport { UserGroupDetailsComponent } from './user-group-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    DeleteItemModule,\n    ItemExistsModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserGroupDetailsComponent],\n})\nexport class UserGroupDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupItemService } from '../services/user-group-item.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-user-group-form',\n  templateUrl: './user-group-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserGroupItemService,\n    },\n  ],\n})\nexport class UserGroupFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  // getList ???\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<UserGroup>,\n    protected unitService: OrgUnitService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createUidWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgUserGroup\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUserGroup.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUserGroup.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUserGroup.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUserGroup.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgUserGroup.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUserGroup.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { UserGroupFormComponent } from './user-group-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    FormModule,\n  ],\n  declarations: [UserGroupFormComponent],\n})\nexport class UserGroupFormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Permission,\n  PermissionService,\n  UserGroup,\n  UserGroupService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupPermissionListService extends SubListService<Permission> {\n  protected tableType = OrganizationTableType.USER_GROUP_PERMISSIONS;\n  protected _domainType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService,\n    protected permissionService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  /**\n   *\n   * @override\n   * Loads all b2b users.\n   *\n   * @param code The user group code.\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Permission>> {\n    return this.userGroupService.getAvailableOrderApprovalPermissions(\n      code,\n      pagination\n    );\n  }\n\n  /**\n   * @override\n   * Assign user to the user group.\n   */\n  assign(\n    userGroupCode: string,\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.assignPermission(userGroupCode, permissionCode);\n    return this.permissionService.getLoadingStatus(permissionCode);\n  }\n\n  /**\n   * @override\n   * Unassigns the user from the user group.\n   */\n  unassign(\n    userGroupCode: string,\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.unassignPermission(userGroupCode, permissionCode);\n    return this.permissionService.getLoadingStatus(permissionCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserGroupPermissionListService } from '../user-group-permission-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupAssignedPermissionsListService extends UserGroupPermissionListService {\n  protected tableType = OrganizationTableType.USER_GROUP_ASSIGNED_PERMISSIONS;\n  /**\n   * @override\n   * Load all b2b users assigned to the given user group\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Permission>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserGroupAssignedPermissionsListService } from './user-group-assigned-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-assigned-permission-list',\n  templateUrl: './user-group-assigned-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupAssignedPermissionsListService,\n    },\n  ],\n})\nexport class UserGroupAssignedPermissionListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserGroupPermissionListService } from './user-group-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-permission-list',\n  templateUrl: './user-group-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupPermissionListService,\n    },\n  ],\n})\nexport class UserGroupPermissionListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserGroupAssignedPermissionListComponent } from './assigned/user-group-assigned-permission-list.component';\nimport { UserGroupPermissionListComponent } from './user-group-permission-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, SubListModule],\n\n  declarations: [\n    UserGroupPermissionListComponent,\n    UserGroupAssignedPermissionListComponent,\n  ],\n})\nexport class UserGroupPermissionModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-permission-details-cell',\n  templateUrl: './permission-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PermissionDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgPurchaseLimitDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.code }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.code }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface UserGroupModel {\n  uid?: string;\n  name?: string;\n  orgUnit?: any;\n}\n\n/**\n * Service to populate Cost Center data to `Table` data. The cost center\n * data is driven by the table configuration, using the `OrganizationTables.COST_CENTER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupListService extends ListService<UserGroupModel> {\n  protected tableType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(tableService);\n  }\n\n  key(): string {\n    return 'uid';\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<UserGroupModel>> {\n    return this.userGroupService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertUserGroups(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertUserGroups({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<UserGroup>): EntitiesModel<UserGroupModel> {\n    const userGroupModels: EntitiesModel<UserGroupModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return userGroupModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUserGroupService } from './current-user-group.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserGroupRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUserGroupService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<UserGroup> {\n    return this.currentItemService.item$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel, B2BUser } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupUserListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.USER_GROUP_USERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  /**\n   *\n   * @override\n   * Loads all b2b users.\n   *\n   * @param code The user group code.\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userGroupService.getAvailableOrgCustomers(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign user to the user group.\n   */\n  assign(\n    userGroupCode: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userGroupService.assignMember(userGroupCode, customerId);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  /**\n   * @override\n   * Unassigns the user from the user group.\n   */\n  unassign(\n    userGroupCode: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userGroupService.unassignMember(userGroupCode, customerId);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  unassignAllMembers(\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.unassignAllMembers(userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserGroupUserListService } from '../user-group-user-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupAssignedUserListService extends UserGroupUserListService {\n  protected tableType = OrganizationTableType.USER_GROUP_ASSIGNED_USERS;\n  /**\n   * @override\n   * Load all b2b users assigned to the given user group\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserGroupAssignedUserListService } from './user-group-assigned-user-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-assigned-user-list',\n  templateUrl: './user-group-assigned-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupAssignedUserListService,\n    },\n  ],\n})\nexport class UserGroupAssignedUserListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { filter, first, switchMap, take } from 'rxjs/operators';\nimport {\n  LoadStatus,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { CurrentUserGroupService } from '../services/current-user-group.service';\nimport { UserGroupUserListService } from './user-group-user-list.service';\nimport { SubListComponent } from '../../shared/sub-list/sub-list.component';\n\n@Component({\n  selector: 'cx-org-user-group-user-list',\n  templateUrl: './user-group-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupUserListService,\n    },\n  ],\n})\nexport class UserGroupUserListComponent {\n  constructor(\n    protected currentUserGroupService: CurrentUserGroupService,\n    protected userGroupUserListService: UserGroupUserListService\n  ) {}\n\n  @ViewChild('subList')\n  subList: SubListComponent;\n\n  unassignAll() {\n    this.currentUserGroupService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          this.userGroupUserListService.unassignAllMembers(key).pipe(\n            take(1),\n            filter((data) => data.status === LoadStatus.SUCCESS)\n          )\n        )\n      )\n      .subscribe((data) => {\n        this.notify(data.item);\n      });\n  }\n\n  protected notify(item: UserGroup) {\n    this.subList.messageService.add({\n      message: {\n        key: `orgUserGroupUsers.unassignAllConfirmation`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","<cx-org-sub-list [previous]=\"false\" #subList>\n  <button actions (click)=\"unassignAll()\" class=\"link\">\n    {{ 'orgUserGroupUsers.unassignAll' | cxTranslate }}\n  </button>\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { PermissionDetailsCellComponent } from '../permission/details-cell/permission-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserDetailsCellComponent } from '../user/details-cell/user-details-cell.component';\nimport { UserGroupDetailsComponent } from './details/user-group-details.component';\nimport { UserGroupFormComponent } from './form/user-group-form.component';\nimport { UserGroupAssignedPermissionListComponent } from './permissions/assigned/user-group-assigned-permission-list.component';\nimport { UserGroupPermissionListComponent } from './permissions/user-group-permission-list.component';\nimport { UserGroupItemService } from './services/user-group-item.service';\nimport { UserGroupListService } from './services/user-group-list.service';\nimport { UserGroupRoutePageMetaResolver } from './services/user-group-route-page-meta.resolver';\nimport { UserGroupAssignedUserListComponent } from './users/assigned/user-group-assigned-user-list.component';\nimport { UserGroupUserListComponent } from './users/user-group-user-list.component';\n\nexport const userGroupCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUserGroupsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UserGroupListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UserGroupItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUserGroup.breadcrumbs.list',\n              resolver: UserGroupRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UserGroupFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.userGroupCode}`,\n            component: UserGroupDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUserGroup.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: UserGroupFormComponent,\n              },\n              {\n                path: 'users',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUserGroup.breadcrumbs.users' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserGroupAssignedUserListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserGroupUserListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'purchase-limits',\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgUserGroup.breadcrumbs.permissions',\n                  },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserGroupAssignedPermissionListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserGroupPermissionListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function userGroupTableConfigFactory(): TableConfig {\n  return userGroupTableConfig;\n}\n\nexport const userGroupTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.USER_GROUP]: {\n      cells: ['name', 'uid', 'unit'],\n      options: {\n        dataComponent: CellComponent,\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_ASSIGNED_USERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.USER_GROUP_USERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_ASSIGNED_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserGroupAssignedUserListComponent } from './assigned/user-group-assigned-user-list.component';\nimport { UserGroupUserListComponent } from './user-group-user-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserGroupAssignedUserListComponent,\n    UserGroupUserListComponent,\n  ],\n})\nexport class UserGroupUserModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { UserGroupDetailsModule } from './details/user-group-details.module';\nimport { UserGroupFormModule } from './form/user-group-form.module';\nimport { UserGroupPermissionModule } from './permissions/user-group-permission-list.module';\nimport {\n  userGroupCmsConfig,\n  userGroupTableConfigFactory,\n} from './user-group.config';\nimport { UserGroupUserModule } from './users/user-group-user-list.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    UserGroupDetailsModule,\n    UserGroupFormModule,\n    UserGroupPermissionModule,\n    UserGroupUserModule,\n  ],\n  providers: [\n    provideDefaultConfig(userGroupCmsConfig),\n    provideDefaultConfigFactory(userGroupTableConfigFactory),\n  ],\n})\nexport class UserGroupComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserApproverListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.USER_APPROVERS;\n  protected _domainType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userService.getApprovers(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign approver to the user.\n   */\n  assign(\n    userCode: string,\n    approverId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.assignApprover(userCode, approverId);\n    return this.userService.getLoadingStatus(approverId);\n  }\n\n  /**\n   * @override\n   * Unassign the approver from the user.\n   */\n  unassign(\n    userCode: string,\n    approverId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.unassignApprover(userCode, approverId);\n    return this.userService.getLoadingStatus(approverId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserApproverListService } from '../user-approver-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedApproverListService extends UserApproverListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_APPROVERS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedApproverListService } from './user-assigned-approver-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-approver-list',\n  templateUrl: './user-assigned-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedApproverListService,\n    },\n  ],\n})\nexport class UserAssignedApproverListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserApproverListService } from './user-approver-list.service';\n\n@Component({\n  selector: 'cx-org-user-approver-list',\n  templateUrl: './user-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserApproverListService,\n    },\n  ],\n})\nexport class UserApproverListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedApproverListComponent } from './assigned/user-assigned-approver-list.component';\nimport { UserApproverListComponent } from './user-approver-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [UserApproverListComponent, UserAssignedApproverListComponent],\n})\nexport class UserApproverListModule {}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserChangePasswordFormService extends FormService<any> {\n  /**\n   * @override\n   * Adds the password and confirmPassword field. Also adds the customerId field,\n   * so that the customerId can be used during persistent.\n   */\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('customerId', new FormControl(''));\n    form.setControl(\n      'password',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.passwordValidator,\n      ])\n    );\n    form.setControl(\n      'confirmPassword',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.passwordValidator,\n      ])\n    );\n    form.setValidators(\n      CustomFormValidators.passwordsMustMatch('password', 'confirmPassword')\n    );\n    this.form = form;\n  }\n\n  getForm(item?: User): FormGroup {\n    // we need do cleanup, to avoid have filled form after next open of that\n    this.form = null;\n    return super.getForm(item);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { User } from '@spartacus/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map, switchMap, take } from 'rxjs/operators';\nimport { MessageService } from '../../shared/message/services/message.service';\nimport { UserItemService } from '../services/user-item.service';\nimport { UserChangePasswordFormService } from './user-change-password-form.service';\n\n@Component({\n  selector: 'cx-org-user-change-password-form',\n  templateUrl: './user-change-password-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class UserChangePasswordFormComponent {\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    map((item) => this.formService.getForm(item))\n  );\n\n  constructor(\n    protected itemService: UserItemService,\n    protected formService: UserChangePasswordFormService,\n    protected messageService: MessageService\n  ) {}\n\n  save(form: FormGroup): void {\n    this.itemService.current$\n      .pipe(\n        first(),\n        switchMap((item) =>\n          this.itemService.save(form, (form.value as User).customerId).pipe(\n            take(1),\n            filter((data) => data.status === LoadStatus.SUCCESS),\n            map((data) => ({\n              ...item,\n              ...data.item,\n            }))\n          )\n        )\n      )\n      .subscribe((data) => {\n        this.notify(data);\n        this.itemService.launchDetails(data);\n      });\n  }\n\n  protected notify(item: User) {\n    this.messageService.add({\n      message: {\n        key: `orgUser.messages.updatePassword`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","<form *ngIf=\"form$ | async as form\" [formGroup]=\"form\" (submit)=\"save(form)\">\n  <cx-org-card\n    [previous]=\"false\"\n    i18nRoot=\"orgUser.password\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <button actions class=\"button primary\">\n      {{ 'organization.save' | cxTranslate }}\n    </button>\n    <button actions class=\"link\" routerLink=\"../\" type=\"button\">\n      {{ 'organization.cancel' | cxTranslate }}\n    </button>\n\n    <section main class=\"details\">\n      <label class=\"full-width\">\n        <span class=\"label-content\">{{\n          'orgUser.password.newPassword' | cxTranslate\n        }}</span>\n        <input\n          aria-required=\"true\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"{{ 'orgUser.password.newPassword' | cxTranslate }}\"\n          formControlName=\"password\"\n        />\n        <cx-form-errors [control]=\"form.get('password')\"></cx-form-errors>\n      </label>\n      <label>\n        <span class=\"label-content\">{{\n          'orgUser.password.confirmPassword' | cxTranslate\n        }}</span>\n        <input\n          aria-required=\"true\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"{{ 'orgUser.password.confirmPassword' | cxTranslate }}\"\n          formControlName=\"confirmPassword\"\n        />\n        <cx-form-errors\n          [control]=\"form.get('confirmPassword')\"\n        ></cx-form-errors>\n      </label>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../shared/card/card.module';\nimport { UserChangePasswordFormComponent } from './user-change-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    CardModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserChangePasswordFormComponent],\n})\nexport class UserChangePasswordFormModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUser } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserItemService } from '../services/user-item.service';\n\n@Component({\n  selector: 'cx-org-user-details',\n  templateUrl: './user-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UserDetailsComponent {\n  userGuardSubscription: Subscription;\n  model$: Observable<B2BUser> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<B2BUser>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUser.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUserEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    key=\"customerId\"\n    i18nRoot=\"orgUser\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgUser\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <li\n          *ngFor=\"let role of model.roles; let isLast = last\"\n          [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n        ></li>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n    <div class=\"property full-width\">\n      <a\n        *ngIf=\"model.customerId\"\n        class=\"link\"\n        [class.disabled]=\"!model.active\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserChangePassword', params: model } | cxUrl\n        \"\n      >\n        {{ 'orgUser.links.password' | cxTranslate }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.customerId\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserUserGroups', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.userGroup' | cxTranslate }}\n      </a>\n\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserPermissions', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { UserDetailsComponent } from './user-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserDetailsComponent],\n  exports: [UserDetailsComponent],\n})\nexport class UserDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  PermissionService,\n  Permission,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPermissionListService extends SubListService<Permission> {\n  protected tableType = OrganizationTableType.USER_PERMISSIONS;\n  protected _domainType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService,\n    protected permissionService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userService.getPermissions(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign permission to the user.\n   */\n  assign(\n    userCode: string,\n    code: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.userService.assignPermission(userCode, code);\n    return this.permissionService.getLoadingStatus(code);\n  }\n\n  /**\n   * @override\n   * Unassign the permission from the user.\n   */\n  unassign(\n    userCode: string,\n    code: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.userService.unassignPermission(userCode, code);\n    return this.permissionService.getLoadingStatus(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserPermissionListService } from '../user-permission-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedPermissionListService extends UserPermissionListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_PERMISSIONS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((result) => this.filterSelected(result)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedPermissionListService } from './user-assigned-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-permission-list',\n  templateUrl: './user-assigned-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedPermissionListService,\n    },\n  ],\n})\nexport class UserAssignedPermissionListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserPermissionListService } from './user-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-permission-list',\n  templateUrl: './user-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserPermissionListService,\n    },\n  ],\n})\nexport class UserPermissionListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedPermissionListComponent } from './assigned/user-assigned-permission-list.component';\nimport { UserPermissionListComponent } from './user-permission-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserPermissionListComponent,\n    UserAssignedPermissionListComponent,\n  ],\n})\nexport class UserPermissionListModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  UserGroup,\n  UserGroupService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserUserGroupListService extends SubListService<UserGroup> {\n  protected tableType = OrganizationTableType.USER_USER_GROUPS;\n  protected _domainType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.userService\n      .getUserGroups(code, pagination)\n      .pipe(filter((list) => Boolean(list)));\n  }\n\n  /**\n   * @override\n   * Assign user group to the user.\n   */\n  assign(\n    userCode: string,\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userService.assignUserGroup(userCode, userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n\n  /**\n   * @override\n   * Unassign the user group from the user.\n   */\n  unassign(\n    userCode: string,\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userService.unassignUserGroup(userCode, userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserUserGroupListService } from '../user-user-group-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedUserGroupListService extends UserUserGroupListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_USER_GROUPS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<UserGroup>> {\n    return super.load(pagination, code).pipe(\n      filter((list) => Boolean(list)),\n      map((userGroups) => this.filterSelected(userGroups))\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedUserGroupListService } from './user-assigned-user-group-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-user-group-list',\n  templateUrl: './user-assigned-user-group-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedUserGroupListService,\n    },\n  ],\n})\nexport class UserAssignedUserGroupListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserUserGroupListService } from './user-user-group-list.service';\n\n@Component({\n  selector: 'cx-org-user-user-group-list',\n  templateUrl: './user-user-group-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserUserGroupListService,\n    },\n  ],\n})\nexport class UserUserGroupListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedUserGroupListComponent } from './assigned/user-assigned-user-group-list.component';\nimport { UserUserGroupListComponent } from './user-user-group-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserUserGroupListComponent,\n    UserAssignedUserGroupListComponent,\n  ],\n})\nexport class UserUserGroupsModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-user-group-details-cell',\n  templateUrl: './user-group-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserGroupDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUserGroupDetails',\n            params: model\n          } | cxUrl\n        \"\n        >{{ model.name }}</a\n      >\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model?.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface UserModel {\n  uid?: string;\n  name?: string;\n  orgUnit?: any;\n  roles?: string[];\n}\n\n/**\n * Service to populate User data to `Table` data. The user\n * data is driven by the table configuration, using the `OrganizationTables.USER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserListService extends ListService<UserModel> {\n  protected tableType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  key(): string {\n    return 'customerId';\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<UserModel>> {\n    return this.userService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertUsers(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertUsers({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<B2BUser>): EntitiesModel<UserModel> {\n    const userModels: EntitiesModel<UserModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return userModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUserService } from './current-user.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUserService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<B2BUser> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { PermissionDetailsCellComponent } from '../permission/details-cell/permission-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { RolesCellComponent } from '../shared/table/roles/roles-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserGroupDetailsCellComponent } from '../user-group/details-cell/user-group-details-cell.component';\nimport { UserAssignedApproverListComponent } from './approvers/assigned/user-assigned-approver-list.component';\nimport { UserApproverListComponent } from './approvers/user-approver-list.component';\nimport { UserChangePasswordFormComponent } from './change-password-form/user-change-password-form.component';\nimport { UserDetailsCellComponent } from './details-cell/user-details-cell.component';\nimport { UserDetailsComponent } from './details/user-details.component';\nimport { UserFormComponent } from './form/user-form.component';\nimport { UserAssignedPermissionListComponent } from './permissions/assigned/user-assigned-permission-list.component';\nimport { UserPermissionListComponent } from './permissions/user-permission-list.component';\nimport { UserItemService } from './services/user-item.service';\nimport { UserListService } from './services/user-list.service';\nimport { UserRoutePageMetaResolver } from './services/user-route-page-meta.resolver';\nimport { UserUserGroupListComponent } from './user-groups';\nimport { UserAssignedUserGroupListComponent } from './user-groups/assigned/user-assigned-user-group-list.component';\n\nexport const userCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUsersListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UserListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UserItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUser.breadcrumbs.list',\n              resolver: UserRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UserFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.userCode}`,\n            component: UserDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: `edit`,\n                component: UserFormComponent,\n              },\n              {\n                path: `change-password`,\n                component: UserChangePasswordFormComponent,\n              },\n              {\n                path: 'user-groups',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.userGroups' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedUserGroupListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserUserGroupListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'approvers',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.approvers' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedApproverListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserApproverListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'purchase-limits',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.permissions' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedPermissionListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserPermissionListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function userTableConfigFactory(): TableConfig {\n  return userTableConfig;\n}\n\nconst actions = {\n  dataComponent: AssignCellComponent,\n};\n\nconst pagination = {\n  pageSize: MAX_OCC_INTEGER_VALUE,\n};\n\nexport const userTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.USER]: {\n      cells: ['name', 'active', 'uid', 'roles', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n          roles: {\n            dataComponent: RolesCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_APPROVERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_APPROVERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n    [OrganizationTableType.USER_USER_GROUPS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserGroupDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_USER_GROUPS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserGroupDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n    [OrganizationTableType.USER_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { ListModule } from '../shared/list/list.module';\nimport { UserApproverListModule } from './approvers/user-approver-list.module';\nimport { UserChangePasswordFormModule } from './change-password-form/user-change-password-form.module';\nimport { UserDetailsModule } from './details/user-details.module';\nimport { UserFormModule } from './form/user-form.module';\nimport { UserPermissionListModule } from './permissions/user-permission-list.module';\nimport { UserUserGroupsModule } from './user-groups/user-user-group-list.module';\nimport { userCmsConfig, userTableConfigFactory } from './user.config';\n@NgModule({\n  imports: [\n    ListModule,\n    UserChangePasswordFormModule,\n    UserDetailsModule,\n    UserFormModule,\n    UserPermissionListModule,\n    UserUserGroupsModule,\n    UserApproverListModule,\n  ],\n  providers: [\n    provideDefaultConfig(userCmsConfig),\n    provideDefaultConfigFactory(userTableConfigFactory),\n  ],\n})\nexport class UserComponentsModule {}\n","import { NgModule } from '@angular/core';\nimport { BudgetComponentsModule } from './budget/budget-components.module';\nimport { CostCenterComponentsModule } from './cost-center/cost-center-components.module';\nimport { PermissionComponentsModule } from './permission/permission-components.module';\nimport { UnitsComponentsModule } from './unit/units-components.module';\nimport { UserGroupComponentsModule } from './user-group/user-group-components.module';\nimport { UserComponentsModule } from './user/user-components.module';\n\n@NgModule({\n  imports: [\n    BudgetComponentsModule,\n    CostCenterComponentsModule,\n    UnitsComponentsModule,\n    UserGroupComponentsModule,\n    UserComponentsModule,\n    PermissionComponentsModule,\n  ],\n})\nexport class AdministrationComponentsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { CostCenterDetailsCellComponent } from './cost-center-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [CostCenterDetailsCellComponent],\n  exports: [CostCenterDetailsCellComponent],\n})\nexport class CostCenterDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { PermissionDetailsCellComponent } from './permission-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [PermissionDetailsCellComponent],\n  exports: [PermissionDetailsCellComponent],\n})\nexport class PermissionDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UnitDetailsCellComponent } from './unit-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UnitDetailsCellComponent],\n  exports: [UnitDetailsCellComponent],\n})\nexport class UnitDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UserGroupDetailsCellComponent } from './user-group-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UserGroupDetailsCellComponent],\n  exports: [UserGroupDetailsCellComponent],\n})\nexport class UserGroupDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UserDetailsCellComponent } from './user-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UserDetailsCellComponent],\n  exports: [UserDetailsCellComponent],\n})\nexport class UserDetailsCellModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}