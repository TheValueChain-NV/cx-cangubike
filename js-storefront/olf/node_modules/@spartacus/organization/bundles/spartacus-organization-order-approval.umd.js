(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('rxjs'), require('rxjs/operators'), require('@spartacus/core'), require('@ngrx/store'), require('@spartacus/storefront'), require('@angular/common'), require('@angular/router'), require('@angular/common/http'), require('@ngrx/effects')) :
    typeof define === 'function' && define.amd ? define('@spartacus/organization/order-approval', ['exports', '@angular/core', '@angular/forms', 'rxjs', 'rxjs/operators', '@spartacus/core', '@ngrx/store', '@spartacus/storefront', '@angular/common', '@angular/router', '@angular/common/http', '@ngrx/effects'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.organization = global.spartacus.organization || {}, global.spartacus.organization['order-approval'] = {}), global.ng.core, global.ng.forms, global.rxjs, global.rxjs.operators, global.core, global.store, global.storefront, global.ng.common, global.ng.router, global.ng.common.http, global.effects));
}(this, (function (exports, i0, i3, rxjs, operators, i1, i1$1, i4, i2, i6, i1$2, i1$3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace$3 = /*#__PURE__*/_interopNamespace(i1$3);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    exports.OrderApprovalDecisionValue = void 0;
    (function (OrderApprovalDecisionValue) {
        OrderApprovalDecisionValue["APPROVE"] = "APPROVE";
        OrderApprovalDecisionValue["REJECT"] = "REJECT";
    })(exports.OrderApprovalDecisionValue || (exports.OrderApprovalDecisionValue = {}));

    var ORDER_APPROVAL_FEATURE = 'order-approval';
    var ORDER_APPROVAL_ENTITIES = 'order-approval-entities';
    var ORDER_APPROVAL_LIST = 'order-approval-list';
    var ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID = 'orderApproval.makeDecision';

    var LOAD_ORDER_APPROVAL = '[OrderApproval] Load OrderApproval Data';
    var LOAD_ORDER_APPROVAL_FAIL = '[OrderApproval] Load OrderApproval Data Fail';
    var LOAD_ORDER_APPROVAL_SUCCESS = '[OrderApproval] Load OrderApproval Data Success';
    var LOAD_ORDER_APPROVALS = '[OrderApproval] Load OrderApprovals';
    var LOAD_ORDER_APPROVALS_FAIL = '[OrderApproval] Load OrderApprovals Fail';
    var LOAD_ORDER_APPROVALS_SUCCESS = '[OrderApproval] Load OrderApprovals Success';
    var MAKE_DECISION = '[OrderApproval] Make OrderApproval Decision';
    var MAKE_DECISION_FAIL = '[OrderApproval] Make OrderApproval Decision Fail';
    var MAKE_DECISION_SUCCESS = '[OrderApproval] Make OrderApproval Decision Success';
    var MAKE_DECISION_RESET = '[OrderApproval] Make OrderApproval Decision Reset';
    var LoadOrderApproval = /** @class */ (function (_super) {
        __extends(LoadOrderApproval, _super);
        function LoadOrderApproval(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_ENTITIES, payload.orderApprovalCode) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVAL;
            return _this;
        }
        return LoadOrderApproval;
    }(i1.StateUtils.EntityLoadAction));
    var LoadOrderApprovalFail = /** @class */ (function (_super) {
        __extends(LoadOrderApprovalFail, _super);
        function LoadOrderApprovalFail(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_ENTITIES, payload.orderApprovalCode, payload.error) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVAL_FAIL;
            return _this;
        }
        return LoadOrderApprovalFail;
    }(i1.StateUtils.EntityFailAction));
    var LoadOrderApprovalSuccess = /** @class */ (function (_super) {
        __extends(LoadOrderApprovalSuccess, _super);
        function LoadOrderApprovalSuccess(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_ENTITIES, Array.isArray(payload)
                ? payload.map(function (orderApproval) { return orderApproval === null || orderApproval === void 0 ? void 0 : orderApproval.code; })
                : payload === null || payload === void 0 ? void 0 : payload.code) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVAL_SUCCESS;
            return _this;
        }
        return LoadOrderApprovalSuccess;
    }(i1.StateUtils.EntitySuccessAction));
    var LoadOrderApprovals = /** @class */ (function (_super) {
        __extends(LoadOrderApprovals, _super);
        function LoadOrderApprovals(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_LIST, i1.StateUtils.serializeSearchConfig(payload.params)) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVALS;
            return _this;
        }
        return LoadOrderApprovals;
    }(i1.StateUtils.EntityLoadAction));
    var LoadOrderApprovalsFail = /** @class */ (function (_super) {
        __extends(LoadOrderApprovalsFail, _super);
        function LoadOrderApprovalsFail(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_LIST, i1.StateUtils.serializeSearchConfig(payload.params), payload.error) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVALS_FAIL;
            return _this;
        }
        return LoadOrderApprovalsFail;
    }(i1.StateUtils.EntityFailAction));
    var LoadOrderApprovalsSuccess = /** @class */ (function (_super) {
        __extends(LoadOrderApprovalsSuccess, _super);
        function LoadOrderApprovalsSuccess(payload) {
            var _this = _super.call(this, ORDER_APPROVAL_LIST, i1.StateUtils.serializeSearchConfig(payload.params)) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_APPROVALS_SUCCESS;
            return _this;
        }
        return LoadOrderApprovalsSuccess;
    }(i1.StateUtils.EntitySuccessAction));
    var MakeDecision = /** @class */ (function (_super) {
        __extends(MakeDecision, _super);
        function MakeDecision(payload) {
            var _this = _super.call(this, i1.PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = MAKE_DECISION;
            return _this;
        }
        return MakeDecision;
    }(i1.StateUtils.EntityLoadAction));
    var MakeDecisionFail = /** @class */ (function (_super) {
        __extends(MakeDecisionFail, _super);
        function MakeDecisionFail(payload) {
            var _this = _super.call(this, i1.PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID, payload) || this;
            _this.payload = payload;
            _this.type = MAKE_DECISION_FAIL;
            return _this;
        }
        return MakeDecisionFail;
    }(i1.StateUtils.EntityFailAction));
    var MakeDecisionSuccess = /** @class */ (function (_super) {
        __extends(MakeDecisionSuccess, _super);
        function MakeDecisionSuccess(payload) {
            var _this = _super.call(this, i1.PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = MAKE_DECISION_SUCCESS;
            return _this;
        }
        return MakeDecisionSuccess;
    }(i1.StateUtils.EntitySuccessAction));
    var MakeDecisionReset = /** @class */ (function (_super) {
        __extends(MakeDecisionReset, _super);
        function MakeDecisionReset() {
            var _this = _super.call(this, i1.PROCESS_FEATURE, ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID) || this;
            _this.type = MAKE_DECISION_RESET;
            return _this;
        }
        return MakeDecisionReset;
    }(i1.StateUtils.EntityLoaderResetAction));

    var orderApproval_action = /*#__PURE__*/Object.freeze({
        __proto__: null,
        LOAD_ORDER_APPROVAL: LOAD_ORDER_APPROVAL,
        LOAD_ORDER_APPROVAL_FAIL: LOAD_ORDER_APPROVAL_FAIL,
        LOAD_ORDER_APPROVAL_SUCCESS: LOAD_ORDER_APPROVAL_SUCCESS,
        LOAD_ORDER_APPROVALS: LOAD_ORDER_APPROVALS,
        LOAD_ORDER_APPROVALS_FAIL: LOAD_ORDER_APPROVALS_FAIL,
        LOAD_ORDER_APPROVALS_SUCCESS: LOAD_ORDER_APPROVALS_SUCCESS,
        MAKE_DECISION: MAKE_DECISION,
        MAKE_DECISION_FAIL: MAKE_DECISION_FAIL,
        MAKE_DECISION_SUCCESS: MAKE_DECISION_SUCCESS,
        MAKE_DECISION_RESET: MAKE_DECISION_RESET,
        LoadOrderApproval: LoadOrderApproval,
        LoadOrderApprovalFail: LoadOrderApprovalFail,
        LoadOrderApprovalSuccess: LoadOrderApprovalSuccess,
        LoadOrderApprovals: LoadOrderApprovals,
        LoadOrderApprovalsFail: LoadOrderApprovalsFail,
        LoadOrderApprovalsSuccess: LoadOrderApprovalsSuccess,
        MakeDecision: MakeDecision,
        MakeDecisionFail: MakeDecisionFail,
        MakeDecisionSuccess: MakeDecisionSuccess,
        MakeDecisionReset: MakeDecisionReset
    });

    var getOrderApprovalState = i1$1.createFeatureSelector(ORDER_APPROVAL_FEATURE);
    var getOrderApprovalManagementState = i1$1.createSelector(getOrderApprovalState, function (state) { return state[ORDER_APPROVAL_FEATURE]; });
    var getOrderApprovalsState = i1$1.createSelector(getOrderApprovalManagementState, function (state) { return state && state.entities; });
    var getOrderApproval = function (orderApprovalCode) { return i1$1.createSelector(getOrderApprovalsState, function (state) { return i1.StateUtils.entityLoaderStateSelector(state, orderApprovalCode); }); };
    var getOrderApprovalList = function (params) { return i1$1.createSelector(getOrderApprovalManagementState, function (state) { return i1.StateUtils.denormalizeSearch(state, params); }); };

    var orderApproval_selector = /*#__PURE__*/Object.freeze({
        __proto__: null,
        getOrderApprovalState: getOrderApprovalState,
        getOrderApprovalManagementState: getOrderApprovalManagementState,
        getOrderApprovalsState: getOrderApprovalsState,
        getOrderApproval: getOrderApproval,
        getOrderApprovalList: getOrderApprovalList
    });

    var OrderApprovalService = /** @class */ (function () {
        function OrderApprovalService(store, userIdService) {
            this.store = store;
            this.userIdService = userIdService;
        }
        OrderApprovalService.prototype.loadOrderApproval = function (orderApprovalCode) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) { return _this.store.dispatch(new LoadOrderApproval({
                userId: userId,
                orderApprovalCode: orderApprovalCode,
            })); });
        };
        OrderApprovalService.prototype.loadOrderApprovals = function (params) {
            var _this = this;
            this.userIdService
                .takeUserId()
                .subscribe(function (userId) { return _this.store.dispatch(new LoadOrderApprovals({ userId: userId, params: params })); });
        };
        OrderApprovalService.prototype.getOrderApproval = function (orderApprovalCode) {
            return this.store.select(getOrderApproval(orderApprovalCode));
        };
        OrderApprovalService.prototype.getOrderApprovalList = function (params) {
            return this.store.select(getOrderApprovalList(params));
        };
        OrderApprovalService.prototype.get = function (orderApprovalCode) {
            var _this = this;
            return this.getOrderApproval(orderApprovalCode).pipe(operators.observeOn(rxjs.queueScheduler), operators.tap(function (state) {
                if (!(state.loading || state.success || state.error)) {
                    _this.loadOrderApproval(orderApprovalCode);
                }
            }), operators.filter(function (state) { return state.success || state.error; }), operators.map(function (state) { return state.value; }));
        };
        /**
         * Emits true if a request is currently fetching order approval data from
         * the server.
         *
         * @param orderApprovalCode The approval code for which we want the loading status.
         */
        OrderApprovalService.prototype.getOrderApprovalLoading = function (orderApprovalCode) {
            return this.getOrderApproval(orderApprovalCode).pipe(operators.pluck('loading'));
        };
        OrderApprovalService.prototype.getList = function (params) {
            var _this = this;
            return this.getOrderApprovalList(params).pipe(operators.observeOn(rxjs.queueScheduler), operators.tap(function (process) {
                if (!(process.loading || process.success || process.error)) {
                    _this.loadOrderApprovals(params);
                }
            }), operators.filter(function (process) { return process.success || process.error; }), operators.map(function (result) { return result.value; }));
        };
        OrderApprovalService.prototype.makeDecision = function (orderApprovalCode, orderApprovalDecision) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) { return _this.store.dispatch(new MakeDecision({
                userId: userId,
                orderApprovalCode: orderApprovalCode,
                orderApprovalDecision: orderApprovalDecision,
            })); });
        };
        /**
         * Returns the makeDecision loading flag.  Returns true when the process triggered
         * by makeDecision() is currently running.
         */
        OrderApprovalService.prototype.getMakeDecisionResultLoading = function () {
            return this.store.pipe(i1$1.select(i1.ProcessSelectors.getProcessLoadingFactory(ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID)));
        };
        /**
         * Returns the makeDecision failure outcome.  Returns true when the outcome
         * of makeDecision() was an error.
         */
        OrderApprovalService.prototype.getMakeDecisionResultError = function () {
            return this.store.pipe(i1$1.select(i1.ProcessSelectors.getProcessErrorFactory(ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID)));
        };
        /**
         * Returns the makeDecision process success outcome.  Returns true when the outcome
         * of makeDecision() was a success.
         */
        OrderApprovalService.prototype.getMakeDecisionResultSuccess = function () {
            return this.store.pipe(i1$1.select(i1.ProcessSelectors.getProcessSuccessFactory(ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID)));
        };
        /**
         * Resets the makeDecision process state. It is usually preferable to reset the
         * process state before making a call to makeDecision() for which we then want
         * to monitor the loading state or the outcome.
         */
        OrderApprovalService.prototype.resetMakeDecisionProcessState = function () {
            this.store.dispatch(new MakeDecisionReset());
        };
        return OrderApprovalService;
    }());
    OrderApprovalService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalService, deps: [{ token: i1__namespace.Store }, { token: i1__namespace$1.UserIdService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderApprovalService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalService, decorators: [{
                type: i0.Injectable,
                args: [{ providedIn: 'root' }]
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }, { type: i1__namespace$1.UserIdService }]; } });

    var OrderApprovalDetailService = /** @class */ (function () {
        function OrderApprovalDetailService(routingService, orderApprovalService) {
            var _this = this;
            this.routingService = routingService;
            this.orderApprovalService = orderApprovalService;
            this.approvalCode$ = this.routingService
                .getRouterState()
                .pipe(operators.map(function (routingData) { return routingData.state.params.approvalCode; }));
            this.orderApproval$ = this.approvalCode$.pipe(operators.filter(Boolean), operators.tap(function (approvalCode) { return _this.orderApprovalService.loadOrderApproval(approvalCode); }), operators.switchMap(function (approvalCode) { return _this.orderApprovalService.get(approvalCode); }), operators.shareReplay({ bufferSize: 1, refCount: true }));
            this.order$ = this.orderApproval$.pipe(operators.pluck('order'));
        }
        /**
         * Returns a string that represents the approval code
         * found in the page url.
         */
        OrderApprovalDetailService.prototype.getOrderApprovalCodeFromRoute = function () {
            return this.approvalCode$;
        };
        /**
         * Returns the order data from the approval details that have been
         * retrieved from the approval code in the page url.
         */
        OrderApprovalDetailService.prototype.getOrderDetails = function () {
            return this.order$;
        };
        /**
         * Returns the approval details that have been retrieved from the
         * approval code in the page url.
         */
        OrderApprovalDetailService.prototype.getOrderApproval = function () {
            return this.orderApproval$;
        };
        return OrderApprovalDetailService;
    }());
    OrderApprovalDetailService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailService, deps: [{ token: i1__namespace$1.RoutingService }, { token: OrderApprovalService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderApprovalDetailService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.RoutingService }, { type: OrderApprovalService }]; } });

    var OrderApprovalDetailFormComponent = /** @class */ (function () {
        function OrderApprovalDetailFormComponent(orderApprovalDetailService, orderApprovalService, fb) {
            var _this = this;
            this.orderApprovalDetailService = orderApprovalDetailService;
            this.orderApprovalService = orderApprovalService;
            this.fb = fb;
            this.approvalDecisionValue = exports.OrderApprovalDecisionValue;
            this.approvalFormVisible = false;
            this.approvalForm = this.fb.group({
                comment: [''],
            });
            this.orderApprovalLoading$ = this.orderApprovalDetailService
                .getOrderApprovalCodeFromRoute()
                .pipe(operators.switchMap(function (approvalCode) { return _this.orderApprovalService.getOrderApprovalLoading(approvalCode); }));
            this.decisionResultLoading$ = this.orderApprovalService.getMakeDecisionResultLoading();
            this.loading$ = rxjs.combineLatest([
                this.orderApprovalLoading$,
                this.decisionResultLoading$,
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 2), approvalLoading = _b[0], decisionResultLoading = _b[1];
                return approvalLoading || decisionResultLoading;
            }));
            this.orderApproval$ = this.orderApprovalDetailService.getOrderApproval();
            this.orderApprovalService.resetMakeDecisionProcessState();
        }
        OrderApprovalDetailFormComponent.prototype.displayDecisionForm = function (decision) {
            this.approvalDecision = decision;
            if (decision === exports.OrderApprovalDecisionValue.APPROVE) {
                this.approvalForm.controls.comment.clearValidators();
            }
            else {
                this.approvalForm.controls.comment.setValidators([i3.Validators.required]);
            }
            this.approvalFormVisible = true;
        };
        OrderApprovalDetailFormComponent.prototype.cancelDecisionForm = function () {
            this.approvalFormVisible = false;
            this.approvalForm.reset();
        };
        OrderApprovalDetailFormComponent.prototype.submitDecision = function (orderApproval) {
            if (this.approvalForm.valid) {
                this.orderApprovalService.makeDecision(orderApproval.code, {
                    decision: this.approvalDecision,
                    comment: this.approvalForm.controls.comment.value,
                });
                this.approvalFormVisible = false;
            }
            else {
                this.approvalForm.markAllAsTouched();
            }
        };
        OrderApprovalDetailFormComponent.prototype.ngOnDestroy = function () {
            this.orderApprovalService.resetMakeDecisionProcessState();
        };
        return OrderApprovalDetailFormComponent;
    }());
    OrderApprovalDetailFormComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailFormComponent, deps: [{ token: OrderApprovalDetailService }, { token: OrderApprovalService }, { token: i3__namespace.FormBuilder }], target: i0__namespace.ɵɵFactoryTarget.Component });
    OrderApprovalDetailFormComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderApprovalDetailFormComponent, selector: "cx-order-approval-detail-form", ngImport: i0__namespace, template: "<ng-container *ngIf=\"orderApproval$ | async as orderApproval\">\n  <div *ngIf=\"loading$ | async; else approvalFormTemplate\">\n    <div class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n\n  <ng-template #approvalFormTemplate>\n    <ng-container *ngIf=\"orderApproval?.approvalDecisionRequired\">\n      <div *ngIf=\"approvalFormVisible\" class=\"cx-approval-form-header row\">\n        <div class=\"cx-approval-form-label col-sm-12\">\n          {{\n            'orderApprovalDetails.form.title_' + approvalDecision\n              | cxTranslate\n                : {\n                    orderCode: orderApproval?.order?.code,\n                    orderTotal:\n                      orderApproval?.order?.totalPriceWithTax?.formattedValue\n                  }\n          }}\n        </div>\n      </div>\n\n      <form\n        [formGroup]=\"approvalForm\"\n        (ngSubmit)=\"submitDecision(orderApproval)\"\n        *ngIf=\"approvalFormVisible\"\n      >\n        <label\n          >{{\n            'orderApprovalDetails.form.comment_' + approvalDecision + '.label'\n              | cxTranslate\n          }}\n          <textarea\n            class=\"form-control\"\n            rows=\"3\"\n            formControlName=\"comment\"\n            maxlength=\"255\"\n          ></textarea>\n          <cx-form-errors\n            [control]=\"approvalForm.get('comment')\"\n          ></cx-form-errors>\n        </label>\n        <div class=\"form-group row\">\n          <div class=\"col-lg-6 col-md-12\">\n            <button\n              class=\"btn btn-block btn-secondary\"\n              (click)=\"cancelDecisionForm()\"\n              type=\"button\"\n            >\n              {{ 'orderApprovalDetails.form.cancel' | cxTranslate }}\n            </button>\n          </div>\n          <div class=\"col-lg-6 col-md-12\">\n            <button class=\"btn btn-block btn-primary\" type=\"submit\">\n              {{\n                'orderApprovalDetails.form.submit_' + approvalDecision\n                  | cxTranslate\n              }}\n            </button>\n          </div>\n        </div>\n      </form>\n    </ng-container>\n    <ng-container *ngIf=\"!approvalFormVisible\">\n      <div class=\"form-group row\">\n        <div class=\"col-lg-4 col-md-12\">\n          <a\n            [routerLink]=\"{ cxRoute: 'orderApprovals' } | cxUrl\"\n            class=\"btn btn-block btn-secondary\"\n            >{{ 'orderApprovalDetails.back' | cxTranslate }}</a\n          >\n        </div>\n        <div\n          class=\"col-lg-4 col-md-12\"\n          *ngIf=\"orderApproval?.approvalDecisionRequired\"\n        >\n          <button\n            class=\"btn btn-block btn-primary\"\n            (click)=\"displayDecisionForm(approvalDecisionValue.REJECT)\"\n          >\n            {{ 'orderApprovalDetails.showForm_REJECT' | cxTranslate }}\n          </button>\n        </div>\n        <div\n          class=\"col-lg-4 col-md-12\"\n          *ngIf=\"orderApproval?.approvalDecisionRequired\"\n        >\n          <button\n            class=\"btn btn-block btn-primary\"\n            (click)=\"displayDecisionForm(approvalDecisionValue.APPROVE)\"\n          >\n            {{ 'orderApprovalDetails.showForm_APPROVE' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-container>\n  </ng-template>\n</ng-container>\n", components: [{ type: i4__namespace.SpinnerComponent, selector: "cx-spinner" }, { type: i4__namespace.FormErrorsComponent, selector: "cx-form-errors", inputs: ["prefix", "translationParams", "control"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3__namespace.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { type: i3__namespace.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { type: i3__namespace.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { type: i3__namespace.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i3__namespace.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3__namespace.FormControlName, selector: "[formControlName]", inputs: ["disabled", "formControlName", "ngModel"], outputs: ["ngModelChange"] }, { type: i3__namespace.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { type: i6__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "async": i2__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe, "cxUrl": i1__namespace$1.UrlPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailFormComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-order-approval-detail-form',
                        templateUrl: './order-approval-detail-form.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: OrderApprovalDetailService }, { type: OrderApprovalService }, { type: i3__namespace.FormBuilder }]; } });

    var ApproverGuard = /** @class */ (function () {
        function ApproverGuard(userService, routingService, globalMessageService) {
            this.userService = userService;
            this.routingService = routingService;
            this.globalMessageService = globalMessageService;
        }
        ApproverGuard.prototype.canActivate = function () {
            var _this = this;
            return this.userService.get().pipe(operators.filter(function (user) { return user && Object.keys(user).length > 0; }), operators.pluck('roles'), operators.map(function (roles) {
                var hasRole = Array.isArray(roles) &&
                    (roles.includes(i1.B2BUserRole.APPROVER) ||
                        roles.includes(i1.B2BUserRole.ADMIN));
                if (!hasRole) {
                    _this.routingService.go({ cxRoute: 'home' });
                    _this.globalMessageService.add({
                        key: 'orderApprovalGlobal.notification.noSufficientPermissions',
                    }, i1.GlobalMessageType.MSG_TYPE_WARNING);
                }
                return hasRole;
            }));
        };
        return ApproverGuard;
    }());
    ApproverGuard.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ApproverGuard, deps: [{ token: i1__namespace$1.UserService }, { token: i1__namespace$1.RoutingService }, { token: i1__namespace$1.GlobalMessageService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ApproverGuard.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ApproverGuard, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ApproverGuard, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.UserService }, { type: i1__namespace$1.RoutingService }, { type: i1__namespace$1.GlobalMessageService }]; } });

    var OrderDetailPermissionResultsComponent = /** @class */ (function () {
        function OrderDetailPermissionResultsComponent(orderDetailsService) {
            this.orderDetailsService = orderDetailsService;
            this.order$ = this.orderDetailsService.getOrderDetails();
        }
        return OrderDetailPermissionResultsComponent;
    }());
    OrderDetailPermissionResultsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderDetailPermissionResultsComponent, deps: [{ token: i4__namespace.OrderDetailsService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    OrderDetailPermissionResultsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderDetailPermissionResultsComponent, selector: "cx-order-detail-permission-results", ngImport: i0__namespace, template: "<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container *ngIf=\"order.permissionResults?.length\">\n    <div class=\"cx-approval-header row\">\n      <div class=\"cx-approval-label col-sm-12\">\n        {{ 'orderApprovalDetails.permissionResults.header' | cxTranslate }}\n      </div>\n    </div>\n    <div class=\"row\">\n      <table class=\"table table-striped cx-approval-table\">\n        <thead class=\"cx-approval-thead-mobile\">\n          <th scope=\"col\">\n            {{\n              'orderApprovalDetails.permissionResults.permission' | cxTranslate\n            }}\n          </th>\n          <th scope=\"col\">\n            {{\n              'orderApprovalDetails.permissionResults.approver' | cxTranslate\n            }}\n          </th>\n          <th scope=\"col\">\n            {{ 'orderApprovalDetails.permissionResults.status' | cxTranslate }}\n          </th>\n          <th scope=\"col\">\n            {{\n              'orderApprovalDetails.permissionResults.approverComments'\n                | cxTranslate\n            }}\n          </th>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let permissionResult of order.permissionResults\">\n            <td class=\"cx-approval-permissionCode\">\n              <div class=\"d-md-none cx-approval-table-label\">\n                {{\n                  'orderApprovalDetails.permissionResults.permission'\n                    | cxTranslate\n                }}\n              </div>\n              {{\n                'orderApprovalDetails.permissionResults.permissionType_' +\n                  permissionResult?.permissionType?.code | cxTranslate\n              }}\n            </td>\n            <td class=\"cx-approval-approverName\">\n              <div class=\"d-md-none cx-approval-table-label\">\n                {{\n                  'orderApprovalDetails.permissionResults.approver'\n                    | cxTranslate\n                }}\n              </div>\n              {{ permissionResult.approverName }}\n            </td>\n            <td class=\"cx-approval-statusDisplay\">\n              <div class=\"d-md-none cx-approval-table-label\">\n                {{\n                  'orderApprovalDetails.permissionResults.status' | cxTranslate\n                }}\n              </div>\n              {{ permissionResult.statusDisplay }}\n            </td>\n            <td class=\"cx-approval-approvalNotes\">\n              <div class=\"d-md-none cx-approval-table-label\">\n                {{\n                  'orderApprovalDetails.permissionResults.approverComments'\n                    | cxTranslate\n                }}\n              </div>\n              {{\n                permissionResult.approverNotes\n                  ? permissionResult.approverNotes\n                  : ('orderApprovalDetails.permissionResults.noApprovalComments'\n                    | cxTranslate)\n              }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </ng-container>\n</ng-container>\n", directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i2__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderDetailPermissionResultsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-order-detail-permission-results',
                        templateUrl: './order-detail-permission-results.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i4__namespace.OrderDetailsService }]; } });

    var OrderApprovalDetailsModule = /** @class */ (function () {
        function OrderApprovalDetailsModule() {
        }
        return OrderApprovalDetailsModule;
    }());
    OrderApprovalDetailsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalDetailsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailsModule, declarations: [OrderApprovalDetailFormComponent,
            OrderDetailPermissionResultsComponent], imports: [i3.ReactiveFormsModule,
            i4.CartSharedModule,
            i2.CommonModule,
            i1.I18nModule,
            i1.UrlModule,
            i4.FormErrorsModule,
            i4.SpinnerModule,
            i6.RouterModule, i1__namespace$1.ConfigModule], exports: [OrderApprovalDetailFormComponent,
            OrderDetailPermissionResultsComponent] });
    OrderApprovalDetailsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailsModule, imports: [[
                i3.ReactiveFormsModule,
                i4.CartSharedModule,
                i2.CommonModule,
                i1.I18nModule,
                i1.UrlModule,
                i4.FormErrorsModule,
                i4.SpinnerModule,
                i6.RouterModule,
                i1.ConfigModule.withConfig({
                    cmsComponents: {
                        OrderApprovalDetailTotalsComponent: {
                            component: i4.OrderDetailTotalsComponent,
                            providers: [
                                {
                                    provide: i4.OrderDetailsService,
                                    useExisting: OrderApprovalDetailService,
                                },
                            ],
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                        OrderApprovalDetailApprovalDetailsComponent: {
                            component: OrderDetailPermissionResultsComponent,
                            providers: [
                                {
                                    provide: i4.OrderDetailsService,
                                    useExisting: OrderApprovalDetailService,
                                },
                            ],
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                        AccountOrderDetailsApprovalDetailsComponent: {
                            component: OrderDetailPermissionResultsComponent,
                        },
                        OrderApprovalDetailShippingComponent: {
                            component: i4.OrderDetailShippingComponent,
                            providers: [
                                {
                                    provide: i4.OrderDetailsService,
                                    useExisting: OrderApprovalDetailService,
                                },
                            ],
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                        OrderApprovalDetailItemsComponent: {
                            component: i4.OrderDetailItemsComponent,
                            providers: [
                                {
                                    provide: i4.OrderDetailsService,
                                    useExisting: OrderApprovalDetailService,
                                },
                            ],
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                        OrderApprovalDetailFormComponent: {
                            component: OrderApprovalDetailFormComponent,
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                    },
                }),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalDetailsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i3.ReactiveFormsModule,
                            i4.CartSharedModule,
                            i2.CommonModule,
                            i1.I18nModule,
                            i1.UrlModule,
                            i4.FormErrorsModule,
                            i4.SpinnerModule,
                            i6.RouterModule,
                            i1.ConfigModule.withConfig({
                                cmsComponents: {
                                    OrderApprovalDetailTotalsComponent: {
                                        component: i4.OrderDetailTotalsComponent,
                                        providers: [
                                            {
                                                provide: i4.OrderDetailsService,
                                                useExisting: OrderApprovalDetailService,
                                            },
                                        ],
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                    OrderApprovalDetailApprovalDetailsComponent: {
                                        component: OrderDetailPermissionResultsComponent,
                                        providers: [
                                            {
                                                provide: i4.OrderDetailsService,
                                                useExisting: OrderApprovalDetailService,
                                            },
                                        ],
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                    AccountOrderDetailsApprovalDetailsComponent: {
                                        component: OrderDetailPermissionResultsComponent,
                                    },
                                    OrderApprovalDetailShippingComponent: {
                                        component: i4.OrderDetailShippingComponent,
                                        providers: [
                                            {
                                                provide: i4.OrderDetailsService,
                                                useExisting: OrderApprovalDetailService,
                                            },
                                        ],
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                    OrderApprovalDetailItemsComponent: {
                                        component: i4.OrderDetailItemsComponent,
                                        providers: [
                                            {
                                                provide: i4.OrderDetailsService,
                                                useExisting: OrderApprovalDetailService,
                                            },
                                        ],
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                    OrderApprovalDetailFormComponent: {
                                        component: OrderApprovalDetailFormComponent,
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                },
                            }),
                        ],
                        declarations: [
                            OrderApprovalDetailFormComponent,
                            OrderDetailPermissionResultsComponent,
                        ],
                        exports: [
                            OrderApprovalDetailFormComponent,
                            OrderDetailPermissionResultsComponent,
                        ],
                    }]
            }] });

    var OrderApprovalListComponent = /** @class */ (function () {
        function OrderApprovalListComponent(routing, orderApprovalService, translation) {
            this.routing = routing;
            this.orderApprovalService = orderApprovalService;
            this.translation = translation;
            this.PAGE_SIZE = 5;
        }
        OrderApprovalListComponent.prototype.ngOnInit = function () {
            this.fetchApprovalListPage({});
            this.sortLabels$ = rxjs.combineLatest([
                this.translation.translate('sorting.date'),
                this.translation.translate('sorting.orderNumber'),
            ]).pipe(operators.map(function (_b) {
                var _c = __read(_b, 2), textByDate = _c[0], textByOrderNumber = _c[1];
                return {
                    byDate: textByDate,
                    byOrderNumber: textByOrderNumber,
                };
            }));
        };
        OrderApprovalListComponent.prototype.changeSortCode = function (sortCode) {
            var fetchParams = {
                sort: sortCode,
                currentPage: 0,
            };
            this.sortType = sortCode;
            this.fetchApprovalListPage(fetchParams);
        };
        OrderApprovalListComponent.prototype.pageChange = function (page) {
            var fetchParams = {
                sort: this.sortType,
                currentPage: page,
            };
            this.fetchApprovalListPage(fetchParams);
        };
        OrderApprovalListComponent.prototype.fetchApprovalListPage = function (searchConfig) {
            searchConfig.pageSize = this.PAGE_SIZE;
            this.orderApprovalService.loadOrderApprovals(searchConfig);
            this.orderApprovals$ = this.orderApprovalService.getList(searchConfig);
        };
        OrderApprovalListComponent.prototype.goToApprovalDetails = function (event, orderApproval) {
            var _a;
            if (((_a = event === null || event === void 0 ? void 0 : event.target) === null || _a === void 0 ? void 0 : _a.nodeName.toLowerCase()) !== 'a') {
                this.routing.go({
                    cxRoute: 'orderApprovalDetails',
                    params: { approvalCode: orderApproval.code },
                });
            }
        };
        return OrderApprovalListComponent;
    }());
    OrderApprovalListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListComponent, deps: [{ token: i1__namespace$1.RoutingService }, { token: OrderApprovalService }, { token: i1__namespace$1.TranslationService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    OrderApprovalListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderApprovalListComponent, selector: "cx-order-approval-list", ngImport: i0__namespace, template: "<ng-container *ngIf=\"orderApprovals$ | async as orderApprovals\">\n  <ng-container\n    *ngIf=\"orderApprovals.pagination.totalResults > 0; else noOrder\"\n  >\n    <!-- Select Form and Pagination Top -->\n    <div class=\"cx-order-approval-sort top row\">\n      <div\n        class=\"\n          cx-order-approval-form-group\n          form-group\n          col-sm-12 col-md-4 col-lg-4\n        \"\n      >\n        <cx-sorting\n          [sortOptions]=\"orderApprovals.sorts\"\n          [sortLabels]=\"sortLabels$ | async\"\n          (sortListEvent)=\"changeSortCode($event)\"\n          [selectedOption]=\"orderApprovals.pagination.sort\"\n        ></cx-sorting>\n      </div>\n      <div class=\"cx-order-approval-pagination\">\n        <cx-pagination\n          [pagination]=\"orderApprovals.pagination\"\n          (viewPageEvent)=\"pageChange($event)\"\n        ></cx-pagination>\n      </div>\n    </div>\n    <!-- TABLE -->\n    <table class=\"table cx-order-approval-table\">\n      <thead class=\"cx-order-approval-thead-mobile\">\n        <th scope=\"col\">\n          {{ 'orderApprovalList.orderCode' | cxTranslate }}\n        </th>\n        <th scope=\"col\">{{ 'orderApprovalList.POCode' | cxTranslate }}</th>\n        <th scope=\"col\">{{ 'orderApprovalList.placedBy' | cxTranslate }}</th>\n        <th scope=\"col\">{{ 'orderApprovalList.date' | cxTranslate }}</th>\n        <th scope=\"col\">\n          {{ 'orderApprovalList.status' | cxTranslate }}\n        </th>\n        <th scope=\"col\">{{ 'orderApprovalList.total' | cxTranslate }}</th>\n      </thead>\n      <tbody>\n        <tr\n          *ngFor=\"let approval of orderApprovals.values\"\n          (click)=\"goToApprovalDetails($event, approval)\"\n        >\n          <td class=\"cx-order-approval-code\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.orderCode' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{ approval.order?.code }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-po-code\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.POCode' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{\n                approval.order?.purchaseOrderNumber ||\n                  ('orderApprovalList.none' | cxTranslate)\n              }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-placed\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.placedBy' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{ approval.order?.orgCustomer?.name }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-date\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.date' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n              >{{ approval.order?.created | cxDate: 'longDate' }}</a\n            >\n          </td>\n\n          <td class=\"cx-order-approval-status\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.status' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{\n                'orderDetails.statusDisplay_' + approval.order?.statusDisplay\n                  | cxTranslate\n              }}</a\n            >\n          </td>\n          <td class=\"cx-order-approval-total\">\n            <div class=\"d-md-none cx-order-approval-label\">\n              {{ 'orderApprovalList.total' | cxTranslate }}\n            </div>\n            <a\n              [routerLink]=\"\n                {\n                  cxRoute: 'orderApprovalDetails',\n                  params: { approvalCode: approval?.code }\n                } | cxUrl\n              \"\n              class=\"cx-order-approval-value\"\n            >\n              {{ approval.order?.totalPrice?.formattedValue }}</a\n            >\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <!-- Select Form and Pagination Bottom -->\n    <div class=\"cx-order-approval-sort bottom row\">\n      <div\n        class=\"\n          cx-order-approval-form-group\n          form-group\n          col-sm-12 col-md-4 col-lg-4\n        \"\n      >\n        <cx-sorting\n          [sortOptions]=\"orderApprovals.sorts\"\n          [sortLabels]=\"sortLabels$ | async\"\n          (sortListEvent)=\"changeSortCode($event)\"\n          [selectedOption]=\"orderApprovals.pagination.sort\"\n        ></cx-sorting>\n      </div>\n      <div class=\"cx-order-approval-pagination\">\n        <cx-pagination\n          [pagination]=\"orderApprovals.pagination\"\n          (viewPageEvent)=\"pageChange($event)\"\n        ></cx-pagination>\n      </div>\n    </div>\n  </ng-container>\n\n  <!-- NO ORDER CONTAINER -->\n  <ng-template #noOrder>\n    <div class=\"cx-order-approval-no-order row\">\n      <div class=\"col-sm-12 col-md-6 col-lg-4\">\n        <div>{{ 'orderApprovalList.emptyList' | cxTranslate }}</div>\n      </div>\n    </div>\n  </ng-template>\n</ng-container>\n", components: [{ type: i4__namespace.SortingComponent, selector: "cx-sorting", inputs: ["sortOptions", "selectedOption", "placeholder", "sortLabels"], outputs: ["sortListEvent"] }, { type: i4__namespace.PaginationComponent, selector: "cx-pagination", inputs: ["pageRoute", "queryParam", "defaultPage", "pagination"], outputs: ["viewPageEvent"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i6__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "async": i2__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe, "cxUrl": i1__namespace$1.UrlPipe, "cxDate": i1__namespace$1.CxDatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-order-approval-list',
                        templateUrl: './order-approval-list.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.RoutingService }, { type: OrderApprovalService }, { type: i1__namespace$1.TranslationService }]; } });

    var OrderApprovalListModule = /** @class */ (function () {
        function OrderApprovalListModule() {
        }
        return OrderApprovalListModule;
    }());
    OrderApprovalListModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalListModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListModule, declarations: [OrderApprovalListComponent], imports: [i2.CommonModule, i1__namespace$1.ConfigModule, i1.UrlModule,
            i6.RouterModule,
            i4.ListNavigationModule,
            i1.I18nModule], exports: [OrderApprovalListComponent] });
    OrderApprovalListModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListModule, imports: [[
                i2.CommonModule,
                i1.ConfigModule.withConfig({
                    cmsComponents: {
                        OrderApprovalListComponent: {
                            component: OrderApprovalListComponent,
                            guards: [i1.AuthGuard, ApproverGuard],
                        },
                    },
                }),
                i1.UrlModule,
                i6.RouterModule,
                i4.ListNavigationModule,
                i1.I18nModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalListModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i1.ConfigModule.withConfig({
                                cmsComponents: {
                                    OrderApprovalListComponent: {
                                        component: OrderApprovalListComponent,
                                        guards: [i1.AuthGuard, ApproverGuard],
                                    },
                                },
                            }),
                            i1.UrlModule,
                            i6.RouterModule,
                            i4.ListNavigationModule,
                            i1.I18nModule,
                        ],
                        declarations: [OrderApprovalListComponent],
                        exports: [OrderApprovalListComponent],
                    }]
            }] });

    var OrderApprovalComponentsModule = /** @class */ (function () {
        function OrderApprovalComponentsModule() {
        }
        return OrderApprovalComponentsModule;
    }());
    OrderApprovalComponentsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalComponentsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalComponentsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalComponentsModule, imports: [i6.RouterModule, OrderApprovalListModule, OrderApprovalDetailsModule] });
    OrderApprovalComponentsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalComponentsModule, imports: [[i6.RouterModule, OrderApprovalListModule, OrderApprovalDetailsModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalComponentsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i6.RouterModule, OrderApprovalListModule, OrderApprovalDetailsModule],
                    }]
            }] });

    var OrderApprovalAdapter = /** @class */ (function () {
        function OrderApprovalAdapter() {
        }
        return OrderApprovalAdapter;
    }());

    var OrderApprovalConnector = /** @class */ (function () {
        function OrderApprovalConnector(adapter) {
            this.adapter = adapter;
        }
        OrderApprovalConnector.prototype.get = function (userId, orderApprovalCode) {
            return this.adapter.load(userId, orderApprovalCode);
        };
        OrderApprovalConnector.prototype.getList = function (userId, params) {
            return this.adapter.loadList(userId, params);
        };
        OrderApprovalConnector.prototype.makeDecision = function (userId, orderApprovalCode, orderApprovalDecision) {
            return this.adapter.makeDecision(userId, orderApprovalCode, orderApprovalDecision);
        };
        return OrderApprovalConnector;
    }());
    OrderApprovalConnector.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalConnector, deps: [{ token: OrderApprovalAdapter }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderApprovalConnector.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalConnector, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalConnector, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: OrderApprovalAdapter }]; } });

    var ORDER_APPROVAL_NORMALIZER = new i0.InjectionToken('OrderApprovalNormalizer');
    var ORDER_APPROVALS_NORMALIZER = new i0.InjectionToken('OrderApprovalsListNormalizer');
    var ORDER_APPROVAL_DECISION_NORMALIZER = new i0.InjectionToken('OrderApprovalDecisionNormalizer');

    var OccOrderApprovalAdapter = /** @class */ (function () {
        function OccOrderApprovalAdapter(http, occEndpoints, converter) {
            this.http = http;
            this.occEndpoints = occEndpoints;
            this.converter = converter;
        }
        OccOrderApprovalAdapter.prototype.load = function (userId, orderApprovalCode) {
            return this.http
                .get(this.getOrderApprovalEndpoint(userId, orderApprovalCode))
                .pipe(this.converter.pipeable(ORDER_APPROVAL_NORMALIZER));
        };
        OccOrderApprovalAdapter.prototype.loadList = function (userId, params) {
            return this.http
                .get(this.getOrderApprovalsEndpoint(userId, params))
                .pipe(this.converter.pipeable(ORDER_APPROVALS_NORMALIZER));
        };
        OccOrderApprovalAdapter.prototype.makeDecision = function (userId, orderApprovalCode, orderApprovalDecision) {
            return this.http
                .post(this.getOrderApprovalDecisionEndpoint(userId, orderApprovalCode), orderApprovalDecision)
                .pipe(this.converter.pipeable(ORDER_APPROVAL_DECISION_NORMALIZER));
        };
        OccOrderApprovalAdapter.prototype.getOrderApprovalEndpoint = function (userId, orderApprovalCode) {
            return this.occEndpoints.buildUrl('orderApproval', {
                urlParams: {
                    userId: userId,
                    orderApprovalCode: orderApprovalCode,
                },
            });
        };
        OccOrderApprovalAdapter.prototype.getOrderApprovalsEndpoint = function (userId, params) {
            return this.occEndpoints.buildUrl('orderApprovals', {
                urlParams: { userId: userId },
                queryParams: params,
            });
        };
        OccOrderApprovalAdapter.prototype.getOrderApprovalDecisionEndpoint = function (userId, orderApprovalCode) {
            return this.occEndpoints.buildUrl('orderApprovalDecision', {
                urlParams: {
                    userId: userId,
                    orderApprovalCode: orderApprovalCode,
                },
            });
        };
        return OccOrderApprovalAdapter;
    }());
    OccOrderApprovalAdapter.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalAdapter, deps: [{ token: i1__namespace$2.HttpClient }, { token: i1__namespace$1.OccEndpointsService }, { token: i1__namespace$1.ConverterService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OccOrderApprovalAdapter.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalAdapter });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalAdapter, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$2.HttpClient }, { type: i1__namespace$1.OccEndpointsService }, { type: i1__namespace$1.ConverterService }]; } });

    var OccOrderApprovalDecisionNormalizer = /** @class */ (function () {
        function OccOrderApprovalDecisionNormalizer() {
        }
        OccOrderApprovalDecisionNormalizer.prototype.convert = function (source, target) {
            if (target === undefined) {
                target = Object.assign({}, source);
            }
            return target;
        };
        return OccOrderApprovalDecisionNormalizer;
    }());
    OccOrderApprovalDecisionNormalizer.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalDecisionNormalizer, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OccOrderApprovalDecisionNormalizer.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalDecisionNormalizer, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalDecisionNormalizer, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return []; } });

    var OccOrderApprovalListNormalizer = /** @class */ (function () {
        function OccOrderApprovalListNormalizer(converter) {
            this.converter = converter;
        }
        OccOrderApprovalListNormalizer.prototype.convert = function (source, target) {
            var _this = this;
            if (target === undefined) {
                target = Object.assign({}, source);
            }
            target.values = source.orderApprovals.map(function (orderApproval) { return (Object.assign({}, _this.converter.convert(orderApproval, ORDER_APPROVAL_NORMALIZER))); });
            return target;
        };
        return OccOrderApprovalListNormalizer;
    }());
    OccOrderApprovalListNormalizer.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalListNormalizer, deps: [{ token: i1__namespace$1.ConverterService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OccOrderApprovalListNormalizer.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalListNormalizer, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalListNormalizer, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.ConverterService }]; } });

    var OccOrderApprovalNormalizer = /** @class */ (function () {
        function OccOrderApprovalNormalizer(converter) {
            this.converter = converter;
        }
        OccOrderApprovalNormalizer.prototype.convert = function (source, target) {
            if (target === undefined) {
                target = Object.assign({}, source);
            }
            if (source.order) {
                target.order = this.converter.convert(source.order, i1.ORDER_NORMALIZER);
            }
            return target;
        };
        return OccOrderApprovalNormalizer;
    }());
    OccOrderApprovalNormalizer.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalNormalizer, deps: [{ token: i1__namespace$1.ConverterService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OccOrderApprovalNormalizer.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalNormalizer, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccOrderApprovalNormalizer, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.ConverterService }]; } });

    // Imported for side effects (module augmentation)

    var defaultOccOrderApprovalConfig = {
        backend: {
            occ: {
                endpoints: {
                    orderApprovals: '/users/${userId}/orderapprovals',
                    orderApproval: '/users/${userId}/orderapprovals/${orderApprovalCode}?fields=FULL',
                    orderApprovalDecision: '/users/${userId}/orderapprovals/${orderApprovalCode}/decision',
                },
            },
        },
    };

    var OrderApprovalOccModule = /** @class */ (function () {
        function OrderApprovalOccModule() {
        }
        return OrderApprovalOccModule;
    }());
    OrderApprovalOccModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalOccModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalOccModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalOccModule, imports: [i2.CommonModule] });
    OrderApprovalOccModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalOccModule, providers: [
            i1.provideDefaultConfig(defaultOccOrderApprovalConfig),
            {
                provide: OrderApprovalAdapter,
                useClass: OccOrderApprovalAdapter,
            },
            {
                provide: ORDER_APPROVAL_NORMALIZER,
                useExisting: OccOrderApprovalNormalizer,
                multi: true,
            },
            {
                provide: ORDER_APPROVALS_NORMALIZER,
                useExisting: OccOrderApprovalListNormalizer,
                multi: true,
            },
            {
                provide: ORDER_APPROVAL_DECISION_NORMALIZER,
                useExisting: OccOrderApprovalDecisionNormalizer,
                multi: true,
            },
        ], imports: [[i2.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalOccModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule],
                        providers: [
                            i1.provideDefaultConfig(defaultOccOrderApprovalConfig),
                            {
                                provide: OrderApprovalAdapter,
                                useClass: OccOrderApprovalAdapter,
                            },
                            {
                                provide: ORDER_APPROVAL_NORMALIZER,
                                useExisting: OccOrderApprovalNormalizer,
                                multi: true,
                            },
                            {
                                provide: ORDER_APPROVALS_NORMALIZER,
                                useExisting: OccOrderApprovalListNormalizer,
                                multi: true,
                            },
                            {
                                provide: ORDER_APPROVAL_DECISION_NORMALIZER,
                                useExisting: OccOrderApprovalDecisionNormalizer,
                                multi: true,
                            },
                        ],
                    }]
            }] });

    var OrderApprovalEffects = /** @class */ (function () {
        function OrderApprovalEffects(actions$, orderApprovalConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.orderApprovalConnector = orderApprovalConnector;
            this.loadOrderApproval$ = this.actions$.pipe(i1$3.ofType(LOAD_ORDER_APPROVAL), operators.map(function (action) { return action.payload; }), operators.filter(function (payload) { return payload.userId !== i1.OCC_USER_ID_ANONYMOUS; }), operators.switchMap(function (_a) {
                var userId = _a.userId, orderApprovalCode = _a.orderApprovalCode;
                return _this.orderApprovalConnector.get(userId, orderApprovalCode).pipe(operators.map(function (orderApproval) {
                    return new LoadOrderApprovalSuccess([
                        orderApproval,
                    ]);
                }), operators.catchError(function (error) { return rxjs.of(new LoadOrderApprovalFail({
                    orderApprovalCode: orderApprovalCode,
                    error: i1.normalizeHttpError(error),
                })); }));
            }));
            this.loadOrderApprovals$ = this.actions$.pipe(i1$3.ofType(LOAD_ORDER_APPROVALS), operators.map(function (action) { return action.payload; }), operators.filter(function (payload) { return payload.userId !== i1.OCC_USER_ID_ANONYMOUS; }), operators.switchMap(function (_a) {
                var userId = _a.userId, params = _a.params;
                return _this.orderApprovalConnector.getList(userId, params).pipe(operators.switchMap(function (orderApprovals) {
                    var _a = i1.StateUtils.normalizeListPage(orderApprovals, 'code'), values = _a.values, page = _a.page;
                    return [
                        new LoadOrderApprovalSuccess(values),
                        new LoadOrderApprovalsSuccess({
                            page: page,
                            params: params,
                        }),
                    ];
                }), operators.catchError(function (error) { return rxjs.of(new LoadOrderApprovalsFail({
                    params: params,
                    error: i1.normalizeHttpError(error),
                })); }));
            }));
            this.makeDecision$ = this.actions$.pipe(i1$3.ofType(MAKE_DECISION), operators.map(function (action) { return action.payload; }), operators.filter(function (payload) { return payload.userId !== i1.OCC_USER_ID_ANONYMOUS; }), operators.switchMap(function (_a) {
                var userId = _a.userId, orderApprovalCode = _a.orderApprovalCode, orderApprovalDecision = _a.orderApprovalDecision;
                return _this.orderApprovalConnector
                    .makeDecision(userId, orderApprovalCode, orderApprovalDecision)
                    .pipe(operators.switchMap(function (orderApprovalDecisionData) { return [
                    new MakeDecisionSuccess({
                        orderApprovalCode: orderApprovalCode,
                        orderApprovalDecision: orderApprovalDecisionData,
                    }),
                    new LoadOrderApproval({
                        userId: userId,
                        orderApprovalCode: orderApprovalCode,
                    }),
                ]; }), operators.catchError(function (error) { return rxjs.of(new MakeDecisionFail({
                    orderApprovalCode: orderApprovalCode,
                    error: i1.normalizeHttpError(error),
                })); }));
            }));
        }
        return OrderApprovalEffects;
    }());
    OrderApprovalEffects.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalEffects, deps: [{ token: i1__namespace$3.Actions }, { token: OrderApprovalConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderApprovalEffects.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalEffects });
    __decorate([
        i1$3.Effect()
    ], OrderApprovalEffects.prototype, "loadOrderApproval$", void 0);
    __decorate([
        i1$3.Effect()
    ], OrderApprovalEffects.prototype, "loadOrderApprovals$", void 0);
    __decorate([
        i1$3.Effect()
    ], OrderApprovalEffects.prototype, "makeDecision$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalEffects, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$3.Actions }, { type: OrderApprovalConnector }]; }, propDecorators: { loadOrderApproval$: [], loadOrderApprovals$: [], makeDecision$: [] } });

    var effects = [OrderApprovalEffects];

    var orderApprovalInitialState = undefined;
    var orderApprovalsInitialState = undefined;
    function orderApprovalsEntitiesReducer(state, action) {
        if (state === void 0) { state = orderApprovalInitialState; }
        switch (action.type) {
            case LOAD_ORDER_APPROVAL_SUCCESS:
                return action.payload;
            case MAKE_DECISION_SUCCESS:
                return state;
        }
        return state;
    }
    function orderApprovalsListReducer(state, action) {
        if (state === void 0) { state = orderApprovalsInitialState; }
        switch (action.type) {
            case LOAD_ORDER_APPROVALS_SUCCESS:
                return action.payload.page;
        }
        return state;
    }

    function getReducers() {
        var _a;
        return _a = {},
            _a[ORDER_APPROVAL_FEATURE] = i1$1.combineReducers({
                entities: i1.StateUtils.entityLoaderReducer(ORDER_APPROVAL_ENTITIES, orderApprovalsEntitiesReducer),
                list: i1.StateUtils.entityLoaderReducer(ORDER_APPROVAL_LIST, orderApprovalsListReducer),
            }),
            _a;
    }
    var reducerToken = new i0.InjectionToken('OrganizationReducers');
    var reducerProvider = {
        provide: reducerToken,
        useFactory: getReducers,
    };
    function clearOrganizationState(reducer) {
        return function (state, action) {
            if (action.type === i1.AuthActions.LOGOUT) {
                state = undefined;
            }
            return reducer(state, action);
        };
    }
    var metaReducers = [clearOrganizationState];

    var OrderApprovalStoreModule = /** @class */ (function () {
        function OrderApprovalStoreModule() {
        }
        return OrderApprovalStoreModule;
    }());
    OrderApprovalStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalStoreModule, imports: [i1__namespace.StoreFeatureModule, i1__namespace$3.EffectsFeatureModule] });
    OrderApprovalStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalStoreModule, providers: [reducerProvider], imports: [[
                i1$1.StoreModule.forFeature(ORDER_APPROVAL_FEATURE, reducerToken, {
                    metaReducers: metaReducers,
                }),
                i1$3.EffectsModule.forFeature(effects),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalStoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i1$1.StoreModule.forFeature(ORDER_APPROVAL_FEATURE, reducerToken, {
                                metaReducers: metaReducers,
                            }),
                            i1$3.EffectsModule.forFeature(effects),
                        ],
                        providers: [reducerProvider],
                    }]
            }] });

    var OrderApprovalCoreModule = /** @class */ (function () {
        function OrderApprovalCoreModule() {
        }
        OrderApprovalCoreModule.forRoot = function () {
            return {
                ngModule: OrderApprovalCoreModule,
                providers: [OrderApprovalConnector],
            };
        };
        return OrderApprovalCoreModule;
    }());
    OrderApprovalCoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalCoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalCoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalCoreModule, imports: [OrderApprovalStoreModule] });
    OrderApprovalCoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalCoreModule, imports: [[OrderApprovalStoreModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalCoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [OrderApprovalStoreModule],
                    }]
            }] });

    var OrderApprovalModule = /** @class */ (function () {
        function OrderApprovalModule() {
        }
        return OrderApprovalModule;
    }());
    OrderApprovalModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderApprovalModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalModule, imports: [OrderApprovalCoreModule, OrderApprovalOccModule,
            OrderApprovalComponentsModule] });
    OrderApprovalModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalModule, imports: [[
                OrderApprovalCoreModule.forRoot(),
                OrderApprovalOccModule,
                OrderApprovalComponentsModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderApprovalModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            OrderApprovalCoreModule.forRoot(),
                            OrderApprovalOccModule,
                            OrderApprovalComponentsModule,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ORDER_APPROVALS_NORMALIZER = ORDER_APPROVALS_NORMALIZER;
    exports.ORDER_APPROVAL_DECISION_NORMALIZER = ORDER_APPROVAL_DECISION_NORMALIZER;
    exports.ORDER_APPROVAL_ENTITIES = ORDER_APPROVAL_ENTITIES;
    exports.ORDER_APPROVAL_FEATURE = ORDER_APPROVAL_FEATURE;
    exports.ORDER_APPROVAL_LIST = ORDER_APPROVAL_LIST;
    exports.ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID = ORDER_APPROVAL_MAKE_DECISION_PROCESS_ID;
    exports.ORDER_APPROVAL_NORMALIZER = ORDER_APPROVAL_NORMALIZER;
    exports.OccOrderApprovalAdapter = OccOrderApprovalAdapter;
    exports.OccOrderApprovalDecisionNormalizer = OccOrderApprovalDecisionNormalizer;
    exports.OccOrderApprovalListNormalizer = OccOrderApprovalListNormalizer;
    exports.OccOrderApprovalNormalizer = OccOrderApprovalNormalizer;
    exports.OrderApprovalActions = orderApproval_action;
    exports.OrderApprovalAdapter = OrderApprovalAdapter;
    exports.OrderApprovalComponentsModule = OrderApprovalComponentsModule;
    exports.OrderApprovalConnector = OrderApprovalConnector;
    exports.OrderApprovalDetailFormComponent = OrderApprovalDetailFormComponent;
    exports.OrderApprovalDetailService = OrderApprovalDetailService;
    exports.OrderApprovalDetailsModule = OrderApprovalDetailsModule;
    exports.OrderApprovalListComponent = OrderApprovalListComponent;
    exports.OrderApprovalListModule = OrderApprovalListModule;
    exports.OrderApprovalModule = OrderApprovalModule;
    exports.OrderApprovalOccModule = OrderApprovalOccModule;
    exports.OrderApprovalSelectors = orderApproval_selector;
    exports.OrderApprovalService = OrderApprovalService;
    exports.OrderDetailPermissionResultsComponent = OrderDetailPermissionResultsComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-organization-order-approval.umd.js.map
