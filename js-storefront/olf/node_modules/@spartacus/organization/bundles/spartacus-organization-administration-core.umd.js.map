{"version":3,"file":"spartacus-organization-administration-core.umd.js","sources":["../../../feature-libs/organization/administration/core/connectors/b2b-user/b2b-user.adapter.ts","../../../feature-libs/organization/administration/core/connectors/b2b-user/b2b-user.connector.ts","../../../feature-libs/organization/administration/core/connectors/budget/budget.adapter.ts","../../../feature-libs/organization/administration/core/connectors/budget/budget.connector.ts","../../../feature-libs/organization/administration/core/connectors/cost-center/cost-center.adapter.ts","../../../feature-libs/organization/administration/core/connectors/cost-center/cost-center.connector.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/org-unit.adapter.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/org-unit.connector.ts","../../../feature-libs/organization/administration/core/connectors/permission/permission.adapter.ts","../../../feature-libs/organization/administration/core/connectors/permission/permission.connector.ts","../../../feature-libs/organization/administration/core/connectors/user-group/user-group.adapter.ts","../../../feature-libs/organization/administration/core/connectors/user-group/user-group.connector.ts","../../../node_modules/tslib/tslib.es6.js","../../../feature-libs/organization/administration/core/services/organization-page-meta.resolver.ts","../../../feature-libs/organization/administration/core/services/organization-page-meta.module.ts","../../../feature-libs/organization/administration/core/store/organization-state.ts","../../../feature-libs/organization/administration/core/store/actions/budget.action.ts","../../../feature-libs/organization/administration/core/store/actions/org-unit.action.ts","../../../feature-libs/organization/administration/core/store/actions/user-group.action.ts","../../../feature-libs/organization/administration/core/store/actions/permission.action.ts","../../../feature-libs/organization/administration/core/store/actions/cost-center.action.ts","../../../feature-libs/organization/administration/core/store/actions/b2b-user.action.ts","../../../feature-libs/organization/administration/core/store/actions/organization.action.ts","../../../feature-libs/organization/administration/core/store/effects/budget.effect.ts","../../../feature-libs/organization/administration/core/store/effects/org-unit.effect.ts","../../../feature-libs/organization/administration/core/store/effects/permission.effect.ts","../../../feature-libs/organization/administration/core/store/effects/cost-center.effect.ts","../../../feature-libs/organization/administration/core/store/effects/b2b-user.effect.ts","../../../feature-libs/organization/administration/core/store/effects/user-group.effect.ts","../../../feature-libs/organization/administration/core/store/effects/index.ts","../../../feature-libs/organization/administration/core/store/reducers/b2b-user.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/budget.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/cost-center.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/org-unit.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/permission.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/user-group.reducer.ts","../../../feature-libs/organization/administration/core/store/reducers/index.ts","../../../feature-libs/organization/administration/core/store/organization-store.module.ts","../../../feature-libs/organization/administration/core/administration-core.module.ts","../../../feature-libs/organization/administration/core/connectors/b2b-user/converters.ts","../../../feature-libs/organization/administration/core/connectors/budget/converters.ts","../../../feature-libs/organization/administration/core/connectors/org-unit/converters.ts","../../../feature-libs/organization/administration/core/connectors/permission/converters.ts","../../../feature-libs/organization/administration/core/connectors/user-group/converters.ts","../../../feature-libs/organization/administration/core/guards/admin.guard.ts","../../../feature-libs/organization/administration/core/http-interceptors/bad-request/bad-request.handler.ts","../../../feature-libs/organization/administration/core/http-interceptors/conflict/conflict.handler.ts","../../../feature-libs/organization/administration/core/model/organization-item-status.ts","../../../feature-libs/organization/administration/core/model/permission.model.ts","../../../feature-libs/organization/administration/core/store/selectors/feature.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/permission.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/b2b-user.selector.ts","../../../feature-libs/organization/administration/core/utils/get-item-status.ts","../../../feature-libs/organization/administration/core/services/b2b-user.service.ts","../../../feature-libs/organization/administration/core/store/selectors/budget.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/org-unit.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/user-group.selector.ts","../../../feature-libs/organization/administration/core/store/selectors/cost-center.selector.ts","../../../feature-libs/organization/administration/core/services/budget.service.ts","../../../feature-libs/organization/administration/core/services/cost-center.service.ts","../../../feature-libs/organization/administration/core/services/org-unit.service.ts","../../../feature-libs/organization/administration/core/services/permission.service.ts","../../../feature-libs/organization/administration/core/services/user-group.service.ts","../../../feature-libs/organization/administration/core/spartacus-organization-administration-core.ts"],"sourcesContent":["import { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport abstract class B2BUserAdapter {\n  /**\n   * Abstract method used to load orgUnitCustomerManagement's details data.\n   * orgUnitCustomer's data can be loaded from alternative sources, as long as the structure\n   * converts to the `B2BUser`.\n   *\n   * @param userId The `userId` for given orgUnitCustomerManagement\n   * @param orgCustomerId The `orgUnitCustomerId` for given orgUnitCustomerManagement\n   */\n  abstract load(userId: string, orgCustomerId: string): Observable<B2BUser>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract create(userId: string, orgCustomer: B2BUser): Observable<B2BUser>;\n\n  abstract update(\n    userId: string,\n    orgCustomerId: string,\n    orgCustomer: B2BUser\n  ): Observable<B2BUser>;\n\n  abstract loadApprovers(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract assignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any>;\n\n  abstract unassignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any>;\n\n  abstract loadPermissions(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract assignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any>;\n\n  abstract unassignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any>;\n\n  abstract loadUserGroups(\n    userId: string,\n    orgCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>>;\n\n  abstract assignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any>;\n\n  abstract unassignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { B2BUserAdapter } from './b2b-user.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class B2BUserConnector {\n  constructor(protected adapter: B2BUserAdapter) {}\n\n  get(userId: string, orgUnitCustomerId: string): Observable<B2BUser> {\n    return this.adapter.load(userId, orgUnitCustomerId);\n  }\n\n  create(userId: string, orgCustomer: B2BUser): Observable<B2BUser> {\n    return this.adapter.create(userId, orgCustomer);\n  }\n\n  update(\n    userId: string,\n    orgCustomerId: string,\n    orgCustomer: B2BUser\n  ): Observable<B2BUser> {\n    return this.adapter.update(userId, orgCustomerId, orgCustomer);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  getApprovers(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadApprovers(userId, orgUnitCustomerId, params);\n  }\n\n  assignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any> {\n    return this.adapter.assignApprover(userId, orgCustomerId, approverId);\n  }\n\n  unassignApprover(\n    userId: string,\n    orgCustomerId: string,\n    approverId: string\n  ): Observable<any> {\n    return this.adapter.unassignApprover(userId, orgCustomerId, approverId);\n  }\n\n  getPermissions(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadPermissions(userId, orgUnitCustomerId, params);\n  }\n\n  assignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any> {\n    return this.adapter.assignPermission(userId, orgCustomerId, permissionId);\n  }\n\n  unassignPermission(\n    userId: string,\n    orgCustomerId: string,\n    permissionId: string\n  ): Observable<any> {\n    return this.adapter.unassignPermission(userId, orgCustomerId, permissionId);\n  }\n\n  getUserGroups(\n    userId: string,\n    orgUnitCustomerId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.adapter.loadUserGroups(userId, orgUnitCustomerId, params);\n  }\n\n  assignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any> {\n    return this.adapter.assignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n\n  unassignUserGroup(\n    userId: string,\n    orgCustomerId: string,\n    userGroupId: string\n  ): Observable<any> {\n    return this.adapter.unassignUserGroup(userId, orgCustomerId, userGroupId);\n  }\n}\n","import { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\n\nexport abstract class BudgetAdapter {\n  /**\n   * Abstract method used to load budgetManagement's details data.\n   * Budget's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Budget`.\n   *\n   * @param userId The `userId` for given budgetManagement\n   * @param budgetCode The `budgetCode` for given budgetManagement\n   */\n  abstract load(userId: string, budgetCode: string): Observable<Budget>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>>;\n\n  abstract create(userId: string, budget: Budget): Observable<Budget>;\n\n  abstract update(\n    userId: string,\n    budgetCode: string,\n    budget: Budget\n  ): Observable<Budget>;\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\nimport { BudgetAdapter } from './budget.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetConnector {\n  constructor(protected adapter: BudgetAdapter) {}\n\n  get(userId: string, budgetCode: string): Observable<Budget> {\n    return this.adapter.load(userId, budgetCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, budget: Budget): Observable<Budget> {\n    return this.adapter.create(userId, budget);\n  }\n\n  update(\n    userId: string,\n    budgetCode: string,\n    budget: Budget\n  ): Observable<Budget> {\n    return this.adapter.update(userId, budgetCode, budget);\n  }\n}\n","import { CostCenter, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\n\nexport abstract class CostCenterAdapter {\n  /**\n   * Abstract method used to load costCenterManagement's details data.\n   * CostCenter's data can be loaded from alternative sources, as long as the structure\n   * converts to the `CostCenter`.\n   *\n   * @param userId The `userId` for given costCenterManagement\n   * @param costCenterCode The `costCenterCode` for given costCenterManagement\n   */\n  abstract load(userId: string, costCenterCode: string): Observable<CostCenter>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<CostCenter>>;\n\n  abstract create(\n    userId: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter>;\n\n  abstract update(\n    userId: string,\n    costCenterCode: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter>;\n\n  abstract loadBudgets(\n    userId: string,\n    costCenterCode: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>>;\n\n  abstract assignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any>;\n\n  abstract unassignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Budget } from '../../model/budget.model';\nimport { CostCenterAdapter } from './cost-center.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterConnector {\n  constructor(protected adapter: CostCenterAdapter) {}\n\n  get(userId: string, costCenterCode: string): Observable<CostCenter> {\n    return this.adapter.load(userId, costCenterCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<CostCenter>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, costCenter: CostCenter): Observable<CostCenter> {\n    return this.adapter.create(userId, costCenter);\n  }\n\n  update(\n    userId: string,\n    costCenterCode: string,\n    costCenter: CostCenter\n  ): Observable<CostCenter> {\n    return this.adapter.update(userId, costCenterCode, costCenter);\n  }\n\n  getBudgets(\n    userId: string,\n    costCenterCode: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Budget>> {\n    return this.adapter.loadBudgets(userId, costCenterCode, params);\n  }\n\n  assignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any> {\n    return this.adapter.assignBudget(userId, costCenterCode, budgetCode);\n  }\n\n  unassignBudget(\n    userId: string,\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<any> {\n    return this.adapter.unassignBudget(userId, costCenterCode, budgetCode);\n  }\n}\n","import {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { B2BUnitNode } from '../../model/unit-node.model';\n\nexport abstract class OrgUnitAdapter {\n  /**\n   * Abstract method used to load orgUnit's details data.\n   * B2BUnitNode's data can be loaded from alternative sources, as long as the structure\n   * converts to the `B2BUnitNode`.\n   *\n   * @param userId The `userId` for given orgUnit\n   * @param orgUnitId The `orgUnitId` for given orgUnit\n   */\n  abstract load(userId: string, orgUnitId: string): Observable<B2BUnit>;\n\n  abstract loadList(userId: string): Observable<B2BUnitNode[]>;\n\n  abstract create(userId: string, orgUnit: B2BUnit): Observable<B2BUnit>;\n\n  abstract update(\n    userId: string,\n    orgUnitId: string,\n    orgUnit: B2BUnit\n  ): Observable<B2BUnit>;\n\n  abstract loadApprovalProcesses(\n    userId: string\n  ): Observable<B2BApprovalProcess[]>;\n\n  abstract loadTree(userId: string): Observable<B2BUnitNode>;\n\n  abstract loadUsers(\n    userId: string,\n    orgUnitId: string,\n    roleId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract assignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract unassignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract assignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract unassignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any>;\n\n  abstract loadAddresses(\n    userId: string,\n    orgUnitId: string\n  ): Observable<EntitiesModel<Address>>;\n\n  abstract createAddress(\n    userId: string,\n    orgUnitId: string,\n    address: Address\n  ): Observable<Address>;\n\n  abstract updateAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string,\n    address: Address\n  ): Observable<Address>;\n\n  abstract deleteAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string\n  ): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { OrgUnitAdapter } from './org-unit.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrgUnitConnector {\n  constructor(protected adapter: OrgUnitAdapter) {}\n\n  get(userId: string, orgUnitId: string): Observable<B2BUnit> {\n    return this.adapter.load(userId, orgUnitId);\n  }\n\n  create(userId: string, orgUnit: B2BUnit): Observable<B2BUnit> {\n    return this.adapter.create(userId, orgUnit);\n  }\n\n  update(\n    userId: string,\n    orgUnitId: string,\n    orgUnit: B2BUnit\n  ): Observable<B2BUnit> {\n    return this.adapter.update(userId, orgUnitId, orgUnit);\n  }\n\n  getList(userId: string): Observable<B2BUnitNode[]> {\n    return this.adapter.loadList(userId);\n  }\n\n  getApprovalProcesses(userId: string): Observable<B2BApprovalProcess[]> {\n    return this.adapter.loadApprovalProcesses(userId);\n  }\n\n  getTree(userId: string): Observable<B2BUnitNode> {\n    return this.adapter.loadTree(userId);\n  }\n\n  getUsers(\n    userId: string,\n    orgUnitId: string,\n    roleId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadUsers(userId, orgUnitId, roleId, params);\n  }\n\n  assignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.assignRole(userId, orgCustomerId, roleId);\n  }\n\n  unassignRole(\n    userId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.unassignRole(userId, orgCustomerId, roleId);\n  }\n\n  assignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.assignApprover(\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    );\n  }\n\n  unassignApprover(\n    userId: string,\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): Observable<any> {\n    return this.adapter.unassignApprover(\n      userId,\n      orgUnitId,\n      orgCustomerId,\n      roleId\n    );\n  }\n\n  getAddresses(\n    userId: string,\n    orgUnitId: string\n  ): Observable<EntitiesModel<Address>> {\n    return this.adapter.loadAddresses(userId, orgUnitId);\n  }\n\n  createAddress(\n    userId: string,\n    orgUnitId: string,\n    address: Address\n  ): Observable<Address> {\n    return this.adapter.createAddress(userId, orgUnitId, address);\n  }\n\n  updateAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string,\n    address: Address\n  ): Observable<Address> {\n    return this.adapter.updateAddress(userId, orgUnitId, addressId, address);\n  }\n\n  deleteAddress(\n    userId: string,\n    orgUnitId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.adapter.deleteAddress(userId, orgUnitId, addressId);\n  }\n}\n","import {\n  EntitiesModel,\n  SearchConfig,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\n\nexport abstract class PermissionAdapter {\n  /**\n   * Abstract method used to load permissionManagement's details data.\n   * Permission's data can be loaded from alternative sources, as long as the structure\n   * converts to the `Permission`.\n   *\n   * @param userId The `userId` for given permissionManagement\n   * @param permissionCode The `permissionCode` for given permissionManagement\n   */\n  abstract load(userId: string, permissionCode: string): Observable<Permission>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract create(\n    userId: string,\n    permission: Permission\n  ): Observable<Permission>;\n\n  abstract update(\n    userId: string,\n    permissionCode: string,\n    permission: Permission\n  ): Observable<Permission>;\n\n  abstract loadTypes(): Observable<OrderApprovalPermissionType[]>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  EntitiesModel,\n  SearchConfig,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { PermissionAdapter } from './permission.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionConnector {\n  constructor(protected adapter: PermissionAdapter) {}\n\n  get(userId: string, permissionCode: string): Observable<Permission> {\n    return this.adapter.load(userId, permissionCode);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  create(userId: string, permission: Permission): Observable<Permission> {\n    return this.adapter.create(userId, permission);\n  }\n\n  update(\n    userId: string,\n    permissionCode: string,\n    permission: Permission\n  ): Observable<Permission> {\n    return this.adapter.update(userId, permissionCode, permission);\n  }\n\n  getTypes(): Observable<OrderApprovalPermissionType[]> {\n    return this.adapter.loadTypes();\n  }\n}\n","import { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport abstract class UserGroupAdapter {\n  /**\n   * Abstract method used to load userGroupManagement's details data.\n   * userGroup's data can be loaded from alternative sources, as long as the structure\n   * converts to the `OrgUnitUserGroup`.\n   *\n   * @param userId The `userId` for given userGroupManagement\n   * @param userGroupId The `userGroupId` for given userGroupManagement\n   */\n  abstract load(userId: string, userGroupId: string): Observable<UserGroup>;\n\n  abstract loadList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>>;\n\n  abstract loadAvailableOrderApprovalPermissions(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>>;\n\n  abstract loadAvailableOrgCustomers(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>>;\n\n  abstract create(userId: string, userGroup: UserGroup): Observable<UserGroup>;\n\n  abstract update(\n    userId: string,\n    userGroupId: string,\n    userGroup: UserGroup\n  ): Observable<UserGroup>;\n\n  abstract delete(userId: string, userGroupId: string): Observable<UserGroup>;\n\n  abstract assignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any>;\n\n  abstract assignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any>;\n\n  abstract unassignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any>;\n\n  abstract unassignAllMembers(\n    userId: string,\n    userGroupId: string\n  ): Observable<any>;\n\n  abstract unassignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, SearchConfig } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { UserGroupAdapter } from './user-group.adapter';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupConnector {\n  constructor(protected adapter: UserGroupAdapter) {}\n\n  get(userId: string, userGroupId: string): Observable<UserGroup> {\n    return this.adapter.load(userId, userGroupId);\n  }\n\n  getList(\n    userId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.adapter.loadList(userId, params);\n  }\n\n  getAvailableOrderApprovalPermissions(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.adapter.loadAvailableOrderApprovalPermissions(\n      userId,\n      userGroupId,\n      params\n    );\n  }\n\n  getAvailableOrgCustomers(\n    userId: string,\n    userGroupId: string,\n    params?: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.adapter.loadAvailableOrgCustomers(userId, userGroupId, params);\n  }\n\n  create(userId: string, userGroup: UserGroup): Observable<UserGroup> {\n    return this.adapter.create(userId, userGroup);\n  }\n\n  delete(userId: string, userGroupId: string): Observable<UserGroup> {\n    return this.adapter.delete(userId, userGroupId);\n  }\n\n  update(\n    userId: string,\n    userGroupId: string,\n    userGroup: UserGroup\n  ): Observable<UserGroup> {\n    return this.adapter.update(userId, userGroupId, userGroup);\n  }\n\n  assignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any> {\n    return this.adapter.assignMember(userId, userGroupId, orgCustomerId);\n  }\n\n  assignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any> {\n    return this.adapter.assignOrderApprovalPermission(\n      userId,\n      userGroupId,\n      orderApprovalPermissionCode\n    );\n  }\n\n  unassignMember(\n    userId: string,\n    userGroupId: string,\n    orgCustomerId: string\n  ): Observable<any> {\n    return this.adapter.unassignMember(userId, userGroupId, orgCustomerId);\n  }\n\n  unassignAllMembers(userId: string, userGroupId: string): Observable<any> {\n    return this.adapter.unassignAllMembers(userId, userGroupId);\n  }\n\n  unassignOrderApprovalPermission(\n    userId: string,\n    userGroupId: string,\n    orderApprovalPermissionCode: string\n  ): Observable<any> {\n    return this.adapter.unassignOrderApprovalPermission(\n      userId,\n      userGroupId,\n      orderApprovalPermissionCode\n    );\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  BreadcrumbMeta,\n  ContentPageMetaResolver,\n  PageBreadcrumbResolver,\n  PageDescriptionResolver,\n  PageMetaResolver,\n  PageRobotsMeta,\n  PageRobotsResolver,\n  PageTitleResolver,\n  PageType,\n  RoutingService,\n  SemanticPathService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, defer, Observable, of } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n} from 'rxjs/operators';\n\n/**\n * Resolves the page data for Organization Pages.\n *\n * Breadcrumbs are built in this implementation only.\n *\n * @property {string} ORGANIZATION_SEMANTIC_ROUTE the default root path for organization pages.\n * @property {string} ORGANIZATION_TRANSLATION_KEY the default i18n key for the organization breadcrumb label.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationPageMetaResolver\n  extends PageMetaResolver\n  implements\n    PageBreadcrumbResolver,\n    PageTitleResolver,\n    PageDescriptionResolver,\n    PageRobotsResolver\n{\n  pageTemplate = 'CompanyPageTemplate';\n  pageType = PageType.CONTENT_PAGE;\n\n  /**\n   * Translation key for the breadcrumb of Organization home page\n   */\n  protected readonly ORGANIZATION_TRANSLATION_KEY = 'organization.breadcrumb';\n\n  /**\n   * The semantic route of the organization landing page. It's used to recognize whether\n   * we are on this page. In such a case we avoid showing the breadcrumb for this page.\n   */\n  protected readonly ORGANIZATION_SEMANTIC_ROUTE = 'organization';\n\n  constructor(\n    protected contentPageMetaResolver: ContentPageMetaResolver,\n    protected translation: TranslationService,\n    protected semanticPath: SemanticPathService,\n    protected routingService: RoutingService\n  ) {\n    super();\n  }\n\n  resolveTitle(): Observable<string | undefined> {\n    return this.contentPageMetaResolver.resolveTitle();\n  }\n\n  resolveDescription(): Observable<string | undefined> {\n    return this.contentPageMetaResolver.resolveDescription();\n  }\n\n  resolveRobots(): Observable<PageRobotsMeta[]> {\n    return this.contentPageMetaResolver.resolveRobots();\n  }\n\n  /**\n   * Returns list of breadcrumbs for:\n   * - the home page\n   * - the organization home page\n   * - the organization's child pages (i.e. cost center list)\n   * - sub-routes of the organization's child pages (i.e. cost center details, edit cost center, ...)\n   */\n  resolveBreadcrumbs(): Observable<BreadcrumbMeta[]> {\n    return this.breadcrumbs$;\n  }\n\n  /**\n   * Breadcrumb of the Organization page.\n   * It's empty when the current page is the Organization page.\n   */\n  protected organizationPageBreadcrumb$: Observable<BreadcrumbMeta[]> = defer(\n    () => this.routingService.getRouterState()\n  ).pipe(\n    map((routerState) => routerState?.state?.semanticRoute),\n    distinctUntilChanged(),\n    switchMap((semanticRoute) =>\n      semanticRoute === this.ORGANIZATION_SEMANTIC_ROUTE\n        ? of([])\n        : this.translation.translate(this.ORGANIZATION_TRANSLATION_KEY).pipe(\n            map((label) => [\n              {\n                label,\n                link: this.semanticPath.get(this.ORGANIZATION_SEMANTIC_ROUTE),\n              },\n            ])\n          )\n    )\n  );\n\n  /**\n   * Breadcrumbs returned in the method #resolveBreadcrumbs.\n   */\n  protected breadcrumbs$: Observable<BreadcrumbMeta[]> = combineLatest([\n    this.organizationPageBreadcrumb$,\n    defer(() => this.contentPageMetaResolver.resolveBreadcrumbs()),\n  ]).pipe(\n    map(([organizationPageBreadcrumb, breadcrumbs = []]) => {\n      const [home, ...restBreadcrumbs] = breadcrumbs;\n      return [home, ...organizationPageBreadcrumb, ...restBreadcrumbs];\n    }),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n}\n","import { NgModule } from '@angular/core';\nimport { PageMetaResolver } from '@spartacus/core';\nimport { OrganizationPageMetaResolver } from './organization-page-meta.resolver';\n\n@NgModule({\n  providers: [\n    {\n      provide: PageMetaResolver,\n      useExisting: OrganizationPageMetaResolver,\n      multi: true,\n    },\n  ],\n})\nexport class OrganizationPageMetaModule {}\n","import {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  ListModel,\n  OrderApprovalPermissionType,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../model/budget.model';\nimport { Permission } from '../model/permission.model';\nimport { B2BUnitNode } from '../model/unit-node.model';\nimport { UserGroup } from '../model/user-group.model';\n\nexport const ORGANIZATION_FEATURE = 'organization';\n\nexport const BUDGET_FEATURE = 'budget';\nexport const BUDGET_ENTITIES = 'budget-entities';\nexport const BUDGET_LIST = 'budget-list';\n\nexport const COST_CENTER_FEATURE = 'costCenter';\nexport const COST_CENTER_ENTITIES = 'costCenter-entities';\nexport const COST_CENTER_LIST = 'costCenter-list';\nexport const COST_CENTER_ASSIGNED_BUDGETS = 'costCenter-assigned-budgets';\n\nexport const PERMISSION_FEATURE = 'permission';\nexport const PERMISSION_ENTITIES = 'permission-entities';\nexport const PERMISSION_LIST = 'permission-list';\n\nexport const PERMISSION_TYPES = 'permission-types';\nexport const PERMISSION_TYPES_LIST = 'permission-types-list';\n\nexport const ORG_UNIT_FEATURE = 'orgUnit';\nexport const ORG_UNIT_NODE_ENTITIES = 'orgUnitNode-entities';\nexport const ORG_UNIT_NODE_LIST = 'orgUnitNode-list';\nexport const ORG_UNIT_ENTITIES = 'orgUnit-entities';\nexport const ORG_UNIT_TREE_ENTITY = 'orgUnit-tree';\nexport const ORG_UNIT_APPROVAL_PROCESSES_ENTITIES =\n  'orgUnit-approval-processes';\nexport const ORG_UNIT_ASSIGNED_USERS = 'orgUnit-assigned-users';\n\nexport const ORG_UNIT_TREE = 'tree';\nexport const ORG_UNIT_APPROVAL_PROCESSES = 'approvalProcesses';\nexport const ORG_UNIT_NODES = 'availableOrgUnitNodes';\n\nexport const B2B_USER_FEATURE = 'b2bUser';\nexport const B2B_USER_ENTITIES = 'b2bUser-entities';\nexport const USER_LIST = 'b2bUser-list';\nexport const B2B_USER_APPROVERS = 'b2bUser-approvers';\nexport const B2B_USER_PERMISSIONS = 'b2bUser-permissions';\nexport const B2B_USER_USER_GROUPS = 'b2bUser-user-groups';\n\nexport const USER_GROUP_FEATURE = 'userGroup';\nexport const USER_GROUP_ENTITIES = 'userGroup-entities';\nexport const USER_GROUP_LIST = 'userGroup-list';\nexport const USER_GROUP_PERMISSIONS =\n  'userGroup-available-order-approval-permissions';\nexport const USER_GROUP_AVAILABLE_CUSTOMERS =\n  'userGroup-available-org-customers';\nexport const ADDRESS_ENTITIES = 'addresses-entities';\nexport const ADDRESS_LIST = 'addresses-list';\n\nexport interface Management<Type> extends StateUtils.EntityListState<Type> {}\n\nexport interface BudgetManagement extends Management<Budget> {}\n\nexport interface OrgUnits {\n  availableOrgUnitNodes: StateUtils.EntityLoaderState<B2BUnitNode[]>;\n  entities: StateUtils.EntityLoaderState<B2BUnit>;\n  tree: StateUtils.EntityLoaderState<B2BUnitNode>;\n  approvalProcesses: StateUtils.EntityLoaderState<B2BApprovalProcess[]>;\n  users: StateUtils.EntityLoaderState<ListModel>;\n  addressList: StateUtils.EntityLoaderState<ListModel>;\n  addressEntities: StateUtils.EntityLoaderState<Address>;\n}\n\nexport interface UserGroupManagement extends Management<UserGroup> {\n  permissions: StateUtils.EntityLoaderState<ListModel>;\n  customers: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface PermissionManagement extends Management<Permission> {\n  permissionTypes: StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>;\n}\n\nexport interface CostCenterManagement extends Management<CostCenter> {\n  budgets: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface B2BUserManagement extends Management<B2BUser> {\n  approvers: StateUtils.EntityLoaderState<ListModel>;\n  permissions: StateUtils.EntityLoaderState<ListModel>;\n  userGroups: StateUtils.EntityLoaderState<ListModel>;\n}\n\nexport interface StateWithOrganization {\n  [ORGANIZATION_FEATURE]: OrganizationState;\n}\n\nexport interface OrganizationState {\n  [BUDGET_FEATURE]: BudgetManagement;\n  [ORG_UNIT_FEATURE]: OrgUnits;\n  [USER_GROUP_FEATURE]: UserGroupManagement;\n  [PERMISSION_FEATURE]: PermissionManagement;\n  [COST_CENTER_FEATURE]: CostCenterManagement;\n  [B2B_USER_FEATURE]: B2BUserManagement;\n}\n","import { ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { BUDGET_ENTITIES, BUDGET_LIST } from '../organization-state';\n\nexport const LOAD_BUDGET = '[Budget] Load Budget Data';\nexport const LOAD_BUDGET_FAIL = '[Budget] Load Budget Data Fail';\nexport const LOAD_BUDGET_SUCCESS = '[Budget] Load Budget Data Success';\n\nexport const LOAD_BUDGETS = '[Budget] Load Budgets';\nexport const LOAD_BUDGETS_FAIL = '[Budget] Load Budgets Fail';\nexport const LOAD_BUDGETS_SUCCESS = '[Budget] Load Budgets Success';\n\nexport const CREATE_BUDGET = '[Budget] Create Budget';\nexport const CREATE_BUDGET_FAIL = '[Budget] Create Budget Fail';\nexport const CREATE_BUDGET_SUCCESS = '[Budget] Create Budget Success';\n\nexport const UPDATE_BUDGET = '[Budget] Update Budget';\nexport const UPDATE_BUDGET_FAIL = '[Budget] Update Budget Fail';\nexport const UPDATE_BUDGET_SUCCESS = '[Budget] Update Budget Success';\n\nexport class LoadBudget extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_BUDGET;\n  constructor(public payload: { userId: string; budgetCode: string }) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class LoadBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class LoadBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_BUDGET_SUCCESS;\n  constructor(public payload: Budget | Budget[]) {\n    super(\n      BUDGET_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((budget) => budget?.code)\n        : payload?.code\n    );\n  }\n}\n\nexport class LoadBudgets extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_BUDGETS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadBudgetsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_BUDGETS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      BUDGET_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_BUDGETS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(BUDGET_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreateBudget extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_BUDGET;\n  constructor(public payload: { userId: string; budget: Budget }) {\n    super(BUDGET_ENTITIES, payload.budget.code);\n  }\n}\n\nexport class CreateBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class CreateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_BUDGET_SUCCESS;\n  constructor(public payload: Budget) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class UpdateBudget extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_BUDGET;\n  constructor(\n    public payload: { userId: string; budgetCode: string; budget: Budget }\n  ) {\n    super(BUDGET_ENTITIES, payload.budget.code);\n  }\n}\n\nexport class UpdateBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class UpdateBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_BUDGET_SUCCESS;\n  constructor(public payload: Budget) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport type BudgetAction =\n  | LoadBudget\n  | LoadBudgetFail\n  | LoadBudgetSuccess\n  | LoadBudgets\n  | LoadBudgetsFail\n  | LoadBudgetsSuccess\n  | CreateBudget\n  | CreateBudgetFail\n  | CreateBudgetSuccess\n  | UpdateBudget\n  | UpdateBudgetFail\n  | UpdateBudgetSuccess;\n","import {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  ListModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  ADDRESS_ENTITIES,\n  ADDRESS_LIST,\n  B2B_USER_ENTITIES,\n  ORG_UNIT_APPROVAL_PROCESSES,\n  ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n  ORG_UNIT_ASSIGNED_USERS,\n  ORG_UNIT_ENTITIES,\n  ORG_UNIT_NODES,\n  ORG_UNIT_NODE_LIST,\n  ORG_UNIT_TREE,\n  ORG_UNIT_TREE_ENTITY,\n} from '../organization-state';\n\nexport const LOAD_ORG_UNIT = '[B2BUnit] Load B2BUnit Data';\nexport const LOAD_ORG_UNIT_FAIL = '[B2BUnit] Load B2BUnit Data Fail';\nexport const LOAD_ORG_UNIT_SUCCESS = '[B2BUnit] Load B2BUnit Data Success';\n\nexport const LOAD_UNIT_NODE = '[B2BUnitNode] Load B2BUnitNode Data';\nexport const LOAD_UNIT_NODE_FAIL = '[B2BUnitNode] Load B2BUnitNode Data Fail';\nexport const LOAD_UNIT_NODE_SUCCESS =\n  '[B2BUnitNode] Load B2BUnitNode Data Success';\n\nexport const LOAD_UNIT_NODES = '[B2BUnitNode] Load B2BUnitNodes';\nexport const LOAD_UNIT_NODES_FAIL = '[B2BUnitNode] Load B2BUnitNodes Fail';\nexport const LOAD_UNIT_NODES_SUCCESS =\n  '[B2BUnitNode] Load B2BUnitNodes Success';\n\nexport const CREATE_ORG_UNIT = '[B2BUnit] Create B2BUnitNode';\nexport const CREATE_ORG_UNIT_FAIL = '[B2BUnit] Create B2BUnitNode Fail';\nexport const CREATE_ORG_UNIT_SUCCESS = '[B2BUnit] Create B2BUnitNode Success';\n\nexport const UPDATE_ORG_UNIT = '[B2BUnit] Update B2BUnitNode';\nexport const UPDATE_ORG_UNIT_FAIL = '[B2BUnit] Update B2BUnitNode Fail';\nexport const UPDATE_ORG_UNIT_SUCCESS = '[B2BUnit] Update B2BUnitNode Success';\n\nexport const LOAD_UNIT_TREE = '[B2BUnitNode] Load Tree';\nexport const LOAD_UNIT_TREE_FAIL = '[B2BUnitNode] Load Tree Fail';\nexport const LOAD_UNIT_TREE_SUCCESS = '[B2BUnitNode] Load Tree Success';\n\nexport const LOAD_APPROVAL_PROCESSES =\n  '[B2BApprovalProcess] Load Approval Processes';\nexport const LOAD_APPROVAL_PROCESSES_FAIL =\n  '[B2BApprovalProcess] Load Approval Processes Fail';\nexport const LOAD_APPROVAL_PROCESSES_SUCCESS =\n  '[B2BApprovalProcess] Load Approval Processes Success';\n\nexport const LOAD_ASSIGNED_USERS = '[B2BUnit] Load Users';\nexport const LOAD_ASSIGNED_USERS_SUCCESS = '[B2BUnit] Load Users success';\nexport const LOAD_ASSIGNED_USERS_FAIL = '[B2BUnit] Load Users fail';\n\nexport const ASSIGN_ROLE = '[B2BUnit] Assign Role';\nexport const ASSIGN_ROLE_SUCCESS = '[B2BUnit] Assign Role success';\nexport const ASSIGN_ROLE_FAIL = '[B2BUnit] Assign Role fail';\n\nexport const UNASSIGN_ROLE = '[B2BUnit] Unassign Role';\nexport const UNASSIGN_ROLE_SUCCESS = '[B2BUnit] Unassign Role success';\nexport const UNASSIGN_ROLE_FAIL = '[B2BUnit] Unassign Role fail';\n\nexport const ASSIGN_APPROVER = '[B2BUnit] Assign Approver';\nexport const ASSIGN_APPROVER_SUCCESS = '[B2BUnit] Assign Approver success';\nexport const ASSIGN_APPROVER_FAIL = '[B2BUnit] Assign Approver fail';\n\nexport const UNASSIGN_APPROVER = '[B2BUnit] Unassign Approver';\nexport const UNASSIGN_APPROVER_SUCCESS = '[B2BUnit] Unassign Approver success';\nexport const UNASSIGN_APPROVER_FAIL = '[B2BUnit] Unassign Approver fail';\n\nexport const CREATE_ADDRESS = '[B2BUnit] Create address';\nexport const CREATE_ADDRESS_SUCCESS = '[B2BUnit] Create address success';\nexport const CREATE_ADDRESS_FAIL = '[B2BUnit] Create address fail';\n\nexport const UPDATE_ADDRESS = '[B2BUnit] Update address';\nexport const UPDATE_ADDRESS_SUCCESS = '[B2BUnit] Update address success';\nexport const UPDATE_ADDRESS_FAIL = '[B2BUnit] Update address fail';\n\nexport const DELETE_ADDRESS = '[B2BUnit] Delete address';\nexport const DELETE_ADDRESS_SUCCESS = '[B2BUnit] Delete address success';\nexport const DELETE_ADDRESS_FAIL = '[B2BUnit] Delete address fail';\n\nexport const LOAD_ADDRESS_SUCCESS = '[B2BUnit] Load address success';\n\nexport const LOAD_ADDRESSES = '[B2BUnit] Load addresses';\nexport const LOAD_ADDRESSES_SUCCESS = '[B2BUnit] Load addresses success';\nexport const LOAD_ADDRESSES_FAIL = '[B2BUnit] Load addresses fail';\n\nexport const CLEAR_ASSIGNED_USERS = '[B2BUnit] Clear Assigned Users';\n\nexport class LoadOrgUnit extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ORG_UNIT;\n  constructor(public payload: { userId: string; orgUnitId: string }) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId);\n  }\n}\n\nexport class LoadOrgUnitFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ORG_UNIT_FAIL;\n  constructor(public payload: { orgUnitId: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.orgUnitId, payload.error);\n  }\n}\n\nexport class LoadOrgUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ORG_UNIT_SUCCESS;\n\n  constructor(public payload: B2BUnit | B2BUnit[]) {\n    super(\n      ORG_UNIT_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((orgUnit) => orgUnit?.uid)\n        : payload?.uid\n    );\n  }\n}\n\nexport class LoadOrgUnitNodes extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_UNIT_NODES;\n  constructor(\n    public payload: {\n      userId: string;\n    }\n  ) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n  }\n}\n\nexport class LoadOrgUnitNodesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_UNIT_NODES_FAIL;\n  constructor(public payload: any) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES, payload.error);\n  }\n}\n\nexport class LoadOrgUnitNodesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_UNIT_NODES_SUCCESS;\n  constructor(public payload: B2BUnitNode[]) {\n    super(ORG_UNIT_NODE_LIST, ORG_UNIT_NODES);\n  }\n}\n\nexport class CreateUnit extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_ORG_UNIT;\n  constructor(public payload: { userId: string; unit: B2BUnit }) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid);\n  }\n}\n\nexport class CreateUnitFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_ORG_UNIT_FAIL;\n  constructor(public payload: { unitCode: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n  }\n}\n\nexport class CreateUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_ORG_UNIT_SUCCESS;\n  constructor(public payload: B2BUnit) {\n    super(ORG_UNIT_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UpdateUnit extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_ORG_UNIT;\n  constructor(\n    public payload: { userId: string; unitCode: string; unit: B2BUnit }\n  ) {\n    super(ORG_UNIT_ENTITIES, payload.unit.uid);\n  }\n}\n\nexport class UpdateUnitFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_ORG_UNIT_FAIL;\n  constructor(public payload: { unitCode: string; error: any }) {\n    super(ORG_UNIT_ENTITIES, payload.unitCode, payload.error);\n  }\n}\n\nexport class UpdateUnitSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_ORG_UNIT_SUCCESS;\n  constructor(public payload: B2BUnit) {\n    super(ORG_UNIT_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class LoadTree extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_UNIT_TREE;\n  constructor(public payload: { userId: string }) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n  }\n}\n\nexport class LoadTreeFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_UNIT_TREE_FAIL;\n  constructor(public payload: { error: any }) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE, payload.error);\n  }\n}\n\nexport class LoadTreeSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_UNIT_TREE_SUCCESS;\n\n  constructor(public payload: B2BUnitNode) {\n    super(ORG_UNIT_TREE_ENTITY, ORG_UNIT_TREE);\n  }\n}\n\nexport class LoadApprovalProcesses extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_APPROVAL_PROCESSES;\n  constructor(public payload: { userId: string }) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n  }\n}\n\nexport class LoadApprovalProcessesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_APPROVAL_PROCESSES_FAIL;\n  constructor(public payload: { error: any }) {\n    super(\n      ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n      ORG_UNIT_APPROVAL_PROCESSES,\n      payload.error\n    );\n  }\n}\n\nexport class LoadApprovalProcessesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_APPROVAL_PROCESSES_SUCCESS;\n\n  constructor(public payload: B2BApprovalProcess[]) {\n    super(ORG_UNIT_APPROVAL_PROCESSES_ENTITIES, ORG_UNIT_APPROVAL_PROCESSES);\n  }\n}\n\nexport class LoadAssignedUsers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ASSIGNED_USERS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class ClearAssignedUsers extends StateUtils.EntityRemoveAction {\n  readonly type = CLEAR_ASSIGNED_USERS;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class LoadAssignedUsersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ASSIGNED_USERS_FAIL;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      ),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAssignedUsersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ASSIGNED_USERS_SUCCESS;\n  constructor(\n    public payload: {\n      orgUnitId: string;\n      roleId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      ORG_UNIT_ASSIGNED_USERS,\n      StateUtils.serializeSearchConfig(\n        payload.params,\n        `${payload.orgUnitId},${payload.roleId}`\n      )\n    );\n  }\n}\n\nexport class AssignRole extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_ROLE;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class AssignRoleFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_ROLE_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class AssignRoleSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_ROLE_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignRole extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_ROLE;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class UnassignRoleFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_ROLE_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UnassignRoleSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_ROLE_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class AssignApprover extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class AssignApproverFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class AssignApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_APPROVER_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignApprover extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      orgCustomerId: string;\n      roleId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class UnassignApproverFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UnassignApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_APPROVER_SUCCESS;\n  constructor(\n    public payload: { uid: string; roleId: string; selected: boolean }\n  ) {\n    super(B2B_USER_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class CreateAddress extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_ADDRESS;\n  constructor(\n    public payload: { userId: string; orgUnitId: string; address: Address }\n  ) {\n    super(ADDRESS_ENTITIES, payload.address.id);\n  }\n}\n\nexport class CreateAddressFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class CreateAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id, payload);\n  }\n}\n\nexport class UpdateAddress extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_ADDRESS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      addressId: string;\n      address: Address;\n    }\n  ) {\n    super(ADDRESS_ENTITIES, payload.address.id);\n  }\n}\n\nexport class UpdateAddressFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class UpdateAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id, payload);\n  }\n}\n\nexport class DeleteAddress extends StateUtils.EntityLoadAction {\n  readonly type = DELETE_ADDRESS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgUnitId: string;\n      addressId: string;\n    }\n  ) {\n    super(ADDRESS_ENTITIES, payload.addressId);\n  }\n}\n\nexport class DeleteAddressFail extends StateUtils.EntityFailAction {\n  readonly type = DELETE_ADDRESS_FAIL;\n  constructor(public payload: { addressId: string; error: any }) {\n    super(ADDRESS_ENTITIES, payload.addressId, payload.error);\n  }\n}\n\nexport class DeleteAddressSuccess extends StateUtils.EntityRemoveAction {\n  readonly type = DELETE_ADDRESS_SUCCESS;\n  constructor(public payload: Address) {\n    super(ADDRESS_ENTITIES, payload.id);\n  }\n}\n\nexport class LoadAddressSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ADDRESS_SUCCESS;\n  constructor(public payload: Address | Address[]) {\n    super(\n      ADDRESS_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((address) => address?.id)\n        : payload?.id\n    );\n  }\n}\n\nexport class LoadAddresses extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ADDRESSES;\n  constructor(public payload: { userId: string; orgUnitId: string }) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n  }\n}\n\nexport class LoadAddressesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ADDRESSES_FAIL;\n  constructor(public payload: { orgUnitId: string; error: any }) {\n    super(ADDRESS_LIST, payload.orgUnitId, payload.error);\n  }\n}\n\nexport class LoadAddressesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ADDRESSES_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      orgUnitId: string;\n    }\n  ) {\n    super(ADDRESS_LIST, payload.orgUnitId);\n  }\n}\n\nexport type OrgUnitAction =\n  | LoadOrgUnitNodes\n  | LoadOrgUnitNodesFail\n  | LoadOrgUnitNodesSuccess\n  | LoadOrgUnit\n  | LoadOrgUnitFail\n  | LoadOrgUnitSuccess\n  | CreateUnit\n  | CreateUnitFail\n  | CreateUnitSuccess\n  | UpdateUnit\n  | UpdateUnitFail\n  | UpdateUnitSuccess\n  | LoadTree\n  | LoadTreeSuccess\n  | LoadTreeFail\n  | LoadApprovalProcesses\n  | LoadApprovalProcessesSuccess\n  | LoadApprovalProcessesFail\n  | AssignRole\n  | AssignRoleSuccess\n  | AssignRoleFail\n  | UnassignRole\n  | UnassignRoleSuccess\n  | UnassignRoleFail\n  | AssignApprover\n  | AssignApproverSuccess\n  | AssignApproverFail\n  | UnassignApprover\n  | UnassignApproverSuccess\n  | UnassignApproverFail\n  | CreateAddress\n  | CreateAddressSuccess\n  | CreateAddressFail\n  | UpdateAddress\n  | UpdateAddressSuccess\n  | UpdateAddressFail\n  | DeleteAddress\n  | DeleteAddressSuccess\n  | DeleteAddressFail\n  | LoadAddresses\n  | LoadAddressesFail\n  | LoadAddressesSuccess\n  | LoadAddressSuccess\n  | ClearAssignedUsers;\n","import { ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2B_USER_ENTITIES,\n  PERMISSION_ENTITIES,\n  USER_GROUP_AVAILABLE_CUSTOMERS,\n  USER_GROUP_ENTITIES,\n  USER_GROUP_LIST,\n  USER_GROUP_PERMISSIONS,\n} from '../organization-state';\n\nexport const LOAD_USER_GROUP = '[UserGroup] Load UserGroup Data';\nexport const LOAD_USER_GROUP_FAIL = '[UserGroup] Load UserGroup Data Fail';\nexport const LOAD_USER_GROUP_SUCCESS =\n  '[UserGroup] Load UserGroup Data Success';\n\nexport const LOAD_USER_GROUPS = '[UserGroup] Load UserGroups';\nexport const LOAD_USER_GROUPS_FAIL = '[UserGroup] Load UserGroups Fail';\nexport const LOAD_USER_GROUPS_SUCCESS = '[UserGroup] Load UserGroups Success';\n\nexport const LOAD_USER_GROUP_PERMISSIONS = '[UserGroup] Load Permissions Data';\nexport const LOAD_USER_GROUP_PERMISSIONS_FAIL =\n  '[UserGroup] Load Permissions Data Fail';\nexport const LOAD_USER_GROUP_PERMISSIONS_SUCCESS =\n  '[UserGroup] Load Permissions Data Success';\n\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS =\n  '[UserGroup] Load Customers Data';\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL =\n  '[UserGroup] Load Customers Data Fail';\nexport const LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS =\n  '[UserGroup] Load Customers Data Success';\n\nexport const CREATE_USER_GROUP = '[UserGroup] Create UserGroup';\nexport const CREATE_USER_GROUP_FAIL = '[UserGroup] Create UserGroup Fail';\nexport const CREATE_USER_GROUP_SUCCESS = '[UserGroup] Create UserGroup Success';\n\nexport const USER_GROUP_ASSIGN_MEMBER = '[UserGroup] Assign Member';\nexport const USER_GROUP_ASSIGN_MEMBER_FAIL = '[UserGroup] Assign Member Fail';\nexport const USER_GROUP_ASSIGN_MEMBER_SUCCESS =\n  '[UserGroup] Assign Member Success';\n\nexport const USER_GROUP_ASSIGN_PERMISSION = '[UserGroup] Assign Permissions';\nexport const USER_GROUP_ASSIGN_PERMISSION_FAIL =\n  '[UserGroup] Assign Permissions Fail';\nexport const USER_GROUP_ASSIGN_PERMISSION_SUCCESS =\n  '[UserGroup] Assign Permissions Success';\n\nexport const UPDATE_USER_GROUP = '[UserGroup] Update UserGroup';\nexport const UPDATE_USER_GROUP_FAIL = '[UserGroup] Update UserGroup Fail';\nexport const UPDATE_USER_GROUP_SUCCESS = '[UserGroup] Update UserGroup Success';\n\nexport const DELETE_USER_GROUP = '[UserGroup] Delete UserGroup';\nexport const DELETE_USER_GROUP_FAIL = '[UserGroup] Delete UserGroup Fail';\nexport const DELETE_USER_GROUP_SUCCESS = '[UserGroup] Delete UserGroup Success';\n\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS = '[UserGroup] Unassign Members';\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL =\n  '[UserGroup] Unassign Members Fail';\nexport const USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS =\n  '[UserGroup] Unassign Members Success';\n\nexport const USER_GROUP_UNASSIGN_MEMBER = '[UserGroup] Unassign Member';\nexport const USER_GROUP_UNASSIGN_MEMBER_FAIL =\n  '[UserGroup] Unassign Member Fail';\nexport const USER_GROUP_UNASSIGN_MEMBER_SUCCESS =\n  '[UserGroup] Unassign Member Success';\n\nexport const USER_GROUP_UNASSIGN_PERMISSION = '[UserGroup] Unassign Permission';\nexport const USER_GROUP_UNASSIGN_PERMISSION_FAIL =\n  '[UserGroup] Unassign Permission Fail';\nexport const USER_GROUP_UNASSIGN_PERMISSION_SUCCESS =\n  '[UserGroup] Unassign Permission Success';\n\nexport class LoadUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP;\n  constructor(public payload: { userId: string; userGroupId: string }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class LoadUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class LoadUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup | UserGroup[]) {\n    super(\n      USER_GROUP_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((userGroup) => userGroup?.uid)\n        : payload?.uid\n    );\n  }\n}\n\nexport class LoadUserGroups extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUPS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadUserGroupsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUPS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      USER_GROUP_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUPS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_GROUP_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAvailableOrgCustomersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      USER_GROUP_AVAILABLE_CUSTOMERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.userGroupId)\n    );\n  }\n}\n\nexport class CreateUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_USER_GROUP;\n  constructor(public payload: { userId: string; userGroup: UserGroup }) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n  }\n}\n\nexport class CreateUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class CreateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class AssignMember extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      customerId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n  }\n}\n\nexport class AssignMemberFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      customerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n  }\n}\n\nexport class AssignMemberSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_ASSIGN_MEMBER_SUCCESS;\n  constructor(public payload: { customerId: string; selected: boolean }) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class AssignPermission extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      permissionUid: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n  }\n}\n\nexport class AssignPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      permissionUid: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n  }\n}\n\nexport class AssignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_ASSIGN_PERMISSION_SUCCESS;\n  constructor(public payload: { permissionUid: string; selected: boolean }) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n  }\n}\n\nexport class UpdateUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      userGroup: UserGroup;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroup.uid);\n  }\n}\n\nexport class UpdateUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UpdateUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class DeleteUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = DELETE_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class DeleteUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = DELETE_USER_GROUP_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class DeleteUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = DELETE_USER_GROUP_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignMember extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      customerId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId);\n  }\n}\n\nexport class UnassignMemberFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      customerId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload.error);\n  }\n}\n\nexport class UnassignMemberSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_MEMBER_SUCCESS;\n  constructor(public payload: { customerId: string; selected: boolean }) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class UnassignAllMembers extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class UnassignAllMembersFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS_FAIL;\n  constructor(public payload: { userGroupId: string; error: any }) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UnassignAllMembersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS;\n  constructor(public payload: UserGroup) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignPermission extends StateUtils.EntityLoadAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      userGroupId: string;\n      permissionUid: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid);\n  }\n}\n\nexport class UnassignPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      userGroupId: string;\n      permissionUid: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload.error);\n  }\n}\n\nexport class UnassignPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = USER_GROUP_UNASSIGN_PERMISSION_SUCCESS;\n  constructor(public payload: { permissionUid: string; selected: boolean }) {\n    super(PERMISSION_ENTITIES, payload.permissionUid, payload);\n  }\n}\n\nexport type UserGroupAction =\n  | LoadUserGroup\n  | LoadUserGroupFail\n  | LoadUserGroupSuccess\n  | LoadUserGroups\n  | LoadUserGroupsFail\n  | LoadUserGroupsSuccess\n  | LoadPermissions\n  | LoadPermissionsFail\n  | LoadPermissionsSuccess\n  | LoadAvailableOrgCustomers\n  | LoadAvailableOrgCustomersFail\n  | LoadAvailableOrgCustomersSuccess\n  | CreateUserGroup\n  | CreateUserGroupFail\n  | CreateUserGroupSuccess\n  | AssignMember\n  | AssignMemberFail\n  | AssignMemberSuccess\n  | AssignPermission\n  | AssignPermissionFail\n  | AssignPermissionSuccess\n  | UpdateUserGroup\n  | UpdateUserGroupFail\n  | UpdateUserGroupSuccess\n  | DeleteUserGroup\n  | DeleteUserGroupFail\n  | DeleteUserGroupSuccess\n  | UnassignMember\n  | UnassignMemberFail\n  | UnassignMemberSuccess\n  | UnassignAllMembers\n  | UnassignAllMembersFail\n  | UnassignAllMembersSuccess\n  | UnassignPermission\n  | UnassignPermissionFail\n  | UnassignPermissionSuccess;\n","import {\n  ListModel,\n  SearchConfig,\n  StateUtils,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  PERMISSION_ENTITIES,\n  PERMISSION_LIST,\n  PERMISSION_TYPES,\n  PERMISSION_TYPES_LIST,\n} from '../organization-state';\n\nexport const LOAD_PERMISSION = '[Permission] Load Permission Data';\nexport const LOAD_PERMISSION_FAIL = '[Permission] Load Permission Data Fail';\nexport const LOAD_PERMISSION_SUCCESS =\n  '[Permission] Load Permission Data Success';\n\nexport const LOAD_PERMISSIONS = '[Permission] Load Permissions';\nexport const LOAD_PERMISSIONS_FAIL = '[Permission] Load Permissions Fail';\nexport const LOAD_PERMISSIONS_SUCCESS = '[Permission] Load Permissions Success';\n\nexport const CREATE_PERMISSION = '[Permission] Create Permission';\nexport const CREATE_PERMISSION_FAIL = '[Permission] Create Permission Fail';\nexport const CREATE_PERMISSION_SUCCESS =\n  '[Permission] Create Permission Success';\n\nexport const UPDATE_PERMISSION = '[Permission] Update Permission';\nexport const UPDATE_PERMISSION_FAIL = '[Permission] Update Permission Fail';\nexport const UPDATE_PERMISSION_SUCCESS =\n  '[Permission] Update Permission Success';\n\nexport const LOAD_PERMISSION_TYPES = '[Permission Types] Load Permission Types';\nexport const LOAD_PERMISSION_TYPES_FAIL =\n  '[Permission Types] Load Permission Types Fail';\nexport const LOAD_PERMISSION_TYPES_SUCCESS =\n  '[Permission Types] Load Permission Types Success';\n\nexport class LoadPermission extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSION;\n  constructor(public payload: { userId: string; permissionCode: string }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode);\n  }\n}\n\nexport class LoadPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class LoadPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSION_SUCCESS;\n  constructor(public payload: Permission | Permission[]) {\n    super(\n      PERMISSION_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((permission) => permission?.code)\n        : payload?.code\n    );\n  }\n}\n\nexport class LoadPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSIONS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      PERMISSION_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(PERMISSION_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreatePermission extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_PERMISSION;\n  constructor(public payload: { userId: string; permission: Permission }) {\n    super(PERMISSION_ENTITIES, payload.permission.code);\n  }\n}\n\nexport class CreatePermissionFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class CreatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_PERMISSION_SUCCESS;\n  constructor(public payload: Permission) {\n    super(PERMISSION_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class UpdatePermission extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      permissionCode: string;\n      permission: Permission;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permission.code);\n  }\n}\n\nexport class UpdatePermissionFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_PERMISSION_FAIL;\n  constructor(public payload: { permissionCode: string; error: any }) {\n    super(PERMISSION_ENTITIES, payload.permissionCode, payload.error);\n  }\n}\n\nexport class UpdatePermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_PERMISSION_SUCCESS;\n  constructor(public payload: Permission) {\n    super(PERMISSION_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class LoadPermissionTypes extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_PERMISSION_TYPES;\n  constructor() {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n  }\n}\n\nexport class LoadPermissionTypesFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_PERMISSION_TYPES_FAIL;\n  constructor(public payload: any) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES, payload.error);\n  }\n}\n\nexport class LoadPermissionTypesSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_PERMISSION_TYPES_SUCCESS;\n  constructor(public payload: OrderApprovalPermissionType[]) {\n    super(PERMISSION_TYPES_LIST, PERMISSION_TYPES);\n  }\n}\n\nexport type PermissionAction =\n  | LoadPermission\n  | LoadPermissionFail\n  | LoadPermissionSuccess\n  | LoadPermissions\n  | LoadPermissionsFail\n  | LoadPermissionsSuccess\n  | CreatePermission\n  | CreatePermissionFail\n  | CreatePermissionSuccess\n  | UpdatePermission\n  | UpdatePermissionFail\n  | UpdatePermissionSuccess\n  | LoadPermissionTypes\n  | LoadPermissionTypesFail\n  | LoadPermissionTypesSuccess;\n","import {\n  CostCenter,\n  ListModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport {\n  BUDGET_ENTITIES,\n  COST_CENTER_ASSIGNED_BUDGETS,\n  COST_CENTER_ENTITIES,\n  COST_CENTER_LIST,\n} from '../organization-state';\n\nexport const LOAD_COST_CENTER = '[CostCenter] Load CostCenter Data';\nexport const LOAD_COST_CENTER_FAIL = '[CostCenter] Load CostCenter Data Fail';\nexport const LOAD_COST_CENTER_SUCCESS =\n  '[CostCenter] Load CostCenter Data Success';\n\nexport const LOAD_COST_CENTERS = '[CostCenter] Load CostCenters';\nexport const LOAD_COST_CENTERS_FAIL = '[CostCenter] Load CostCenters Fail';\nexport const LOAD_COST_CENTERS_SUCCESS =\n  '[CostCenter] Load CostCenters Success';\n\nexport const CREATE_COST_CENTER = '[CostCenter] Create CostCenter';\nexport const CREATE_COST_CENTER_FAIL = '[CostCenter] Create CostCenter Fail';\nexport const CREATE_COST_CENTER_SUCCESS =\n  '[CostCenter] Create CostCenter Success';\n\nexport const UPDATE_COST_CENTER = '[CostCenter] Update CostCenter';\nexport const UPDATE_COST_CENTER_FAIL = '[CostCenter] Update CostCenter Fail';\nexport const UPDATE_COST_CENTER_SUCCESS =\n  '[CostCenter] Update CostCenter Success';\n\nexport const LOAD_ASSIGNED_BUDGETS = '[CostCenter] Load Budgets';\nexport const LOAD_ASSIGNED_BUDGETS_SUCCESS =\n  '[CostCenter] Load Budgets success';\nexport const LOAD_ASSIGNED_BUDGETS_FAIL = '[CostCenter] Load Budgets fail';\n\nexport const ASSIGN_BUDGET = '[CostCenter] Assign Budget';\nexport const ASSIGN_BUDGET_SUCCESS = '[CostCenter] Assign Budget success';\nexport const ASSIGN_BUDGET_FAIL = '[CostCenter] Assign Budget fail';\n\nexport const UNASSIGN_BUDGET = '[CostCenter] Unassign Budget';\nexport const UNASSIGN_BUDGET_SUCCESS = '[CostCenter] Unassign Budget success';\nexport const UNASSIGN_BUDGET_FAIL = '[CostCenter] Unassign Budget fail';\n\nexport class LoadCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_COST_CENTER;\n  constructor(public payload: { userId: string; costCenterCode: string }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode);\n  }\n}\n\nexport class LoadCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class LoadCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter | CostCenter[]) {\n    super(\n      COST_CENTER_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((costCenter) => costCenter?.code)\n        : payload?.code\n    );\n  }\n}\n\nexport class LoadCostCenters extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_COST_CENTERS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadCostCentersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_COST_CENTERS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      COST_CENTER_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadCostCentersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_COST_CENTERS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(COST_CENTER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class CreateCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_COST_CENTER;\n  constructor(public payload: { userId: string; costCenter: CostCenter }) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code);\n  }\n}\n\nexport class CreateCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class CreateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter) {\n    super(COST_CENTER_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class UpdateCostCenter extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_COST_CENTER;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      costCenter: CostCenter;\n    }\n  ) {\n    super(COST_CENTER_ENTITIES, payload.costCenter.code);\n  }\n}\n\nexport class UpdateCostCenterFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_COST_CENTER_FAIL;\n  constructor(public payload: { costCenterCode: string; error: any }) {\n    super(COST_CENTER_ENTITIES, payload.costCenterCode, payload.error);\n  }\n}\n\nexport class UpdateCostCenterSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_COST_CENTER_SUCCESS;\n  constructor(public payload: CostCenter) {\n    super(COST_CENTER_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class LoadAssignedBudgets extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode)\n    );\n  }\n}\n\nexport class LoadAssignedBudgetsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS_FAIL;\n  constructor(\n    public payload: {\n      costCenterCode: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode),\n      payload.error\n    );\n  }\n}\n\nexport class LoadAssignedBudgetsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_ASSIGNED_BUDGETS_SUCCESS;\n  constructor(\n    public payload: {\n      costCenterCode: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      COST_CENTER_ASSIGNED_BUDGETS,\n      StateUtils.serializeSearchConfig(payload.params, payload.costCenterCode)\n    );\n  }\n}\n\nexport class AssignBudget extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_BUDGET;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      budgetCode: string;\n    }\n  ) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class AssignBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class AssignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_BUDGET_SUCCESS;\n  constructor(public payload: { code: string; selected: boolean }) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport class UnassignBudget extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_BUDGET;\n  constructor(\n    public payload: {\n      userId: string;\n      costCenterCode: string;\n      budgetCode: string;\n    }\n  ) {\n    super(BUDGET_ENTITIES, payload.budgetCode);\n  }\n}\n\nexport class UnassignBudgetFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_BUDGET_FAIL;\n  constructor(public payload: { budgetCode: string; error: any }) {\n    super(BUDGET_ENTITIES, payload.budgetCode, payload.error);\n  }\n}\n\nexport class UnassignBudgetSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_BUDGET_SUCCESS;\n  constructor(public payload: { code: string; selected: boolean }) {\n    super(BUDGET_ENTITIES, payload.code, payload);\n  }\n}\n\nexport type CostCenterAction =\n  | LoadCostCenter\n  | LoadCostCenterFail\n  | LoadCostCenterSuccess\n  | LoadCostCenters\n  | LoadCostCentersFail\n  | LoadCostCentersSuccess\n  | CreateCostCenter\n  | CreateCostCenterFail\n  | CreateCostCenterSuccess\n  | UpdateCostCenter\n  | UpdateCostCenterFail\n  | UpdateCostCenterSuccess\n  | LoadAssignedBudgets\n  | LoadAssignedBudgetsSuccess\n  | LoadAssignedBudgetsFail\n  | AssignBudget\n  | AssignBudgetFail\n  | AssignBudgetSuccess\n  | UnassignBudget\n  | UnassignBudgetFail\n  | UnassignBudgetSuccess;\n","import { B2BUser, ListModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport {\n  B2B_USER_APPROVERS,\n  B2B_USER_ENTITIES,\n  B2B_USER_PERMISSIONS,\n  B2B_USER_USER_GROUPS,\n  PERMISSION_ENTITIES,\n  USER_GROUP_ENTITIES,\n  USER_LIST,\n} from '../organization-state';\n\nexport const LOAD_B2B_USER = '[B2BUser] Load B2BUser Data';\nexport const LOAD_B2B_USER_FAIL = '[B2BUser] Load B2BUser Data Fail';\nexport const LOAD_B2B_USER_SUCCESS = '[B2BUser] Load B2BUser Data Success';\n\nexport const CREATE_B2B_USER = '[B2BUser] Create B2BUser Data';\nexport const CREATE_B2B_USER_FAIL = '[B2BUser] Create B2BUser Data Fail';\nexport const CREATE_B2B_USER_SUCCESS = '[B2BUser] Create B2BUser Data Success';\n\nexport const UPDATE_B2B_USER = '[B2BUser] Update B2BUser Data';\nexport const UPDATE_B2B_USER_FAIL = '[B2BUser] Update B2BUser Data Fail';\nexport const UPDATE_B2B_USER_SUCCESS = '[B2BUser] Update B2BUser Data Success';\n\nexport const LOAD_B2B_USERS = '[B2BUser] Load B2BUsers';\nexport const LOAD_B2B_USERS_FAIL = '[B2BUser] Load B2BUsers Fail';\nexport const LOAD_B2B_USERS_SUCCESS = '[B2BUser] Load B2BUsers Success';\n\nexport const LOAD_B2B_USER_APPROVERS = '[B2BUser] Load B2BUser Approvers';\nexport const LOAD_B2B_USER_APPROVERS_FAIL =\n  '[B2BUser] Load B2BUser Approvers Fail';\nexport const LOAD_B2B_USER_APPROVERS_SUCCESS =\n  '[B2BUser] Load B2BUser Approvers Success';\n\nexport const ASSIGN_B2B_USER_APPROVER = '[B2BUser] Assign B2BUser Approver';\nexport const ASSIGN_B2B_USER_APPROVER_FAIL =\n  '[B2BUser] Assign B2BUser Approver Fail';\nexport const ASSIGN_B2B_USER_APPROVER_SUCCESS =\n  '[B2BUser] Assign B2BUser Approver Success';\n\nexport const UNASSIGN_B2B_USER_APPROVER = '[B2BUser] Unassign B2BUser Approver';\nexport const UNASSIGN_B2B_USER_APPROVER_FAIL =\n  '[B2BUser] Unassign B2BUser Approver Fail';\nexport const UNASSIGN_B2B_USER_APPROVER_SUCCESS =\n  '[B2BUser] Unassign B2BUser Approver Success';\n\nexport const LOAD_B2B_USER_PERMISSIONS = '[B2BUser] Load B2BUser Permissions';\nexport const LOAD_B2B_USER_PERMISSIONS_FAIL =\n  '[B2BUser] Load B2BUser Permissions Fail';\nexport const LOAD_B2B_USER_PERMISSIONS_SUCCESS =\n  '[B2BUser] Load B2BUser Permissions Success';\n\nexport const ASSIGN_B2B_USER_PERMISSION = '[B2BUser] Assign B2BUser Permission';\nexport const ASSIGN_B2B_USER_PERMISSION_FAIL =\n  '[B2BUser] Assign B2BUser Permission Fail';\nexport const ASSIGN_B2B_USER_PERMISSION_SUCCESS =\n  '[B2BUser] Assign B2BUser Permission Success';\n\nexport const UNASSIGN_B2B_USER_PERMISSION =\n  '[B2BUser] Unassign B2BUser Permission';\nexport const UNASSIGN_B2B_USER_PERMISSION_FAIL =\n  '[B2BUser] Unassign B2BUser Permission Fail';\nexport const UNASSIGN_B2B_USER_PERMISSION_SUCCESS =\n  '[B2BUser] Unassign B2BUser Permission Success';\n\nexport const LOAD_B2B_USER_USER_GROUPS = '[B2BUser] Load B2BUser User Groups';\nexport const LOAD_B2B_USER_USER_GROUPS_FAIL =\n  '[B2BUser] Load B2BUser User Groups Fail';\nexport const LOAD_B2B_USER_USER_GROUPS_SUCCESS =\n  '[B2BUser] Load B2BUser User Groups Success';\n\nexport const ASSIGN_B2B_USER_USER_GROUP = '[B2BUser] Assign B2BUser User Group';\nexport const ASSIGN_B2B_USER_USER_GROUP_FAIL =\n  '[B2BUser] Assign B2BUser User Group Fail';\nexport const ASSIGN_B2B_USER_USER_GROUP_SUCCESS =\n  '[B2BUser] Assign B2BUser User Group Success';\n\nexport const UNASSIGN_B2B_USER_USER_GROUP =\n  '[B2BUser] Unassign B2BUser User Group';\nexport const UNASSIGN_B2B_USER_USER_GROUP_FAIL =\n  '[B2BUser] Unassign B2BUser User Group Fail';\nexport const UNASSIGN_B2B_USER_USER_GROUP_SUCCESS =\n  '[B2BUser] Unassign B2BUser User Group Success';\n\nexport class LoadB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER;\n  constructor(public payload: { userId: string; orgCustomerId: string }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId);\n  }\n}\n\nexport class LoadB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class LoadB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser | B2BUser[]) {\n    super(\n      B2B_USER_ENTITIES,\n      Array.isArray(payload)\n        ? payload.map((orgUnitCustomer) => orgUnitCustomer?.customerId)\n        : payload?.customerId\n    );\n  }\n}\n\nexport class CreateB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = CREATE_B2B_USER;\n  constructor(public payload: { userId: string; orgCustomer: B2BUser }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n  }\n}\n\nexport class CreateB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = CREATE_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class CreateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = CREATE_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class UpdateB2BUser extends StateUtils.EntityLoadAction {\n  readonly type = UPDATE_B2B_USER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      orgCustomer: B2BUser;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.orgCustomer.customerId);\n  }\n}\n\nexport class UpdateB2BUserFail extends StateUtils.EntityFailAction {\n  readonly type = UPDATE_B2B_USER_FAIL;\n  constructor(public payload: { orgCustomerId: string; error: any }) {\n    super(B2B_USER_ENTITIES, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class UpdateB2BUserSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UPDATE_B2B_USER_SUCCESS;\n  constructor(public payload: B2BUser) {\n    super(B2B_USER_ENTITIES, payload.customerId, payload);\n  }\n}\n\nexport class LoadB2BUsers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USERS;\n  constructor(\n    public payload: {\n      userId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadB2BUsersFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USERS_FAIL;\n  constructor(public payload: { params: SearchConfig; error: any }) {\n    super(\n      USER_LIST,\n      StateUtils.serializeSearchConfig(payload.params),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUsersSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USERS_SUCCESS;\n  constructor(\n    public payload: {\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(USER_LIST, StateUtils.serializeSearchConfig(payload.params));\n  }\n}\n\nexport class LoadB2BUserApprovers extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_APPROVERS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserApproversFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_APPROVERS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUserApproversSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_APPROVERS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_APPROVERS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserApprover extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      approverId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class AssignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      approverId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class AssignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_APPROVER_SUCCESS;\n  constructor(\n    public payload: {\n      approverId: string;\n      selected: boolean;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n  }\n}\n\nexport class UnassignB2BUserApprover extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      approverId: string;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class UnassignB2BUserApproverFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      approverId: string;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId);\n  }\n}\n\nexport class UnassignB2BUserApproverSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_APPROVER_SUCCESS;\n  constructor(\n    public payload: {\n      approverId: string;\n      selected: boolean;\n    }\n  ) {\n    super(B2B_USER_ENTITIES, payload.approverId, payload);\n  }\n}\n\nexport class LoadB2BUserPermissions extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserPermissionsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(B2B_USER_PERMISSIONS, payload.orgCustomerId, payload.error);\n  }\n}\n\nexport class LoadB2BUserPermissionsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_PERMISSIONS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_PERMISSIONS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserPermission extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      permissionId: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n  }\n}\n\nexport class AssignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      permissionId: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n  }\n}\n\nexport class AssignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  constructor(\n    public payload: {\n      permissionId: string;\n      selected: boolean;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n  }\n}\n\nexport class UnassignB2BUserPermission extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      permissionId: string;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId);\n  }\n}\n\nexport class UnassignB2BUserPermissionFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      permissionId: string;\n      error: any;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload.error);\n  }\n}\n\nexport class UnassignB2BUserPermissionSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_PERMISSION_SUCCESS;\n  constructor(\n    public payload: {\n      permissionId: string;\n      selected: boolean;\n    }\n  ) {\n    super(PERMISSION_ENTITIES, payload.permissionId, payload);\n  }\n}\n\nexport class LoadB2BUserUserGroups extends StateUtils.EntityLoadAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class LoadB2BUserUserGroupsFail extends StateUtils.EntityFailAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      params: SearchConfig;\n      error: any;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId),\n      payload.error\n    );\n  }\n}\n\nexport class LoadB2BUserUserGroupsSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = LOAD_B2B_USER_USER_GROUPS_SUCCESS;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      page: ListModel;\n      params: SearchConfig;\n    }\n  ) {\n    super(\n      B2B_USER_USER_GROUPS,\n      StateUtils.serializeSearchConfig(payload.params, payload.orgCustomerId)\n    );\n  }\n}\n\nexport class AssignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class AssignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      userGroupId: string;\n      error: any;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class AssignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = ASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  constructor(\n    public payload: {\n      uid: string;\n      selected: boolean;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport class UnassignB2BUserUserGroup extends StateUtils.EntityLoadAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP;\n  constructor(\n    public payload: {\n      userId: string;\n      orgCustomerId: string;\n      userGroupId: string;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId);\n  }\n}\n\nexport class UnassignB2BUserUserGroupFail extends StateUtils.EntityFailAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP_FAIL;\n  constructor(\n    public payload: {\n      orgCustomerId: string;\n      userGroupId: string;\n      error: any;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.userGroupId, payload.error);\n  }\n}\n\nexport class UnassignB2BUserUserGroupSuccess extends StateUtils.EntitySuccessAction {\n  readonly type = UNASSIGN_B2B_USER_USER_GROUP_SUCCESS;\n  constructor(\n    public payload: {\n      uid: string;\n      selected: boolean;\n    }\n  ) {\n    super(USER_GROUP_ENTITIES, payload.uid, payload);\n  }\n}\n\nexport type B2BUserAction =\n  | LoadB2BUser\n  | LoadB2BUserFail\n  | LoadB2BUserSuccess\n  | CreateB2BUser\n  | CreateB2BUserFail\n  | CreateB2BUserSuccess\n  | UpdateB2BUser\n  | UpdateB2BUserFail\n  | UpdateB2BUserSuccess\n  | LoadB2BUsers\n  | LoadB2BUsersFail\n  | LoadB2BUsersSuccess\n  | LoadB2BUserApprovers\n  | LoadB2BUserApproversFail\n  | LoadB2BUserApproversSuccess\n  | AssignB2BUserApprover\n  | AssignB2BUserApproverFail\n  | AssignB2BUserApproverSuccess\n  | UnassignB2BUserApprover\n  | UnassignB2BUserApproverFail\n  | UnassignB2BUserApproverSuccess\n  | LoadB2BUserPermissions\n  | LoadB2BUserPermissionsFail\n  | LoadB2BUserPermissionsSuccess\n  | AssignB2BUserPermission\n  | AssignB2BUserPermissionFail\n  | AssignB2BUserPermissionSuccess\n  | UnassignB2BUserPermission\n  | UnassignB2BUserPermissionFail\n  | UnassignB2BUserPermissionSuccess\n  | LoadB2BUserUserGroups\n  | LoadB2BUserUserGroupsFail\n  | LoadB2BUserUserGroupsSuccess\n  | AssignB2BUserUserGroup\n  | AssignB2BUserUserGroupFail\n  | AssignB2BUserUserGroupSuccess\n  | UnassignB2BUserUserGroup\n  | UnassignB2BUserUserGroupFail\n  | UnassignB2BUserUserGroupSuccess;\n","import { Action } from '@ngrx/store';\n\nexport const CLEAR_ORGANIZATION_DATA = '[Organization] Clear Data';\n\nexport class OrganizationClearData implements Action {\n  readonly type = CLEAR_ORGANIZATION_DATA;\n}\n\nexport type OrganizationAction = OrganizationClearData;\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\nimport { EntitiesModel, normalizeHttpError, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { BudgetActions, OrganizationActions } from '../actions/index';\nimport { BudgetConnector } from '../../connectors/budget/budget.connector';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class BudgetEffects {\n  @Effect()\n  loadBudget$: Observable<\n    BudgetActions.LoadBudgetSuccess | BudgetActions.LoadBudgetFail\n  > = this.actions$.pipe(\n    ofType(BudgetActions.LOAD_BUDGET),\n    map((action: BudgetActions.LoadBudget) => action.payload),\n    switchMap(({ userId, budgetCode }) => {\n      return this.budgetConnector.get(userId, budgetCode).pipe(\n        map((budget: Budget) => {\n          return new BudgetActions.LoadBudgetSuccess([budget]);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new BudgetActions.LoadBudgetFail({\n              budgetCode,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadBudgets$: Observable<\n    | BudgetActions.LoadBudgetsSuccess\n    | BudgetActions.LoadBudgetSuccess\n    | BudgetActions.LoadBudgetsFail\n  > = this.actions$.pipe(\n    ofType(BudgetActions.LOAD_BUDGETS),\n    map((action: BudgetActions.LoadBudgets) => action.payload),\n    switchMap((payload) =>\n      this.budgetConnector.getList(payload.userId, payload.params).pipe(\n        switchMap((budgets: EntitiesModel<Budget>) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            budgets,\n            'code'\n          );\n          return [\n            new BudgetActions.LoadBudgetSuccess(values),\n            new BudgetActions.LoadBudgetsSuccess({\n              page,\n              params: payload.params,\n            }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new BudgetActions.LoadBudgetsFail({\n              params: payload.params,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  createBudget$: Observable<\n    | BudgetActions.CreateBudgetSuccess\n    | BudgetActions.CreateBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(BudgetActions.CREATE_BUDGET),\n    map((action: BudgetActions.CreateBudget) => action.payload),\n    switchMap((payload) =>\n      this.budgetConnector.create(payload.userId, payload.budget).pipe(\n        switchMap((data) => [\n          new BudgetActions.CreateBudgetSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new BudgetActions.CreateBudgetFail({\n              budgetCode: payload.budget.code,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updateBudget$: Observable<\n    | BudgetActions.UpdateBudgetSuccess\n    | BudgetActions.UpdateBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(BudgetActions.UPDATE_BUDGET),\n    map((action: BudgetActions.UpdateBudget) => action.payload),\n    switchMap((payload) =>\n      this.budgetConnector\n        .update(payload.userId, payload.budgetCode, payload.budget)\n        .pipe(\n          switchMap((data) => [\n            new BudgetActions.UpdateBudgetSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new BudgetActions.UpdateBudgetFail({\n                budgetCode: payload.budget.code,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private budgetConnector: BudgetConnector\n  ) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { OrgUnitConnector } from '../../connectors/org-unit/org-unit.connector';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  OrgUnitActions,\n} from '../actions/index';\n\n@Injectable()\nexport class OrgUnitEffects {\n  @Effect()\n  loadOrgUnit$: Observable<\n    | OrgUnitActions.LoadOrgUnitSuccess\n    | OrgUnitActions.LoadAddressSuccess\n    | OrgUnitActions.LoadAddressesSuccess\n    | OrgUnitActions.LoadOrgUnitFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.LOAD_ORG_UNIT),\n    map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n    switchMap(({ userId, orgUnitId }) => {\n      return this.orgUnitConnector.get(userId, orgUnitId).pipe(\n        switchMap((orgUnit: B2BUnit) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            { values: orgUnit.addresses },\n            'id'\n          );\n          return [\n            new OrgUnitActions.LoadOrgUnitSuccess([orgUnit]),\n            new OrgUnitActions.LoadAddressSuccess(values),\n            new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.LoadOrgUnitFail({\n              orgUnitId,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadAvailableOrgUnits$: Observable<\n    OrgUnitActions.LoadOrgUnitNodesSuccess | OrgUnitActions.LoadOrgUnitNodesFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.LOAD_UNIT_NODES),\n    map((action: OrgUnitActions.LoadOrgUnitNodes) => action.payload),\n    switchMap((payload) =>\n      this.orgUnitConnector.getList(payload.userId).pipe(\n        map(\n          (orgUnitsList: B2BUnitNode[]) =>\n            new OrgUnitActions.LoadOrgUnitNodesSuccess(orgUnitsList)\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.LoadOrgUnitNodesFail({\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  createUnit$: Observable<\n    | OrgUnitActions.CreateUnitFail\n    | OrgUnitActions.CreateUnitSuccess\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.CREATE_ORG_UNIT),\n    map((action: OrgUnitActions.CreateUnit) => action.payload),\n    switchMap((payload) =>\n      this.orgUnitConnector.create(payload.userId, payload.unit).pipe(\n        switchMap((data) => [\n          new OrgUnitActions.CreateUnitSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new OrgUnitActions.CreateUnitFail({\n              unitCode: payload.unit.uid,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updateUnit$: Observable<\n    | OrgUnitActions.UpdateUnitSuccess\n    | OrgUnitActions.UpdateUnitFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.UPDATE_ORG_UNIT),\n    map((action: OrgUnitActions.UpdateUnit) => action.payload),\n    switchMap((payload) =>\n      this.orgUnitConnector\n        .update(payload.userId, payload.unitCode, payload.unit)\n        .pipe(\n          switchMap((_data) => [\n            // Workaround for empty response\n            new OrgUnitActions.UpdateUnitSuccess(payload.unit),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.UpdateUnitFail({\n                unitCode: payload.unit.uid,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadTree$: Observable<\n    OrgUnitActions.LoadTreeSuccess | OrgUnitActions.LoadTreeFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.LOAD_UNIT_TREE),\n    map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n    switchMap(({ userId }) => {\n      return this.orgUnitConnector.getTree(userId).pipe(\n        map(\n          (orgUnit: B2BUnitNode) => new OrgUnitActions.LoadTreeSuccess(orgUnit)\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.LoadTreeFail({\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadApprovalProcesses$: Observable<\n    | OrgUnitActions.LoadApprovalProcessesSuccess\n    | OrgUnitActions.LoadApprovalProcessesFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.LOAD_APPROVAL_PROCESSES),\n    map((action: OrgUnitActions.LoadOrgUnit) => action.payload),\n    switchMap(({ userId }) => {\n      return this.orgUnitConnector.getApprovalProcesses(userId).pipe(\n        map(\n          (approvalProcesses: B2BApprovalProcess[]) =>\n            new OrgUnitActions.LoadApprovalProcessesSuccess(approvalProcesses)\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.LoadApprovalProcessesFail({\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadUsers$: Observable<\n    | OrgUnitActions.LoadAssignedUsersSuccess\n    | OrgUnitActions.LoadAssignedUsersFail\n    | B2BUserActions.LoadB2BUserSuccess\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.LOAD_ASSIGNED_USERS),\n    map((action: OrgUnitActions.LoadAssignedUsers) => action.payload),\n    groupBy(({ orgUnitId, roleId, params }) =>\n      StateUtils.serializeParams([orgUnitId, roleId], params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap(({ userId, orgUnitId, roleId, params }) => {\n          return this.orgUnitConnector\n            .getUsers(userId, orgUnitId, roleId, params)\n            .pipe(\n              switchMap((users: EntitiesModel<B2BUser>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  users,\n                  'customerId'\n                );\n                return [\n                  new B2BUserActions.LoadB2BUserSuccess(values),\n                  new OrgUnitActions.LoadAssignedUsersSuccess({\n                    orgUnitId,\n                    roleId,\n                    page,\n                    params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new OrgUnitActions.LoadAssignedUsersFail({\n                    orgUnitId,\n                    roleId,\n                    params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            );\n        })\n      )\n    )\n  );\n\n  @Effect()\n  assignRoleToUser: Observable<\n    OrgUnitActions.AssignRoleSuccess | OrgUnitActions.AssignRoleFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.ASSIGN_ROLE),\n    map((action: OrgUnitActions.AssignRole) => action.payload),\n    switchMap(({ userId, orgCustomerId, roleId }) =>\n      this.orgUnitConnector.assignRole(userId, orgCustomerId, roleId).pipe(\n        map(\n          () =>\n            new OrgUnitActions.AssignRoleSuccess({\n              uid: orgCustomerId,\n              roleId,\n              selected: true,\n            })\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.AssignRoleFail({\n              orgCustomerId,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  unassignRoleToUser$: Observable<\n    OrgUnitActions.UnassignRoleSuccess | OrgUnitActions.UnassignRoleFail\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.UNASSIGN_ROLE),\n    map((action: OrgUnitActions.UnassignRole) => action.payload),\n    switchMap(({ userId, orgCustomerId, roleId }) =>\n      this.orgUnitConnector.unassignRole(userId, orgCustomerId, roleId).pipe(\n        map(\n          () =>\n            new OrgUnitActions.UnassignRoleSuccess({\n              uid: orgCustomerId,\n              roleId,\n              selected: false,\n            })\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new OrgUnitActions.UnassignRoleFail({\n              orgCustomerId,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  assignApprover: Observable<\n    | OrgUnitActions.AssignApproverSuccess\n    | OrgUnitActions.AssignApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.ASSIGN_APPROVER),\n    map((action: OrgUnitActions.AssignApprover) => action.payload),\n    mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) =>\n      this.orgUnitConnector\n        .assignApprover(userId, orgUnitId, orgCustomerId, roleId)\n        .pipe(\n          switchMap(() => [\n            new OrgUnitActions.AssignApproverSuccess({\n              uid: orgCustomerId,\n              roleId,\n              selected: true,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.AssignApproverFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignApprover: Observable<\n    | OrgUnitActions.UnassignApproverSuccess\n    | OrgUnitActions.UnassignApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.UNASSIGN_APPROVER),\n    map((action: OrgUnitActions.UnassignApprover) => action.payload),\n    mergeMap(({ userId, orgUnitId, orgCustomerId, roleId }) =>\n      this.orgUnitConnector\n        .unassignApprover(userId, orgUnitId, orgCustomerId, roleId)\n        .pipe(\n          switchMap(() => [\n            new OrgUnitActions.UnassignApproverSuccess({\n              uid: orgCustomerId,\n              roleId,\n              selected: false,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.UnassignApproverFail({\n                orgCustomerId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  createAddress$: Observable<\n    | OrgUnitActions.CreateAddressSuccess\n    | OrgUnitActions.CreateAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.CREATE_ADDRESS),\n    map((action: OrgUnitActions.CreateAddress) => action.payload),\n    switchMap((payload) =>\n      this.orgUnitConnector\n        .createAddress(payload.userId, payload.orgUnitId, payload.address)\n        .pipe(\n          switchMap((data) => [\n            new OrgUnitActions.CreateAddressSuccess(data),\n            new OrgUnitActions.CreateAddressSuccess({ id: null }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.CreateAddressFail({\n                addressId: payload.address.id,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  updateAddress$: Observable<\n    | OrgUnitActions.UpdateAddressSuccess\n    | OrgUnitActions.UpdateAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.UPDATE_ADDRESS),\n    map((action: OrgUnitActions.UpdateAddress) => action.payload),\n    switchMap(({ userId, orgUnitId, addressId, address }) =>\n      this.orgUnitConnector\n        .updateAddress(userId, orgUnitId, addressId, address)\n        .pipe(\n          switchMap(() => [\n            // commented out due to no response from backend on PATCH request\n            // new OrgUnitActions.UpdateAddressSuccess(data),\n            new OrgUnitActions.UpdateAddressSuccess(address),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.UpdateAddressFail({\n                addressId: address.id,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  deleteAddress$: Observable<\n    | OrgUnitActions.DeleteAddressSuccess\n    | OrgUnitActions.DeleteAddressFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(OrgUnitActions.DELETE_ADDRESS),\n    map((action: OrgUnitActions.DeleteAddress) => action.payload),\n    switchMap((payload) =>\n      this.orgUnitConnector\n        .deleteAddress(payload.userId, payload.orgUnitId, payload.addressId)\n        .pipe(\n          switchMap(() => [\n            new OrgUnitActions.DeleteAddressSuccess({ id: payload.addressId }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new OrgUnitActions.DeleteAddressFail({\n                addressId: payload.addressId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  // @Effect()\n  // loadAddress$: Observable<\n  //   | OrgUnitActions.LoadAddressSuccess\n  //   | OrgUnitActions.LoadAddressesSuccess\n  //   | OrgUnitActions.LoadAddressesFail\n  // > = this.actions$.pipe(\n  //   ofType(OrgUnitActions.LOAD_ADDRESSES),\n  //   map((action: OrgUnitActions.LoadAddresses) => action.payload),\n  //   switchMap(({ userId, orgUnitId }) => {\n  //     return this.orgUnitConnector.getAddresses(userId, orgUnitId).pipe(\n  //       switchMap((addresses: EntitiesModel<B2BAddress>) => {\n  //         const { values, page } = StateUtils.normalizeListPage(addresses, 'id');\n  //         return [\n  //           new OrgUnitActions.LoadAddressSuccess(values),\n  //           new OrgUnitActions.LoadAddressesSuccess({ page, orgUnitId }),\n  //         ];\n  //       }),\n  //       catchError(error =>\n  //         of(\n  //           new OrgUnitActions.LoadAddressesFail({\n  //             orgUnitId,\n  //             error: normalizeHttpError(error),\n  //           })\n  //         )\n  //       )\n  //     );\n  //   })\n  // );\n\n  constructor(\n    private actions$: Actions,\n    private orgUnitConnector: OrgUnitConnector\n  ) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {\n  EntitiesModel,\n  normalizeHttpError,\n  OrderApprovalPermissionType,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { PermissionConnector } from '../../connectors/permission/permission.connector';\nimport { Permission } from '../../model/permission.model';\nimport { OrganizationActions, PermissionActions } from '../actions';\n\n@Injectable()\nexport class PermissionEffects {\n  @Effect()\n  loadPermission$: Observable<\n    | PermissionActions.LoadPermissionSuccess\n    | PermissionActions.LoadPermissionFail\n  > = this.actions$.pipe(\n    ofType(PermissionActions.LOAD_PERMISSION),\n    map((action: PermissionActions.LoadPermission) => action.payload),\n    switchMap(({ userId, permissionCode }) => {\n      return this.permissionConnector.get(userId, permissionCode).pipe(\n        map((permission: Permission) => {\n          return new PermissionActions.LoadPermissionSuccess([permission]);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new PermissionActions.LoadPermissionFail({\n              permissionCode,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadPermissions$: Observable<\n    | PermissionActions.LoadPermissionsSuccess\n    | PermissionActions.LoadPermissionSuccess\n    | PermissionActions.LoadPermissionsFail\n  > = this.actions$.pipe(\n    ofType(PermissionActions.LOAD_PERMISSIONS),\n    map((action: PermissionActions.LoadPermissions) => action.payload),\n    switchMap((payload) =>\n      this.permissionConnector.getList(payload.userId, payload.params).pipe(\n        switchMap((permissions: EntitiesModel<Permission>) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            permissions,\n            'code'\n          );\n          return [\n            new PermissionActions.LoadPermissionSuccess(values),\n            new PermissionActions.LoadPermissionsSuccess({\n              page,\n              params: payload.params,\n            }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new PermissionActions.LoadPermissionsFail({\n              params: payload.params,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  createPermission$: Observable<\n    | PermissionActions.CreatePermissionSuccess\n    | PermissionActions.CreatePermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(PermissionActions.CREATE_PERMISSION),\n    map((action: PermissionActions.CreatePermission) => action.payload),\n    switchMap((payload) =>\n      this.permissionConnector.create(payload.userId, payload.permission).pipe(\n        switchMap((data) => [\n          new PermissionActions.CreatePermissionSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new PermissionActions.CreatePermissionFail({\n              permissionCode: payload.permission.code,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updatePermission$: Observable<\n    | PermissionActions.UpdatePermissionSuccess\n    | PermissionActions.UpdatePermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(PermissionActions.UPDATE_PERMISSION),\n    map((action: PermissionActions.UpdatePermission) => action.payload),\n    switchMap((payload) =>\n      this.permissionConnector\n        .update(payload.userId, payload.permissionCode, payload.permission)\n        .pipe(\n          switchMap((data) => [\n            new PermissionActions.UpdatePermissionSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new PermissionActions.UpdatePermissionFail({\n                permissionCode: payload.permission.code,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadPermissionTypes$: Observable<\n    | PermissionActions.LoadPermissionTypesSuccess\n    | PermissionActions.LoadPermissionTypesFail\n  > = this.actions$.pipe(\n    ofType(PermissionActions.LOAD_PERMISSION_TYPES),\n    switchMap(() =>\n      this.permissionConnector.getTypes().pipe(\n        map(\n          (permissionTypeList: OrderApprovalPermissionType[]) =>\n            new PermissionActions.LoadPermissionTypesSuccess(permissionTypeList)\n        ),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new PermissionActions.LoadPermissionTypesFail({\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private permissionConnector: PermissionConnector\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap, groupBy, mergeMap } from 'rxjs/operators';\nimport {\n  EntitiesModel,\n  CostCenter,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport {\n  CostCenterActions,\n  BudgetActions,\n  OrganizationActions,\n} from '../actions/index';\nimport { Budget } from '../../model/budget.model';\nimport { CostCenterConnector } from '../../connectors/cost-center/cost-center.connector';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Injectable()\nexport class CostCenterEffects {\n  @Effect()\n  loadCostCenter$: Observable<\n    | CostCenterActions.LoadCostCenterSuccess\n    | CostCenterActions.LoadCostCenterFail\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.LOAD_COST_CENTER),\n    map((action: CostCenterActions.LoadCostCenter) => action.payload),\n    switchMap(({ userId, costCenterCode }) => {\n      return this.costCenterConnector.get(userId, costCenterCode).pipe(\n        map((costCenter: CostCenter) => {\n          return new CostCenterActions.LoadCostCenterSuccess([costCenter]);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new CostCenterActions.LoadCostCenterFail({\n              costCenterCode,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadCostCenters$: Observable<\n    | CostCenterActions.LoadCostCentersSuccess\n    | CostCenterActions.LoadCostCenterSuccess\n    | CostCenterActions.LoadCostCentersFail\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.LOAD_COST_CENTERS),\n    map((action: CostCenterActions.LoadCostCenters) => action.payload),\n    switchMap((payload) =>\n      this.costCenterConnector.getList(payload.userId, payload.params).pipe(\n        switchMap((costCenters: EntitiesModel<CostCenter>) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            costCenters,\n            'code'\n          );\n          return [\n            new CostCenterActions.LoadCostCenterSuccess(values),\n            new CostCenterActions.LoadCostCentersSuccess({\n              page,\n              params: payload.params,\n            }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new CostCenterActions.LoadCostCentersFail({\n              params: payload.params,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  createCostCenter$: Observable<\n    | CostCenterActions.CreateCostCenterSuccess\n    | CostCenterActions.CreateCostCenterFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.CREATE_COST_CENTER),\n    map((action: CostCenterActions.CreateCostCenter) => action.payload),\n    switchMap((payload) =>\n      this.costCenterConnector.create(payload.userId, payload.costCenter).pipe(\n        switchMap((data) => [\n          new CostCenterActions.CreateCostCenterSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new CostCenterActions.CreateCostCenterFail({\n              costCenterCode: payload.costCenter.code,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updateCostCenter$: Observable<\n    | CostCenterActions.UpdateCostCenterSuccess\n    | CostCenterActions.UpdateCostCenterFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.UPDATE_COST_CENTER),\n    map((action: CostCenterActions.UpdateCostCenter) => action.payload),\n    switchMap((payload) =>\n      this.costCenterConnector\n        .update(payload.userId, payload.costCenterCode, payload.costCenter)\n        .pipe(\n          switchMap((data) => [\n            new CostCenterActions.UpdateCostCenterSuccess(data),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new CostCenterActions.UpdateCostCenterFail({\n                costCenterCode: payload.costCenter.code,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  loadAssignedBudgets$: Observable<\n    | CostCenterActions.LoadAssignedBudgetsSuccess\n    | BudgetActions.LoadBudgetSuccess\n    | CostCenterActions.LoadAssignedBudgetsFail\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.LOAD_ASSIGNED_BUDGETS),\n    map((action: CostCenterActions.LoadAssignedBudgets) => action.payload),\n    groupBy(({ costCenterCode, params }) =>\n      StateUtils.serializeParams(costCenterCode, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap(({ userId, costCenterCode, params }) =>\n          this.costCenterConnector\n            .getBudgets(userId, costCenterCode, params)\n            .pipe(\n              switchMap((budgets: EntitiesModel<Budget>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  budgets,\n                  'code'\n                );\n                return [\n                  new BudgetActions.LoadBudgetSuccess(values),\n                  new CostCenterActions.LoadAssignedBudgetsSuccess({\n                    costCenterCode,\n                    page,\n                    params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new CostCenterActions.LoadAssignedBudgetsFail({\n                    costCenterCode,\n                    params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  assignBudgetToCostCenter$: Observable<\n    | CostCenterActions.AssignBudgetSuccess\n    | CostCenterActions.AssignBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.ASSIGN_BUDGET),\n    map((action: CostCenterActions.AssignBudget) => action.payload),\n    mergeMap(({ userId, costCenterCode, budgetCode }) =>\n      this.costCenterConnector\n        .assignBudget(userId, costCenterCode, budgetCode)\n        .pipe(\n          switchMap(() => [\n            new CostCenterActions.AssignBudgetSuccess({\n              code: budgetCode,\n              selected: true,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new CostCenterActions.AssignBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignBudgetToCostCenter$: Observable<\n    | CostCenterActions.UnassignBudgetSuccess\n    | CostCenterActions.UnassignBudgetFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(CostCenterActions.UNASSIGN_BUDGET),\n    map((action: CostCenterActions.UnassignBudget) => action.payload),\n    mergeMap(({ userId, costCenterCode, budgetCode }) =>\n      this.costCenterConnector\n        .unassignBudget(userId, costCenterCode, budgetCode)\n        .pipe(\n          switchMap(() => [\n            new CostCenterActions.UnassignBudgetSuccess({\n              code: budgetCode,\n              selected: false,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new CostCenterActions.UnassignBudgetFail({\n                budgetCode,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private costCenterConnector: CostCenterConnector\n  ) {}\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {\n  AuthActions,\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  normalizeHttpError,\n  RoutingService,\n  StateUtils,\n  User,\n  UserIdService,\n  UserService,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport {\n  catchError,\n  groupBy,\n  map,\n  mergeMap,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { B2BUserConnector } from '../../connectors/b2b-user/b2b-user.connector';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  OrgUnitActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\n@Injectable()\nexport class B2BUserEffects {\n  @Effect()\n  loadB2BUser$: Observable<\n    B2BUserActions.LoadB2BUserSuccess | B2BUserActions.LoadB2BUserFail\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.LOAD_B2B_USER),\n    map((action: B2BUserActions.LoadB2BUser) => action.payload),\n    switchMap(({ userId, orgCustomerId }) => {\n      return this.b2bUserConnector.get(userId, orgCustomerId).pipe(\n        map((b2bUser: B2BUser) => {\n          return new B2BUserActions.LoadB2BUserSuccess([b2bUser]);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new B2BUserActions.LoadB2BUserFail({\n              orgCustomerId,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  createB2BUser$: Observable<\n    | B2BUserActions.CreateB2BUserSuccess\n    | B2BUserActions.CreateB2BUserFail\n    | OrgUnitActions.AssignApprover\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.CREATE_B2B_USER),\n    map((action: B2BUserActions.CreateB2BUser) => action.payload),\n    switchMap(({ userId, orgCustomer }) =>\n      this.b2bUserConnector.create(userId, orgCustomer).pipe(\n        switchMap((data) => {\n          const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n          // TODO Workaround for not known customerId while user creation (redireciton)\n          return this.routingService.getRouterState().pipe(\n            take(1),\n            tap((route) => this.redirectToDetails(route, data)),\n            switchMap(() => {\n              const successActions = [\n                new B2BUserActions.CreateB2BUserSuccess(data),\n                new B2BUserActions.CreateB2BUserSuccess({ customerId: null }),\n                new OrganizationActions.OrganizationClearData(),\n              ] as any[];\n              if (isAssignedToApprovers) {\n                successActions.splice(\n                  1,\n                  0,\n                  new OrgUnitActions.AssignApprover({\n                    userId,\n                    orgUnitId: orgCustomer.orgUnit.uid,\n                    orgCustomerId: data.customerId,\n                    roleId: B2BUserRole.APPROVER,\n                  })\n                );\n              }\n              return successActions;\n            })\n          );\n        }),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new B2BUserActions.CreateB2BUserFail({\n              orgCustomerId: orgCustomer.customerId,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updateB2BUser$: Observable<\n    | B2BUserActions.UpdateB2BUserSuccess\n    | B2BUserActions.UpdateB2BUserFail\n    | OrgUnitActions.AssignApprover\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.UPDATE_B2B_USER),\n    map((action: B2BUserActions.UpdateB2BUser) => action.payload),\n    switchMap(({ userId, orgCustomerId, orgCustomer }) => {\n      const isAssignedToApprovers = orgCustomer.isAssignedToApprovers;\n      return this.b2bUserConnector\n        .update(userId, orgCustomerId, orgCustomer)\n        .pipe(\n          switchMap((_data) => {\n            const successActions = [\n              // TODO: change for 'payload: data' when backend API start to return user data on PATCH\n              new B2BUserActions.UpdateB2BUserSuccess(orgCustomer),\n            ] as any[];\n            if (isAssignedToApprovers) {\n              successActions.push(\n                new OrgUnitActions.AssignApprover({\n                  userId,\n                  orgUnitId: orgCustomer.orgUnit.uid,\n                  orgCustomerId,\n                  roleId: B2BUserRole.APPROVER,\n                })\n              );\n            }\n            return successActions;\n          }),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.UpdateB2BUserFail({\n                orgCustomerId: orgCustomer.customerId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        );\n    })\n  );\n\n  @Effect()\n  checkSelfEmailUpdate$: Observable<\n    | AuthActions.Logout\n    | B2BUserActions.LoadB2BUser\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.UPDATE_B2B_USER_SUCCESS),\n    map((action: B2BUserActions.UpdateB2BUserSuccess) => action.payload),\n    withLatestFrom(this.userService.get(), this.userIdService.getUserId()),\n    switchMap(([payload, currentUser]: [B2BUser, User, string]) => {\n      const currentUserEmailMatch =\n        payload.customerId === currentUser.customerId &&\n        payload.email !== currentUser.displayUid;\n\n      if (currentUserEmailMatch) {\n        this.routingService.go({ cxRoute: 'login' });\n      }\n      return currentUserEmailMatch\n        ? [new AuthActions.Logout()]\n        : [new OrganizationActions.OrganizationClearData()];\n    })\n  );\n\n  @Effect()\n  loadB2BUsers$: Observable<\n    | B2BUserActions.LoadB2BUsersSuccess\n    | B2BUserActions.LoadB2BUserSuccess\n    | B2BUserActions.LoadB2BUsersFail\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.LOAD_B2B_USERS),\n    map((action: B2BUserActions.LoadB2BUsers) => action.payload),\n    switchMap((payload) =>\n      this.b2bUserConnector.getList(payload.userId, payload.params).pipe(\n        switchMap((b2bUsers: EntitiesModel<B2BUser>) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            b2bUsers,\n            'customerId'\n          );\n          return [\n            new B2BUserActions.LoadB2BUserSuccess(values),\n            new B2BUserActions.LoadB2BUsersSuccess({\n              page,\n              params: payload.params,\n            }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new B2BUserActions.LoadB2BUsersFail({\n              params: payload.params,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadB2BUserApprovers$: Observable<\n    | B2BUserActions.LoadB2BUserApproversSuccess\n    | B2BUserActions.LoadB2BUserApproversFail\n    | B2BUserActions.LoadB2BUserSuccess\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.LOAD_B2B_USER_APPROVERS),\n    map((action: B2BUserActions.LoadB2BUserApprovers) => action.payload),\n    groupBy(({ orgCustomerId, params }) =>\n      StateUtils.serializeParams(orgCustomerId, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((payload) =>\n          this.b2bUserConnector\n            .getApprovers(payload.userId, payload.orgCustomerId, payload.params)\n            .pipe(\n              switchMap((approvers: EntitiesModel<B2BUser>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  approvers,\n                  'customerId'\n                );\n                return [\n                  new B2BUserActions.LoadB2BUserSuccess(values),\n                  new B2BUserActions.LoadB2BUserApproversSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new B2BUserActions.LoadB2BUserApproversFail({\n                    orgCustomerId: payload.orgCustomerId,\n                    params: payload.params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadB2BUserPermissions$: Observable<\n    | B2BUserActions.LoadB2BUserPermissionsSuccess\n    | B2BUserActions.LoadB2BUserPermissionsFail\n    | PermissionActions.LoadPermissionSuccess\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.LOAD_B2B_USER_PERMISSIONS),\n    map((action: B2BUserActions.LoadB2BUserPermissions) => action.payload),\n    groupBy(({ orgCustomerId, params }) =>\n      StateUtils.serializeParams(orgCustomerId, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((payload) =>\n          this.b2bUserConnector\n            .getPermissions(\n              payload.userId,\n              payload.orgCustomerId,\n              payload.params\n            )\n            .pipe(\n              switchMap((permissions: EntitiesModel<Permission>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  permissions,\n                  'code'\n                );\n                return [\n                  new PermissionActions.LoadPermissionSuccess(values),\n                  new B2BUserActions.LoadB2BUserPermissionsSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new B2BUserActions.LoadB2BUserPermissionsFail({\n                    orgCustomerId: payload.orgCustomerId,\n                    params: payload.params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadB2BUserUserGroups$: Observable<\n    | B2BUserActions.LoadB2BUserUserGroupsSuccess\n    | B2BUserActions.LoadB2BUserUserGroupsFail\n    | UserGroupActions.LoadUserGroupSuccess\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.LOAD_B2B_USER_USER_GROUPS),\n    map((action: B2BUserActions.LoadB2BUserUserGroups) => action.payload),\n    groupBy(({ orgCustomerId, params }) =>\n      StateUtils.serializeParams(orgCustomerId, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((payload) =>\n          this.b2bUserConnector\n            .getUserGroups(\n              payload.userId,\n              payload.orgCustomerId,\n              payload.params\n            )\n            .pipe(\n              switchMap((userGroups: EntitiesModel<UserGroup>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  userGroups,\n                  'uid'\n                );\n                return [\n                  new UserGroupActions.LoadUserGroupSuccess(values),\n                  new B2BUserActions.LoadB2BUserUserGroupsSuccess({\n                    orgCustomerId: payload.orgCustomerId,\n                    page,\n                    params: payload.params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new B2BUserActions.LoadB2BUserUserGroupsFail({\n                    orgCustomerId: payload.orgCustomerId,\n                    params: payload.params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  assignApproverToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserApproverSuccess\n    | B2BUserActions.AssignB2BUserApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.ASSIGN_B2B_USER_APPROVER),\n    map((action: B2BUserActions.AssignB2BUserApprover) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .assignApprover(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.approverId\n        )\n        .pipe(\n          switchMap((data) => [\n            new B2BUserActions.AssignB2BUserApproverSuccess({\n              // Occ returned email, but we use customerId in store\n              approverId: payload.approverId,\n              selected: data.selected,\n            }),\n            // Clearing data in this case causes unexpected behavior (#10468)\n            // new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.AssignB2BUserApproverFail({\n                orgCustomerId: payload.orgCustomerId,\n                approverId: payload.approverId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignApproverFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserApproverSuccess\n    | B2BUserActions.UnassignB2BUserApproverFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.UNASSIGN_B2B_USER_APPROVER),\n    map((action: B2BUserActions.UnassignB2BUserApprover) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .unassignApprover(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.approverId\n        )\n        .pipe(\n          switchMap((data) => [\n            new B2BUserActions.UnassignB2BUserApproverSuccess({\n              // Occ returned email, but we use customerId in store\n              approverId: payload.approverId,\n              selected: data.selected,\n            }),\n            // Clearing data in this case causes unexpected behavior (#10468)\n            // new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.UnassignB2BUserApproverFail({\n                orgCustomerId: payload.orgCustomerId,\n                approverId: payload.approverId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  assignPermissionToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserPermissionSuccess\n    | B2BUserActions.AssignB2BUserPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.ASSIGN_B2B_USER_PERMISSION),\n    map((action: B2BUserActions.AssignB2BUserPermission) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .assignPermission(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.permissionId\n        )\n        .pipe(\n          switchMap((data) => [\n            new B2BUserActions.AssignB2BUserPermissionSuccess({\n              permissionId: data.id,\n              selected: data.selected,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.AssignB2BUserPermissionFail({\n                orgCustomerId: payload.orgCustomerId,\n                permissionId: payload.permissionId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignPermissionFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserPermissionSuccess\n    | B2BUserActions.UnassignB2BUserPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.UNASSIGN_B2B_USER_PERMISSION),\n    map((action: B2BUserActions.UnassignB2BUserPermission) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .unassignPermission(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.permissionId\n        )\n        .pipe(\n          switchMap((data) => [\n            new B2BUserActions.UnassignB2BUserPermissionSuccess({\n              permissionId: data.id,\n              selected: data.selected,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.UnassignB2BUserPermissionFail({\n                orgCustomerId: payload.orgCustomerId,\n                permissionId: payload.permissionId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  assignUserGroupToB2BUser$: Observable<\n    | B2BUserActions.AssignB2BUserUserGroupSuccess\n    | B2BUserActions.AssignB2BUserUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.ASSIGN_B2B_USER_USER_GROUP),\n    map((action: B2BUserActions.AssignB2BUserUserGroup) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .assignUserGroup(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.userGroupId\n        )\n        .pipe(\n          switchMap((data) => [\n            new B2BUserActions.AssignB2BUserUserGroupSuccess({\n              uid: data.id,\n              selected: data.selected,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.AssignB2BUserUserGroupFail({\n                orgCustomerId: payload.orgCustomerId,\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignUserGroupFromB2BUser$: Observable<\n    | B2BUserActions.UnassignB2BUserUserGroupSuccess\n    | B2BUserActions.UnassignB2BUserUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP),\n    map((action: B2BUserActions.UnassignB2BUserUserGroup) => action.payload),\n    mergeMap((payload) =>\n      this.b2bUserConnector\n        .unassignUserGroup(\n          payload.userId,\n          payload.orgCustomerId,\n          payload.userGroupId\n        )\n        .pipe(\n          switchMap(\n            // TODO: Workaround because occ doesn't respond here\n            // (data) =>\n            //   new B2BUserActions.DeleteB2BUserUserGroupSuccess({\n            //     uid: data.id,\n            //     selected: data.selected,\n            //   })\n            () => [\n              new B2BUserActions.UnassignB2BUserUserGroupSuccess({\n                uid: payload.userGroupId,\n                selected: false,\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ]\n          ),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new B2BUserActions.UnassignB2BUserUserGroupFail({\n                orgCustomerId: payload.orgCustomerId,\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private b2bUserConnector: B2BUserConnector,\n    private routingService: RoutingService,\n    private userService: UserService,\n    private userIdService: UserIdService\n  ) {}\n\n  protected redirectToDetails(route, data) {\n    if ((route as any)?.state?.context?.id !== '/organization/units') {\n      this.routingService.go({\n        cxRoute: 'orgUserDetails',\n        params: data,\n      });\n    }\n  }\n}\n","import { HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport {\n  B2BUser,\n  EntitiesModel,\n  normalizeHttpError,\n  StateUtils,\n} from '@spartacus/core';\nimport { from, Observable, of } from 'rxjs';\nimport { catchError, groupBy, map, mergeMap, switchMap } from 'rxjs/operators';\nimport { UserGroupConnector } from '../../connectors/user-group/user-group.connector';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserActions,\n  OrganizationActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\n@Injectable()\nexport class UserGroupEffects {\n  @Effect()\n  loadUserGroup$: Observable<\n    UserGroupActions.LoadUserGroupSuccess | UserGroupActions.LoadUserGroupFail\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.LOAD_USER_GROUP),\n    map((action: UserGroupActions.LoadUserGroup) => action.payload),\n    switchMap(({ userId, userGroupId }) => {\n      return this.userGroupConnector.get(userId, userGroupId).pipe(\n        map((userGroup: UserGroup) => {\n          return new UserGroupActions.LoadUserGroupSuccess([userGroup]);\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new UserGroupActions.LoadUserGroupFail({\n              userGroupId,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      );\n    })\n  );\n\n  @Effect()\n  loadUserGroups$: Observable<\n    | UserGroupActions.LoadUserGroupsSuccess\n    | UserGroupActions.LoadUserGroupSuccess\n    | UserGroupActions.LoadUserGroupsFail\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.LOAD_USER_GROUPS),\n    map((action: UserGroupActions.LoadUserGroups) => action.payload),\n    switchMap((payload) =>\n      this.userGroupConnector.getList(payload.userId, payload.params).pipe(\n        switchMap((userGroups: EntitiesModel<UserGroup>) => {\n          const { values, page } = StateUtils.normalizeListPage(\n            userGroups,\n            'uid'\n          );\n          return [\n            new UserGroupActions.LoadUserGroupSuccess(values),\n            new UserGroupActions.LoadUserGroupsSuccess({\n              page,\n              params: payload.params,\n            }),\n          ];\n        }),\n        catchError((error: HttpErrorResponse) =>\n          of(\n            new UserGroupActions.LoadUserGroupsFail({\n              params: payload.params,\n              error: normalizeHttpError(error),\n            })\n          )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadAvailableOrderApprovalPermissions$: Observable<\n    | UserGroupActions.LoadPermissionsSuccess\n    | PermissionActions.LoadPermissionSuccess\n    | UserGroupActions.LoadPermissionsFail\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.LOAD_USER_GROUP_PERMISSIONS),\n    map((action: UserGroupActions.LoadPermissions) => action.payload),\n    groupBy(({ userGroupId, params }) =>\n      StateUtils.serializeParams(userGroupId, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((payload) =>\n          this.userGroupConnector\n            .getAvailableOrderApprovalPermissions(\n              payload.userId,\n              payload.userGroupId,\n              payload.params\n            )\n            .pipe(\n              switchMap((permissions: EntitiesModel<Permission>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  permissions,\n                  'code'\n                );\n                return [\n                  new PermissionActions.LoadPermissionSuccess(values),\n                  new UserGroupActions.LoadPermissionsSuccess({\n                    userGroupId: payload.userGroupId,\n                    page,\n                    params: payload.params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new UserGroupActions.LoadPermissionsFail({\n                    userGroupId: payload.userGroupId,\n                    params: payload.params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  loadAvailableOrgCustomers$: Observable<\n    | UserGroupActions.LoadAvailableOrgCustomersSuccess\n    | B2BUserActions.LoadB2BUserSuccess\n    | UserGroupActions.LoadAvailableOrgCustomersFail\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS),\n    map((action: UserGroupActions.LoadAvailableOrgCustomers) => action.payload),\n    groupBy(({ userGroupId, params }) =>\n      StateUtils.serializeParams(userGroupId, params)\n    ),\n    mergeMap((group) =>\n      group.pipe(\n        switchMap((payload) =>\n          this.userGroupConnector\n            .getAvailableOrgCustomers(\n              payload.userId,\n              payload.userGroupId,\n              payload.params\n            )\n            .pipe(\n              switchMap((customers: EntitiesModel<B2BUser>) => {\n                const { values, page } = StateUtils.normalizeListPage(\n                  customers,\n                  'customerId'\n                );\n                return [\n                  new B2BUserActions.LoadB2BUserSuccess(values),\n                  new UserGroupActions.LoadAvailableOrgCustomersSuccess({\n                    userGroupId: payload.userGroupId,\n                    page,\n                    params: payload.params,\n                  }),\n                ];\n              }),\n              catchError((error: HttpErrorResponse) =>\n                of(\n                  new UserGroupActions.LoadAvailableOrgCustomersFail({\n                    userGroupId: payload.userGroupId,\n                    params: payload.params,\n                    error: normalizeHttpError(error),\n                  })\n                )\n              )\n            )\n        )\n      )\n    )\n  );\n\n  @Effect()\n  createUserGroup$: Observable<\n    | UserGroupActions.CreateUserGroupSuccess\n    | UserGroupActions.CreateUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.CREATE_USER_GROUP),\n    map((action: UserGroupActions.CreateUserGroup) => action.payload),\n    switchMap((payload) =>\n      this.userGroupConnector.create(payload.userId, payload.userGroup).pipe(\n        switchMap((data) => [\n          new UserGroupActions.CreateUserGroupSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new UserGroupActions.CreateUserGroupFail({\n              userGroupId: payload.userGroup.uid,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  updateUserGroup$: Observable<\n    | UserGroupActions.UpdateUserGroupSuccess\n    | UserGroupActions.UpdateUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.UPDATE_USER_GROUP),\n    map((action: UserGroupActions.UpdateUserGroup) => action.payload),\n    switchMap((payload) =>\n      this.userGroupConnector\n        .update(payload.userId, payload.userGroupId, payload.userGroup)\n        .pipe(\n          switchMap(() => [\n            // TODO: Workaround for empty PATCH response:\n            new UserGroupActions.UpdateUserGroupSuccess(payload.userGroup),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.UpdateUserGroupFail({\n                userGroupId: payload.userGroup.uid,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  deleteUserGroup$: Observable<\n    | UserGroupActions.DeleteUserGroupSuccess\n    | UserGroupActions.DeleteUserGroupFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.DELETE_USER_GROUP),\n    map((action: UserGroupActions.DeleteUserGroup) => action.payload),\n    switchMap((payload) =>\n      this.userGroupConnector.delete(payload.userId, payload.userGroupId).pipe(\n        switchMap((data) => [\n          new UserGroupActions.DeleteUserGroupSuccess(data),\n          new OrganizationActions.OrganizationClearData(),\n        ]),\n        catchError((error: HttpErrorResponse) =>\n          from([\n            new UserGroupActions.DeleteUserGroupFail({\n              userGroupId: payload.userGroupId,\n              error: normalizeHttpError(error),\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ])\n        )\n      )\n    )\n  );\n\n  @Effect()\n  assignPermissionToUserGroup$: Observable<\n    | UserGroupActions.AssignPermissionSuccess\n    | UserGroupActions.AssignPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.USER_GROUP_ASSIGN_PERMISSION),\n    map((action: UserGroupActions.AssignPermission) => action.payload),\n    mergeMap((payload) =>\n      this.userGroupConnector\n        .assignOrderApprovalPermission(\n          payload.userId,\n          payload.userGroupId,\n          payload.permissionUid\n        )\n        .pipe(\n          switchMap((data) => [\n            new UserGroupActions.AssignPermissionSuccess({\n              permissionUid: data.id,\n              selected: data.selected,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.AssignPermissionFail({\n                userGroupId: payload.userGroupId,\n                permissionUid: payload.permissionUid,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  assignMemberUnitUserGroup$: Observable<\n    | UserGroupActions.AssignMemberSuccess\n    | UserGroupActions.AssignMemberFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.USER_GROUP_ASSIGN_MEMBER),\n    map((action: UserGroupActions.AssignMember) => action.payload),\n    mergeMap((payload) =>\n      this.userGroupConnector\n        .assignMember(payload.userId, payload.userGroupId, payload.customerId)\n        .pipe(\n          switchMap(() => [\n            new UserGroupActions.AssignMemberSuccess({\n              customerId: payload.customerId,\n              selected: true,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.AssignMemberFail({\n                userGroupId: payload.userGroupId,\n                customerId: payload.customerId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignMemberFromUserGroup$: Observable<\n    | UserGroupActions.UnassignMemberSuccess\n    | UserGroupActions.UnassignMemberFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.USER_GROUP_UNASSIGN_MEMBER),\n    map((action: UserGroupActions.UnassignMember) => action.payload),\n    mergeMap((payload) =>\n      this.userGroupConnector\n        .unassignMember(payload.userId, payload.userGroupId, payload.customerId)\n        .pipe(\n          switchMap(() => [\n            new UserGroupActions.UnassignMemberSuccess({\n              customerId: payload.customerId,\n              selected: false,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.UnassignMemberFail({\n                userGroupId: payload.userGroupId,\n                customerId: payload.customerId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignPermissionFromUserGroup$: Observable<\n    | UserGroupActions.UnassignPermissionSuccess\n    | UserGroupActions.UnassignPermissionFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION),\n    map((action: UserGroupActions.UnassignPermission) => action.payload),\n    mergeMap((payload) =>\n      this.userGroupConnector\n        .unassignOrderApprovalPermission(\n          payload.userId,\n          payload.userGroupId,\n          payload.permissionUid\n        )\n        .pipe(\n          switchMap((data) => [\n            new UserGroupActions.UnassignPermissionSuccess({\n              permissionUid: data.id,\n              selected: data.selected,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.UnassignPermissionFail({\n                userGroupId: payload.userGroupId,\n                permissionUid: payload.permissionUid,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  @Effect()\n  unassignAllMembersFromUserGroup$: Observable<\n    | UserGroupActions.UnassignAllMembersSuccess\n    | UserGroupActions.UnassignAllMembersFail\n    | OrganizationActions.OrganizationClearData\n  > = this.actions$.pipe(\n    ofType(UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS),\n    map((action: UserGroupActions.UnassignAllMembers) => action.payload),\n    switchMap((payload) =>\n      this.userGroupConnector\n        .unassignAllMembers(payload.userId, payload.userGroupId)\n        .pipe(\n          switchMap(() => [\n            new UserGroupActions.UnassignAllMembersSuccess({\n              selected: false,\n            }),\n            new OrganizationActions.OrganizationClearData(),\n          ]),\n          catchError((error: HttpErrorResponse) =>\n            from([\n              new UserGroupActions.UnassignAllMembersFail({\n                userGroupId: payload.userGroupId,\n                error: normalizeHttpError(error),\n              }),\n              new OrganizationActions.OrganizationClearData(),\n            ])\n          )\n        )\n    )\n  );\n\n  constructor(\n    private actions$: Actions,\n    private userGroupConnector: UserGroupConnector\n  ) {}\n}\n","import { BudgetEffects } from './budget.effect';\nimport { OrgUnitEffects } from './org-unit.effect';\nimport { PermissionEffects } from './permission.effect';\nimport { CostCenterEffects } from './cost-center.effect';\nimport { B2BUserEffects } from './b2b-user.effect';\nimport { UserGroupEffects } from './user-group.effect';\n\nexport const effects: any[] = [\n  BudgetEffects,\n  OrgUnitEffects,\n  UserGroupEffects,\n  PermissionEffects,\n  CostCenterEffects,\n  B2BUserEffects,\n];\n\nexport * from './budget.effect';\nexport * from './org-unit.effect';\nexport * from './user-group.effect';\nexport * from './permission.effect';\nexport * from './cost-center.effect';\nexport * from './b2b-user.effect';\n","import {\n  B2BUserActions,\n  OrgUnitActions,\n  UserGroupActions,\n} from '../actions/index';\nimport { B2BUser, StateUtils } from '@spartacus/core';\n\nexport const b2bUserInitialState = undefined;\nexport const b2bUsersInitialState = undefined;\n\nexport function b2bUserEntitiesReducer(\n  state: B2BUser = b2bUserInitialState,\n  action: StateUtils.LoaderAction\n): B2BUser {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_SUCCESS:\n    case B2BUserActions.CREATE_B2B_USER_SUCCESS:\n    case B2BUserActions.UPDATE_B2B_USER_SUCCESS:\n      return action.payload;\n    case OrgUnitActions.ASSIGN_ROLE_SUCCESS:\n    case OrgUnitActions.ASSIGN_APPROVER_SUCCESS:\n      return {\n        ...state,\n        selected: action.payload?.selected,\n        roles: [...(state?.roles || []), action.payload?.roleId],\n      };\n    case OrgUnitActions.UNASSIGN_ROLE_SUCCESS:\n    case OrgUnitActions.UNASSIGN_APPROVER_SUCCESS:\n      return {\n        ...state,\n        selected: action.payload?.selected,\n        roles: [...(state?.roles || [])].filter(\n          (role) => role !== action.payload?.roleId\n        ),\n      };\n    case B2BUserActions.ASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_APPROVER_SUCCESS:\n    case UserGroupActions.USER_GROUP_ASSIGN_MEMBER_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_MEMBER_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function userListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserApproverListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_APPROVERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserPermissionListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function b2bUserUserGroupListReducer(\n  state = b2bUsersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case B2BUserActions.LOAD_B2B_USER_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import { StateUtils } from '@spartacus/core';\nimport { CostCenterActions, BudgetActions } from '../actions/index';\nimport { Budget } from '../../model/budget.model';\n\nexport const budgetInitialState = undefined;\nexport const budgetsInitialState = undefined;\n\nexport function budgetsEntitiesReducer(\n  state: Budget = budgetInitialState,\n  action: StateUtils.LoaderAction\n): Budget {\n  switch (action.type) {\n    case BudgetActions.LOAD_BUDGET_SUCCESS:\n    case BudgetActions.CREATE_BUDGET_SUCCESS:\n    case BudgetActions.UPDATE_BUDGET_SUCCESS:\n      return action.payload;\n    case CostCenterActions.UNASSIGN_BUDGET_SUCCESS:\n    case CostCenterActions.ASSIGN_BUDGET_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function budgetsListReducer(\n  state = budgetsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case BudgetActions.LOAD_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import { CostCenter, StateUtils } from '@spartacus/core';\nimport { CostCenterActions } from '../actions/index';\n\nexport const costCenterInitialState = undefined;\nexport const costCentersInitialState = undefined;\n\nexport function costCentersEntitiesReducer(\n  state: CostCenter = costCenterInitialState,\n  action: StateUtils.LoaderAction\n): CostCenter {\n  switch (action.type) {\n    case CostCenterActions.LOAD_COST_CENTER_SUCCESS:\n    case CostCenterActions.CREATE_COST_CENTER_SUCCESS:\n    case CostCenterActions.UPDATE_COST_CENTER_SUCCESS:\n      return action.payload;\n  }\n  return state;\n}\n\nexport function costCentersListReducer(\n  state = costCentersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case CostCenterActions.LOAD_COST_CENTERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function costCenterAssignedBudgetsListReducer(\n  state = costCentersInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case CostCenterActions.LOAD_ASSIGNED_BUDGETS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import { StateUtils } from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { OrgUnitActions } from '../actions/index';\n\nexport const orgUnitInitialState = undefined;\nexport const orgUnitsInitialState = undefined;\n\nexport function orgUnitEntitiesReducer(\n  state: B2BUnitNode = orgUnitInitialState,\n  action: StateUtils.LoaderAction\n): B2BUnitNode {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ORG_UNIT_SUCCESS:\n    case OrgUnitActions.CREATE_ORG_UNIT_SUCCESS:\n      return action.payload;\n    case OrgUnitActions.UPDATE_ORG_UNIT_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function orgUnitListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n  }\n  return state;\n}\n\nexport function orgUnitUserListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ASSIGNED_USERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function orgUnitAddressListReducer(\n  state = orgUnitsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case OrgUnitActions.LOAD_ADDRESSES_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import { StateUtils } from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  B2BUserActions,\n  PermissionActions,\n  UserGroupActions,\n} from '../actions/index';\n\nexport const permissionInitialState = undefined;\nexport const permissionsInitialState = undefined;\n\nexport function permissionsEntitiesReducer(\n  state: Permission = permissionInitialState,\n  action: StateUtils.LoaderAction\n): Permission {\n  switch (action.type) {\n    case PermissionActions.LOAD_PERMISSION_SUCCESS:\n    case PermissionActions.CREATE_PERMISSION_SUCCESS:\n    case PermissionActions.UPDATE_PERMISSION_SUCCESS:\n      return action.payload;\n    case UserGroupActions.USER_GROUP_ASSIGN_PERMISSION_SUCCESS:\n    case UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION_SUCCESS:\n    case B2BUserActions.ASSIGN_B2B_USER_PERMISSION_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_PERMISSION_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function permissionsListReducer(\n  state = permissionsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case PermissionActions.LOAD_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import * as UserGroupActions from '../actions/user-group.action';\nimport { StateUtils } from '@spartacus/core';\nimport { B2BUserActions } from '../actions/index';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport const userGroupInitialState = undefined;\nexport const userGroupsInitialState = undefined;\n\nexport function userGroupEntitiesReducer(\n  state: UserGroup = userGroupInitialState,\n  action: StateUtils.LoaderAction\n): UserGroup {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_SUCCESS:\n    case UserGroupActions.CREATE_USER_GROUP_SUCCESS:\n    case UserGroupActions.UPDATE_USER_GROUP_SUCCESS:\n      return action.payload;\n    case B2BUserActions.ASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n    case B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n}\n\nexport function userGroupsListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUPS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function userGroupAvailableOrderApprovalPermissionsListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_PERMISSIONS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n\nexport function userGroupAvailablOrgCustomersListReducer(\n  state = userGroupsInitialState,\n  action: StateUtils.LoaderAction\n): any {\n  switch (action.type) {\n    case UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS:\n      return action.payload.page;\n  }\n  return state;\n}\n","import { InjectionToken, Provider } from '@angular/core';\nimport {\n  Action,\n  ActionReducer,\n  ActionReducerMap,\n  combineReducers,\n  MetaReducer,\n} from '@ngrx/store';\nimport {\n  Address,\n  AuthActions,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  ListModel,\n  OrderApprovalPermissionType,\n  SiteContextActions,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport { Permission } from '../../model/permission.model';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport { OrganizationActions } from '../actions';\nimport {\n  ADDRESS_ENTITIES,\n  ADDRESS_LIST,\n  B2B_USER_APPROVERS,\n  B2B_USER_ENTITIES,\n  B2B_USER_FEATURE,\n  B2B_USER_PERMISSIONS,\n  B2B_USER_USER_GROUPS,\n  BUDGET_ENTITIES,\n  BUDGET_FEATURE,\n  BUDGET_LIST,\n  COST_CENTER_ASSIGNED_BUDGETS,\n  COST_CENTER_ENTITIES,\n  COST_CENTER_FEATURE,\n  COST_CENTER_LIST,\n  OrganizationState,\n  ORG_UNIT_APPROVAL_PROCESSES_ENTITIES,\n  ORG_UNIT_ASSIGNED_USERS,\n  ORG_UNIT_ENTITIES,\n  ORG_UNIT_FEATURE,\n  ORG_UNIT_NODE_LIST,\n  ORG_UNIT_TREE_ENTITY,\n  PERMISSION_ENTITIES,\n  PERMISSION_FEATURE,\n  PERMISSION_LIST,\n  PERMISSION_TYPES_LIST,\n  USER_GROUP_AVAILABLE_CUSTOMERS,\n  USER_GROUP_ENTITIES,\n  USER_GROUP_FEATURE,\n  USER_GROUP_LIST,\n  USER_GROUP_PERMISSIONS,\n  USER_LIST,\n} from '../organization-state';\nimport {\n  b2bUserApproverListReducer,\n  b2bUserEntitiesReducer,\n  b2bUserPermissionListReducer,\n  b2bUserUserGroupListReducer,\n  userListReducer,\n} from './b2b-user.reducer';\nimport { budgetsEntitiesReducer, budgetsListReducer } from './budget.reducer';\nimport {\n  costCenterAssignedBudgetsListReducer,\n  costCentersEntitiesReducer,\n  costCentersListReducer,\n} from './cost-center.reducer';\nimport {\n  orgUnitAddressListReducer,\n  orgUnitEntitiesReducer,\n  orgUnitUserListReducer,\n} from './org-unit.reducer';\nimport {\n  permissionsEntitiesReducer,\n  permissionsListReducer,\n} from './permission.reducer';\nimport {\n  userGroupAvailableOrderApprovalPermissionsListReducer,\n  userGroupAvailablOrgCustomersListReducer,\n  userGroupEntitiesReducer,\n  userGroupsListReducer,\n} from './user-group.reducer';\n\nexport function getReducers(): ActionReducerMap<OrganizationState> {\n  return {\n    [BUDGET_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<Budget>(\n        BUDGET_ENTITIES,\n        budgetsEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel>(\n        BUDGET_LIST,\n        budgetsListReducer\n      ),\n    }),\n    [PERMISSION_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<Permission>(\n        PERMISSION_ENTITIES,\n        permissionsEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel>(\n        PERMISSION_LIST,\n        permissionsListReducer\n      ),\n      permissionTypes: StateUtils.entityLoaderReducer<\n        OrderApprovalPermissionType[]\n      >(PERMISSION_TYPES_LIST),\n    }),\n    [ORG_UNIT_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<B2BUnit>(\n        ORG_UNIT_ENTITIES,\n        orgUnitEntitiesReducer\n      ),\n      availableOrgUnitNodes:\n        StateUtils.entityLoaderReducer<B2BUnitNode[]>(ORG_UNIT_NODE_LIST),\n      tree: StateUtils.entityLoaderReducer<B2BUnitNode>(ORG_UNIT_TREE_ENTITY),\n      approvalProcesses: StateUtils.entityLoaderReducer<B2BApprovalProcess[]>(\n        ORG_UNIT_APPROVAL_PROCESSES_ENTITIES\n      ),\n      users: StateUtils.entityLoaderReducer<ListModel>(\n        ORG_UNIT_ASSIGNED_USERS,\n        orgUnitUserListReducer\n      ),\n      addressList: StateUtils.entityLoaderReducer<ListModel>(\n        ADDRESS_LIST,\n        orgUnitAddressListReducer\n      ),\n      addressEntities:\n        StateUtils.entityLoaderReducer<Address>(ADDRESS_ENTITIES),\n    }),\n    [USER_GROUP_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<UserGroup>(\n        USER_GROUP_ENTITIES,\n        userGroupEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel>(\n        USER_GROUP_LIST,\n        userGroupsListReducer\n      ),\n      permissions: StateUtils.entityLoaderReducer<ListModel>(\n        USER_GROUP_PERMISSIONS,\n        userGroupAvailableOrderApprovalPermissionsListReducer\n      ),\n      customers: StateUtils.entityLoaderReducer<ListModel>(\n        USER_GROUP_AVAILABLE_CUSTOMERS,\n        userGroupAvailablOrgCustomersListReducer\n      ),\n    }),\n    [COST_CENTER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<CostCenter>(\n        COST_CENTER_ENTITIES,\n        costCentersEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel>(\n        COST_CENTER_LIST,\n        costCentersListReducer\n      ),\n      budgets: StateUtils.entityLoaderReducer<ListModel>(\n        COST_CENTER_ASSIGNED_BUDGETS,\n        costCenterAssignedBudgetsListReducer\n      ),\n    }),\n    [B2B_USER_FEATURE]: combineReducers({\n      entities: StateUtils.entityLoaderReducer<B2BUser>(\n        B2B_USER_ENTITIES,\n        b2bUserEntitiesReducer\n      ),\n      list: StateUtils.entityLoaderReducer<ListModel>(\n        USER_LIST,\n        userListReducer\n      ),\n      approvers: StateUtils.entityLoaderReducer<ListModel>(\n        B2B_USER_APPROVERS,\n        b2bUserApproverListReducer\n      ),\n      permissions: StateUtils.entityLoaderReducer<ListModel>(\n        B2B_USER_PERMISSIONS,\n        b2bUserPermissionListReducer\n      ),\n      userGroups: StateUtils.entityLoaderReducer<ListModel>(\n        B2B_USER_USER_GROUPS,\n        b2bUserUserGroupListReducer\n      ),\n    }),\n  };\n}\n\nexport const reducerToken: InjectionToken<ActionReducerMap<OrganizationState>> =\n  new InjectionToken<ActionReducerMap<OrganizationState>>(\n    'OrganizationReducers'\n  );\n\nexport const reducerProvider: Provider = {\n  provide: reducerToken,\n  useFactory: getReducers,\n};\n\nexport function clearOrganizationState(\n  reducer: ActionReducer<OrganizationState, Action>\n): ActionReducer<OrganizationState, Action> {\n  return function (state, action) {\n    if (action.type === OrganizationActions.CLEAR_ORGANIZATION_DATA) {\n      state = undefined;\n    }\n    if (action.type === AuthActions.LOGOUT) {\n      state = undefined;\n    }\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<any>[] = [clearOrganizationState];\n","import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { effects } from './effects/index';\nimport { ORGANIZATION_FEATURE } from './organization-state';\nimport { metaReducers, reducerProvider, reducerToken } from './reducers/index';\n\n@NgModule({\n  imports: [\n    StoreModule.forFeature(ORGANIZATION_FEATURE, reducerToken, {\n      metaReducers,\n    }),\n    EffectsModule.forFeature(effects),\n  ],\n  providers: [reducerProvider],\n})\nexport class OrganizationStoreModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { B2BUserConnector } from './connectors/b2b-user/b2b-user.connector';\nimport { BudgetConnector } from './connectors/budget/budget.connector';\nimport { CostCenterConnector } from './connectors/cost-center/cost-center.connector';\nimport { OrgUnitConnector } from './connectors/org-unit/org-unit.connector';\nimport { PermissionConnector } from './connectors/permission/permission.connector';\nimport { UserGroupConnector } from './connectors/user-group/user-group.connector';\nimport { OrganizationPageMetaModule } from './services/organization-page-meta.module';\nimport { OrganizationStoreModule } from './store/organization-store.module';\n\n@NgModule({\n  imports: [OrganizationPageMetaModule, OrganizationStoreModule],\n})\nexport class AdministrationCoreModule {\n  static forRoot(): ModuleWithProviders<AdministrationCoreModule> {\n    return {\n      ngModule: AdministrationCoreModule,\n      providers: [\n        BudgetConnector,\n        OrgUnitConnector,\n        UserGroupConnector,\n        PermissionConnector,\n        CostCenterConnector,\n        B2BUserConnector,\n      ],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { Converter, B2BUser, EntitiesModel } from '@spartacus/core';\n\nexport const B2B_USER_NORMALIZER = new InjectionToken<Converter<any, B2BUser>>(\n  'B2BUserNormalizer'\n);\n\nexport const B2B_USER_SERIALIZER = new InjectionToken<Converter<B2BUser, any>>(\n  'B2BUserSerializer'\n);\n\nexport const B2B_USERS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<B2BUser>>\n>('UserListNormalizer');\n","import { InjectionToken } from '@angular/core';\nimport { Budget } from '../../model/budget.model';\nimport { Converter, EntitiesModel } from '@spartacus/core';\n\nexport const BUDGET_NORMALIZER = new InjectionToken<Converter<any, Budget>>(\n  'BudgetNormalizer'\n);\nexport const BUDGETS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Budget>>\n>('BudgetsListNormalizer');\n\nexport const BUDGET_SERIALIZER = new InjectionToken<Converter<Budget, any>>(\n  'BudgetSerializer'\n);\n","import { InjectionToken } from '@angular/core';\nimport { B2BApprovalProcess, B2BUnit, Converter } from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\n\nexport const B2BUNIT_NODE_NORMALIZER = new InjectionToken<\n  Converter<any, B2BUnitNode>\n>('B2BUnitNodeNormalizer');\n\nexport const B2BUNIT_NODE_LIST_NORMALIZER = new InjectionToken<\n  Converter<any, B2BUnitNode[]>\n>('B2BUnitNodeListNormalizer');\n\nexport const B2BUNIT_NORMALIZER = new InjectionToken<Converter<any, B2BUnit>>(\n  'B2BUnitNormalizer'\n);\n\nexport const B2BUNIT_SERIALIZER = new InjectionToken<Converter<B2BUnit, any>>(\n  'B2BUnitSerializer'\n);\n\nexport const B2BUNIT_APPROVAL_PROCESSES_NORMALIZER = new InjectionToken<\n  Converter<any, B2BApprovalProcess[]>\n>('B2BUnitApprovalProcessNormalizer');\n","import { InjectionToken } from '@angular/core';\nimport {\n  Converter,\n  EntitiesModel,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\n\nexport const PERMISSION_NORMALIZER = new InjectionToken<\n  Converter<any, Permission>\n>('PermissionNormalizer');\n\nexport const PERMISSIONS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<Permission>>\n>('PermissionsListNormalizer');\n\nexport const PERMISSION_TYPE_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApprovalPermissionType>\n>('PermissionTypeNormalizer');\n\nexport const PERMISSION_TYPES_NORMALIZER = new InjectionToken<\n  Converter<any, OrderApprovalPermissionType[]>\n>('PermissionTypesListNormalizer');\n\nexport const PERMISSION_SERIALIZER = new InjectionToken<\n  Converter<Permission, any>\n>('PermissionSerializer');\n","import { InjectionToken } from '@angular/core';\nimport { Converter, EntitiesModel } from '@spartacus/core';\nimport { UserGroup } from '../../model/user-group.model';\n\nexport const USER_GROUP_NORMALIZER = new InjectionToken<\n  Converter<any, UserGroup>\n>('UserGroupNormalizer');\n\nexport const USER_GROUP_SERIALIZER = new InjectionToken<\n  Converter<UserGroup, any>\n>('UserGroupSerializer');\n\nexport const USER_GROUPS_NORMALIZER = new InjectionToken<\n  Converter<any, EntitiesModel<UserGroup>>\n>('UserGroupListNormalizer');\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport {\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  RoutingService,\n  User,\n  UserService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(\n    protected userService: UserService,\n    protected routingService: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return this.userService.get().pipe(\n      filter((user: User) => user && Object.keys(user).length > 0),\n      pluck('roles'),\n      map((roles: string[]) => {\n        const hasRole =\n          Array.isArray(roles) && roles.includes(B2BUserRole.ADMIN);\n\n        if (!hasRole) {\n          // routing as temporary solution until /organization won't\n          // have set up proper permission on backend\n          this.routingService.go({ cxRoute: 'organization' });\n\n          this.globalMessageService.add(\n            { key: 'organization.notification.noSufficientPermissions' },\n            GlobalMessageType.MSG_TYPE_WARNING\n          );\n        }\n\n        return hasRole;\n      })\n    );\n  }\n}\n","import { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationBadRequestHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.BAD_REQUEST;\n\n  protected costCenterMask =\n    /ambiguous unique keys \\{code\\=(.*)\\} for model B2BCostCenterModel/;\n  protected unitMask =\n    /ambiguous unique keys \\{uid\\=(.*)\\} for model B2BUnitModel/;\n  protected permissionMask =\n    /Approval Permission with code\\: (.*) already exists\\./;\n  protected unknownMask = /Model saving error\\./;\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n\n  handleError(_request: HttpRequest<any>, response: HttpErrorResponse): void {\n    this.getErrors(response).forEach(({ message }: ErrorModel) => {\n      // Handle cost center conflict\n      this.handleOrganizationConflict(\n        message,\n        this.costCenterMask,\n        'costCenter'\n      );\n      // Handle unit conflict\n      this.handleOrganizationConflict(message, this.unitMask, 'unit');\n      // Handle unit conflict\n      this.handleOrganizationConflict(\n        message,\n        this.permissionMask,\n        'permission'\n      );\n      // Handle unknown conflict\n      this.handleOrganizationConflict(message, this.unknownMask, 'unknown');\n    });\n  }\n\n  protected matchMask(response: HttpErrorResponse): boolean {\n    return this.getErrors(response).some((error) =>\n      [\n        this.costCenterMask,\n        this.unitMask,\n        this.permissionMask,\n        this.unknownMask,\n      ].some((mask) => mask.test(error.message))\n    );\n  }\n\n  protected handleOrganizationConflict(\n    message: string,\n    mask: RegExp,\n    key: string\n  ) {\n    const result = message.match(mask);\n    const params = { code: result?.[1] };\n    if (result) {\n      this.globalMessageService.add(\n        { key: `organization.httpHandlers.conflict.${key}`, params },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error) =>\n        error.type === 'ModelSavingError' || error.type === 'DuplicateUidError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpErrorResponse, HttpRequest } from '@angular/common/http';\nimport {\n  ErrorModel,\n  GlobalMessageType,\n  HttpErrorHandler,\n  HttpResponseStatus,\n  Priority,\n} from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrganizationConflictHandler extends HttpErrorHandler {\n  responseStatus = HttpResponseStatus.CONFLICT;\n\n  protected budgetMask = /Budget with code \\[(.*)\\] already exists/;\n  protected userMask = /User already exists/;\n  protected userGroupMask = /Member Permission with the same id already exists/;\n  protected unitMask = /Organizational unit with uid \\[(.*)\\] already exists/;\n\n  hasMatch(errorResponse: HttpErrorResponse): boolean {\n    return super.hasMatch(errorResponse) && this.matchMask(errorResponse);\n  }\n\n  handleError(request: HttpRequest<any>, response: HttpErrorResponse) {\n    return this.getErrors(response).forEach(({ message }: ErrorModel) => {\n      // Handle budget conflict\n      this.handleConflict(message, this.budgetMask, 'budget');\n      // Handle user email conflict\n      this.handleConflict(message, this.userMask, 'user', request?.body?.email);\n      // Handle user group conflict\n      this.handleConflict(\n        message,\n        this.userGroupMask,\n        'userGroup',\n        request?.body?.uid\n      );\n      // Handle unit conflict\n      this.handleConflict(message, this.unitMask, 'unit');\n    });\n  }\n\n  protected matchMask(response: HttpErrorResponse): boolean {\n    return this.getErrors(response).some((error) =>\n      [this.budgetMask, this.userMask, this.userGroupMask, this.unitMask].some(\n        (mask) => mask.test(error.message)\n      )\n    );\n  }\n\n  protected handleConflict(\n    message: string,\n    mask: RegExp,\n    key: string,\n    code?: string\n  ) {\n    const result = message.match(mask);\n    const params = { code: result?.[1] ?? code };\n    if (result) {\n      this.globalMessageService.add(\n        { key: `organization.httpHandlers.conflict.${key}`, params },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    }\n  }\n\n  protected getErrors(response: HttpErrorResponse): ErrorModel[] {\n    return (response.error?.errors || []).filter(\n      (error) => error.type === 'AlreadyExistsError'\n    );\n  }\n\n  getPriority(): Priority {\n    return Priority.NORMAL;\n  }\n}\n","export enum LoadStatus {\n  SUCCESS,\n  ERROR,\n}\n\nexport interface OrganizationItemStatus<T> {\n  status: LoadStatus;\n  item: T;\n}\n","import {\n  B2BUnit,\n  Currency,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\n\nexport enum Period {\n  DAY = 'DAY',\n  WEEK = 'WEEK',\n  MONTH = 'MONTH',\n  QUARTER = 'QUARTER',\n  YEAR = 'YEAR',\n}\n\nexport interface Permission {\n  active?: boolean;\n  code?: string;\n  currency?: Currency;\n  orderApprovalPermissionType?: OrderApprovalPermissionType;\n  orgUnit?: B2BUnit;\n  periodRange?: Period;\n  selected?: boolean;\n  threshold?: number;\n}\n","import { createFeatureSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  ORGANIZATION_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\n\nexport const getOrganizationState: MemoizedSelector<\n  StateWithOrganization,\n  OrganizationState\n> = createFeatureSelector<OrganizationState>(ORGANIZATION_FEATURE);\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport {\n  OrganizationState,\n  PermissionManagement,\n  PERMISSION_FEATURE,\n  PERMISSION_TYPES,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getPermissionManagementState: MemoizedSelector<\n  StateWithOrganization,\n  PermissionManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[PERMISSION_FEATURE]\n);\n\nexport const getPermissionsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Permission>\n> = createSelector(\n  getPermissionManagementState,\n  (state: PermissionManagement) => state && state.entities\n);\n\nexport const getPermissionState = (\n  permissionId: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<Permission>\n> =>\n  createSelector(\n    getPermissionsState,\n    (state: StateUtils.EntityLoaderState<Permission>) =>\n      StateUtils.entityLoaderStateSelector(state, permissionId)\n  );\n\nexport const getPermissionTypesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>\n> = createSelector(\n  getPermissionManagementState,\n  (state: PermissionManagement) => state && state.permissionTypes\n);\n\nexport const getPermission = (\n  permissionCode: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<Permission>\n> =>\n  createSelector(\n    getPermissionsState,\n    (state: StateUtils.EntityLoaderState<Permission>) =>\n      StateUtils.entityLoaderStateSelector(state, permissionCode)\n  );\n\nexport const getPermissionValue = (\n  permissionCode: string\n): MemoizedSelector<StateWithOrganization, Permission> => {\n  return createSelector(getPermission(permissionCode), (permissionState) =>\n    StateUtils.loaderValueSelector(permissionState)\n  );\n};\n\nexport const getPermissionList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(getPermissionManagementState, (state: PermissionManagement) =>\n    StateUtils.denormalizeSearch<Permission>(state, params)\n  );\n\nexport const getPermissionTypes = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<OrderApprovalPermissionType[]>\n> =>\n  createSelector(\n    getPermissionTypesState,\n    (state: StateUtils.EntityLoaderState<OrderApprovalPermissionType[]>) =>\n      StateUtils.entityLoaderStateSelector(state, PERMISSION_TYPES)\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  B2BUserManagement,\n  B2B_USER_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n  USER_GROUP_FEATURE,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\nimport { getPermissionsState } from './permission.selector';\n\nexport const getB2BUserManagementState: MemoizedSelector<\n  StateWithOrganization,\n  B2BUserManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[B2B_USER_FEATURE]\n);\n\nexport const getB2BUsersState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUser>\n> = createSelector(\n  getB2BUserManagementState,\n  (state: B2BUserManagement) => state && state.entities\n);\n\nexport const getB2BUserState = (\n  orgCustomerId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUser>> =>\n  createSelector(\n    getB2BUsersState,\n    (state: StateUtils.EntityLoaderState<B2BUser>) =>\n      StateUtils.entityLoaderStateSelector(state, orgCustomerId)\n  );\n\nexport const getB2BUserValue = (\n  orgCustomerId: string\n): MemoizedSelector<StateWithOrganization, B2BUser> => {\n  return createSelector(getB2BUserState(orgCustomerId), (b2BUserState) =>\n    StateUtils.loaderValueSelector(b2BUserState)\n  );\n};\n\nexport const getUserList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(getB2BUserManagementState, (state: B2BUserManagement) =>\n    StateUtils.denormalizeSearch<B2BUser>(state, params)\n  );\n\nexport const getB2BUserApprovers = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getB2BUsersState,\n    (\n      state: B2BUserManagement,\n      approvers: StateUtils.EntityLoaderState<B2BUser>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.approvers,\n        approvers,\n        params,\n        code\n      )\n  );\n\nexport const getB2BUserPermissions = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getPermissionsState,\n    (\n      state: B2BUserManagement,\n      permissions: StateUtils.EntityLoaderState<Permission>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.permissions,\n        permissions,\n        params,\n        code\n      )\n  );\n\n// avoid circular dependency\nconst getUserGroupsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<UserGroup>\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[USER_GROUP_FEATURE].entities\n);\n\nexport const getB2BUserUserGroups = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<UserGroup>>\n> =>\n  createSelector(\n    getB2BUserManagementState,\n    getUserGroupsState,\n    (\n      state: B2BUserManagement,\n      userGroups: StateUtils.EntityLoaderState<UserGroup>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.userGroups,\n        userGroups,\n        params,\n        code\n      )\n  );\n","import { StateUtils } from '@spartacus/core';\nimport { Observable, queueScheduler } from 'rxjs';\nimport { filter, map, observeOn, pairwise } from 'rxjs/operators';\nimport {\n  LoadStatus,\n  OrganizationItemStatus,\n} from '../model/organization-item-status';\n\nexport function getItemStatus<T>(\n  itemState: Observable<StateUtils.LoaderState<T>>\n): Observable<OrganizationItemStatus<T>> {\n  return itemState.pipe(\n    observeOn(queueScheduler),\n    pairwise(),\n    filter(([previousState]) => previousState.loading),\n    map(([_previousState, currentState]) => ({\n      status: currentState.success\n        ? LoadStatus.SUCCESS\n        : currentState.error\n        ? LoadStatus.ERROR\n        : null,\n      item: currentState.value,\n    }))\n  );\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { UserGroup } from '../model/user-group.model';\nimport { B2BUserActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getB2BUserApprovers,\n  getB2BUserPermissions,\n  getB2BUserState,\n  getB2BUserUserGroups,\n  getB2BUserValue,\n  getUserList,\n} from '../store/selectors/b2b-user.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class B2BUserService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(orgCustomerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUser({\n            userId,\n            orgCustomerId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params?: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUsers({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getB2BUserValue(orgCustomerId: string): Observable<B2BUser> {\n    return this.store\n      .select(getB2BUserValue(orgCustomerId))\n      .pipe(filter(Boolean));\n  }\n\n  get(orgCustomerId: string): Observable<B2BUser> {\n    const loading$ = this.getB2BUserState(orgCustomerId).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(orgCustomerId);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getB2BUserValue(orgCustomerId)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<B2BUser>> {\n    return this.getUserList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getErrorState(orgCustomerId): Observable<boolean> {\n    return this.getB2BUserState(orgCustomerId).pipe(\n      map((state) => state.error)\n    );\n  }\n\n  create(orgCustomer: B2BUser): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.CreateB2BUser({\n            userId,\n            orgCustomer,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(orgCustomerId: string, orgCustomer: B2BUser): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UpdateB2BUser({\n            userId,\n            orgCustomerId,\n            orgCustomer,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    orgCustomerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return getItemStatus(this.getB2BUserState(orgCustomerId));\n  }\n\n  loadApprovers(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserApprovers({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getApprovers(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.getB2BUserApproverList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadApprovers(orgCustomerId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignApprover(orgCustomerId: string, approverId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignApprover(orgCustomerId: string, approverId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserApprover({\n            userId,\n            orgCustomerId,\n            approverId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissions(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserPermissions({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getPermissions(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.getB2BUserPermissionList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissions(orgCustomerId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignPermission(orgCustomerId: string, permissionId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignPermission(orgCustomerId: string, permissionId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserPermission({\n            userId,\n            orgCustomerId,\n            permissionId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadUserGroups(orgCustomerId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.LoadB2BUserUserGroups({\n            userId,\n            orgCustomerId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getUserGroups(\n    orgCustomerId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.getB2BUserUserGroupList(orgCustomerId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadUserGroups(orgCustomerId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignUserGroup(orgCustomerId: string, userGroupId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.AssignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignUserGroup(orgCustomerId: string, userGroupId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new B2BUserActions.UnassignB2BUserUserGroup({\n            userId,\n            orgCustomerId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  /**\n   * Get list of all roles for B2BUser sorted by increasing privileges.\n   *\n   * This list is not driven by the backend (lack of API), but reflects roles\n   * from the backend: `b2badmingroup`, `b2bcustomergroup`, `b2bmanagergroup` and `b2bapprovergroup`.\n   *\n   * If you reconfigure those roles in the backend or extend the list, you should change\n   * this implementation accordingly.\n   */\n  getAllRoles(): B2BUserRole[] {\n    return [\n      B2BUserRole.CUSTOMER,\n      B2BUserRole.MANAGER,\n      B2BUserRole.APPROVER,\n      B2BUserRole.ADMIN,\n    ];\n  }\n\n  private getB2BUserApproverList(\n    orgCustomerId: string,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getB2BUserApprovers(orgCustomerId, params));\n  }\n\n  private getB2BUserPermissionList(\n    orgCustomerId: string,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(getB2BUserPermissions(orgCustomerId, params));\n  }\n\n  private getB2BUserUserGroupList(\n    orgCustomerId: string,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<UserGroup>>> {\n    return this.store.select(getB2BUserUserGroups(orgCustomerId, params));\n  }\n\n  private getB2BUserState(\n    orgCustomerId: string\n  ): Observable<StateUtils.LoaderState<B2BUser>> {\n    return this.store.select(getB2BUserState(orgCustomerId));\n  }\n\n  private getUserList(\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getUserList(params));\n  }\n}\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport { EntitiesModel, SearchConfig, StateUtils } from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport {\n  BUDGET_FEATURE,\n  BudgetManagement,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getBudgetManagementState: MemoizedSelector<\n  StateWithOrganization,\n  BudgetManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[BUDGET_FEATURE]\n);\n\nexport const getBudgetsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Budget>\n> = createSelector(\n  getBudgetManagementState,\n  (state: BudgetManagement) => state && state.entities\n);\n\nexport const getBudget = (\n  budgetCode: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Budget>> =>\n  createSelector(\n    getBudgetsState,\n    (state: StateUtils.EntityLoaderState<Budget>) =>\n      StateUtils.entityLoaderStateSelector(state, budgetCode)\n  );\n\nexport const getBudgetValue = (\n  budgetCode: string\n): MemoizedSelector<StateWithOrganization, Budget> => {\n  return createSelector(getBudget(budgetCode), (budgetState) =>\n    StateUtils.loaderValueSelector(budgetState)\n  );\n};\n\nexport const getBudgetList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Budget>>\n> =>\n  createSelector(getBudgetManagementState, (state: BudgetManagement) =>\n    StateUtils.denormalizeSearch<Budget>(state, params)\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { B2BUnitNode } from '../../model/unit-node.model';\nimport {\n  OrganizationState,\n  OrgUnits,\n  ORG_UNIT_APPROVAL_PROCESSES,\n  ORG_UNIT_FEATURE,\n  ORG_UNIT_NODES,\n  ORG_UNIT_TREE,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getB2BUsersState } from './b2b-user.selector';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getB2BOrgUnitState: MemoizedSelector<\n  StateWithOrganization,\n  OrgUnits\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[ORG_UNIT_FEATURE]\n);\n\nexport const getOrgUnitsNodeListState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode[]>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.availableOrgUnitNodes\n);\n\nexport const getOrgUnitsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.entities\n);\n\nexport const getOrgUnitsTreeState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BUnitNode>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.tree\n);\n\nexport const getAddressesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<Address>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.addressEntities\n);\n\nexport const getApprovalProcessesState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<B2BApprovalProcess[]>\n> = createSelector(\n  getB2BOrgUnitState,\n  (state: OrgUnits) => state && state.approvalProcesses\n);\n\nexport const getOrgUnit = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>> =>\n  createSelector(\n    getOrgUnitsState,\n    (state: StateUtils.EntityLoaderState<B2BUnit>) =>\n      StateUtils.entityLoaderStateSelector(state, orgUnitId)\n  );\n\nexport const getOrgUnitValue = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, B2BUnit> => {\n  return createSelector(getOrgUnit(orgUnitId), (orgUnitState) =>\n    StateUtils.loaderValueSelector(orgUnitState)\n  );\n};\n\nexport const getOrgUnitState = (\n  orgUnitId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<B2BUnit>> =>\n  createSelector(\n    getOrgUnitsState,\n    (state: StateUtils.EntityLoaderState<B2BUnit>) =>\n      StateUtils.entityLoaderStateSelector(state, orgUnitId)\n  );\n\nexport const getOrgUnitList = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BUnitNode[]>\n> =>\n  createSelector(\n    getOrgUnitsNodeListState,\n    (state: StateUtils.EntityLoaderState<B2BUnitNode[]>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_NODES)\n  );\n\nexport const getOrgUnitTree = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BUnitNode>\n> =>\n  createSelector(\n    getOrgUnitsTreeState,\n    (state: StateUtils.EntityLoaderState<B2BUnitNode>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_TREE)\n  );\n\nexport const getApprovalProcesses = (): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<B2BApprovalProcess[]>\n> =>\n  createSelector(\n    getApprovalProcessesState,\n    (state: StateUtils.EntityLoaderState<B2BApprovalProcess[]>) =>\n      StateUtils.entityLoaderStateSelector(state, ORG_UNIT_APPROVAL_PROCESSES)\n  );\n\nexport const getAssignedUsers = (\n  orgUnitId: string,\n  roleId: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getB2BOrgUnitState,\n    getB2BUsersState,\n    (state: OrgUnits, users: StateUtils.EntityLoaderState<B2BUser>) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.users,\n        users,\n        params,\n        `${orgUnitId},${roleId}`\n      )\n  );\n\nexport const getB2BAddresses = (\n  orgUnitId: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Address>>\n> =>\n  createSelector(getB2BOrgUnitState, (state: OrgUnits) =>\n    StateUtils.denormalizeCustomB2BSearch(\n      state.addressList,\n      state.addressEntities,\n      params,\n      orgUnitId\n    )\n  );\n\nexport const getB2BAddress = (\n  addressId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<Address>> =>\n  createSelector(\n    getAddressesState,\n    (state: StateUtils.EntityLoaderState<Address>) =>\n      StateUtils.entityLoaderStateSelector(state, addressId)\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Permission } from '../../model/permission.model';\nimport { UserGroup } from '../../model/user-group.model';\nimport {\n  OrganizationState,\n  StateWithOrganization,\n  UserGroupManagement,\n  USER_GROUP_FEATURE,\n} from '../organization-state';\nimport { getB2BUsersState } from './b2b-user.selector';\nimport { getOrganizationState } from './feature.selector';\nimport { getPermissionsState } from './permission.selector';\n\nexport const getUserGroupManagementState: MemoizedSelector<\n  StateWithOrganization,\n  UserGroupManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[USER_GROUP_FEATURE]\n);\n\nexport const getUserGroupsState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<UserGroup>\n> = createSelector(\n  getUserGroupManagementState,\n  (state: UserGroupManagement) => state && state.entities\n);\n\nexport const getUserGroup = (\n  userGroupId: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>> =>\n  createSelector(\n    getUserGroupsState,\n    (state: StateUtils.EntityLoaderState<UserGroup>) =>\n      StateUtils.entityLoaderStateSelector(state, userGroupId)\n  );\n\nexport const getUserGroupValue = (\n  userGroupId: string\n): MemoizedSelector<StateWithOrganization, UserGroup> => {\n  return createSelector(getUserGroup(userGroupId), (userGroupState) =>\n    StateUtils.loaderValueSelector(userGroupState)\n  );\n};\n\nexport const getUserGroupList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<UserGroup>>\n> =>\n  createSelector(getUserGroupManagementState, (state: UserGroupManagement) =>\n    StateUtils.denormalizeSearch<UserGroup>(state, params)\n  );\n\nexport const getAvailableOrgCustomers = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<B2BUser>>\n> =>\n  createSelector(\n    getUserGroupManagementState,\n    getB2BUsersState,\n    (\n      state: UserGroupManagement,\n      customers: StateUtils.EntityLoaderState<B2BUser>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.customers,\n        customers,\n        params,\n        code\n      )\n  );\n\nexport const getAvailableOrderApprovalPermissions = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Permission>>\n> =>\n  createSelector(\n    getUserGroupManagementState,\n    getPermissionsState,\n    (\n      state: UserGroupManagement,\n      permissions: StateUtils.EntityLoaderState<Permission>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.permissions,\n        permissions,\n        params,\n        code\n      )\n  );\n\nexport const getUserGroupState = (\n  code: string\n): MemoizedSelector<StateWithOrganization, StateUtils.LoaderState<UserGroup>> =>\n  createSelector(\n    getUserGroupsState,\n    (state: StateUtils.EntityLoaderState<UserGroup>) =>\n      StateUtils.entityLoaderStateSelector(state, code)\n  );\n","import { createSelector, MemoizedSelector } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n} from '@spartacus/core';\nimport { Budget } from '../../model/budget.model';\nimport {\n  CostCenterManagement,\n  COST_CENTER_FEATURE,\n  OrganizationState,\n  StateWithOrganization,\n} from '../organization-state';\nimport { getBudgetsState } from './budget.selector';\nimport { getOrganizationState } from './feature.selector';\n\nexport const getCostCenterManagementState: MemoizedSelector<\n  StateWithOrganization,\n  CostCenterManagement\n> = createSelector(\n  getOrganizationState,\n  (state: OrganizationState) => state[COST_CENTER_FEATURE]\n);\n\nexport const getCostCentersState: MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.EntityLoaderState<CostCenter>\n> = createSelector(\n  getCostCenterManagementState,\n  (state: CostCenterManagement) => state && state.entities\n);\n\nexport const getCostCenter = (\n  costCenterCode: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<CostCenter>\n> =>\n  createSelector(\n    getCostCentersState,\n    (state: StateUtils.EntityLoaderState<CostCenter>) =>\n      StateUtils.entityLoaderStateSelector(state, costCenterCode)\n  );\n\nexport const getCostCenterValue = (\n  costCenterCode: string\n): MemoizedSelector<StateWithOrganization, Budget> => {\n  return createSelector(getCostCenter(costCenterCode), (costCenterState) =>\n    StateUtils.loaderValueSelector(costCenterState)\n  );\n};\n\nexport const getCostCenterList = (\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<CostCenter>>\n> =>\n  createSelector(getCostCenterManagementState, (state: CostCenterManagement) =>\n    StateUtils.denormalizeSearch<CostCenter>(state, params)\n  );\n\nexport const getAssignedBudgets = (\n  code: string,\n  params: SearchConfig\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<EntitiesModel<Budget>>\n> =>\n  createSelector(\n    getCostCenterManagementState,\n    getBudgetsState,\n    (\n      state: CostCenterManagement,\n      budgets: StateUtils.EntityLoaderState<Budget>\n    ) =>\n      StateUtils.denormalizeCustomB2BSearch(\n        state.budgets,\n        budgets,\n        params,\n        code\n      )\n  );\n\nexport const getCostCenterState = (\n  code: string\n): MemoizedSelector<\n  StateWithOrganization,\n  StateUtils.LoaderState<CostCenter>\n> =>\n  createSelector(\n    getCostCentersState,\n    (state: StateUtils.EntityLoaderState<CostCenter>) =>\n      StateUtils.entityLoaderStateSelector(state, code)\n  );\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { Budget } from '../model/budget.model';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { BudgetActions, StateWithOrganization } from '../store/index';\nimport {\n  getBudget,\n  getBudgetList,\n  getBudgetValue,\n} from '../store/selectors/budget.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  loadBudget(budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new BudgetActions.LoadBudget({ userId, budgetCode })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadBudgets(params?: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new BudgetActions.LoadBudgets({ userId, params })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getBudgetState(\n    budgetCode: string\n  ): Observable<StateUtils.LoaderState<Budget>> {\n    return this.store.select(getBudget(budgetCode));\n  }\n\n  private getBudgetValue(budgetCode: string): Observable<Budget> {\n    return this.store.select(getBudgetValue(budgetCode)).pipe(filter(Boolean));\n  }\n\n  private getBudgetList(\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Budget>>> {\n    return this.store.select(getBudgetList(params));\n  }\n\n  get(budgetCode: string): Observable<Budget> {\n    const loading$ = this.getBudgetState(budgetCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadBudget(budgetCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getBudgetValue(budgetCode)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<Budget>> {\n    return this.getBudgetList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Budget>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadBudgets(params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<Budget>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getCostCenters(budgetCode: string): Observable<EntitiesModel<CostCenter>> {\n    return this.get(budgetCode).pipe(\n      map(\n        (budget) =>\n          ({\n            values: budget.costCenters ?? [],\n          } as EntitiesModel<CostCenter>)\n      )\n    );\n  }\n\n  getErrorState(budgetCode): Observable<boolean> {\n    return this.getBudgetState(budgetCode).pipe(map((state) => state.error));\n  }\n\n  create(budget: Budget): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new BudgetActions.CreateBudget({ userId, budget })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(budgetCode: string, budget: Budget): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new BudgetActions.UpdateBudget({ userId, budgetCode, budget })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    return getItemStatus(this.getBudgetState(budgetCode));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { Budget } from '../model/budget.model';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { CostCenterActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getAssignedBudgets,\n  getCostCenter,\n  getCostCenterList,\n  getCostCenterState,\n  getCostCenterValue,\n} from '../store/selectors/cost-center.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class CostCenterService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(costCenterCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadCostCenter({ userId, costCenterCode })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params?: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadCostCenters({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getCostCenter(\n    costCenterCode: string\n  ): Observable<StateUtils.LoaderState<CostCenter>> {\n    return this.store.select(getCostCenter(costCenterCode));\n  }\n\n  private getCostCenterValue(costCenterCode: string): Observable<CostCenter> {\n    return this.store\n      .select(getCostCenterValue(costCenterCode))\n      .pipe(filter(Boolean));\n  }\n\n  private getCostCenterList(\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<CostCenter>>> {\n    return this.store.select(getCostCenterList(params));\n  }\n\n  private getBudgetList(\n    costCenterCode,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Budget>>> {\n    return this.store.select(getAssignedBudgets(costCenterCode, params));\n  }\n\n  get(costCenterCode: string): Observable<Budget> {\n    const loading$ = this.getCostCenter(costCenterCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(costCenterCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getCostCenterValue(costCenterCode)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<CostCenter>> {\n    return this.getCostCenterList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<CostCenter>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<CostCenter>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  private getCostCenterState(\n    costCenterCode: string\n  ): Observable<StateUtils.LoaderState<Budget>> {\n    return this.store.select(getCostCenterState(costCenterCode));\n  }\n\n  create(costCenter: CostCenter): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.CreateCostCenter({ userId, costCenter })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(costCenterCode: string, costCenter: CostCenter): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.UpdateCostCenter({\n            userId,\n            costCenterCode,\n            costCenter,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    costCenterCode: string\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    return getItemStatus(this.getCostCenter(costCenterCode));\n  }\n\n  loadBudgets(costCenterCode: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.LoadAssignedBudgets({\n            userId,\n            costCenterCode,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getBudgets(\n    costCenterCode: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Budget>> {\n    return this.getBudgetList(costCenterCode, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Budget>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadBudgets(costCenterCode, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<Budget>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignBudget(costCenterCode: string, budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.AssignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignBudget(costCenterCode: string, budgetCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new CostCenterActions.UnassignBudget({\n            userId,\n            costCenterCode,\n            budgetCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getErrorState(costCenterCode): Observable<boolean> {\n    return this.getCostCenterState(costCenterCode).pipe(\n      map((state) => state.error)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  Address,\n  B2BApprovalProcess,\n  B2BUnit,\n  B2BUser,\n  CostCenter,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { B2BUnitNode } from '../model/unit-node.model';\nimport { OrgUnitActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getApprovalProcesses,\n  getAssignedUsers,\n  getB2BAddress,\n  getB2BAddresses,\n  getOrgUnit,\n  getOrgUnitList,\n  getOrgUnitState,\n  getOrgUnitTree,\n  getOrgUnitValue,\n} from '../store/selectors/org-unit.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class OrgUnitService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  clearAssignedUsersList(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): void {\n    this.store.dispatch(\n      new OrgUnitActions.ClearAssignedUsers({ orgUnitId, roleId, params })\n    );\n  }\n\n  load(orgUnitId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadOrgUnit({ userId, orgUnitId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new OrgUnitActions.LoadOrgUnitNodes({ userId })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadTree(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) => this.store.dispatch(new OrgUnitActions.LoadTree({ userId })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadApprovalProcesses(): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadApprovalProcesses({ userId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadUsers(orgUnitId: string, roleId: string, params: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadAssignedUsers({\n            userId,\n            orgUnitId,\n            roleId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAddresses(orgUnitId: string): void {\n    // TODO: replace it after turn on loadAddresses$\n    // this.store.dispatch(\n    //   new OrgUnitActions.LoadAddresses({ userId, orgUnitId })\n    // );\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.LoadOrgUnit({ userId, orgUnitId })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getOrgUnit(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<B2BUnit>> {\n    return this.store.select(getOrgUnit(orgUnitId));\n  }\n\n  private getOrgUnitValue(orgUnitId: string): Observable<B2BUnit> {\n    return this.store.select(getOrgUnitValue(orgUnitId)).pipe(filter(Boolean));\n  }\n\n  private getTreeState(): Observable<StateUtils.LoaderState<B2BUnitNode>> {\n    return this.store.select(getOrgUnitTree());\n  }\n\n  private getOrgUnitsList(): Observable<StateUtils.LoaderState<B2BUnitNode[]>> {\n    return this.store.select(getOrgUnitList());\n  }\n\n  private getAddressesState(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Address>>> {\n    return this.store.select(getB2BAddresses(orgUnitId, null));\n  }\n\n  private getAddressState(\n    addressId: string\n  ): Observable<StateUtils.LoaderState<Address>> {\n    return this.store.select(getB2BAddress(addressId));\n  }\n\n  private getAssignedUsers(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getAssignedUsers(orgUnitId, roleId, params));\n  }\n\n  private getApprovalProcessesList(): Observable<\n    StateUtils.LoaderState<B2BApprovalProcess[]>\n  > {\n    return this.store.select(getApprovalProcesses());\n  }\n\n  get(orgUnitId: string): Observable<B2BUnit> {\n    const loading$ = this.getOrgUnit(orgUnitId).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(orgUnitId);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getOrgUnitValue(orgUnitId)\n    );\n  }\n\n  getCostCenters(orgUnitId: string): Observable<EntitiesModel<CostCenter>> {\n    return this.get(orgUnitId).pipe(\n      map((orgUnit) => ({\n        values: orgUnit.costCenters ?? [],\n      }))\n    );\n  }\n\n  protected findUnitChildrenInTree(\n    orginitId,\n    unit: B2BUnitNode\n  ): B2BUnitNode[] {\n    return unit.id === orginitId\n      ? unit.children\n      : unit.children.flatMap((child) =>\n          this.findUnitChildrenInTree(orginitId, child)\n        );\n  }\n\n  getChildUnits(orgUnitId: string): Observable<EntitiesModel<B2BUnitNode>> {\n    return this.getTree().pipe(\n      map((tree) => ({\n        values: this.findUnitChildrenInTree(orgUnitId, tree),\n      }))\n    );\n  }\n\n  getTree(): Observable<B2BUnitNode> {\n    return this.getTreeState().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BUnitNode>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadTree();\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<B2BUnitNode>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getApprovalProcesses(): Observable<B2BApprovalProcess[]> {\n    return this.getApprovalProcessesList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BApprovalProcess[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadApprovalProcesses();\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<B2BApprovalProcess[]>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getList(): Observable<B2BUnitNode[]> {\n    return this.getOrgUnitsList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<B2BUnitNode[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList();\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<B2BUnitNode[]>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getActiveUnitList(): Observable<B2BUnitNode[]> {\n    return this.getList().pipe(\n      map((units) => units.filter((unit) => unit.active)),\n      map((units) => units.sort(this.sortUnitList))\n    );\n  }\n\n  protected sortUnitList(a: B2BUnitNode, b: B2BUnitNode) {\n    return a.id.toLowerCase() < b.id.toLowerCase()\n      ? -1\n      : a.id.toLowerCase() > b.id.toLowerCase()\n      ? 1\n      : 0;\n  }\n\n  getUsers(\n    orgUnitId: string,\n    roleId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.getAssignedUsers(orgUnitId, roleId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadUsers(orgUnitId, roleId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getErrorState(orgCustomerId): Observable<boolean> {\n    return this.getOrgUnitState(orgCustomerId).pipe(\n      map((state) => state.error)\n    );\n  }\n\n  create(unit: B2BUnit): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(new OrgUnitActions.CreateUnit({ userId, unit })),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(unitCode: string, unit: B2BUnit): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UpdateUnit({ userId, unitCode, unit })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    orgUnitId: string\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    return getItemStatus(this.getOrgUnit(orgUnitId));\n  }\n\n  assignRole(orgCustomerId: string, roleId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.AssignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignRole(orgCustomerId: string, roleId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UnassignRole({\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  assignApprover(\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.AssignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignApprover(\n    orgUnitId: string,\n    orgCustomerId: string,\n    roleId: string\n  ): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UnassignApprover({\n            orgUnitId,\n            userId,\n            orgCustomerId,\n            roleId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  createAddress(orgUnitId: string, address: Address): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.CreateAddress({\n            userId,\n            orgUnitId,\n            address,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAddresses(orgUnitId: string): Observable<EntitiesModel<Address>> {\n    return this.getAddressesState(orgUnitId).pipe(\n      observeOn(queueScheduler),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadAddresses(orgUnitId);\n        }\n      }),\n      filter((state) => state.success || state.error),\n      map((state) => state.value)\n    );\n  }\n\n  getAddress(orgUnitId: string, addressId: string): Observable<Address> {\n    return this.getAddressState(addressId).pipe(\n      observeOn(queueScheduler),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadAddresses(orgUnitId);\n        }\n      }),\n      filter((state) => state.success || state.error),\n      map((state) => state.value)\n    );\n  }\n\n  updateAddress(orgUnitId: string, addressId: string, address: Address): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.UpdateAddress({\n            userId,\n            orgUnitId,\n            addressId,\n            address,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAddressLoadingStatus(\n    addressId: string\n  ): Observable<OrganizationItemStatus<Address>> {\n    return getItemStatus(this.getAddressState(addressId));\n  }\n\n  deleteAddress(orgUnitId: string, addressId: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new OrgUnitActions.DeleteAddress({\n            userId,\n            orgUnitId,\n            addressId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getOrgUnitState(\n    orgUnitId: string\n  ): Observable<StateUtils.LoaderState<B2BUnit>> {\n    return this.store.select(getOrgUnitState(orgUnitId));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  EntitiesModel,\n  OrderApprovalPermissionType,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { PermissionActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getPermission,\n  getPermissionList,\n  getPermissionState,\n  getPermissionTypes,\n  getPermissionValue,\n} from '../store/selectors/permission.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class PermissionService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  loadPermission(permissionCode: string): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.LoadPermission({\n            userId,\n            permissionCode,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissions(params?: SearchConfig): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.LoadPermissions({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadPermissionTypes() {\n    this.userIdService.takeUserId(true).subscribe(\n      () => this.store.dispatch(new PermissionActions.LoadPermissionTypes()),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getPermission(\n    permissionCode: string\n  ): Observable<StateUtils.LoaderState<Permission>> {\n    return this.store.select(getPermission(permissionCode));\n  }\n\n  private getPermissionValue(permissionCode: string): Observable<Permission> {\n    return this.store\n      .select(getPermissionValue(permissionCode))\n      .pipe(filter(Boolean));\n  }\n\n  private getPermissionList(\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(getPermissionList(params));\n  }\n\n  private getPermissionTypeList(): Observable<\n    StateUtils.LoaderState<OrderApprovalPermissionType[]>\n  > {\n    return this.store.select(getPermissionTypes());\n  }\n\n  get(permissionCode: string): Observable<Permission> {\n    const loading$ = this.getPermission(permissionCode).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.loadPermission(permissionCode);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getPermissionValue(permissionCode)\n    );\n  }\n\n  getTypes(): Observable<OrderApprovalPermissionType[]> {\n    return this.getPermissionTypeList().pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<OrderApprovalPermissionType[]>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissionTypes();\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<OrderApprovalPermissionType[]>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<Permission>> {\n    return this.getPermissionList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadPermissions(params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  create(permission: Permission): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.CreatePermission({ userId, permission })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(permissionCode: string, permission: Permission): void {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new PermissionActions.UpdatePermission({\n            userId,\n            permissionCode,\n            permission,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    return getItemStatus(this.getPermission(permissionCode));\n  }\n\n  private getPermissionState(\n    code: string\n  ): Observable<StateUtils.LoaderState<Permission>> {\n    return this.store.select(getPermissionState(code));\n  }\n\n  getErrorState(permissionCode): Observable<boolean> {\n    return this.getPermissionState(permissionCode).pipe(\n      map((state) => state.error)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  B2BUser,\n  EntitiesModel,\n  SearchConfig,\n  StateUtils,\n  StateWithProcess,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, queueScheduler, using } from 'rxjs';\nimport { auditTime, filter, map, observeOn, tap } from 'rxjs/operators';\nimport { Budget } from '../model/budget.model';\nimport { OrganizationItemStatus } from '../model/organization-item-status';\nimport { Permission } from '../model/permission.model';\nimport { UserGroup } from '../model/user-group.model';\nimport { UserGroupActions } from '../store/actions/index';\nimport { StateWithOrganization } from '../store/organization-state';\nimport {\n  getAvailableOrderApprovalPermissions,\n  getAvailableOrgCustomers,\n  getUserGroup,\n  getUserGroupList,\n  getUserGroupState,\n  getUserGroupValue,\n} from '../store/selectors/user-group.selector';\nimport { getItemStatus } from '../utils/get-item-status';\n\n@Injectable({ providedIn: 'root' })\nexport class UserGroupService {\n  constructor(\n    protected store: Store<StateWithOrganization | StateWithProcess<void>>,\n    protected userIdService: UserIdService\n  ) {}\n\n  load(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadUserGroup({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadList(params?: SearchConfig) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadUserGroups({ userId, params })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  private getUserGroup(\n    userGroupId: string\n  ): Observable<StateUtils.LoaderState<UserGroup>> {\n    return this.store.select(getUserGroup(userGroupId));\n  }\n\n  private getUserGroupValue(userGroupId: string): Observable<Budget> {\n    return this.store\n      .select(getUserGroupValue(userGroupId))\n      .pipe(filter(Boolean));\n  }\n\n  private getUserGroupList(\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<UserGroup>>> {\n    return this.store.select(getUserGroupList(params));\n  }\n\n  private getAvailableOrgCustomersList(\n    userGroupId: string,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<B2BUser>>> {\n    return this.store.select(getAvailableOrgCustomers(userGroupId, params));\n  }\n\n  private getAvailableOrderApprovalPermissionsList(\n    userGroupId: string,\n    params\n  ): Observable<StateUtils.LoaderState<EntitiesModel<Permission>>> {\n    return this.store.select(\n      getAvailableOrderApprovalPermissions(userGroupId, params)\n    );\n  }\n\n  get(userGroupUid: string): Observable<UserGroup> {\n    const loading$ = this.getUserGroup(userGroupUid).pipe(\n      auditTime(0),\n      tap((state) => {\n        if (!(state.loading || state.success || state.error)) {\n          this.load(userGroupUid);\n        }\n      })\n    );\n\n    return using(\n      () => loading$.subscribe(),\n      () => this.getUserGroupValue(userGroupUid)\n    );\n  }\n\n  getList(params: SearchConfig): Observable<EntitiesModel<UserGroup>> {\n    return this.getUserGroupList(params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadList(params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<UserGroup>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  create(userGroup: UserGroup) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.CreateUserGroup({\n            userId,\n            userGroup,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  update(userGroupId: string, userGroup: UserGroup) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UpdateUserGroup({\n            userId,\n            userGroupId,\n            userGroup,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getLoadingStatus(\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    return getItemStatus(this.getUserGroup(budgetCode));\n  }\n\n  delete(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.DeleteUserGroup({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAvailableOrgCustomers(userGroupId: string, params: SearchConfig) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadAvailableOrgCustomers({\n            userId,\n            userGroupId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  loadAvailableOrderApprovalPermissions(\n    userGroupId: string,\n    params: SearchConfig\n  ) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.LoadPermissions({\n            userId,\n            userGroupId,\n            params,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  getAvailableOrgCustomers(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.getAvailableOrgCustomersList(userGroupId, params).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadAvailableOrgCustomers(userGroupId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<B2BUser>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  getAvailableOrderApprovalPermissions(\n    userGroupId: string,\n    params: SearchConfig\n  ): Observable<EntitiesModel<Permission>> {\n    return this.getAvailableOrderApprovalPermissionsList(\n      userGroupId,\n      params\n    ).pipe(\n      observeOn(queueScheduler),\n      tap((process: StateUtils.LoaderState<EntitiesModel<Permission>>) => {\n        if (!(process.loading || process.success || process.error)) {\n          this.loadAvailableOrderApprovalPermissions(userGroupId, params);\n        }\n      }),\n      filter(\n        (process: StateUtils.LoaderState<EntitiesModel<Permission>>) =>\n          process.success || process.error\n      ),\n      map((result) => result.value)\n    );\n  }\n\n  assignMember(userGroupId: string, customerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.AssignMember({\n            userId,\n            userGroupId,\n            customerId,\n          })\n        ),\n      () => {\n        // TODO: for future releases, refactor this part to thrown errors\n      }\n    );\n  }\n\n  unassignMember(userGroupId: string, customerId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignMember({\n            userId,\n            userGroupId,\n            customerId,\n          })\n        ),\n      () => {}\n    );\n  }\n\n  unassignAllMembers(userGroupId: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignAllMembers({\n            userId,\n            userGroupId,\n          })\n        ),\n      () => {}\n    );\n  }\n\n  assignPermission(userGroupId: string, permissionUid: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.AssignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n          })\n        ),\n      () => {}\n    );\n  }\n\n  unassignPermission(userGroupId: string, permissionUid: string) {\n    this.userIdService.takeUserId(true).subscribe(\n      (userId) =>\n        this.store.dispatch(\n          new UserGroupActions.UnassignPermission({\n            userId,\n            userGroupId,\n            permissionUid,\n          })\n        ),\n      () => {}\n    );\n  }\n\n  private getUserGroupState(\n    code: string\n  ): Observable<StateUtils.LoaderState<UserGroup>> {\n    return this.store.select(getUserGroupState(code));\n  }\n\n  getErrorState(code): Observable<boolean> {\n    return this.getUserGroupState(code).pipe(map((state) => state.error));\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Injectable","PageType","defer","map","distinctUntilChanged","switchMap","of","combineLatest","shareReplay","PageMetaResolver","NgModule","StateUtils","ofType","BudgetActions.LOAD_BUDGET","BudgetActions.LoadBudgetSuccess","catchError","BudgetActions.LoadBudgetFail","normalizeHttpError","BudgetActions.LOAD_BUDGETS","BudgetActions.LoadBudgetsSuccess","BudgetActions.LoadBudgetsFail","BudgetActions.CREATE_BUDGET","BudgetActions.CreateBudgetSuccess","OrganizationActions.OrganizationClearData","from","BudgetActions.CreateBudgetFail","BudgetActions.UPDATE_BUDGET","BudgetActions.UpdateBudgetSuccess","BudgetActions.UpdateBudgetFail","Effect","OrgUnitActions.LOAD_ORG_UNIT","OrgUnitActions.LoadOrgUnitSuccess","OrgUnitActions.LoadAddressSuccess","OrgUnitActions.LoadAddressesSuccess","OrgUnitActions.LoadOrgUnitFail","OrgUnitActions.LOAD_UNIT_NODES","OrgUnitActions.LoadOrgUnitNodesSuccess","OrgUnitActions.LoadOrgUnitNodesFail","OrgUnitActions.CREATE_ORG_UNIT","OrgUnitActions.CreateUnitSuccess","OrgUnitActions.CreateUnitFail","OrgUnitActions.UPDATE_ORG_UNIT","OrgUnitActions.UpdateUnitSuccess","OrgUnitActions.UpdateUnitFail","OrgUnitActions.LOAD_UNIT_TREE","OrgUnitActions.LoadTreeSuccess","OrgUnitActions.LoadTreeFail","OrgUnitActions.LOAD_APPROVAL_PROCESSES","OrgUnitActions.LoadApprovalProcessesSuccess","OrgUnitActions.LoadApprovalProcessesFail","OrgUnitActions.LOAD_ASSIGNED_USERS","groupBy","mergeMap","B2BUserActions.LoadB2BUserSuccess","OrgUnitActions.LoadAssignedUsersSuccess","OrgUnitActions.LoadAssignedUsersFail","OrgUnitActions.ASSIGN_ROLE","OrgUnitActions.AssignRoleSuccess","OrgUnitActions.AssignRoleFail","OrgUnitActions.UNASSIGN_ROLE","OrgUnitActions.UnassignRoleSuccess","OrgUnitActions.UnassignRoleFail","OrgUnitActions.ASSIGN_APPROVER","OrgUnitActions.AssignApproverSuccess","OrgUnitActions.AssignApproverFail","OrgUnitActions.UNASSIGN_APPROVER","OrgUnitActions.UnassignApproverSuccess","OrgUnitActions.UnassignApproverFail","OrgUnitActions.CREATE_ADDRESS","OrgUnitActions.CreateAddressSuccess","OrgUnitActions.CreateAddressFail","OrgUnitActions.UPDATE_ADDRESS","OrgUnitActions.UpdateAddressSuccess","OrgUnitActions.UpdateAddressFail","OrgUnitActions.DELETE_ADDRESS","OrgUnitActions.DeleteAddressSuccess","OrgUnitActions.DeleteAddressFail","PermissionActions.LOAD_PERMISSION","PermissionActions.LoadPermissionSuccess","PermissionActions.LoadPermissionFail","PermissionActions.LOAD_PERMISSIONS","PermissionActions.LoadPermissionsSuccess","PermissionActions.LoadPermissionsFail","PermissionActions.CREATE_PERMISSION","PermissionActions.CreatePermissionSuccess","PermissionActions.CreatePermissionFail","PermissionActions.UPDATE_PERMISSION","PermissionActions.UpdatePermissionSuccess","PermissionActions.UpdatePermissionFail","PermissionActions.LOAD_PERMISSION_TYPES","PermissionActions.LoadPermissionTypesSuccess","PermissionActions.LoadPermissionTypesFail","CostCenterActions.LOAD_COST_CENTER","CostCenterActions.LoadCostCenterSuccess","CostCenterActions.LoadCostCenterFail","CostCenterActions.LOAD_COST_CENTERS","CostCenterActions.LoadCostCentersSuccess","CostCenterActions.LoadCostCentersFail","CostCenterActions.CREATE_COST_CENTER","CostCenterActions.CreateCostCenterSuccess","CostCenterActions.CreateCostCenterFail","CostCenterActions.UPDATE_COST_CENTER","CostCenterActions.UpdateCostCenterSuccess","CostCenterActions.UpdateCostCenterFail","CostCenterActions.LOAD_ASSIGNED_BUDGETS","CostCenterActions.LoadAssignedBudgetsSuccess","CostCenterActions.LoadAssignedBudgetsFail","CostCenterActions.ASSIGN_BUDGET","CostCenterActions.AssignBudgetSuccess","CostCenterActions.AssignBudgetFail","CostCenterActions.UNASSIGN_BUDGET","CostCenterActions.UnassignBudgetSuccess","CostCenterActions.UnassignBudgetFail","B2BUserActions.LOAD_B2B_USER","B2BUserActions.LoadB2BUserFail","B2BUserActions.CREATE_B2B_USER","take","tap","B2BUserActions.CreateB2BUserSuccess","OrgUnitActions.AssignApprover","B2BUserRole","B2BUserActions.CreateB2BUserFail","B2BUserActions.UPDATE_B2B_USER","B2BUserActions.UpdateB2BUserSuccess","B2BUserActions.UpdateB2BUserFail","B2BUserActions.UPDATE_B2B_USER_SUCCESS","withLatestFrom","AuthActions","B2BUserActions.LOAD_B2B_USERS","B2BUserActions.LoadB2BUsersSuccess","B2BUserActions.LoadB2BUsersFail","B2BUserActions.LOAD_B2B_USER_APPROVERS","B2BUserActions.LoadB2BUserApproversSuccess","B2BUserActions.LoadB2BUserApproversFail","B2BUserActions.LOAD_B2B_USER_PERMISSIONS","B2BUserActions.LoadB2BUserPermissionsSuccess","B2BUserActions.LoadB2BUserPermissionsFail","B2BUserActions.LOAD_B2B_USER_USER_GROUPS","UserGroupActions.LoadUserGroupSuccess","B2BUserActions.LoadB2BUserUserGroupsSuccess","B2BUserActions.LoadB2BUserUserGroupsFail","B2BUserActions.ASSIGN_B2B_USER_APPROVER","B2BUserActions.AssignB2BUserApproverSuccess","B2BUserActions.AssignB2BUserApproverFail","B2BUserActions.UNASSIGN_B2B_USER_APPROVER","B2BUserActions.UnassignB2BUserApproverSuccess","B2BUserActions.UnassignB2BUserApproverFail","B2BUserActions.ASSIGN_B2B_USER_PERMISSION","B2BUserActions.AssignB2BUserPermissionSuccess","B2BUserActions.AssignB2BUserPermissionFail","B2BUserActions.UNASSIGN_B2B_USER_PERMISSION","B2BUserActions.UnassignB2BUserPermissionSuccess","B2BUserActions.UnassignB2BUserPermissionFail","B2BUserActions.ASSIGN_B2B_USER_USER_GROUP","B2BUserActions.AssignB2BUserUserGroupSuccess","B2BUserActions.AssignB2BUserUserGroupFail","B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP","B2BUserActions.UnassignB2BUserUserGroupSuccess","B2BUserActions.UnassignB2BUserUserGroupFail","UserGroupActions.LOAD_USER_GROUP","UserGroupActions.LoadUserGroupFail","UserGroupActions.LOAD_USER_GROUPS","UserGroupActions.LoadUserGroupsSuccess","UserGroupActions.LoadUserGroupsFail","UserGroupActions.LOAD_USER_GROUP_PERMISSIONS","UserGroupActions.LoadPermissionsSuccess","UserGroupActions.LoadPermissionsFail","UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS","UserGroupActions.LoadAvailableOrgCustomersSuccess","UserGroupActions.LoadAvailableOrgCustomersFail","UserGroupActions.CREATE_USER_GROUP","UserGroupActions.CreateUserGroupSuccess","UserGroupActions.CreateUserGroupFail","UserGroupActions.UPDATE_USER_GROUP","UserGroupActions.UpdateUserGroupSuccess","UserGroupActions.UpdateUserGroupFail","UserGroupActions.DELETE_USER_GROUP","UserGroupActions.DeleteUserGroupSuccess","UserGroupActions.DeleteUserGroupFail","UserGroupActions.USER_GROUP_ASSIGN_PERMISSION","UserGroupActions.AssignPermissionSuccess","UserGroupActions.AssignPermissionFail","UserGroupActions.USER_GROUP_ASSIGN_MEMBER","UserGroupActions.AssignMemberSuccess","UserGroupActions.AssignMemberFail","UserGroupActions.USER_GROUP_UNASSIGN_MEMBER","UserGroupActions.UnassignMemberSuccess","UserGroupActions.UnassignMemberFail","UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION","UserGroupActions.UnassignPermissionSuccess","UserGroupActions.UnassignPermissionFail","UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS","UserGroupActions.UnassignAllMembersSuccess","UserGroupActions.UnassignAllMembersFail","B2BUserActions.LOAD_B2B_USER_SUCCESS","B2BUserActions.CREATE_B2B_USER_SUCCESS","OrgUnitActions.ASSIGN_ROLE_SUCCESS","OrgUnitActions.ASSIGN_APPROVER_SUCCESS","OrgUnitActions.UNASSIGN_ROLE_SUCCESS","OrgUnitActions.UNASSIGN_APPROVER_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_APPROVER_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_APPROVER_SUCCESS","UserGroupActions.USER_GROUP_ASSIGN_MEMBER_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_MEMBER_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_ALL_MEMBERS_SUCCESS","B2BUserActions.LOAD_B2B_USERS_SUCCESS","B2BUserActions.LOAD_B2B_USER_APPROVERS_SUCCESS","B2BUserActions.LOAD_B2B_USER_PERMISSIONS_SUCCESS","B2BUserActions.LOAD_B2B_USER_USER_GROUPS_SUCCESS","BudgetActions.LOAD_BUDGET_SUCCESS","BudgetActions.CREATE_BUDGET_SUCCESS","BudgetActions.UPDATE_BUDGET_SUCCESS","CostCenterActions.UNASSIGN_BUDGET_SUCCESS","CostCenterActions.ASSIGN_BUDGET_SUCCESS","BudgetActions.LOAD_BUDGETS_SUCCESS","CostCenterActions.LOAD_COST_CENTER_SUCCESS","CostCenterActions.CREATE_COST_CENTER_SUCCESS","CostCenterActions.UPDATE_COST_CENTER_SUCCESS","CostCenterActions.LOAD_COST_CENTERS_SUCCESS","CostCenterActions.LOAD_ASSIGNED_BUDGETS_SUCCESS","OrgUnitActions.LOAD_ORG_UNIT_SUCCESS","OrgUnitActions.CREATE_ORG_UNIT_SUCCESS","OrgUnitActions.UPDATE_ORG_UNIT_SUCCESS","OrgUnitActions.LOAD_ASSIGNED_USERS_SUCCESS","OrgUnitActions.LOAD_ADDRESSES_SUCCESS","PermissionActions.LOAD_PERMISSION_SUCCESS","PermissionActions.CREATE_PERMISSION_SUCCESS","PermissionActions.UPDATE_PERMISSION_SUCCESS","UserGroupActions.USER_GROUP_ASSIGN_PERMISSION_SUCCESS","UserGroupActions.USER_GROUP_UNASSIGN_PERMISSION_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_PERMISSION_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_PERMISSION_SUCCESS","PermissionActions.LOAD_PERMISSIONS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_SUCCESS","UserGroupActions.CREATE_USER_GROUP_SUCCESS","UserGroupActions.UPDATE_USER_GROUP_SUCCESS","B2BUserActions.ASSIGN_B2B_USER_USER_GROUP_SUCCESS","B2BUserActions.UNASSIGN_B2B_USER_USER_GROUP_SUCCESS","UserGroupActions.LOAD_USER_GROUPS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_PERMISSIONS_SUCCESS","UserGroupActions.LOAD_USER_GROUP_AVAILABLE_CUSTOMERS_SUCCESS","combineReducers","InjectionToken","OrganizationActions.CLEAR_ORGANIZATION_DATA","SiteContextActions","StoreModule","EffectsModule","filter","pluck","GlobalMessageType","HttpResponseStatus","HttpErrorHandler","LoadStatus","Period","createFeatureSelector","createSelector","getUserGroupsState","observeOn","queueScheduler","pairwise","B2BUserActions.LoadB2BUser","B2BUserActions.LoadB2BUsers","auditTime","using","B2BUserActions.CreateB2BUser","B2BUserActions.UpdateB2BUser","B2BUserActions.LoadB2BUserApprovers","B2BUserActions.AssignB2BUserApprover","B2BUserActions.UnassignB2BUserApprover","B2BUserActions.LoadB2BUserPermissions","B2BUserActions.AssignB2BUserPermission","B2BUserActions.UnassignB2BUserPermission","B2BUserActions.LoadB2BUserUserGroups","B2BUserActions.AssignB2BUserUserGroup","B2BUserActions.UnassignB2BUserUserGroup","BudgetActions.LoadBudget","BudgetActions.LoadBudgets","BudgetActions.CreateBudget","BudgetActions.UpdateBudget","CostCenterActions.LoadCostCenter","CostCenterActions.LoadCostCenters","CostCenterActions.CreateCostCenter","CostCenterActions.UpdateCostCenter","CostCenterActions.LoadAssignedBudgets","CostCenterActions.AssignBudget","CostCenterActions.UnassignBudget","OrgUnitActions.ClearAssignedUsers","OrgUnitActions.LoadOrgUnit","OrgUnitActions.LoadOrgUnitNodes","OrgUnitActions.LoadTree","OrgUnitActions.LoadApprovalProcesses","OrgUnitActions.LoadAssignedUsers","OrgUnitActions.CreateUnit","OrgUnitActions.UpdateUnit","OrgUnitActions.AssignRole","OrgUnitActions.UnassignRole","OrgUnitActions.UnassignApprover","OrgUnitActions.CreateAddress","OrgUnitActions.UpdateAddress","OrgUnitActions.DeleteAddress","PermissionActions.LoadPermission","PermissionActions.LoadPermissions","PermissionActions.LoadPermissionTypes","PermissionActions.CreatePermission","PermissionActions.UpdatePermission","UserGroupActions.LoadUserGroup","UserGroupActions.LoadUserGroups","UserGroupActions.CreateUserGroup","UserGroupActions.UpdateUserGroup","UserGroupActions.DeleteUserGroup","UserGroupActions.LoadAvailableOrgCustomers","UserGroupActions.LoadPermissions","UserGroupActions.AssignMember","UserGroupActions.UnassignMember","UserGroupActions.UnassignAllMembers","UserGroupActions.AssignPermission","UserGroupActions.UnassignPermission"],"mappings":"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"}