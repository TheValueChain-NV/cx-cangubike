{"version":3,"file":"spartacus-organization-administration-components.umd.js","sources":["../../../feature-libs/organization/administration/components/shared/current-item.service.ts","../../../feature-libs/organization/administration/components/shared/form/form.service.ts","../../../feature-libs/organization/administration/components/shared/item.service.ts","../../../feature-libs/organization/administration/components/shared/message/services/message.service.ts","../../../feature-libs/organization/administration/components/shared/item-active.directive.ts","../../../feature-libs/organization/administration/components/shared/item-active.module.ts","../../../feature-libs/organization/administration/components/shared/message/message.model.ts","../../../node_modules/tslib/tslib.es6.js","../../../feature-libs/organization/administration/components/shared/message/base-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.component.html","../../../feature-libs/organization/administration/components/shared/message/services/message-render.service.ts","../../../feature-libs/organization/administration/components/shared/message/message.component.ts","../../../feature-libs/organization/administration/components/shared/message/message.component.html","../../../feature-libs/organization/administration/components/shared/message/notification/notification-message.module.ts","../../../feature-libs/organization/administration/components/shared/message/message.module.ts","../../../feature-libs/organization/administration/components/shared/card/card.component.ts","../../../feature-libs/organization/administration/components/shared/card/card.component.html","../../../feature-libs/organization/administration/components/shared/card/card.module.ts","../../../feature-libs/organization/administration/components/shared/form/form.component.ts","../../../feature-libs/organization/administration/components/shared/form/form.component.html","../../../feature-libs/organization/administration/components/shared/form/form.module.ts","../../../feature-libs/organization/administration/components/shared/list/list.service.ts","../../../feature-libs/organization/administration/components/shared/list/list.component.ts","../../../feature-libs/organization/administration/components/shared/list/list.component.html","../../../feature-libs/organization/administration/components/shared/list/list.module.ts","../../../feature-libs/organization/administration/components/shared/table/cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/cell.component.html","../../../feature-libs/organization/administration/components/shared/sub-list/assign-cell.component.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.component.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.component.html","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.module.ts","../../../feature-libs/organization/administration/components/shared/shared-organization.module.ts","../../../feature-libs/organization/administration/components/constants.ts","../../../feature-libs/organization/administration/components/shared/item-exists.directive.ts","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.component.ts","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.component.html","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.service.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.component.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.component.html","../../../feature-libs/organization/administration/components/shared/message/confirmation/confirmation-message.module.ts","../../../feature-libs/organization/administration/components/shared/detail/toggle-status-action/toggle-status.module.ts","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.component.ts","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.component.html","../../../feature-libs/organization/administration/components/shared/detail/delete-item-action/delete-item.module.ts","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.component.ts","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.component.html","../../../feature-libs/organization/administration/components/shared/detail/disable-info/disable-info.module.ts","../../../feature-libs/organization/administration/components/shared/sub-list/sub-list.service.ts","../../../feature-libs/organization/administration/components/shared/table/active-link/active-link-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/amount/amount-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/date-range/date-range-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/date-range/date-range-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/limit/limit-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/limit/limit-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/roles/roles-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/roles/roles-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/status/status-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/status/status-cell.component.html","../../../feature-libs/organization/administration/components/shared/table/unit/unit-cell.component.ts","../../../feature-libs/organization/administration/components/shared/table/cell.module.ts","../../../feature-libs/organization/administration/components/shared/organization.model.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.component.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.component.html","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.service.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.component.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.component.html","../../../feature-libs/organization/administration/components/budget/services/current-budget.service.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.service.ts","../../../feature-libs/organization/administration/components/budget/services/budget-item.service.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.component.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.component.html","../../../feature-libs/organization/administration/components/shared/utility/entity-code.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.component.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.component.html","../../../feature-libs/organization/administration/components/budget/services/budget-list.service.ts","../../../feature-libs/organization/administration/components/budget/services/budget-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/budget/budget.config.ts","../../../feature-libs/organization/administration/components/budget/cost-centers/budget-cost-center-list.module.ts","../../../feature-libs/organization/administration/components/shared/item-exists.module.ts","../../../feature-libs/organization/administration/components/budget/details/budget-details.module.ts","../../../feature-libs/organization/administration/components/budget/form/budget-form.module.ts","../../../feature-libs/organization/administration/components/budget/budget-components.module.ts","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.component.ts","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.component.html","../../../feature-libs/organization/administration/components/budget/details-cell/budget-details-cell.module.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.component.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/assigned/cost-center-assigned-budget-list.component.html","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.component.ts","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.component.html","../../../feature-libs/organization/administration/components/cost-center/budgets/cost-center-budget-list.module.ts","../../../feature-libs/organization/administration/components/cost-center/services/current-cost-center.service.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.service.ts","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-item.service.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.component.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.component.html","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.component.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.component.html","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-list.service.ts","../../../feature-libs/organization/administration/components/cost-center/services/cost-center-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/cost-center/cost-center.config.ts","../../../feature-libs/organization/administration/components/cost-center/details/cost-center-details.module.ts","../../../feature-libs/organization/administration/components/cost-center/form/cost-center-form.module.ts","../../../feature-libs/organization/administration/components/cost-center/cost-center-components.module.ts","../../../feature-libs/organization/administration/components/permission/services/current-permission.service.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.service.ts","../../../feature-libs/organization/administration/components/permission/services/permission-item.service.ts","../../../feature-libs/organization/administration/components/permission/details/permission-details.component.ts","../../../feature-libs/organization/administration/components/permission/details/permission-details.component.html","../../../feature-libs/organization/administration/components/permission/details/permission-details.module.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.component.ts","../../../feature-libs/organization/administration/components/permission/form/permission-form.component.html","../../../feature-libs/organization/administration/components/permission/form/permission-form.module.ts","../../../feature-libs/organization/administration/components/permission/services/permission-list.service.ts","../../../feature-libs/organization/administration/components/permission/services/permission-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/permission/permission.config.ts","../../../feature-libs/organization/administration/components/permission/permission-components.module.ts","../../../feature-libs/organization/administration/components/unit/services/current-unit.service.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.service.ts","../../../feature-libs/organization/administration/components/unit/services/unit-item.service.ts","../../../feature-libs/organization/administration/components/unit/details/unit-details.component.ts","../../../feature-libs/organization/administration/components/unit/details/unit-details.component.html","../../../feature-libs/organization/administration/components/unit/details/unit-details.module.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.component.ts","../../../feature-libs/organization/administration/components/unit/form/unit-form.component.html","../../../feature-libs/organization/administration/components/unit/form/unit-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/services/current-unit-address.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/services/unit-address-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/details/unit-address-details.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/list/unit-address-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.component.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.component.html","../../../feature-libs/organization/administration/components/unit/links/addresses/form/unit-address-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/addresses/unit-address.module.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/assigned/unit-assigned-approver-list.component.html","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.component.html","../../../feature-libs/organization/administration/components/unit/links/approvers/unit-approver-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.component.ts","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.component.html","../../../feature-libs/organization/administration/components/unit/links/children/unit-children.module.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.service.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.component.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.component.html","../../../feature-libs/organization/administration/components/unit/links/cost-centers/unit-cost-centers.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/services/unit-user-list.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.component.html","../../../feature-libs/organization/administration/components/unit/links/users/list/unit-user-list.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/services/current-unit-user.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles-form.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles-item.service.ts","../../../feature-libs/organization/administration/components/user/services/current-user.service.ts","../../../feature-libs/organization/administration/components/user/form/user-form.service.ts","../../../feature-libs/organization/administration/components/user/services/user-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.component.html","../../../feature-libs/organization/administration/components/unit/links/users/roles/unit-user-roles.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/unit-user-list.module.ts","../../../feature-libs/organization/administration/components/unit/services/unit-tree.model.ts","../../../feature-libs/organization/administration/components/unit/services/unit-tree.service.ts","../../../feature-libs/organization/administration/components/unit/list/unit-list.component.ts","../../../feature-libs/organization/administration/components/unit/list/unit-list.component.html","../../../feature-libs/organization/administration/components/unit/list/toggle-link/toggle-link-cell.component.ts","../../../feature-libs/organization/administration/components/unit/list/toggle-link/toggle-link-cell.component.html","../../../feature-libs/organization/administration/components/unit/list/unit-list.module.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.component.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.component.html","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.component.ts","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.component.html","../../../feature-libs/organization/administration/components/unit/links/children/create/current-unit-child.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.component.html","../../../feature-libs/organization/administration/components/unit/links/children/create/unit-child-create.module.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-item.service.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.component.html","../../../feature-libs/organization/administration/components/unit/links/cost-centers/create/unit-cost-center-create.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-item.service.ts","../../../feature-libs/organization/administration/components/user/form/user-form.component.ts","../../../feature-libs/organization/administration/components/user/form/user-form.component.html","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.component.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.component.html","../../../feature-libs/organization/administration/components/user/form/user-form.module.ts","../../../feature-libs/organization/administration/components/unit/links/users/create/unit-user-create.module.ts","../../../feature-libs/organization/administration/components/unit/services/unit-address-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/unit/services/unit-list.service.ts","../../../feature-libs/organization/administration/components/unit/services/unit-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/unit/units.config.ts","../../../feature-libs/organization/administration/components/unit/units-components.module.ts","../../../feature-libs/organization/administration/components/user-group/services/current-user-group.service.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.service.ts","../../../feature-libs/organization/administration/components/user-group/services/user-group-item.service.ts","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.component.ts","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.component.html","../../../feature-libs/organization/administration/components/user-group/details/user-group-details.module.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.component.ts","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.component.html","../../../feature-libs/organization/administration/components/user-group/form/user-group-form.module.ts","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.service.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.service.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.component.ts","../../../feature-libs/organization/administration/components/user-group/permissions/assigned/user-group-assigned-permission-list.component.html","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.component.ts","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.component.html","../../../feature-libs/organization/administration/components/user-group/permissions/user-group-permission-list.module.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.component.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.component.html","../../../feature-libs/organization/administration/components/user-group/services/user-group-list.service.ts","../../../feature-libs/organization/administration/components/user-group/services/user-group-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.service.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.service.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.component.ts","../../../feature-libs/organization/administration/components/user-group/users/assigned/user-group-assigned-user-list.component.html","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.component.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.component.html","../../../feature-libs/organization/administration/components/user-group/user-group.config.ts","../../../feature-libs/organization/administration/components/user-group/users/user-group-user-list.module.ts","../../../feature-libs/organization/administration/components/user-group/user-group-components.module.ts","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.service.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.service.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.component.ts","../../../feature-libs/organization/administration/components/user/approvers/assigned/user-assigned-approver-list.component.html","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.component.ts","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.component.html","../../../feature-libs/organization/administration/components/user/approvers/user-approver-list.module.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.service.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.component.ts","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.component.html","../../../feature-libs/organization/administration/components/user/change-password-form/user-change-password-form.module.ts","../../../feature-libs/organization/administration/components/user/details/user-details.component.ts","../../../feature-libs/organization/administration/components/user/details/user-details.component.html","../../../feature-libs/organization/administration/components/user/details/user-details.module.ts","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.service.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.service.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.component.ts","../../../feature-libs/organization/administration/components/user/permissions/assigned/user-assigned-permission-list.component.html","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.component.ts","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.component.html","../../../feature-libs/organization/administration/components/user/permissions/user-permission-list.module.ts","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.service.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.service.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.component.ts","../../../feature-libs/organization/administration/components/user/user-groups/assigned/user-assigned-user-group-list.component.html","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.component.ts","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.component.html","../../../feature-libs/organization/administration/components/user/user-groups/user-user-group-list.module.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.component.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.component.html","../../../feature-libs/organization/administration/components/user/services/user-list.service.ts","../../../feature-libs/organization/administration/components/user/services/user-route-page-meta.resolver.ts","../../../feature-libs/organization/administration/components/user/user.config.ts","../../../feature-libs/organization/administration/components/user/user-components.module.ts","../../../feature-libs/organization/administration/components/administration-components.module.ts","../../../feature-libs/organization/administration/components/cost-center/details-cell/cost-center-details-cell.module.ts","../../../feature-libs/organization/administration/components/permission/details-cell/permission-details-cell.module.ts","../../../feature-libs/organization/administration/components/unit/details-cell/unit-details-cell.module.ts","../../../feature-libs/organization/administration/components/user-group/details-cell/user-group-details-cell.module.ts","../../../feature-libs/organization/administration/components/user/details-cell/user-details-cell.module.ts","../../../feature-libs/organization/administration/components/spartacus-organization-administration-components.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, switchMap } from 'rxjs/operators';\n\n/**\n * Abstract Base class for all organization entities. This class simplifies\n * the various entity implementation, that only differ by dependencies and\n * data model.\n */\n@Injectable()\nexport abstract class CurrentItemService<T> {\n  constructor(protected routingService: RoutingService) {}\n\n  /**\n   * Observes the key for the active organization item. The active key is observed\n   * from the list of route parameters. The full route parameter list is evaluated,\n   * including child routes.\n   *\n   * To allow for specific (\"semantic\") route parameters, the route parameter _key_ is\n   * retrieved from the `getParamKey`.\n   */\n  readonly key$: Observable<string> = this.routingService\n    .getParams()\n    .pipe(pluck(this.getParamKey()), distinctUntilChanged());\n\n  /**\n   * Observes the active item.\n   *\n   * The active item is loaded by the active `key$`.\n   */\n  readonly item$: Observable<T> = this.key$.pipe(\n    switchMap((code: string) => (code ? this.getItem(code) : of(null)))\n  );\n\n  /**\n   * Observes the b2bUnit based on the unitCode route parameter.\n   */\n  readonly b2bUnit$: Observable<string> = this.routingService\n    .getParams()\n    .pipe(pluck(ROUTE_PARAMS.unitCode), distinctUntilChanged());\n\n  /**\n   * Returns the route parameter key for the item. The route parameter key differs\n   * per item, so that route parameters are distinguished in the route configuration.\n   */\n  protected abstract getParamKey(): string;\n\n  /**\n   * Emits the current model or null, if there is no model available\n   */\n  protected abstract getItem(...params: any[]): Observable<T>;\n\n  getRouterParam(paramKey: string): Observable<string> {\n    return this.routingService\n      .getParams()\n      .pipe(map((params) => params[paramKey]));\n  }\n\n  abstract getError(_key: string): Observable<boolean>;\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { BaseItem } from '../organization.model';\n\n@Injectable()\nexport abstract class FormService<T> {\n  protected form: FormGroup;\n\n  /**\n   * Builds the form structure.\n   */\n  protected abstract build(item?: T): void;\n\n  getForm(item?: T): FormGroup {\n    if (this.form && !!item) {\n      this.patchData(item);\n      return this.form;\n    }\n\n    if (!this.form) {\n      this.build(item);\n    }\n\n    // while we should be able to reset with initial value, this doesn't always work\n    // hence, we're patching afterwards.\n    this.form.reset();\n\n    this.form.enable();\n    this.patchData(item);\n    return this.form;\n  }\n\n  protected patchData(item?: T): void {\n    this.toggleFreeze(item);\n    this.form.patchValue({ ...this.defaultValue, ...item });\n  }\n\n  private toggleFreeze(item?: T): void {\n    if (this.form.enabled && (item as BaseItem)?.active === false) {\n      this.form.disable();\n    }\n    if (this.form.disabled && (item as BaseItem)?.active === true) {\n      this.form.enable();\n    }\n  }\n  /**\n   * returns the default form value.\n   */\n  protected get defaultValue(): T {\n    return {} as T;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { FormUtils } from '@spartacus/storefront';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CurrentItemService } from './current-item.service';\nimport { FormService } from './form/form.service';\n\n/**\n * Provides CRUD operations for all organization entities.\n *\n * This base class simplifies the various entity implementation, and ensures a consistent\n * component implementation.\n */\n@Injectable()\nexport abstract class ItemService<T> {\n  constructor(\n    protected currentItemService: CurrentItemService<T>,\n    protected routingService: RoutingService,\n    protected formService: FormService<T>\n  ) {}\n\n  key$ = this.currentItemService.key$;\n  current$ = this.currentItemService.item$;\n\n  isInEditMode$: Observable<boolean> = new BehaviorSubject<boolean>(false);\n\n  /**\n   * Returns the current business unit code.\n   *\n   * The current unit is driven by the route parameter.\n   */\n  unit$: Observable<string> = this.currentItemService.b2bUnit$;\n\n  error$: Observable<boolean> = this.key$.pipe(\n    switchMap((key) => this.currentItemService.getError(key))\n  );\n\n  save(form: FormGroup, key?: string): Observable<OrganizationItemStatus<T>> {\n    if (form.invalid) {\n      form.markAllAsTouched();\n      FormUtils.deepUpdateValueAndValidity(form);\n      return of();\n    } else {\n      /**\n       * This assignment is needed to re-use form value after `form.disable()` call\n       * In some cases value was converted by `form.disable()` into empty object\n       */\n      const formValue = form.value;\n      form.disable();\n\n      return key ? this.update(key, formValue) : this.create(formValue);\n    }\n  }\n\n  /**\n   * Deletes an item.\n   */\n  delete?(\n    key: string,\n    additionalParam?: string\n  ): Observable<OrganizationItemStatus<T>>;\n  /**\n   * Loads an item.\n   */\n  abstract load(...params: any[]): Observable<T>;\n\n  /**\n   * Creates a new item.\n   */\n  protected abstract create(value: T): Observable<OrganizationItemStatus<T>>;\n\n  /**\n   * Updates an existing item.\n   */\n  abstract update(key: string, value: T): Observable<OrganizationItemStatus<T>>;\n\n  /**\n   * Returns the detailed cxRoute for the organization item.\n   */\n  protected abstract getDetailsRoute(): string;\n\n  getForm(item?: T): FormGroup {\n    return this.formService.getForm(item);\n  }\n\n  /**\n   * Launches the detailed route for the given item item.\n   */\n  launchDetails(item: T): void {\n    const cxRoute = this.getDetailsRoute();\n    const params = this.buildRouteParams(item);\n    if (cxRoute && item && Object.keys(item).length > 0) {\n      this.routingService.go({ cxRoute, params });\n    }\n  }\n\n  /**\n   * Returns the route parameters that are used when launching the\n   * details page. The route parameters default to the actual item,\n   * but can be further populated in implementations.\n   *\n   * Customized route parameters are useful in case the actual item\n   * doesn't match the expected route parameters. You can manipulate\n   * the parameter data.\n   */\n  protected buildRouteParams(item: T): any {\n    return item;\n  }\n\n  getRouterParam(key: string): Observable<string> {\n    return this.currentItemService.getRouterParam(key);\n  }\n\n  /**\n   * Sets to true when the user is on the entity item form page\n   */\n  setEditMode(isInEdit: boolean) {\n    (this.isInEditMode$ as BehaviorSubject<boolean>).next(isInEdit);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { MessageData, MessageEventData } from '../message.model';\n\nconst DEFAULT_INFO_TIMEOUT = 3000;\n\n@Injectable()\nexport class MessageService<\n  O extends MessageEventData = MessageEventData,\n  T extends MessageData<O> = MessageData<O>\n> {\n  protected data$: ReplaySubject<MessageData> = new ReplaySubject();\n\n  get(): Observable<MessageData> {\n    return this.data$;\n  }\n\n  add(message: T): Subject<O> {\n    message = { ...this.getDefaultMessage(message), ...message };\n    message.events = new Subject<O>();\n    this.data$.next(message);\n    return message.events;\n  }\n\n  close(message: Subject<MessageEventData>) {\n    message.next({ close: true });\n  }\n\n  /**\n   * Sets the message type to INFO, and adds a default timeout\n   * for info messages.\n   */\n  protected getDefaultMessage(message: T): MessageData {\n    const defaultMessage: MessageData = {\n      type: GlobalMessageType.MSG_TYPE_INFO,\n    };\n    if (\n      !message.type ||\n      (message.type === GlobalMessageType.MSG_TYPE_INFO && !message.timeout)\n    ) {\n      defaultMessage.timeout = DEFAULT_INFO_TIMEOUT;\n    }\n    return defaultMessage;\n  }\n\n  clear(): void {\n    this.data$.next();\n  }\n}\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { ItemService } from './item.service';\nimport { MessageService } from './message/services/message.service';\nimport { BaseItem } from './organization.model';\n\n@Directive({\n  selector: '[cxOrgItemActive]',\n})\nexport class ItemActiveDirective<T = BaseItem> implements OnInit, OnDestroy {\n  protected subscription;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.itemService.current$\n      .pipe(\n        distinctUntilChanged(\n          (previous: BaseItem, current: BaseItem) =>\n            previous?.active === current?.active\n        ),\n        filter((item) => item && item?.active === false)\n      )\n      .subscribe((item) => this.handleDisabledItems(item));\n  }\n\n  protected handleDisabledItems(item: BaseItem) {\n    this.messageService.add({\n      message: {\n        key: 'organization.notification.disabled',\n        params: { item },\n      },\n      type: GlobalMessageType.MSG_TYPE_ERROR,\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemActiveDirective } from './item-active.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ItemActiveDirective],\n  exports: [ItemActiveDirective],\n})\nexport class ItemActiveModule {}\n","import { Type } from '@angular/core';\nimport { GlobalMessageType, Translatable } from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Subject } from 'rxjs';\nimport { BaseMessageComponent } from './base-message.component';\n\nexport class MessageData<\n  O extends MessageEventData = MessageEventData,\n  T extends BaseMessageComponent = BaseMessageComponent\n> {\n  /**\n   * The message contains the `translatable` message that is rendered\n   * inside the message component.\n   */\n  message?: Translatable;\n  messageTitle?: Translatable;\n  cancel?: Translatable;\n  confirm?: Translatable;\n\n  /**\n   * Icon used to display next to the message.\n   */\n  messageIcon?: ICON_TYPE;\n\n  /**\n   * The type of message is used to render the style of the message.\n   */\n  type?: GlobalMessageType;\n\n  /**\n   * The timeout is used to remove the message component automatically\n   * without any user interaction.\n   */\n  timeout?: number;\n\n  /**\n   * The (optional) component is rendered inside message component.\n   *\n   * If no specific component is given, the `NotificationMessageComponent` is used.\n   */\n  component?: Type<T>;\n\n  /**\n   * The event data subject can be used to publish and observe custom events.\n   */\n  events?: Subject<O>;\n}\n\nexport interface MessageEventData {\n  close?: boolean;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Directive,\n  HostBinding,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { GlobalMessageType, Translatable } from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { MessageData } from './message.model';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class BaseMessageComponent implements OnInit {\n  @HostBinding('class') type: string;\n  @HostBinding('class.terminated') terminated = false;\n\n  message: Translatable;\n  messageTitle?: Translatable;\n\n  /**\n   * Icon used to display next to the message.\n   */\n  messageIcon: ICON_TYPE;\n\n  constructor(\n    protected messageData: MessageData,\n    @Inject(PLATFORM_ID) protected platformId: any\n  ) {}\n\n  ngOnInit() {\n    this.message = this.messageData.message ?? {};\n    this.messageTitle = this.messageData.messageTitle;\n    this.type = this.resolveType();\n    this.messageIcon = this.messageData.messageIcon;\n\n    if (this.messageData.timeout) {\n      this.handleAutoHide();\n    }\n  }\n\n  close(): void {\n    this.messageData.events.next({ close: true });\n  }\n\n  protected resolveType(): string {\n    if (\n      !this.messageData.type ||\n      this.messageData.type === GlobalMessageType.MSG_TYPE_INFO\n    ) {\n      return 'info';\n    }\n    if (this.messageData.type === GlobalMessageType.MSG_TYPE_ERROR) {\n      return 'error';\n    }\n    if (this.messageData.type === GlobalMessageType.MSG_TYPE_WARNING) {\n      return 'warning';\n    }\n  }\n\n  protected handleAutoHide() {\n    if (isPlatformBrowser(this.platformId)) {\n      // we don't want to run this logic when doing SSR\n      setTimeout(() => {\n        this.close();\n      }, this.messageData.timeout);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { BaseMessageComponent } from '../base-message.component';\n\n@Component({\n  selector: 'cx-org-notification',\n  templateUrl: './notification-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationMessageComponent extends BaseMessageComponent {\n  closeIcon = ICON_TYPE.CLOSE;\n}\n","<div\n  class=\"inner\"\n  [cxFocus]=\"{ autofocus: true, focusOnEscape: true }\"\n  (esc)=\"close()\"\n>\n  <cx-icon *ngIf=\"messageIcon\" [type]=\"messageIcon\"></cx-icon>\n  <p>{{ message | cxTranslate }}</p>\n  <button class=\"close\" (click)=\"close()\" type=\"button\">\n    <cx-icon [type]=\"closeIcon\"></cx-icon>\n  </button>\n</div>\n","import {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport { MessageData } from '../message.model';\nimport { NotificationMessageComponent } from '../notification/notification-message.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageRenderService {\n  constructor(protected componentFactoryResolver: ComponentFactoryResolver) {}\n\n  getComponent(msg: MessageData): ComponentFactory<any> {\n    return this.componentFactoryResolver.resolveComponentFactory(\n      msg.component || NotificationMessageComponent\n    );\n  }\n\n  getInjector(componentData: MessageData, parent?: Injector): Injector {\n    return Injector.create({\n      providers: [\n        {\n          provide: MessageData,\n          useValue: componentData,\n        },\n      ],\n      parent,\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { BaseMessageComponent } from './base-message.component';\nimport { MessageData, MessageEventData } from './message.model';\nimport { MessageRenderService } from './services/message-render.service';\nimport { MessageService } from './services/message.service';\n\n@Component({\n  selector: 'cx-org-message',\n  templateUrl: './message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MessageComponent implements AfterViewInit, OnDestroy {\n  // We use a child view container ref, as creating components will become siblings.\n  // We like the message components to appear inside the `cx-org-message` instead.\n  @ViewChild('vcr', { read: ViewContainerRef }) vcr: ViewContainerRef;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected messageService: MessageService,\n    protected renderService: MessageRenderService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscription.add(\n      this.messageService.get().subscribe((msg) => {\n        if (msg) {\n          this.render(msg);\n        } else {\n          this.vcr?.clear();\n        }\n      })\n    );\n  }\n\n  protected render(msg: MessageData) {\n    const ref: ComponentRef<BaseMessageComponent> = this.vcr.createComponent(\n      this.renderService.getComponent(msg),\n      0,\n      this.renderService.getInjector(msg, this.vcr.injector)\n    );\n    ref.injector.get(ChangeDetectorRef).markForCheck();\n\n    this.subscription.add(\n      msg.events\n        .pipe(filter((event: MessageEventData) => !!event.close))\n        .subscribe(() => this.terminate(ref))\n    );\n  }\n\n  /**\n   * Terminates the message component in 2 steps. It starts to toggle the terminate\n   * state of the component and shortly after destroys the component completely. The\n   * termination state allows the CSS layer to play an animation before destroying.\n   */\n  protected terminate(ref: ComponentRef<BaseMessageComponent>) {\n    ref.instance.terminated = true;\n    ref.injector.get(ChangeDetectorRef).markForCheck();\n    setTimeout(() => {\n      ref.destroy();\n    }, 500);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container #vcr></ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { NotificationMessageComponent } from './notification-message.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, KeyboardFocusModule],\n  declarations: [NotificationMessageComponent],\n})\nexport class NotificationMessageModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MessageComponent } from './message.component';\nimport { NotificationMessageModule } from './notification/notification-message.module';\n\n@NgModule({\n  imports: [CommonModule, NotificationMessageModule],\n  declarations: [MessageComponent],\n  exports: [MessageComponent],\n})\nexport class MessageModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { ViewComponent } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../item.service';\nimport { MessageService } from '../message/services/message.service';\nimport { BaseItem } from '../organization.model';\nimport { ICON_TYPE } from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-card',\n  templateUrl: './card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [MessageService],\n})\nexport class CardComponent<T extends BaseItem> {\n  @Input() i18nRoot: string;\n  @Input() previous: boolean | string = true;\n  @Input() subtitle?: string;\n  @Input() showHint? = false;\n\n  protected itemKey;\n\n  iconTypes = ICON_TYPE;\n\n  item$: Observable<T> = this.itemService.current$.pipe(\n    tap((item) => this.refreshMessages(item))\n  );\n\n  @ViewChild(ViewComponent, { read: ViewComponent }) view: ViewComponent;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  /**\n   * The views are router based, which means if we close a view, the router outlet is\n   * cleaned immediately. To prevent this, we're closing the view manually, before\n   * navigating back.\n   */\n  closeView(event: MouseEvent) {\n    event.stopPropagation();\n    this.view.toggle(true);\n\n    setTimeout(() => {\n      (event.target as HTMLElement)?.parentElement.click();\n    }, 500);\n\n    return false;\n  }\n\n  get previousLabel(): string {\n    return this.previous as string;\n  }\n\n  protected refreshMessages(item: T) {\n    if (\n      this.itemKey !== undefined &&\n      item?.code !== this.itemKey &&\n      item?.uid !== this.itemKey &&\n      item?.customerId !== this.itemKey\n    ) {\n      this.messageService.clear();\n    }\n    this.itemKey = item?.code ?? item?.uid ?? item?.customerId;\n  }\n}\n","<cx-view class=\"card\">\n  <div class=\"header\">\n    <div class=\"title-bar\">\n      <div class=\"title\">\n        <h3>\n          {{ i18nRoot + '.title' | cxTranslate: { item: item$ | async } }}\n          <button\n            *ngIf=\"showHint\"\n            [cxPopover]=\"detailHint\"\n            [cxPopoverOptions]=\"{\n              placement: 'auto',\n              class: 'hint-popover',\n              appendToBody: true,\n              displayCloseButton: true\n            }\"\n          >\n            <cx-icon [type]=\"iconTypes.INFO\"> </cx-icon>\n          </button>\n        </h3>\n        <h4>\n          {{\n            subtitle ||\n              (i18nRoot + '.subtitle' | cxTranslate: { item: item$ | async })\n          }}\n        </h4>\n      </div>\n      <div class=\"actions\">\n        <ng-content select=\"[actions]\"></ng-content>\n      </div>\n    </div>\n    <a *ngIf=\"!!previous\" class=\"link close\" routerLink=\"../\">\n      <cx-icon\n        *ngIf=\"previous === true; else prevLabel\"\n        type=\"CLOSE\"\n        (click)=\"closeView($event)\"\n      ></cx-icon>\n      <ng-template #prevLabel>{{ previousLabel | cxTranslate }}</ng-template>\n    </a>\n  </div>\n\n  <div class=\"main\">\n    <cx-org-message></cx-org-message>\n    <ng-content select=\"[info]\"></ng-content>\n    <ng-content select=\"[main]\"></ng-content>\n  </div>\n</cx-view>\n\n<router-outlet></router-outlet>\n\n<ng-template #detailHint>\n  <p>\n    {{ i18nRoot + '.hint' | cxTranslate }}\n  </p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule, SplitViewModule } from '@spartacus/storefront';\nimport { MessageModule } from '../message/message.module';\nimport { CardComponent } from './card.component';\nimport { PopoverModule } from '@spartacus/storefront';\n/**\n * Provides a reusable card UI component for the organization split views.\n *\n * The component does not intend to provide a complete set of card features, it's just\n * a reusable component inside the organization UI.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    SplitViewModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    UrlModule,\n    MessageModule,\n    PopoverModule,\n  ],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { first, map, switchMap, take } from 'rxjs/operators';\nimport { CardComponent } from '../card/card.component';\nimport { ItemService } from '../item.service';\nimport { MessageService } from '../message/services/message.service';\n\nconst DISABLED_STATUS = 'DISABLED';\n\n/**\n * Reusable component for creating and editing organization items. The component does not\n * know anything about form specific.\n */\n@Component({\n  selector: 'cx-org-form',\n  templateUrl: './form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class FormComponent<T> implements OnInit, OnDestroy {\n  /**\n   * i18n root for all localizations. The i18n root key is suffixed with\n   * either `.edit` or `.create`, depending on the usage of the component.\n   */\n  @Input() i18nRoot: string;\n\n  @Input() animateBack = true;\n  @Input() subtitle?: string;\n\n  /**\n   * i18n key for the localizations.\n   */\n  i18n: string;\n\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    map((item) => {\n      this.setI18nRoot(item);\n\n      if (!item) {\n        // we trick the form builder...\n        item = {} as any;\n      }\n      return this.itemService.getForm(item);\n    })\n  );\n\n  /**\n   * To handle the case of receiving a negative response during creation an item\n   */\n  disabled$ = this.form$.pipe(\n    switchMap((form) => form.statusChanges),\n    map((status) => status === DISABLED_STATUS)\n  );\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  save(form: FormGroup): void {\n    this.itemService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          this.itemService.save(form, key).pipe(\n            take(1),\n            map((data) => ({\n              item: data.item,\n              status: data.status,\n              action: key ? 'update' : 'create',\n            }))\n          )\n        )\n      )\n      .subscribe(({ item, action, status }) => {\n        if (status === LoadStatus.SUCCESS) {\n          this.itemService.launchDetails(item);\n          this.notify(item, action);\n        }\n        form.enable();\n      });\n  }\n\n  protected notify(item: T, action: string) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.${action}`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n\n  protected setI18nRoot(item: T): void {\n    // concatenate the i18n root with .edit or .create suffix\n    this.i18n = this.i18nRoot + (item ? '.edit' : '.create');\n  }\n\n  back(event: MouseEvent, card: CardComponent<any>) {\n    if (this.animateBack) {\n      card.closeView(event);\n    }\n  }\n\n  ngOnInit() {\n    this.itemService.setEditMode(true);\n  }\n\n  ngOnDestroy() {\n    this.itemService.setEditMode(false);\n  }\n}\n","<form *ngIf=\"form$ | async as form\" (submit)=\"save(form)\">\n  <cx-org-card\n    #card\n    [previous]=\"false\"\n    [i18nRoot]=\"i18n\"\n    cxOrgItemActive\n    [subtitle]=\"subtitle\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <button\n      actions\n      class=\"button primary\"\n      [disabled]=\"form.disabled || (disabled$ | async)\"\n    >\n      {{ 'organization.save' | cxTranslate }}\n    </button>\n    <button actions class=\"link\" routerLink=\"../\" type=\"button\">\n      <!--\n        We leverage the soft-close feature from the split view, so that the animation\n        has time to kick in before the router outlet is deleted.\n       -->\n      <span (click)=\"back($event, card)\">{{\n        'organization.cancel' | cxTranslate\n      }}</span>\n    </button>\n\n    <section main class=\"details\">\n      <ng-content select=\"[main]\" ngProjectAs=\"[main]\"></ng-content>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ItemActiveModule } from '../item-active.module';\nimport { CardModule } from '../card/card.module';\nimport { MessageModule } from '../message/message.module';\nimport { MessageService } from '../message/services/message.service';\nimport { FormComponent } from './form.component';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    I18nModule,\n    RouterModule,\n    CardModule,\n    MessageModule,\n    ItemActiveModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FormComponent],\n  providers: [MessageService],\n  exports: [FormComponent],\n})\nexport class FormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  ResponsiveTableConfiguration,\n  TableLayout,\n  TableService,\n  TableStructure,\n} from '@spartacus/storefront';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\nimport { OrganizationTableType } from '../organization.model';\n\n/**\n * The `ListService` deals with the table structure, list data and\n * pagination of tables inside the b2b organization.\n *\n * @property {OrganizationTableType} tableType\n *   Used to load the table structure configuration and generate table outlets.\n * @property {PaginationModel} pagination$\n *   The pagination state of the listing.\n */\n\n@Injectable()\nexport abstract class ListService<T, P = PaginationModel> {\n  /**\n   * The default table structure is used to add the default configuration for all\n   * organization list related tables. This avoids a lot of boilerplate configuration.\n   */\n  protected defaultTableStructure: ResponsiveTableConfiguration = {\n    options: { layout: TableLayout.VERTICAL_STACKED },\n    lg: { options: { layout: TableLayout.VERTICAL } },\n  };\n\n  /**\n   * The ghost data contains an empty list of objects that is used in the UI\n   * to render the HTML elements.\n   *\n   * This list contains 10 items, so that the ghost will show 10 rows by default.\n   */\n  protected ghostData = { values: new Array(10) } as EntitiesModel<T>;\n\n  notification$: Subject<any> = new Subject();\n\n  /**\n   * The `viewType` is used to load the proper table configuration and localizations for the view.\n   *\n   * TODO: rename to `viewType`\n   */\n  protected abstract tableType: OrganizationTableType;\n\n  /**\n   * The domain type is used to bind fields to localized fields based on the domain.\n   * This type differs from the `viewType`, which is related to a specific view\n   * configuration.\n   */\n  protected _domainType: string;\n\n  get viewType(): OrganizationTableType {\n    return this.tableType;\n  }\n\n  get domainType(): string {\n    return this._domainType ?? this.viewType;\n  }\n\n  /**\n   * The pagination state of the listing.\n   *\n   * The pagination size defaults to 10, but can be overridden by the\n   * table configuration for each entity type.\n   */\n  protected pagination$: BehaviorSubject<P> = new BehaviorSubject({\n    pageSize: 10,\n  } as any as P);\n\n  constructor(protected tableService: TableService) {}\n\n  /**\n   * Indicates the unique key for the item model. The key is different for various\n   * organizations, i.e. `budget.code`, `user.uid`.\n   */\n  key(): string {\n    return 'code';\n  }\n\n  /**\n   * Loads the data by delegating to the `load` method, which must be implemented\n   * in specific implementations of this abstract class.\n   *\n   * The load method is streamed from the `pagination$` stream, which is initialized\n   * with default pagination and structure drive properties.\n   */\n  getData(...args: any): Observable<EntitiesModel<T>> {\n    return this.pagination$.pipe(\n      // we merge any configured pagination from the table structure\n      switchMap((pagination) =>\n        this.getStructure().pipe(\n          map((config) => ({ ...pagination, ...config.options?.pagination }))\n        )\n      ),\n      switchMap((pagination) => this.load(pagination, ...args)),\n      startWith(this.ghostData)\n    );\n  }\n\n  /**\n   * Returns the `TableStructure` for the `OrganizationTableType`.\n   *\n   * The table structure is build by the `TableService` based on configuration.\n   * The `defaultTableStructure` is deep merged as a fallback configuration.\n   */\n  getStructure(): Observable<TableStructure> {\n    return this.tableService.buildStructure(\n      this.viewType,\n      this.defaultTableStructure\n    );\n  }\n\n  /**\n   * Views the page.\n   */\n  view(pagination: P, nextPage?: number): void {\n    this.pagination$.next({ ...pagination, currentPage: nextPage });\n  }\n\n  /**\n   * Updates the sort code for the PaginationModel.\n   *\n   * The `currentPage` is reset to 0.\n   */\n  sort(pagination: P, _obsoleteSort?: string): void {\n    this.view(pagination, 0);\n  }\n\n  /**\n   * Indicates whether the given data equals to the ghost data.\n   *\n   * This is used to validate the initial loading state, which is\n   * different from the loading state; the loading state occurs\n   * while sorting and paginating, where as the initial loading state\n   * only happens at the very first load.\n   */\n  hasGhostData(data: EntitiesModel<T>): boolean {\n    return data === this.ghostData;\n  }\n\n  /**\n   * Must be implemented to load the actual listing data. An unknown number of arguments\n   * is supported for loading the data. These arguments are passed from the `getData` method.\n   */\n  protected abstract load(\n    pagination: PaginationModel,\n    ...args: any\n  ): Observable<EntitiesModel<T>>;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Table, TableStructure } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../item.service';\nimport { OrganizationTableType } from '../organization.model';\nimport { ListService } from './list.service';\nimport { ICON_TYPE } from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-list',\n  templateUrl: './list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ListComponent<T = any, P = PaginationModel> {\n  @HostBinding('class.ghost') hasGhostData = false;\n\n  constructor(\n    protected service: ListService<T, P>,\n    protected organizationItemService: ItemService<T>\n  ) {}\n\n  @HostBinding('class')\n  viewType: OrganizationTableType = this.service.viewType;\n\n  domainType = this.service.domainType;\n\n  sortCode: string;\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * The current key represents the current selected item from the dataset.\n   * This key is used to load the item details as well as highlight the item in\n   * a list of items.\n   */\n  readonly currentKey$ = this.organizationItemService.key$;\n\n  readonly structure$: Observable<TableStructure> = this.service.getStructure();\n\n  readonly listData$: Observable<EntitiesModel<T>> = this.service\n    .getData()\n    .pipe(\n      tap((data) => {\n        this.sortCode = data.pagination?.sort;\n        this.hasGhostData = this.service.hasGhostData(data);\n      })\n    );\n\n  @Input() key = this.service.key();\n\n  /**\n   * Returns the total number of items.\n   */\n  getListCount(dataTable: Table): number {\n    return dataTable.pagination?.totalResults;\n  }\n\n  /**\n   * Browses to the given page number\n   */\n  browse(pagination: P, pageNumber: number) {\n    this.service.view(pagination, pageNumber);\n  }\n\n  /**\n   * Navigates to the detailed view of the selected list item.\n   */\n  launchItem(event: T): void {\n    this.organizationItemService.launchDetails(event);\n  }\n\n  /**\n   * Sorts the list.\n   */\n  sort(pagination: P): void {\n    this.service.sort({\n      ...pagination,\n      ...({ sort: this.sortCode } as PaginationModel),\n    });\n  }\n}\n","<cx-split-view [hideMode]=\"false\">\n  <ng-container *ngIf=\"structure$ | async as structure\">\n    <cx-view class=\"list\" *ngIf=\"listData$ | async as data\">\n      <div class=\"header\">\n        <div class=\"title\">\n          <h3>\n            {{\n              viewType + '.header' | cxTranslate: { count: getListCount(data) }\n            }}\n            <button\n              [cxPopover]=\"listHint\"\n              [cxPopoverOptions]=\"{\n                placement: 'auto',\n                class: 'hint-popover',\n                appendToBody: true,\n                displayCloseButton: true\n              }\"\n            >\n              <cx-icon [type]=\"iconTypes.INFO\"> </cx-icon>\n            </button>\n          </h3>\n        </div>\n\n        <div class=\"actions\">\n          <label>\n            <span *ngIf=\"data.pagination?.sort\">{{\n              structure.type + '.sortBy' | cxTranslate\n            }}</span>\n            <ng-select\n              name=\"sort\"\n              class=\"sort\"\n              *ngIf=\"data.pagination?.sort\"\n              [searchable]=\"false\"\n              [clearable]=\"false\"\n              (change)=\"sort(data.pagination)\"\n              [tabIndex]=\"0\"\n              [(ngModel)]=\"sortCode\"\n              [attr.aria-label]=\"\n                (sortCode\n                  ? structure.type + '.sort.' + sortCode\n                  : structure.type + '.sortBy'\n                ) | cxTranslate\n              \"\n            >\n              <ng-option *ngFor=\"let sort of data.sorts\" [value]=\"sort.code\">\n                {{ structure.type + '.sort.' + sort.code | cxTranslate }}\n              </ng-option>\n            </ng-select>\n          </label>\n\n          <ng-content select=\"[actions]\"></ng-content>\n\n          <a\n            class=\"button primary create\"\n            [routerLink]=\"{ cxRoute: structure.type + 'Create' } | cxUrl\"\n            routerLinkActive=\"disabled\"\n          >\n            {{ 'organization.add' | cxTranslate }}\n          </a>\n        </div>\n      </div>\n\n      <cx-table\n        *ngIf=\"data.values?.length > 0; else emptyList\"\n        [structure]=\"structure\"\n        [data]=\"data.values\"\n        [i18nRoot]=\"domainType\"\n        [currentItem]=\"{ property: key, value: currentKey$ | async }\"\n        (launch)=\"launchItem($event)\"\n        [cxFocus]=\"{ trap: 'both' }\"\n      >\n      </cx-table>\n\n      <div class=\"footer\">\n        <cx-pagination\n          [pagination]=\"data.pagination\"\n          (viewPageEvent)=\"browse(data.pagination, $event)\"\n        ></cx-pagination>\n      </div>\n    </cx-view>\n\n    <!-- nested split views are rendered inside child routes -->\n    <router-outlet></router-outlet>\n  </ng-container>\n</cx-split-view>\n\n<ng-template #emptyList>\n  <p class=\"instruction is-empty\">\n    {{ 'organization.messages.emptyList' | cxTranslate }}\n  </p>\n</ng-template>\n\n<ng-template #listHint>\n  <p>\n    {{ viewType + '.hint' | cxTranslate }}\n  </p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport {\n  IconModule,\n  KeyboardFocusModule,\n  PaginationModule,\n  SplitViewModule,\n  TableModule,\n} from '@spartacus/storefront';\nimport { MessageModule } from '../message/message.module';\nimport { ListComponent } from './list.component';\nimport { PopoverModule } from '@spartacus/storefront';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    SplitViewModule,\n    TableModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n    PaginationModule,\n    NgSelectModule,\n    FormsModule,\n    MessageModule,\n    KeyboardFocusModule,\n    PopoverModule,\n  ],\n  declarations: [ListComponent],\n  exports: [ListComponent],\n})\nexport class ListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n  TableFieldOptions,\n} from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-org-cell',\n  templateUrl: './cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CellComponent {\n  constructor(protected outlet: OutletContextData<TableDataOutletContext>) {}\n\n  get tabIndex(): number {\n    return -1;\n  }\n\n  get model(): TableDataOutletContext {\n    return this.outlet.context;\n  }\n\n  get property(): string {\n    return this.model?.[this.outlet?.context?._field];\n  }\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link is created to the detailed route\n   * of the given `_type`.\n   *\n   * Defaults to `true`.\n   */\n  get linkable(): boolean {\n    return this.property !== undefined && (this.cellOptions.linkable ?? true);\n  }\n\n  /**\n   * Helper method to access the cell options.\n   */\n  get cellOptions(): TableFieldOptions {\n    return (\n      this.outlet.context?._options?.cells?.[this.outlet.context?._field] ?? {}\n    );\n  }\n\n  /**\n   * Generates the configurable route to the detail page of the given context item.\n   */\n  get route(): string {\n    return this.outlet.context._type + 'Details';\n  }\n\n  get routeModel(): any {\n    return this.outlet.context;\n  }\n\n  get type(): string {\n    return this.model._type;\n  }\n\n  /**\n   * Indicates whether the item is loaded.\n   */\n  get hasItem(): boolean {\n    return !!this.item && Object.keys(this.item).length > 0;\n  }\n\n  protected get item(): any {\n    if (!this.outlet.context) {\n      return null;\n    }\n    const { _field, _options, _type, _i18nRoot, ...all } = this.outlet.context;\n    return all;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabIndex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span class=\"text\" title=\"{{ property }}\">{{ property }}</span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { filter, first, switchMap, take } from 'rxjs/operators';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport {\n  LoadStatus,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { ItemService } from '../item.service';\nimport { ListService } from '../list/list.service';\nimport { MessageService } from '../message/services/message.service';\nimport { SubListService } from './sub-list.service';\nimport { CellComponent } from '../table/cell.component';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-org-assign-cell',\n  template: `\n    <button type=\"button\" *ngIf=\"hasItem\" (click)=\"toggleAssign()\" class=\"link\">\n      {{ isAssigned ? 'unassign' : 'assign' }}\n    </button>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignCellComponent<T> extends CellComponent {\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected organizationItemService: ItemService<T>,\n    protected messageService: MessageService,\n    protected organizationSubListService: ListService<T>\n  ) {\n    super(outlet);\n  }\n\n  get isAssigned(): boolean {\n    return (this.item as any)?.selected;\n  }\n\n  toggleAssign() {\n    const isAssigned = this.isAssigned;\n    this.organizationItemService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          isAssigned\n            ? this.unassign(key, this.link)\n            : this.assign(key, this.link)\n        ),\n        take(1),\n        filter(\n          (data: OrganizationItemStatus<T>) =>\n            data.status === LoadStatus.SUCCESS\n        )\n      )\n      .subscribe((data) =>\n        this.notify(data.item, isAssigned ? 'unassigned' : 'assigned')\n      );\n  }\n\n  protected assign(\n    key: string,\n    linkKey: string\n  ): Observable<OrganizationItemStatus<T>> {\n    return (this.organizationSubListService as SubListService<T>).assign(\n      key,\n      linkKey\n    );\n  }\n\n  protected unassign(\n    key: string,\n    linkKey: string\n  ): Observable<OrganizationItemStatus<T>> {\n    return (this.organizationSubListService as SubListService<T>).unassign(\n      key,\n      linkKey\n    );\n  }\n\n  /**\n   * Returns the key for the linked object.\n   *\n   * At the moment, we're using a generic approach to assign objects,\n   * but the object do not have a normalized shape. Therefor, we need\n   * to evaluate the context to return the right key for the associated\n   * item.\n   */\n  protected get link(): string {\n    return (\n      this.outlet.context.code ??\n      this.outlet.context.customerId ??\n      this.outlet.context.uid\n    );\n  }\n\n  protected notify(item, state) {\n    this.messageService.add({\n      message: {\n        key: `${this.organizationSubListService.viewType}.${state}`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n  ViewChild,\n} from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport { TableStructure } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { switchMap, tap } from 'rxjs/operators';\nimport { ListComponent } from '../list/list.component';\nimport { MessageService } from '../message/services/message.service';\n\n@Component({\n  selector: 'cx-org-sub-list',\n  templateUrl: './sub-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class SubListComponent extends ListComponent {\n  hostClass = '';\n\n  @ViewChild(MessageService, { read: MessageService })\n  messageService: MessageService;\n\n  @Input() previous: boolean | string = true;\n\n  @Input() key = this.service.key();\n\n  @Input() showHint? = false;\n\n  @Input() set routerKey(key: string) {\n    this.subKey$ = this.organizationItemService.getRouterParam(key);\n  }\n\n  @HostBinding('class.ghost') hasGhostData = false;\n\n  subKey$: Observable<string>;\n\n  readonly listData$: Observable<EntitiesModel<any>> = this.currentKey$.pipe(\n    switchMap((key) => this.service.getData(key)),\n    tap((data) => {\n      this.hasGhostData = this.service.hasGhostData(data);\n    })\n  );\n\n  readonly dataStructure$: Observable<TableStructure> =\n    this.service.getStructure();\n}\n","<cx-org-card\n  [previous]=\"previous\"\n  [i18nRoot]=\"viewType\"\n  [showHint]=\"showHint\"\n  [cxFocus]=\"{ autofocus: true }\"\n>\n  <ng-content select=\"[actions]\" ngProjectAs=\"[actions]\"></ng-content>\n  <ng-content select=\"[main]\" ngProjectAs=\"[main]\"></ng-content>\n  <ng-content select=\"[info]\" ngProjectAs=\"[info]\"></ng-content>\n\n  <ng-container main *ngIf=\"dataStructure$ | async as structure\">\n    <ng-container *ngIf=\"listData$ | async as data\">\n      <section>\n        <cx-table\n          *ngIf=\"data.values?.length > 0; else emptyList\"\n          [structure]=\"structure\"\n          [data]=\"data.values\"\n          [i18nRoot]=\"domainType\"\n          [currentItem]=\"{ property: key, value: subKey$ | async }\"\n        >\n        </cx-table>\n      </section>\n\n      <div class=\"footer\" *ngIf=\"data.pagination?.totalPages > 1\">\n        <cx-pagination\n          [pagination]=\"data.pagination\"\n          (viewPageEvent)=\"browse(data.pagination, $event)\"\n        ></cx-pagination>\n      </div>\n    </ng-container>\n  </ng-container>\n</cx-org-card>\n\n<ng-template #emptyList>\n  <p class=\"is-empty\">{{ 'organization.messages.emptyList' | cxTranslate }}</p>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport {\n  KeyboardFocusModule,\n  PaginationModule,\n  TableModule,\n} from '@spartacus/storefront';\nimport { CardModule } from '../card/card.module';\nimport { MessageModule } from '../message/message.module';\nimport { AssignCellComponent } from './assign-cell.component';\nimport { SubListComponent } from './sub-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    CardModule,\n    TableModule,\n    PaginationModule,\n    MessageModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [SubListComponent, AssignCellComponent],\n  exports: [SubListComponent],\n})\nexport class SubListModule {}\n","import { NgModule } from '@angular/core';\nimport { FormModule } from './form/form.module';\nimport { ListModule } from './list/list.module';\nimport { SubListModule } from './sub-list/sub-list.module';\n\n@NgModule({\n  imports: [ListModule, SubListModule, FormModule],\n})\nexport class SharedOrganizationModule {}\n","// This is not for the public API\n// TODO:#my-account-architecture - Number.MAX_VALUE?\nexport const MAX_OCC_INTEGER_VALUE = 2147483647;\n","import { Directive, OnDestroy, OnInit } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { filter } from 'rxjs/operators';\nimport { ItemService } from './item.service';\nimport { MessageService } from './message/services/message.service';\nimport { BaseItem } from './organization.model';\n\n@Directive({\n  selector: '[cxOrgItemExists]',\n})\nexport class ItemExistsDirective<T = BaseItem> implements OnInit, OnDestroy {\n  protected subscription;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.itemService.error$\n      .pipe(filter((error) => error))\n      .subscribe(() => this.handleErrorMessage());\n  }\n\n  protected handleErrorMessage() {\n    this.messageService.add({\n      message: {\n        key: 'organization.notification.notExist',\n      },\n      type: GlobalMessageType.MSG_TYPE_ERROR,\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { BaseMessageComponent } from '../base-message.component';\nimport { MessageData } from '../message.model';\nimport { MessageService } from '../services/message.service';\nimport { ConfirmationMessageData } from './confirmation-message.model';\nimport { Translatable } from '@spartacus/core';\n\n/**\n * Renders a confirmation message and cancel/confirm button in the message component.\n */\n@Component({\n  selector: 'cx-org-confirmation',\n  templateUrl: './confirmation-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmationMessageComponent\n  extends BaseMessageComponent\n  implements OnInit\n{\n  cancelText: Translatable = {\n    key: 'organization.confirmation.cancel',\n  };\n  confirmText: Translatable = {\n    key: 'organization.confirmation.confirm',\n  };\n\n  constructor(\n    protected data: MessageData<ConfirmationMessageData>,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    protected messageService: MessageService\n  ) {\n    super(data, platformId);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.cancelText = this.messageData.cancel ?? this.cancelText;\n    this.confirmText = this.messageData.confirm ?? this.confirmText;\n  }\n  /**\n   * Emits a confirmation event to the data events.\n   *\n   * The original author of the event message or other parties can observe\n   * the event data.\n   */\n  confirm() {\n    this.data.events.next({ confirm: true });\n  }\n}\n","<div class=\"inner\" [cxFocus]=\"{ focusOnEscape: true }\" (esc)=\"close()\">\n  <p class=\"messageTitle\" *ngIf=\"messageTitle\">\n    {{ messageTitle | cxTranslate }}\n  </p>\n  <div class=\"message\">\n    <cx-icon *ngIf=\"messageIcon\" [type]=\"messageIcon\"></cx-icon>\n    <p>\n      {{ message | cxTranslate }}\n    </p>\n  </div>\n  <div class=\"actions\" [cxFocus]=\"{ autofocus: 'button.primary' }\">\n    <button class=\"button cancel\" (click)=\"close()\">\n      {{ cancelText | cxTranslate }}\n    </button>\n\n    <button class=\"button primary confirm\" (click)=\"confirm()\">\n      {{ confirmText | cxTranslate }}\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { BaseItem } from '../../organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DisableInfoService<T extends BaseItem> {\n  isItemDisabled(item: T): boolean {\n    return item?.active === false;\n  }\n\n  isParentDisabled(item: T): boolean {\n    return (\n      (item.orgUnit || item.unit || item.parentOrgUnit)?.active === false &&\n      !this.isRootUnit(item)\n    );\n  }\n\n  isRootUnit(item: B2BUnit): boolean {\n    return (\n      item?.uid &&\n      item?.name &&\n      !(item as T)?.orgUnit &&\n      !(item as T)?.unit &&\n      (!item?.parentOrgUnit || item?.uid === item?.parentOrgUnit)\n    );\n  }\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ItemService } from '../../item.service';\nimport { ConfirmationMessageComponent } from '../../message/confirmation/confirmation-message.component';\nimport { ConfirmationMessageData } from '../../message/confirmation/confirmation-message.model';\nimport { MessageService } from '../../message/services/message.service';\nimport { BaseItem } from '../../organization.model';\nimport { DisableInfoService } from '../disable-info/disable-info.service';\n\n/**\n * Reusable component in the my-company is to toggle the disabled state for\n * my company entities.\n */\n@Component({\n  selector: 'cx-org-toggle-status',\n  templateUrl: './toggle-status.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class ToggleStatusComponent<T extends BaseItem> implements OnDestroy {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].messages.deactivate`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * The key input can be used to add a custom key.\n   *\n   * Most _organization_ entities use the `code` key, but there is some variations.\n   */\n  @Input() key = 'code';\n\n  /**\n   * The disabled state is calculated but can be provided as well.\n   */\n  @Input() disabled: boolean;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  /**\n   * resolves if the user is currently in the edit form.\n   */\n  isInEditMode$: Observable<boolean> = this.itemService.isInEditMode$;\n\n  protected subscription = new Subscription();\n  protected confirmation: Subject<ConfirmationMessageData>;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService<ConfirmationMessageData>,\n    protected disableInfoService: DisableInfoService<T>\n  ) {}\n\n  toggle(item: T) {\n    if (!item.active) {\n      // we do ask for confirmation when the entity gets activated\n      this.update(item);\n    } else {\n      if (!this.confirmation) {\n        this.confirmation = this.messageService.add({\n          message: {\n            key: this.i18nRoot + '.messages.deactivate',\n            params: { item },\n          },\n          messageTitle: {\n            key: this.i18nRoot + '.messages.deactivateTitle',\n            params: { item },\n          },\n          confirm: {\n            key: 'organization.confirmation.disable',\n          },\n          component: ConfirmationMessageComponent,\n        });\n\n        this.subscription.add(\n          this.confirmation.pipe(first()).subscribe((event) => {\n            if (event.close) {\n              this.confirmation = null;\n            }\n            if (event.confirm) {\n              this.messageService.close(this.confirmation);\n              this.update(item);\n              this.confirmation = null;\n            }\n          })\n        );\n      }\n    }\n  }\n\n  /**\n   * Indicates whether the status can be toggled or not.\n   */\n  isDisabled(item: T): boolean {\n    return (\n      this.disabled ??\n      (this.disableInfoService.isParentDisabled(item) ||\n        this.disableInfoService.isRootUnit(item))\n    );\n  }\n\n  protected update(item: T): void {\n    this.itemService\n      .update(item[this.key], this.getPatchedItem(item))\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => this.notify({ ...item, ...data.item }));\n  }\n\n  protected getPatchedItem(item: T): T {\n    const patch: BaseItem = {};\n    patch[this.key] = item[this.key];\n    patch.active = !item.active;\n    return patch as T;\n  }\n\n  protected notify(item: T) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.${\n          item.active ? 'confirmEnabled' : 'confirmDisabled'\n        }`,\n        params: { item },\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<button\n  *ngIf=\"current$ | async as item\"\n  class=\"button active\"\n  [disabled]=\"\n    isDisabled(item) ||\n    ((isInEditMode$ | async) && item.active && disabled !== true)\n  \"\n  (click)=\"toggle(item)\"\n>\n  {{ 'organization.' + (item.active ? 'disable' : 'enable') | cxTranslate }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FeaturesConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { ConfirmationMessageComponent } from './confirmation-message.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n    FeaturesConfigModule,\n  ],\n  declarations: [ConfirmationMessageComponent],\n})\nexport class ConfirmationMessageModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfirmationMessageModule } from '../../message/confirmation/confirmation-message.module';\nimport { MessageModule } from '../../message/message.module';\nimport { ToggleStatusComponent } from './toggle-status.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, MessageModule, ConfirmationMessageModule],\n  declarations: [ToggleStatusComponent],\n  exports: [ToggleStatusComponent],\n})\nexport class ToggleStatusModule {}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { filter, first, take } from 'rxjs/operators';\nimport { ItemService } from '../../item.service';\nimport { ConfirmationMessageComponent } from '../../message/confirmation/confirmation-message.component';\nimport { ConfirmationMessageData } from '../../message/confirmation/confirmation-message.model';\nimport { MessageService } from '../../message/services/message.service';\nimport { BaseItem } from '../../organization.model';\n\n/**\n * Reusable component in the my-company is to delete an item (if it's possible)\n */\n@Component({\n  selector: 'cx-org-delete-item',\n  templateUrl: './delete-item.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class DeleteItemComponent<T extends BaseItem> implements OnDestroy {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].messages.deactivate`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * The key input can be used to add a custom key.\n   *\n   * Most _organization_ entities use the `code` key, but there is some variations.\n   */\n  @Input() key = 'code';\n\n  /**\n   * The additionalParam input can be used to provide additional data if it's required\n   * for API request\n   */\n  @Input() additionalParam?: string;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  /**\n   * resolves if the user is currently in the edit form.\n   */\n  isInEditMode$: Observable<boolean> = this.itemService.isInEditMode$;\n\n  protected subscription = new Subscription();\n  protected confirmation: Subject<ConfirmationMessageData>;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected messageService: MessageService<ConfirmationMessageData>\n  ) {}\n\n  delete(item: T) {\n    if (!this.confirmation) {\n      this.confirmation = this.messageService.add({\n        message: {\n          key: this.i18nRoot + '.messages.delete',\n          params: { item },\n        },\n        messageTitle: {\n          key: this.i18nRoot + '.messages.deleteTitle',\n          params: { item },\n        },\n        component: ConfirmationMessageComponent,\n      });\n\n      this.subscription.add(\n        this.confirmation.pipe(first()).subscribe((event) => {\n          if (event.close) {\n            this.confirmation = null;\n          }\n          if (event.confirm) {\n            this.messageService.close(this.confirmation);\n            this.confirmDelete(item);\n            this.confirmation = null;\n          }\n        })\n      );\n    }\n  }\n\n  protected confirmDelete(item: T): void {\n    this.itemService\n      .delete(item[this.key], this.additionalParam)\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => this.notify({ ...item, ...data.item }));\n  }\n\n  protected notify(item: T) {\n    this.messageService.add({\n      message: {\n        key: `${this.i18nRoot}.messages.deleted`,\n        params: { item },\n      },\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<button\n  *ngIf=\"current$ | async as item\"\n  class=\"button active\"\n  [disabled]=\"isInEditMode$ | async\"\n  (click)=\"delete(item)\"\n>\n  {{ 'organization.delete' | cxTranslate }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { ConfirmationMessageModule } from '../../message/confirmation/confirmation-message.module';\nimport { MessageModule } from '../../message/message.module';\nimport { DeleteItemComponent } from './delete-item.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, MessageModule, ConfirmationMessageModule],\n  declarations: [DeleteItemComponent],\n  exports: [DeleteItemComponent],\n})\nexport class DeleteItemModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../item.service';\nimport { BaseItem } from '../../organization.model';\nimport { DisableInfoService } from './disable-info.service';\n\n@Component({\n  selector: 'cx-org-disable-info',\n  templateUrl: './disable-info.component.html',\n  host: { class: 'content-wrapper' },\n})\nexport class DisableInfoComponent<T extends BaseItem> implements OnInit {\n  /**\n   * The localization of messages is based on the i18n root. Messages are\n   * concatenated to the root, such as:\n   *\n   * `[i18nRoot].info.disabledEdit`\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * To configure the messages to display and override defaultMessageConfig\n   */\n  @Input() displayInfoConfig: {\n    disabledCreate?: boolean;\n    disabledEdit?: boolean;\n    disabledEnable?: boolean;\n    disabledDisable?: boolean;\n  };\n\n  /**\n   * Flag to enable display custom message(s) even if no condition has been met\n   */\n  @Input() displayCustomInfo = false;\n\n  /**\n   * resolves the current item.\n   */\n  current$: Observable<T> = this.itemService.current$;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected itemService: ItemService<T>,\n    protected disableInfoService: DisableInfoService<T>\n  ) {}\n\n  protected get defaultInfoConfig() {\n    return {\n      disabledCreate: false,\n      disabledEdit: true,\n      disabledEnable: true,\n      disabledDisable: false,\n    };\n  }\n\n  ngOnInit() {\n    this.displayInfoConfig = {\n      ...this.defaultInfoConfig,\n      ...this.displayInfoConfig,\n    };\n  }\n\n  displayDisabledCreate(item: T) {\n    return (\n      this.displayInfoConfig?.disabledCreate &&\n      this.disableInfoService.isItemDisabled(item)\n    );\n  }\n\n  displayDisabledEdit(item: T) {\n    return (\n      this.displayInfoConfig?.disabledEdit &&\n      this.disableInfoService.isItemDisabled(item)\n    );\n  }\n\n  displayDisabledEnable(item: T) {\n    return (\n      this.displayInfoConfig?.disabledEnable &&\n      this.disableInfoService.isParentDisabled(item)\n    );\n  }\n\n  displayDisabledDisable(item: T) {\n    return (\n      this.displayInfoConfig?.disabledDisable &&\n      this.disableInfoService.isRootUnit(item)\n    );\n  }\n}\n","<ng-container *ngIf=\"current$ | async as item\">\n  <section\n    *ngIf=\"\n      displayDisabledCreate(item) ||\n      displayDisabledEdit(item) ||\n      displayDisabledEnable(item) ||\n      displayDisabledDisable(item) ||\n      displayCustomInfo\n    \"\n  >\n    <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    <ul>\n      <li *ngIf=\"displayDisabledEnable(item)\">\n        {{ i18nRoot + '.info.disabledEnable' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledCreate(item)\">\n        {{ i18nRoot + '.info.disabledCreate' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledEdit(item)\">\n        {{ i18nRoot + '.info.disabledEdit' | cxTranslate }}\n      </li>\n      <li *ngIf=\"displayDisabledDisable(item)\">\n        {{ i18nRoot + '.info.disabledDisable' | cxTranslate }}\n      </li>\n      <ng-content></ng-content>\n    </ul>\n  </section>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DisableInfoComponent } from './disable-info.component';\nimport { IconModule } from '@spartacus/storefront';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [DisableInfoComponent],\n  exports: [DisableInfoComponent],\n})\nexport class DisableInfoModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport {\n  ResponsiveTableConfiguration,\n  TableLayout,\n} from '@spartacus/storefront';\nimport { ListService } from '../list/list.service';\nimport { BaseItem } from '../organization.model';\nimport { Observable, of } from 'rxjs';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\n\n@Injectable()\nexport abstract class SubListService<\n  T extends BaseItem\n> extends ListService<T> {\n  /**\n   * The default table structure for sub lists is only showing tables with vertical layout.\n   */\n  protected defaultTableStructure: ResponsiveTableConfiguration = {\n    options: { layout: TableLayout.VERTICAL },\n  };\n\n  /**\n   * @override This sub list will show 3 items.\n   */\n  protected ghostData = { values: new Array(3) } as EntitiesModel<T>;\n\n  // TODO: abstract\n  assign?(_key: string, ..._args: any): Observable<OrganizationItemStatus<T>> {\n    return of();\n  }\n\n  unassign?(\n    _key: string,\n    ..._args: any\n  ): Observable<OrganizationItemStatus<T>> {\n    return of();\n  }\n\n  /**\n   * As we can't filter with the backend API, we do this client side.\n   */\n  protected filterSelected(list: EntitiesModel<T>): EntitiesModel<T> {\n    if (!list) {\n      return list;\n    }\n\n    const { pagination, sorts, values } = list;\n\n    return {\n      pagination,\n      sorts,\n      values: values.filter((value) => value.selected),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-active-link-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ActiveLinkCellComponent extends CellComponent {\n  get tabIndex() {\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-amount-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmountCellComponent extends CellComponent {\n  get property(): string {\n    if (this.budget && this.currency) {\n      return this.budget + ' ' + this.currency;\n    }\n    return;\n  }\n\n  protected get budget() {\n    return this.model.budget;\n  }\n\n  protected get currency() {\n    return this.model.currency?.isocode || this.model.currency;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-date-range-cell',\n  templateUrl: './date-range-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DateRangeCellComponent extends CellComponent {\n  get linkable(): boolean {\n    return this.hasRange && (this.cellOptions.linkable ?? true);\n  }\n\n  get hasRange(): boolean {\n    return !!this.model.startDate && !!this.model.endDate;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span\n    class=\"text\"\n    title=\"{{ model.startDate | cxDate }} - {{ model.endDate | cxDate }}\"\n    *ngIf=\"hasRange\"\n  >\n    {{ model.startDate | cxDate }} - {{ model.endDate | cxDate }}\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-limit-cell',\n  templateUrl: './limit-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LimitCellComponent extends CellComponent {\n  get isTimeSpanThreshold(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BOrderThresholdTimespanPermission'\n    );\n  }\n\n  get isOrderThreshold(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BOrderThresholdPermission'\n    );\n  }\n\n  get isExceedPermission(): boolean {\n    return (\n      (this.model as Permission).orderApprovalPermissionType?.code ===\n      'B2BBudgetExceededPermission'\n    );\n  }\n}\n","<a\n  *ngIf=\"linkable; else threshold\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"threshold\"></ng-container>\n</a>\n\n<ng-template #threshold>\n  <span\n    class=\"text\"\n    title=\"{{ model.threshold }} {{ model.currency?.symbol }} {{\n      'orgPurchaseLimit.per.' + model.periodRange | cxTranslate\n    }}\"\n    *ngIf=\"isTimeSpanThreshold\"\n  >\n    {{ model.threshold }} {{ model.currency?.symbol }}\n    {{ 'orgPurchaseLimit.per.' + model.periodRange | cxTranslate }}\n  </span>\n\n  <span\n    class=\"text\"\n    title=\"{{ model.threshold }} {{ model.currency?.symbol }}\"\n    *ngIf=\"isOrderThreshold\"\n  >\n    {{ model.threshold }} {{ model.currency?.symbol }}\n  </span>\n\n  <span\n    class=\"text\"\n    title=\"{{ model.orderApprovalPermissionType.name }}\"\n    *ngIf=\"isExceedPermission\"\n  >\n    {{ model.orderApprovalPermissionType.name }}\n  </span>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-roles-cell',\n  templateUrl: './roles-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RolesCellComponent extends CellComponent {}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <ul class=\"text\">\n    <li\n      *ngFor=\"let role of model.roles\"\n      class=\"li\"\n      [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n    ></li>\n    <li *ngIf=\"model.roles?.length === 0\">-</li>\n  </ul>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-status-cell',\n  templateUrl: './status-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StatusCellComponent extends CellComponent {\n  get label() {\n    if (this.isActive === undefined) {\n      return;\n    }\n    return this.isActive ? 'organization.enabled' : 'organization.disabled';\n  }\n\n  get isActive(): boolean {\n    return this.model.active;\n  }\n}\n","<a\n  *ngIf=\"linkable; else text\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabindex]=\"tabIndex\"\n>\n  <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n</a>\n\n<ng-template #text>\n  <span\n    class=\"text\"\n    title=\"{{ label | cxTranslate }}\"\n    [class.is-active]=\"isActive\"\n    *ngIf=\"label\"\n  >\n    {{ label | cxTranslate }}</span\n  >\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CellComponent } from '../cell.component';\n\n@Component({\n  selector: 'cx-org-unit-cell',\n  templateUrl: '../cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitCellComponent extends CellComponent {\n  get property() {\n    return this.model.unit?.name ?? this.model.orgUnit?.name;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { ActiveLinkCellComponent } from './active-link/active-link-cell.component';\nimport { AmountCellComponent } from './amount/amount-cell.component';\nimport { DateRangeCellComponent } from './date-range/date-range-cell.component';\nimport { LimitCellComponent } from './limit/limit-cell.component';\nimport { CellComponent } from './cell.component';\nimport { RolesCellComponent } from './roles/roles-cell.component';\nimport { StatusCellComponent } from './status/status-cell.component';\nimport { UnitCellComponent } from './unit/unit-cell.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule, IconModule],\n  declarations: [\n    CellComponent,\n    ActiveLinkCellComponent,\n    AmountCellComponent,\n    DateRangeCellComponent,\n    LimitCellComponent,\n    RolesCellComponent,\n    StatusCellComponent,\n    UnitCellComponent,\n  ],\n})\nexport class CellModule {}\n","import { B2BUnit } from '@spartacus/core';\n\nexport enum OrganizationTableType {\n  BUDGET = 'orgBudget',\n  BUDGET_ASSIGNED_COST_CENTERS = 'orgBudgetAssignedCostCenters',\n  COST_CENTER = 'orgCostCenter',\n  COST_CENTER_BUDGETS = 'orgCostCenterBudgets',\n  COST_CENTER_ASSIGNED_BUDGETS = 'orgCostCenterAssignedBudgets',\n  UNIT = 'orgUnit',\n  UNIT_USERS = 'orgUnitUsers',\n  UNIT_CHILDREN = 'orgUnitChildren',\n  UNIT_APPROVERS = 'orgUnitApprovers',\n  UNIT_ASSIGNED_APPROVERS = 'orgUnitAssignedApprovers',\n  UNIT_ADDRESS = 'orgUnitAddress',\n  UNIT_COST_CENTERS = 'orgUnitCostCenters',\n  USER_GROUP = 'orgUserGroup',\n  USER_GROUP_USERS = 'orgUserGroupUsers',\n  USER_GROUP_ASSIGNED_USERS = 'orgUserGroupAssignedUsers',\n  USER_GROUP_PERMISSIONS = 'orgUserGroupPermissions',\n  USER_GROUP_ASSIGNED_PERMISSIONS = 'orgUserGroupAssignedPermissions',\n  USER = 'orgUser',\n  USER_APPROVERS = 'orgUserApprovers',\n  USER_ASSIGNED_APPROVERS = 'orgUserAssignedApprovers',\n  USER_PERMISSIONS = 'orgUserPermissions',\n  USER_ASSIGNED_PERMISSIONS = 'orgUserAssignedPermissions',\n  USER_USER_GROUPS = 'orgUserUserGroups',\n  USER_ASSIGNED_USER_GROUPS = 'orgUserAssignedUserGroups',\n  PERMISSION = 'orgPurchaseLimit',\n}\n\nexport type BaseItem = {\n  code?: string;\n  selected?: boolean;\n  // tmp alternative \"key\"\n  customerId?: string;\n  uid?: string;\n  id?: string;\n\n  active?: boolean;\n  // tmp alternative \"orgUnit\"\n  orgUnit?: B2BUnit;\n  parentOrgUnit?: B2BUnit;\n  unit?: B2BUnit;\n};\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-cost-center-details-cell',\n  templateUrl: './cost-center-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CostCenterDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgCostCenterDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.active' | cxTranslate }}</label>\n      <span\n        class=\"value\"\n        [class.is-active]=\"model.active\"\n        [class.is-inactive]=\"!model.active\"\n      >\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.currency' | cxTranslate }}</label>\n\n      <span class=\"value\">\n        {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.unit\">\n      <label>{{ 'orgCostCenter.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.unit\n          } | cxUrl\n        \"\n      >\n        {{ model.unit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetCostCenterListService extends SubListService<Budget> {\n  protected tableType = OrganizationTableType.BUDGET_ASSIGNED_COST_CENTERS;\n  protected _domainType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<CostCenter>> {\n    return this.budgetService.getCostCenters(code).pipe(\n      filter((list) => Boolean(list)),\n      map((costCenter) => this.filterSelected(costCenter))\n    );\n  }\n\n  /**\n   * As we can't filter with the backend API, we do this client side.\n   */\n  protected filterSelected({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<CostCenter>): EntitiesModel<CostCenter> {\n    return {\n      pagination,\n      sorts,\n      values: values.filter((value) => value.active),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { BudgetCostCenterListService } from './budget-cost-center-list.service';\n\n@Component({\n  selector: 'cx-org-budget-cost-center-list',\n  templateUrl: './budget-cost-center-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: BudgetCostCenterListService,\n    },\n  ],\n})\nexport class BudgetCostCenterListComponent {}\n","<cx-org-sub-list></cx-org-sub-list>\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentBudgetService extends CurrentItemService<Budget> {\n  constructor(\n    protected routingService: RoutingService,\n    protected budgetService: BudgetService\n  ) {\n    super(routingService);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgBudgetDetails';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.budgetCode;\n  }\n\n  protected getItem(code: string): Observable<Budget> {\n    return this.budgetService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.budgetService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators, DatePickerService } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetFormService extends FormService<Budget> {\n  constructor(protected datePickerService: DatePickerService) {\n    super();\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n    form.setControl(\n      'startDate',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.patternValidation((date) =>\n          this.datePickerService.isValidFormat(date)\n        ),\n      ])\n    );\n    form.setControl(\n      'endDate',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.patternValidation((date) =>\n          this.datePickerService.isValidFormat(date)\n        ),\n      ])\n    );\n    form.setControl(\n      'budget',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.mustBePositive,\n      ])\n    );\n\n    form.setControl(\n      'currency',\n      new FormGroup({\n        isocode: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setValidators(\n      CustomFormValidators.dateRange('startDate', 'endDate', (date) =>\n        this.datePickerService.getDate(date)\n      )\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetFormService } from '../form/budget-form.service';\nimport { CurrentBudgetService } from './current-budget.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetItemService extends ItemService<Budget> {\n  constructor(\n    protected currentItemService: CurrentBudgetService,\n    protected routingService: RoutingService,\n    protected formService: BudgetFormService,\n    protected budgetService: BudgetService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  /**\n   * @override\n   * Returns the budget for the given code.\n   *\n   * Loads the budget each time, to ensure accurate data is resolved.\n   */\n  load(code: string): Observable<Budget> {\n    this.budgetService.loadBudget(code);\n    return this.budgetService.get(code);\n  }\n\n  update(code, value: Budget): Observable<OrganizationItemStatus<Budget>> {\n    this.budgetService.update(code, value);\n    return this.budgetService.getLoadingStatus(value.code);\n  }\n\n  protected create(value: Budget): Observable<OrganizationItemStatus<Budget>> {\n    this.budgetService.create(value);\n    return this.budgetService.getLoadingStatus(value.code);\n  }\n\n  /**\n   * @override\n   * Returns 'budgetDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgBudgetDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetItemService } from '../services/budget-item.service';\n\n@Component({\n  selector: 'cx-org-budget-details',\n  templateUrl: './budget-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: BudgetItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class BudgetDetailsComponent implements OnInit {\n  model$: Observable<Budget>;\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  ngOnInit() {\n    this.model$ = this.itemService.key$.pipe(\n      switchMap((code) => this.itemService.load(code)),\n      startWith({})\n    );\n  }\n\n  constructor(protected itemService: ItemService<Budget>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgBudget.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgBudgetEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status actions i18nRoot=\"orgBudget\"></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgBudget\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgBudget.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.startDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.startDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.endDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.endDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.amount' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.budget }} {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <a\n      *ngIf=\"model.code\"\n      class=\"link\"\n      [routerLink]=\"{ cxRoute: 'orgBudgetCostCenters', params: model } | cxUrl\"\n      routerLinkActive=\"is-current\"\n    >\n      {{ 'orgBudget.links.costCenters' | cxTranslate }}\n    </a>\n  </section>\n</cx-org-card>\n","import { AbstractControl } from '@angular/forms';\n\nexport function createCodeForEntityName(\n  name: AbstractControl,\n  code: AbstractControl\n): void {\n  if (!code.value) {\n    const codeFromName = name.value?.replace(/\\s+/g, '-').toLowerCase();\n    code.patchValue(codeFromName);\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { Currency, CurrencyService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  Budget,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { BudgetItemService } from '../services/budget-item.service';\nimport { CurrentBudgetService } from '../services/current-budget.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-budget-form',\n  templateUrl: './budget-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: BudgetItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentBudgetService,\n    },\n  ],\n})\nexport class BudgetFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<Budget>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createCodeWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgBudget\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgBudget.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgBudget.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createCodeWithName(form.get('name'), form.get('code'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgBudget.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgBudget.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{\n        'orgBudget.startDate' | cxTranslate\n      }}</span>\n      <cx-date-picker\n        [control]=\"form.get('startDate')\"\n        [max]=\"form.get('endDate').value\"\n        (update)=\"form.get('endDate').updateValueAndValidity()\"\n      ></cx-date-picker>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{ 'orgBudget.endDate' | cxTranslate }}</span>\n      <cx-date-picker\n        [control]=\"form.get('endDate')\"\n        [min]=\"form.get('startDate').value\"\n        (update)=\"form.get('startDate').updateValueAndValidity()\"\n      ></cx-date-picker>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('currency')\">\n      <span class=\"label-content required\">{{\n        'orgBudget.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [class.invalid]=\"form.get('currency.isocode').invalid\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgBudget.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content\">{{ 'orgBudget.amount' | cxTranslate }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"number\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgBudget.amount' | cxTranslate }}\"\n        formControlName=\"budget\"\n        min=\"0\"\n      />\n      <cx-form-errors [control]=\"form.get('budget')\"></cx-form-errors>\n    </label>\n\n    <label\n      aria-required=\"true\"\n      *ngIf=\"units$ | async as units\"\n      [formGroup]=\"form.get('orgUnit')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgBudget.businessUnits' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgBudget.businessUnits' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * Service to populate Budget data to `Table` data. Budget\n * data is driven by the table configuration, using the `OrganizationTables.BUDGET`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BudgetListService extends ListService<Budget> {\n  protected tableType = OrganizationTableType.BUDGET;\n\n  constructor(\n    protected tableService: TableService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<Budget>> {\n    return this.budgetService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertBudgets(raw))\n    );\n  }\n\n  /**\n   * Populates budget data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertBudgets({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<Budget>): EntitiesModel<Budget> {\n    const budgetModels: EntitiesModel<Budget> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        currency: value.currency?.isocode,\n        unit: value.orgUnit,\n      })),\n    };\n    return budgetModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentBudgetService } from './current-budget.service';\n\n@Injectable({ providedIn: 'root' })\nexport class BudgetRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentBudgetService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Budget> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { CostCenterDetailsCellComponent } from '../cost-center/details-cell/cost-center-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { ActiveLinkCellComponent } from '../shared/table';\nimport { AmountCellComponent } from '../shared/table/amount/amount-cell.component';\nimport { DateRangeCellComponent } from '../shared/table/date-range/date-range-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { BudgetCostCenterListComponent } from './cost-centers/budget-cost-center-list.component';\nimport { BudgetDetailsComponent } from './details/budget-details.component';\nimport { BudgetFormComponent } from './form/budget-form.component';\nimport { BudgetItemService } from './services/budget-item.service';\nimport { BudgetListService } from './services/budget-list.service';\nimport { BudgetRoutePageMetaResolver } from './services/budget-route-page-meta.resolver';\n\nexport const budgetCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageBudgetsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: BudgetListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: BudgetItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgBudget.breadcrumbs.list',\n              resolver: BudgetRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: BudgetFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.budgetCode}`,\n            component: BudgetDetailsComponent,\n            data: {\n              cxPageMeta: {\n                breadcrumb: 'orgBudget.breadcrumbs.details',\n              },\n            },\n            children: [\n              {\n                path: `edit`,\n                component: BudgetFormComponent,\n              },\n              {\n                path: 'cost-centers',\n                component: BudgetCostCenterListComponent,\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function budgetTableConfigFactory(): TableConfig {\n  return budgetTableConfig;\n}\n\nexport const budgetTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.BUDGET]: {\n      cells: ['name', 'active', 'amount', 'dateRange', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          amount: {\n            dataComponent: AmountCellComponent,\n          },\n          dateRange: {\n            dataComponent: DateRangeCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.BUDGET_ASSIGNED_COST_CENTERS]: {\n      cells: ['name'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: CostCenterDetailsCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { BudgetCostCenterListComponent } from './budget-cost-center-list.component';\n\n@NgModule({\n  imports: [CommonModule, SubListModule],\n  declarations: [BudgetCostCenterListComponent],\n})\nexport class BudgetCostCenterListModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ItemExistsDirective } from './item-exists.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ItemExistsDirective],\n  exports: [ItemExistsDirective],\n})\nexport class ItemExistsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { BudgetDetailsComponent } from './budget-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [BudgetDetailsComponent],\n})\nexport class BudgetDetailsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { DatePickerModule, FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { BudgetFormComponent } from './budget-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n    DatePickerModule,\n  ],\n  declarations: [BudgetFormComponent],\n})\nexport class BudgetFormModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { budgetCmsConfig, budgetTableConfigFactory } from './budget.config';\nimport { BudgetCostCenterListModule } from './cost-centers/budget-cost-center-list.module';\nimport { BudgetDetailsModule } from './details/budget-details.module';\nimport { BudgetFormModule } from './form/budget-form.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    BudgetDetailsModule,\n    BudgetFormModule,\n    BudgetCostCenterListModule,\n  ],\n  providers: [\n    provideDefaultConfig(budgetCmsConfig),\n    provideDefaultConfigFactory(budgetTableConfigFactory),\n  ],\n})\nexport class BudgetComponentsModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-budget-details-cell',\n  templateUrl: './budget-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BudgetDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgBudget.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgBudgetDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.startDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.startDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.endDate' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.endDate | cxDate }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.amount' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.budget }} {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgBudget.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { BudgetDetailsCellComponent } from './budget-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [BudgetDetailsCellComponent],\n  exports: [BudgetDetailsCellComponent],\n})\nexport class BudgetDetailsCellModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Budget,\n  BudgetService,\n  CostCenterService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterBudgetListService extends SubListService<Budget> {\n  protected tableType = OrganizationTableType.COST_CENTER_BUDGETS;\n  protected _domainType = OrganizationTableType.BUDGET;\n\n  constructor(\n    protected tableService: TableService,\n    protected costCenterService: CostCenterService,\n    protected budgetService: BudgetService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Budget>> {\n    return this.costCenterService.getBudgets(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign budget to the cost center.\n   */\n  assign(\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    this.costCenterService.assignBudget(costCenterCode, budgetCode);\n    return this.budgetService.getLoadingStatus(budgetCode);\n  }\n\n  /**\n   * @override\n   * Unassign the budget from the cost center.\n   */\n  unassign(\n    costCenterCode: string,\n    budgetCode: string\n  ): Observable<OrganizationItemStatus<Budget>> {\n    this.costCenterService.unassignBudget(costCenterCode, budgetCode);\n    return this.budgetService.getLoadingStatus(budgetCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Budget } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { CostCenterBudgetListService } from '../cost-center-budget-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterAssignedBudgetListService extends CostCenterBudgetListService {\n  protected tableType = OrganizationTableType.COST_CENTER_ASSIGNED_BUDGETS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Budget>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((budgets) => this.filterSelected(budgets)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CostCenterAssignedBudgetListService } from './cost-center-assigned-budget-list.service';\n\n@Component({\n  selector: 'cx-org-cost-center-assigned-budget-list',\n  templateUrl: './cost-center-assigned-budget-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: CostCenterAssignedBudgetListService,\n    },\n  ],\n})\nexport class CostCenterAssignedBudgetListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { CostCenterBudgetListService } from './cost-center-budget-list.service';\n\n@Component({\n  selector: 'cx-org-cost-center-budget-list',\n  templateUrl: './cost-center-budget-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: CostCenterBudgetListService,\n    },\n  ],\n})\nexport class CostCenterBudgetListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { CostCenterAssignedBudgetListComponent } from './assigned/cost-center-assigned-budget-list.component';\nimport { CostCenterBudgetListComponent } from './cost-center-budget-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    CostCenterAssignedBudgetListComponent,\n    CostCenterBudgetListComponent,\n  ],\n})\nexport class CostCenterBudgetListModule {}\n","import { Injectable } from '@angular/core';\nimport { CostCenter, RoutingService } from '@spartacus/core';\nimport { CostCenterService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentCostCenterService extends CurrentItemService<CostCenter> {\n  constructor(\n    protected routingService: RoutingService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.costCenterCode;\n  }\n\n  protected getItem(code: string): Observable<CostCenter> {\n    return this.costCenterService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.costCenterService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { CostCenter } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterFormService extends FormService<CostCenter> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n\n    form.setControl(\n      'currency',\n      new FormGroup({\n        isocode: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl(\n      'unit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CostCenter, RoutingService } from '@spartacus/core';\nimport {\n  CostCenterService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterFormService } from '../form/cost-center-form.service';\nimport { CurrentCostCenterService } from './current-cost-center.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterItemService extends ItemService<CostCenter> {\n  constructor(\n    protected currentItemService: CurrentCostCenterService,\n    protected routingService: RoutingService,\n    protected formService: CostCenterFormService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<CostCenter> {\n    this.costCenterService.load(code);\n    return this.costCenterService.get(code);\n  }\n\n  update(\n    code,\n    value: CostCenter\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    this.costCenterService.update(code, value);\n    return this.costCenterService.getLoadingStatus(value.code);\n  }\n\n  protected create(\n    value: CostCenter\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    this.costCenterService.create(value);\n    return this.costCenterService.getLoadingStatus(value.code);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgCostCenterDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CostCenter } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterItemService } from '../services/cost-center-item.service';\n\n@Component({\n  selector: 'cx-org-cost-center-details',\n  templateUrl: './cost-center-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: CostCenterItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class CostCenterDetailsComponent {\n  model$: Observable<CostCenter> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<CostCenter>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgCostCenter.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgCostCenterEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status actions i18nRoot=\"orgCostCenter\"></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgCostCenter\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.active' | cxTranslate }}</label>\n      <span\n        class=\"value\"\n        [class.is-active]=\"model.active\"\n        [class.is-inactive]=\"!model.active\"\n      >\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.currency' | cxTranslate }}</label>\n\n      <span class=\"value\">\n        {{ model.currency?.isocode }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgCostCenter.unit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.unit\n          } | cxUrl\n        \"\n      >\n        {{ model.unit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <a\n      *ngIf=\"model.code\"\n      class=\"link\"\n      [routerLink]=\"{ cxRoute: 'orgCostCenterBudgets', params: model } | cxUrl\"\n      routerLinkActive=\"is-current\"\n    >\n      {{ 'orgCostCenter.budget.link' | cxTranslate }}\n    </a>\n  </section>\n</cx-org-card>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { CostCenter, Currency, CurrencyService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CostCenterItemService } from '../services/cost-center-item.service';\nimport { CurrentCostCenterService } from '../services/current-cost-center.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-cost-center-form',\n  templateUrl: './cost-center-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: CostCenterItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentCostCenterService,\n    },\n  ],\n})\nexport class CostCenterFormComponent {\n  form: FormGroup = this.itemService.getForm();\n  /**\n   * Initialize the business unit for the cost center.\n   *\n   * If there's a unit provided, we disable the form control.\n   */\n  @Input() set unitKey(value: string) {\n    if (value) {\n      this.form?.get('unit.uid').setValue(value);\n      this.form?.get('unit')?.disable();\n    }\n  }\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('unit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<CostCenter>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService\n  ) {}\n\n  createCodeWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgCostCenter\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgCostCenter.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgCostCenter.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createCodeWithName(form.get('name'), form.get('code'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgCostCenter.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgCostCenter.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" formGroupName=\"currency\">\n      <span class=\"label-content required\">{{\n        'orgCostCenter.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [class.invalid]=\"form.get('currency.isocode').invalid\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgCostCenter.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('unit')\">\n      <span class=\"label-content required\">{{\n        'orgCostCenter.unit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('unit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgCostCenter.unit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('unit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { Injectable } from '@angular/core';\nimport { CostCenter, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { CostCenterService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface CostCenterModel {\n  code?: string;\n  name?: string;\n  unit?: any;\n  currency?: string;\n  active?: boolean;\n}\n\n/**\n * Service to populate Cost Center data to `Table` data. The cost center\n * data is driven by the table configuration, using the `OrganizationTables.COST_CENTER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CostCenterListService extends ListService<CostCenterModel> {\n  protected tableType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected costCenterService: CostCenterService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<CostCenterModel>> {\n    return this.costCenterService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertCostCenters(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertCostCenters({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<CostCenter>): EntitiesModel<CostCenterModel> {\n    const costCenterModels: EntitiesModel<CostCenterModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        currency: value.currency?.isocode,\n      })),\n    };\n    return costCenterModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CostCenter,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentCostCenterService } from './current-cost-center.service';\n\n@Injectable({ providedIn: 'root' })\nexport class CostCenterRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentCostCenterService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<CostCenter> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { BudgetDetailsCellComponent } from '../budget/details-cell/budget-details-cell.component';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { CostCenterAssignedBudgetListComponent } from './budgets/assigned/cost-center-assigned-budget-list.component';\nimport { CostCenterBudgetListComponent } from './budgets/cost-center-budget-list.component';\nimport { CostCenterDetailsComponent } from './details/cost-center-details.component';\nimport { CostCenterFormComponent } from './form/cost-center-form.component';\nimport { CostCenterItemService } from './services/cost-center-item.service';\nimport { CostCenterListService } from './services/cost-center-list.service';\nimport { CostCenterRoutePageMetaResolver } from './services/cost-center-route-page-meta.resolver';\n\nexport const costCenterCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageCostCentersListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: CostCenterListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: CostCenterItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgCostCenter.breadcrumbs.list',\n              resolver: CostCenterRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: CostCenterFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.costCenterCode}`,\n            component: CostCenterDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgCostCenter.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: CostCenterFormComponent,\n              },\n              {\n                path: 'budgets',\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgCostCenter.breadcrumbs.budgets',\n                  },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: CostCenterAssignedBudgetListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: CostCenterBudgetListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function costCenterTableConfigFactory(): TableConfig {\n  return costCenterTableConfig;\n}\n\nexport const costCenterTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.COST_CENTER]: {\n      cells: ['name', 'active', 'currency', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          currency: {\n            dataComponent: CellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.COST_CENTER_ASSIGNED_BUDGETS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: BudgetDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.COST_CENTER_BUDGETS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: BudgetDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { CostCenterDetailsComponent } from './cost-center-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [CostCenterDetailsComponent],\n  exports: [CostCenterDetailsComponent],\n})\nexport class CostCenterDetailsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { CurrencyService, I18nModule, UrlModule } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { CostCenterFormComponent } from './cost-center-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n  ],\n  declarations: [CostCenterFormComponent],\n  exports: [CostCenterFormComponent],\n  providers: [CurrencyService, OrgUnitService],\n})\nexport class CostCenterFormModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { BudgetDetailsCellModule } from '../budget/details-cell/budget-details-cell.module';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { CostCenterBudgetListModule } from './budgets/cost-center-budget-list.module';\nimport {\n  costCenterCmsConfig,\n  costCenterTableConfigFactory,\n} from './cost-center.config';\nimport { CostCenterDetailsModule } from './details/cost-center-details.module';\nimport { CostCenterFormModule } from './form/cost-center-form.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    CostCenterDetailsModule,\n    CostCenterFormModule,\n    CostCenterBudgetListModule,\n    BudgetDetailsCellModule,\n  ],\n  providers: [\n    provideDefaultConfig(costCenterCmsConfig),\n    provideDefaultConfigFactory(costCenterTableConfigFactory),\n  ],\n})\nexport class CostCenterComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentPermissionService extends CurrentItemService<Permission> {\n  constructor(\n    protected routingService: RoutingService,\n    protected permissionService: PermissionService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.permissionCode;\n  }\n\n  protected getItem(code: string): Observable<Permission> {\n    return this.permissionService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.permissionService.getErrorState(code);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { Subscription } from 'rxjs';\nimport { distinctUntilChanged, filter } from 'rxjs/operators';\nimport { FormService } from '../../shared/form/form.service';\n\nexport enum PermissionType {\n  ORDER = 'B2BOrderThresholdPermission',\n  TIME_SPAN = 'B2BOrderThresholdTimespanPermission',\n  EXCEEDED = 'B2BBudgetExceededPermission',\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionFormService\n  extends FormService<Permission>\n  implements OnDestroy\n{\n  protected subscription = new Subscription();\n\n  /**\n   * @override\n   * Builds a generic sub form for permissions and amends the form\n   * based on the for approval permission type.\n   */\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'code',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n\n    form.setControl(\n      'orderApprovalPermissionType',\n      new FormGroup({\n        code: new FormControl(undefined, Validators.required),\n      })\n    );\n\n    // subscribe to permission type changes and amend accordingly.\n    this.subscription.add(\n      form\n        .get('orderApprovalPermissionType')\n        .get('code')\n        .valueChanges.pipe(\n          distinctUntilChanged(),\n          filter((code) => !!code)\n        )\n        .subscribe((code) => this.amend(form, code))\n    );\n\n    this.form = form;\n  }\n\n  /**\n   * @override\n   * The form is using  `B2BBudgetExceededPermission` by default.\n   */\n  get defaultValue(): Permission {\n    return {\n      orderApprovalPermissionType: {\n        code: PermissionType.EXCEEDED,\n      },\n    };\n  }\n\n  /**\n   * Amends the form structure based on the `PermissionType`.\n   */\n  protected amend(form: FormGroup, code: PermissionType) {\n    if (code === PermissionType.EXCEEDED) {\n      form.removeControl('periodRange');\n      form.removeControl('currency');\n      form.removeControl('threshold');\n    }\n\n    if (code === PermissionType.TIME_SPAN || code === PermissionType.ORDER) {\n      if (!form.get('currency')) {\n        form.setControl(\n          'currency',\n          new FormGroup({\n            isocode: new FormControl(undefined, Validators.required),\n          })\n        );\n      }\n      if (!form.get('threshold')) {\n        form.setControl('threshold', new FormControl('', Validators.required));\n      }\n    }\n\n    if (code === PermissionType.ORDER) {\n      form.removeControl('periodRange');\n    }\n\n    if (code === PermissionType.TIME_SPAN) {\n      if (!form.get('periodRange')) {\n        form.setControl(\n          'periodRange',\n          new FormControl('', Validators.required)\n        );\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  protected patchData(item?) {\n    super.patchData(item);\n    if (item?.code !== undefined) {\n      this.form.get('orderApprovalPermissionType').disable();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { PermissionFormService } from '../form/permission-form.service';\nimport { CurrentPermissionService } from './current-permission.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionItemService extends ItemService<Permission> {\n  constructor(\n    protected currentItemService: CurrentPermissionService,\n    protected routingService: RoutingService,\n    protected formService: PermissionFormService,\n    protected permissionService: PermissionService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<Permission> {\n    this.permissionService.loadPermission(code);\n    return this.permissionService.get(code);\n  }\n\n  update(\n    code,\n    value: Permission\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.permissionService.update(code, value);\n    return this.permissionService.getLoadingStatus(value.code);\n  }\n\n  protected create(\n    value: Permission\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.permissionService.create(value);\n    return this.permissionService.getLoadingStatus(value.code);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgPurchaseLimitDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { PermissionItemService } from '../services/permission-item.service';\n\n@Component({\n  selector: 'cx-org-permission-details',\n  templateUrl: './permission-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: PermissionItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class PermissionDetailsComponent {\n  model$: Observable<Permission> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<Permission>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgPurchaseLimit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgPurchaseLimitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    i18nRoot=\"orgPurchaseLimit\"\n    [disabled]=\"false\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgPurchaseLimit\"\n    [displayInfoConfig]=\"{ disabledEnable: false }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.code }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { PermissionDetailsComponent } from './permission-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [PermissionDetailsComponent],\n  exports: [PermissionDetailsComponent],\n})\nexport class PermissionDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport {\n  Currency,\n  CurrencyService,\n  OrderApprovalPermissionType,\n} from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n  Period,\n  Permission,\n  PermissionService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentPermissionService } from '../services/current-permission.service';\nimport { PermissionItemService } from '../services/permission-item.service';\n\n@Component({\n  selector: 'cx-org-permission-form',\n  templateUrl: './permission-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: PermissionItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentPermissionService,\n    },\n  ],\n})\nexport class PermissionFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  currencies$: Observable<Currency[]> = this.currencyService.getAll().pipe(\n    tap((currency) => {\n      if (currency.length === 1) {\n        this.form?.get('currency.isocode')?.setValue(currency[0]?.isocode);\n      }\n    })\n  );\n\n  types$: Observable<OrderApprovalPermissionType[]> =\n    this.permissionService.getTypes();\n\n  periods = Object.keys(Period);\n\n  constructor(\n    protected itemService: ItemService<Permission>,\n    protected unitService: OrgUnitService,\n    protected currencyService: CurrencyService,\n    protected permissionService: PermissionService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n}\n","<cx-org-form i18nRoot=\"orgPurchaseLimit\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.code' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgPurchaseLimit.code' | cxTranslate }}\"\n        formControlName=\"code\"\n      />\n      <cx-form-errors [control]=\"form.get('code')\"></cx-form-errors>\n    </label>\n\n    <label\n      *ngIf=\"(types$ | async)?.length\"\n      aria-required=\"true\"\n      [formGroup]=\"form.get('orderApprovalPermissionType')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"types$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        [readonly]=\"form.disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"\n          'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n        \"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('orderApprovalPermissionType.code')\"\n      ></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" *ngIf=\"form.get('periodRange')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.periodRange' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"periodRange\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"periods\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgPurchaseLimit.periodRange' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('periodRange')\"></cx-form-errors>\n    </label>\n\n    <label\n      aria-required=\"true\"\n      *ngIf=\"form.get('currency')\"\n      [formGroup]=\"form.get('currency')\"\n    >\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.currency' | cxTranslate\n      }}</span>\n      <ng-select\n        *ngIf=\"currencies$ | async as currencies\"\n        formControlName=\"isocode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"currencies\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        [placeholder]=\"'orgPurchaseLimit.currency' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('currency.isocode')\"></cx-form-errors>\n    </label>\n\n    <label *ngIf=\"form.get('threshold')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.threshold' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"number\"\n        required\n        placeholder=\"{{ 'orgPurchaseLimit.threshold' | cxTranslate }}\"\n        formControlName=\"threshold\"\n      />\n      <cx-form-errors [control]=\"form.get('threshold')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgPurchaseLimit.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgPurchaseLimit.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { FormModule } from '../../shared/form/form.module';\nimport { PermissionFormComponent } from './permission-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    FormModule,\n    ItemActiveModule,\n  ],\n  declarations: [PermissionFormComponent],\n  exports: [PermissionFormComponent],\n})\nexport class PermissionFormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  PermissionService,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the permission, which is a slightly flattened version\n * of the permission model.\n */\nexport interface PermissionModel {\n  code?: string;\n  orderApprovalPermissionType?: { name: string };\n  threshold?: any;\n  periodRange?: any;\n  orgUnit?: any;\n  currency?: { symbol: string };\n}\n\n/**\n * Service to populate permission data to `Table` data. The permission\n * data is driven by the table configuration, using the `OrganizationTables.PERMISSION`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PermissionListService extends ListService<PermissionModel> {\n  protected tableType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected permissionsService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<PermissionModel>> {\n    return this.permissionsService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertPermissions(raw))\n    );\n  }\n\n  /**\n   * Populates the permission data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertPermissions({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<UserGroup>): EntitiesModel<PermissionModel> {\n    const permissionGroupModels: EntitiesModel<PermissionModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return permissionGroupModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentPermissionService } from './current-permission.service';\n\n@Injectable({ providedIn: 'root' })\nexport class PermissionRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentPermissionService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Permission> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { LimitCellComponent } from '../shared/table/limit/limit-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { PermissionDetailsComponent } from './details/permission-details.component';\nimport { PermissionFormComponent } from './form/permission-form.component';\nimport { PermissionItemService } from './services/permission-item.service';\nimport { PermissionListService } from './services/permission-list.service';\nimport { PermissionRoutePageMetaResolver } from './services/permission-route-page-meta.resolver';\n\nexport const permissionCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManagePermissionsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: PermissionListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: PermissionItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgPurchaseLimit.breadcrumbs.list',\n              resolver: PermissionRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: PermissionFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.permissionCode}`,\n            component: PermissionDetailsComponent,\n            data: {\n              cxPageMeta: {\n                breadcrumb: 'orgPurchaseLimit.breadcrumbs.details',\n              },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: PermissionFormComponent,\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function permissionTableConfigFactory(): TableConfig {\n  return permissionTableConfig;\n}\n\nexport const permissionTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.PERMISSION]: {\n      cells: ['code', 'active', 'limit', 'unit'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n          limit: {\n            dataComponent: LimitCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { PermissionDetailsModule } from './details/permission-details.module';\nimport { PermissionFormModule } from './form/permission-form.module';\nimport {\n  permissionCmsConfig,\n  permissionTableConfigFactory,\n} from './permission.config';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    PermissionDetailsModule,\n    PermissionFormModule,\n  ],\n  providers: [\n    provideDefaultConfig(permissionCmsConfig),\n    provideDefaultConfigFactory(permissionTableConfigFactory),\n  ],\n})\nexport class PermissionComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitService extends CurrentItemService<B2BUnit> {\n  constructor(\n    protected routingService: RoutingService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.unitCode;\n  }\n\n  protected getItem(code: string): Observable<B2BUnit> {\n    return this.orgUnitService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.orgUnitService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { B2BUnit } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitFormService extends FormService<B2BUnit> {\n  protected patchData(item?: B2BUnit) {\n    this.toggleParentUnit(item);\n    super.patchData(item);\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'uid',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n\n    form.setControl(\n      'approvalProcess',\n      new FormGroup({\n        code: new FormControl(null),\n      })\n    );\n\n    this.form = form;\n    this.toggleParentUnit();\n  }\n\n  protected toggleParentUnit(item?: B2BUnit): void {\n    if (this.isRootUnit(item)) {\n      this.form?.removeControl('parentOrgUnit');\n    } else if (!this.form.get('parentOrgUnit')) {\n      this.form.setControl(\n        'parentOrgUnit',\n        new FormGroup({\n          uid: new FormControl(null, Validators.required),\n        })\n      );\n    }\n  }\n\n  protected isRootUnit(item: B2BUnit): boolean {\n    // as we don't have full response after toggle item status,\n    // we have situation where we have object like {uid, active},\n    // so decided to check name as alternative required property\n    return (\n      item?.uid &&\n      item?.name &&\n      (!item?.parentOrgUnit || item?.uid === item?.parentOrgUnit)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UnitFormService } from '../form/unit-form.service';\nimport { CurrentUnitService } from './current-unit.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitItemService extends ItemService<B2BUnit> {\n  constructor(\n    protected currentItemService: CurrentUnitService,\n    protected routingService: RoutingService,\n    protected formService: UnitFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  /**\n   * @override\n   * Returns the unit for the given code.\n   *\n   * Loads the unit each time, to ensure accurate data is resolved.\n   */\n  load(code: string): Observable<B2BUnit> {\n    this.unitService.load(code);\n    return this.unitService.get(code);\n  }\n\n  update(code, value: B2BUnit): Observable<OrganizationItemStatus<B2BUnit>> {\n    this.unitService.update(code, value);\n    return this.unitService.getLoadingStatus(value.uid);\n  }\n\n  protected create(\n    value: B2BUnit\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    this.unitService.create(value);\n    return this.unitService.getLoadingStatus(value.uid);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitDetails';\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UnitItemService } from '../services/unit-item.service';\n\n@Component({\n  selector: 'cx-org-unit-details',\n  templateUrl: './unit-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UnitDetailsComponent {\n  model$: Observable<B2BUnit> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<B2BUnit>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUnit.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n  [showHint]=\"true\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUnitEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUnit\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnit\"\n    [displayInfoConfig]=\"{ disabledDisable: true }\"\n  >\n  </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.approvalProcess?.name\">\n      <label>{{ 'orgUnit.approvalProcess' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.approvalProcess?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.parentOrgUnit\">\n      <label>{{ 'orgUnit.parentUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.parentOrgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.parentOrgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitChildren', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.units' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitUserList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.users' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitAddressList', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.shippingAddresses' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUnitCostCenters', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUnit.links.costCenters' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../shared/card/card.module';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { UnitDetailsComponent } from './unit-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    KeyboardFocusModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitDetailsComponent],\n  exports: [UnitDetailsComponent],\n})\nexport class UnitDetailsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BApprovalProcess, B2BUnit } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentUnitService } from '../services/current-unit.service';\nimport { UnitItemService } from '../services/unit-item.service';\nimport { AbstractControl } from '@angular/forms';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-unit-form',\n  templateUrl: './unit-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentUnitService,\n    },\n  ],\n})\nexport class UnitFormComponent implements OnInit {\n  @Input() i18nRoot = 'orgUnit';\n\n  @Input() createChildUnit = false;\n\n  form: FormGroup = this.itemService.getForm();\n\n  units$: Observable<B2BUnitNode[]> = this.itemService.unit$.pipe(\n    tap((unit) => {\n      this.form.get('parentOrgUnit.uid')?.setValue(unit);\n      if (this.createChildUnit) {\n        this.form.get('parentOrgUnit')?.disable();\n      }\n    }),\n    switchMap(() =>\n      this.unitService.getActiveUnitList().pipe(\n        map((units) =>\n          units.filter((unit) => unit.id !== this.form?.value.uid)\n        ),\n        tap((units) => {\n          if (units.length === 1) {\n            this.form?.get('parentOrgUnit.uid')?.setValue(units[0]?.id);\n          }\n        })\n      )\n    )\n  );\n\n  approvalProcess$: Observable<B2BApprovalProcess[]> = this.unitService\n    .getApprovalProcesses()\n    .pipe(filter((items) => items?.length > 0));\n\n  constructor(\n    protected itemService: ItemService<B2BUnit>,\n    protected unitService: OrgUnitService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createUidWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form [i18nRoot]=\"i18nRoot\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUnit.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnit.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUnit.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label\n      formGroupName=\"approvalProcess\"\n      class=\"full-width\"\n      aria-required=\"true\"\n    >\n      <span class=\"label-content required\">{{\n        'orgUnit.approvalProcess' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"code\"\n        [searchable]=\"false\"\n        [items]=\"approvalProcess$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.approvalProcess' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('approvalProcess.code')\"\n      ></cx-form-errors>\n    </label>\n\n    <label\n      *ngIf=\"form.get('parentOrgUnit')\"\n      aria-required=\"true\"\n      formGroupName=\"parentOrgUnit\"\n    >\n      <span class=\"label-content required\">{{\n        'orgUnit.form.parentOrgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUnit.form.parentOrgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors\n        [control]=\"form.get('parentOrgUnit.uid')\"\n      ></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { ItemActiveModule } from '../../shared/item-active.module';\nimport { UnitFormComponent } from './unit-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    ItemActiveModule,\n  ],\n  declarations: [UnitFormComponent],\n  exports: [UnitFormComponent],\n})\nexport class UnitFormModule {}\n","import { Injectable } from '@angular/core';\nimport { Address, RoutingService } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitAddressService extends CurrentItemService<Address> {\n  // override item$ as we need to use the unit code as well\n  readonly item$: Observable<Address> = this.b2bUnit$.pipe(\n    filter((unitUid) => Boolean(unitUid)),\n    switchMap((unitUid) =>\n      this.key$.pipe(switchMap((code: string) => this.getItem(unitUid, code)))\n    )\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected unitService: OrgUnitService\n  ) {\n    super(routingService);\n  }\n\n  getDetailsRoute(): string {\n    return 'orgUnitAddressDetails';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.addressCode;\n  }\n\n  protected getItem(unitUid: string, addressId: string): Observable<Address> {\n    return addressId\n      ? this.unitService.getAddress(unitUid, addressId)\n      : of(null);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.unitService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  Country,\n  Region,\n  Title,\n  UserAddressService,\n} from '@spartacus/core';\nimport { UserProfileFacade } from '@spartacus/user/profile/root';\nimport { Observable } from 'rxjs';\nimport { filter, switchMap, tap } from 'rxjs/operators';\nimport { FormService } from '../../../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressFormService extends FormService<Address> {\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userProfileFacade: UserProfileFacade\n  ) {\n    super();\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('id', new FormControl(''));\n    form.setControl('titleCode', new FormControl(''));\n    form.setControl('firstName', new FormControl('', Validators.required));\n    form.setControl('lastName', new FormControl('', Validators.required));\n    form.setControl('line1', new FormControl('', Validators.required));\n    form.setControl('line2', new FormControl(''));\n    form.setControl('town', new FormControl('', Validators.required));\n    form.setControl(\n      'country',\n      new FormGroup({\n        isocode: new FormControl(null, Validators.required),\n      })\n    );\n    form.setControl(\n      'region',\n      new FormGroup({\n        isocode: new FormControl(null, Validators.required),\n      })\n    );\n    form.setControl('postalCode', new FormControl('', Validators.required));\n    form.setControl('phone', new FormControl(''));\n\n    this.form = form;\n  }\n\n  getCountries(): Observable<Country[]> {\n    return this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n  }\n\n  getTitles(): Observable<Title[]> {\n    return this.userProfileFacade.getTitles();\n  }\n\n  getRegions(): Observable<Region[]> {\n    let selectedCountryCode = this.form.get('country.isocode').value;\n    let newCountryCode: string;\n\n    return this.getForm()\n      .get('country.isocode')\n      .valueChanges.pipe(\n        filter((countryIsoCode) => Boolean(countryIsoCode)),\n        switchMap((countryIsoCode) => {\n          newCountryCode = countryIsoCode;\n          return this.userAddressService.getRegions(countryIsoCode);\n        }),\n        tap((regions: Region[]) => {\n          const regionControl = this.form.get('region.isocode');\n          if (!regions || regions.length === 0) {\n            regionControl.disable();\n          } else {\n            regionControl.enable();\n          }\n          if (selectedCountryCode && newCountryCode !== selectedCountryCode) {\n            regionControl.reset();\n          }\n          selectedCountryCode = newCountryCode;\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Address, RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, first, pluck } from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { UnitAddressFormService } from '../form/unit-address-form.service';\nimport { CurrentUnitAddressService } from './current-unit-address.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressItemService extends ItemService<Address> {\n  constructor(\n    protected currentItemService: CurrentUnitAddressService,\n    protected routingService: RoutingService,\n    protected formService: UnitAddressFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  protected unitRouteParam$ = this.routingService\n    .getParams()\n    .pipe(pluck(ROUTE_PARAMS.unitCode), distinctUntilChanged());\n\n  load(unitUid: string, addressId: string): Observable<Address> {\n    return this.unitService\n      .getAddress(unitUid, addressId)\n      .pipe(filter((list) => Boolean(list)));\n  }\n\n  update(\n    addressCode: string,\n    address: Address\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n      this.unitService.updateAddress(unitCode, addressCode, address);\n    });\n    return this.unitService.getAddressLoadingStatus(addressCode);\n  }\n\n  protected create(\n    value: Address\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.unitRouteParam$\n      .pipe(first())\n      .subscribe((unitCode) => this.unitService.createAddress(unitCode, value));\n    return this.unitService.getAddressLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return this.currentItemService.getDetailsRoute();\n  }\n\n  delete(\n    addressId: string,\n    unitUid: string\n  ): Observable<OrganizationItemStatus<Address>> {\n    this.launchList();\n    this.unitService.deleteAddress(unitUid, addressId);\n    return this.unitService.getAddressLoadingStatus(addressId);\n  }\n\n  launchDetails(item: Address): void {\n    if (!item.id) {\n      // since the ID is generated in the backend\n      // we redirect to the list instead.\n      this.launchList();\n    } else {\n      this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n        this.routingService.go({\n          cxRoute: this.getDetailsRoute(),\n          params: { ...item, uid: unitCode },\n        });\n      });\n    }\n  }\n\n  protected launchList() {\n    this.unitRouteParam$.pipe(first()).subscribe((unitCode) => {\n      this.routingService.go({\n        cxRoute: 'orgUnitAddressList',\n        params: { uid: unitCode },\n      });\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Address, B2BUnit, Country, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitAddressItemService } from '../services/unit-address-item.service';\n\n@Component({\n  selector: 'cx-org-unit-address-details',\n  templateUrl: './unit-address-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitAddressItemService,\n    },\n  ],\n})\nexport class UnitAddressDetailsComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService.item$;\n\n  model$: Observable<Address> = this.itemService.key$.pipe(\n    withLatestFrom(this.unit$),\n    switchMap(([code, unit]) => this.itemService.load(unit.uid, code)),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  getCountry(isoCode): Observable<Country> {\n    return this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((countries) =>\n        countries.find((country) => country.isocode === isoCode)\n      )\n    );\n  }\n\n  constructor(\n    protected itemService: ItemService<Address>,\n    protected currentUnitService: CurrentUnitService,\n    protected userAddressService: UserAddressService\n  ) {}\n}\n","<ng-container *ngIf=\"unit$ | async as unit\">\n  <cx-org-card\n    *ngIf=\"model$ | async as model\"\n    i18nRoot=\"orgUnitAddress.details\"\n    [subtitle]=\"'orgUnitAddress.details.subtitle' | cxTranslate: { item: unit }\"\n    [cxFocus]=\"{ refreshFocus: model }\"\n  >\n    <a class=\"link\" actions routerLink=\"edit\">\n      {{ 'organization.edit' | cxTranslate }}\n    </a>\n\n    <cx-org-delete-item\n      actions\n      key=\"id\"\n      [additionalParam]=\"unit.uid\"\n      i18nRoot=\"orgUnitAddress\"\n    ></cx-org-delete-item>\n\n    <section main class=\"details\">\n      <div class=\"property\">\n        <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n        <span class=\"value\"> {{ model.firstName }} {{ model.lastName }} </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnit.unit' | cxTranslate }}</label>\n        <span class=\"value\">\n          <a\n            [routerLink]=\"\n              {\n                cxRoute: 'orgUnitDetails',\n                params: unit\n              } | cxUrl\n            \"\n          >\n            {{ unit.name }}\n          </a>\n        </span>\n      </div>\n\n      <div class=\"property full-width\">\n        <label>{{ 'orgUnitAddress.formattedAddress' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ model.formattedAddress }}\n        </span>\n      </div>\n\n      <div class=\"property\">\n        <label>{{ 'orgUnitAddress.country' | cxTranslate }}</label>\n        <span class=\"value\">\n          {{ (getCountry(model.country.isocode) | async)?.name }}\n        </span>\n      </div>\n    </section>\n  </cx-org-card>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../../../shared/card/card.module';\nimport { UnitAddressDetailsComponent } from './unit-address-details.component';\nimport { DeleteItemModule } from '../../../../shared/detail/delete-item-action/delete-item.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    DeleteItemModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UnitAddressDetailsComponent],\n})\nexport class UnitAddressDetailsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CellComponent } from '../../../../shared/table/cell.component';\n\n@Component({\n  selector: 'cx-org-link-cell',\n  template: `\n    <ng-container *ngIf=\"unitKey$ | async as uid\">\n      <a\n        *ngIf=\"linkable; else text\"\n        [routerLink]=\"{ cxRoute: route, params: getRouterModel(uid) } | cxUrl\"\n        [tabIndex]=\"tabIndex\"\n      >\n        <ng-container *ngTemplateOutlet=\"text\"></ng-container>\n      </a>\n    </ng-container>\n\n    <ng-template #text>\n      <span class=\"text\" title=\"{{ property }}\">{{ property }}</span>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkCellComponent extends CellComponent {\n  unitKey$: Observable<string> = this.itemService.key$;\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected itemService: ItemService<B2BUnit>\n  ) {\n    super(outlet);\n  }\n\n  get tabIndex() {\n    return 0;\n  }\n\n  getRouterModel(uid: string): any {\n    return { ...this.outlet.context, uid };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Address, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAddressListService extends SubListService<Address> {\n  protected tableType = OrganizationTableType.UNIT_ADDRESS;\n  protected _domainType = OrganizationTableType.UNIT_ADDRESS;\n\n  constructor(\n    protected tableService: TableService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Address>> {\n    return this.orgUnitService.getAddresses(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { UnitAddressListService } from './unit-address-list.service';\n\n@Component({\n  selector: 'cx-org-unit-address-list',\n  templateUrl: './unit-address-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitAddressListService,\n    },\n  ],\n})\nexport class UnitAddressListComponent {\n  routerKey = ROUTE_PARAMS.addressCode;\n}\n","<cx-org-sub-list\n  key=\"id\"\n  [routerKey]=\"routerKey\"\n  class=\"has-nested-view\"\n  [showHint]=\"true\"\n>\n  <a actions class=\"link\" routerLink=\"create\">\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { SubListModule } from '../../../../shared/sub-list/sub-list.module';\nimport { LinkCellComponent } from './link-cell.component';\nimport { UnitAddressListComponent } from './unit-address-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, UrlModule, SubListModule],\n  declarations: [UnitAddressListComponent, LinkCellComponent],\n})\nexport class UnitAddressListModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Address, B2BUnit, Country, Region, Title } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { UnitAddressItemService } from '../services/unit-address-item.service';\nimport { UnitAddressFormService } from './unit-address-form.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\n\n@Component({\n  selector: 'cx-org-unit-address-form',\n  templateUrl: './unit-address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitAddressItemService,\n    },\n  ],\n})\nexport class UnitAddressFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  key$ = this.itemService.key$;\n  countries$: Observable<Country[]> = this.formService.getCountries();\n  titles$: Observable<Title[]> = this.formService.getTitles();\n  regions$: Observable<Region[]> = this.formService.getRegions();\n\n  unit$: Observable<B2BUnit> = this.currentUnitService.item$;\n\n  constructor(\n    protected itemService: ItemService<Address>,\n    protected formService: UnitAddressFormService,\n    protected currentUnitService: CurrentUnitService\n  ) {}\n\n  ngOnInit(): void {}\n}\n","<cx-org-form\n  i18nRoot=\"orgUnitAddress\"\n  [animateBack]=\"!(key$ | async)\"\n  [subtitle]=\"\n    'orgUnitAddress.details.subtitle' | cxTranslate: { item: (unit$ | async) }\n  \"\n>\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label aria-required=\"true\" formGroupName=\"country\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.country' | cxTranslate\n      }}</span>\n      <ng-select\n        class=\"country-select\"\n        formControlName=\"isocode\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"countries$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"isocode\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('country.isocode')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.titles' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n        appendTo=\"cx-org-list\"\n      >\n      </ng-select>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.firstName' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"{{ 'orgUnitAddress.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.lastName' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.address1' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.streetAddress' | cxTranslate }}\"\n        formControlName=\"line1\"\n      />\n      <cx-form-errors [control]=\"form.get('line1')\"></cx-form-errors>\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.address2' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.aptSuite' | cxTranslate }}\"\n        formControlName=\"line2\"\n      />\n    </label>\n\n    <label class=\"full-width\">\n      <span class=\"label-content\">{{\n        'orgUnitAddress.phoneNumber' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.phoneNumber' | cxTranslate }}\"\n        formControlName=\"phone\"\n      />\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.city' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.city' | cxTranslate }}\"\n        formControlName=\"town\"\n      />\n      <cx-form-errors [control]=\"form.get('town')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUnitAddress.zipCode' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"{{ 'orgUnitAddress.zipCode' | cxTranslate }}\"\n        formControlName=\"postalCode\"\n      />\n      <cx-form-errors [control]=\"form.get('postalCode')\"></cx-form-errors>\n    </label>\n\n    <label></label>\n\n    <ng-container *ngIf=\"regions$ | async as regions\">\n      <label\n        class=\"full-width\"\n        aria-required=\"true\"\n        formGroupName=\"region\"\n        *ngIf=\"regions.length > 0\"\n      >\n        <span class=\"label-content required\">{{\n          'orgUnitAddress.state' | cxTranslate\n        }}</span>\n        <ng-select\n          class=\"region-select\"\n          formControlName=\"isocode\"\n          [searchable]=\"true\"\n          [clearable]=\"false\"\n          [items]=\"regions\"\n          bindLabel=\"name\"\n          bindValue=\"isocode\"\n          placeholder=\"{{ 'orgUnitAddress.selectOne' | cxTranslate }}\"\n          appendTo=\"cx-org-list\"\n        >\n        </ng-select>\n        <cx-form-errors [control]=\"form.get('region.isocode')\"></cx-form-errors>\n      </label>\n    </ng-container>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../../../shared/form/form.module';\nimport { UnitAddressFormComponent } from './unit-address-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  declarations: [UnitAddressFormComponent],\n})\nexport class UnitAddressFormModule {}\n","import { NgModule } from '@angular/core';\nimport { UnitAddressDetailsModule } from './details/unit-address-details.module';\nimport { UnitAddressListModule } from './list/unit-address-list.module';\nimport { UnitAddressFormModule } from './form/unit-address-form.module';\n\n@NgModule({\n  imports: [\n    UnitAddressListModule,\n    UnitAddressDetailsModule,\n    UnitAddressFormModule,\n  ],\n})\nexport class UnitAddressModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport {\n  OrgUnitService,\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitApproverListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_APPROVERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getUsers(code, B2BUserRole.APPROVER, pagination);\n  }\n\n  /**\n   * @override\n   * Assign budget to the cost center.\n   */\n  assign(\n    unitId: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.unitService.assignApprover(unitId, customerId, B2BUserRole.APPROVER);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  /**\n   * @override\n   * Unassign the budget from the cost center.\n   */\n  unassign(\n    unitId: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.unitService.unassignApprover(unitId, customerId, B2BUserRole.APPROVER);\n    return this.userService.getLoadingStatus(customerId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../../shared/index';\nimport { UnitApproverListService } from '../unit-approver-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitAssignedApproverListService extends UnitApproverListService {\n  protected tableType = OrganizationTableType.UNIT_ASSIGNED_APPROVERS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    this.unitService.clearAssignedUsersList(\n      code,\n      B2BUserRole.APPROVER,\n      pagination\n    );\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { UnitAssignedApproverListService } from './unit-assigned-approver-list.service';\n\n@Component({\n  selector: 'cx-org-unit-assigned-approver-list',\n  templateUrl: './unit-assigned-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitAssignedApproverListService,\n    },\n  ],\n})\nexport class UnitAssignedApproverListComponent {}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UnitApproverListService } from './unit-approver-list.service';\n\n@Component({\n  selector: 'cx-org-unit-approver-list',\n  templateUrl: './unit-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitApproverListService,\n    },\n  ],\n})\nexport class UnitApproverListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitAssignedApproverListComponent } from './assigned/unit-assigned-approver-list.component';\nimport { UnitApproverListComponent } from './unit-approver-list.component';\n\n@NgModule({\n  imports: [I18nModule, RouterModule, SubListModule],\n  declarations: [UnitApproverListComponent, UnitAssignedApproverListComponent],\n})\nexport class UnitApproverListModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitChildrenService extends SubListService<B2BUnitNode> {\n  protected tableType = OrganizationTableType.UNIT_CHILDREN;\n  protected _domainType = OrganizationTableType.UNIT;\n\n  constructor(\n    protected tableService: TableService,\n    protected orgUnitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  // method to be adjusted for proper children list when ready\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUnitNode>> {\n    return this.orgUnitService.getChildUnits(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../services/current-unit.service';\nimport { UnitChildrenService } from './unit-children.service';\n\n@Component({\n  selector: 'cx-org-unit-children',\n  templateUrl: './unit-children.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitChildrenService,\n    },\n  ],\n})\nexport class UnitChildrenComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitChildren\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../shared/detail/disable-info/disable-info.module';\nimport { ListModule } from '../../../shared/list/list.module';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitChildrenComponent } from './unit-children.component';\n\n@NgModule({\n  imports: [\n    ListModule,\n    I18nModule,\n    RouterModule,\n    SubListModule,\n    CommonModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitChildrenComponent],\n})\nexport class UnitChildrenModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitCostCenterListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_COST_CENTERS;\n  protected _domainType = OrganizationTableType.COST_CENTER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    _pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getCostCenters(code);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../services/current-unit.service';\nimport { UnitCostCenterListService } from './unit-cost-centers.service';\n\n@Component({\n  selector: 'cx-org-unit-cost-centers',\n  templateUrl: './unit-cost-centers.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitCostCenterListService,\n    },\n  ],\n})\nexport class UnitCostCenterListComponent {\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitCostCenters\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../shared/detail/disable-info/disable-info.module';\nimport { SubListModule } from '../../../shared/sub-list/sub-list.module';\nimport { UnitCostCenterListComponent } from './unit-cost-centers.component';\n\n@NgModule({\n  imports: [\n    I18nModule,\n    RouterModule,\n    SubListModule,\n    CommonModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitCostCenterListComponent],\n})\nexport class UnitCostCenterListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CellComponent } from '../../../../shared/table/cell.component';\n\n@Component({\n  selector: 'cx-org-unit-user-link-cell',\n  template: `\n    <a\n      *ngIf=\"hasItem && unitKey$ | async as uid\"\n      [routerLink]=\"\n        { cxRoute: 'orgUnitUserRoles', params: getRouterModel(uid) } | cxUrl\n      \"\n    >\n      {{ 'orgUser.roles' | cxTranslate }}\n    </a>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitUserRolesCellComponent extends CellComponent {\n  unitKey$: Observable<string> = this.itemService.key$;\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected itemService: ItemService<B2BUnit>\n  ) {\n    super(outlet);\n  }\n\n  getRouterModel(uid: string): any {\n    return { ...this.outlet.context, uid };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  B2BUserRole,\n  EntitiesModel,\n  PaginationModel,\n} from '@spartacus/core';\nimport { OrgUnitService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.UNIT_USERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.unitService.getUsers(code, B2BUserRole.CUSTOMER, pagination);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable, of } from 'rxjs';\nimport { ListService } from '../../../../shared/list/list.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitUserListService } from '../services/unit-user-list.service';\n\n@Component({\n  selector: 'cx-org-unit-user-list',\n  templateUrl: './unit-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UnitUserListService,\n    },\n  ],\n})\nexport class UnitUserListComponent {\n  routerKey = ROUTE_PARAMS.userCode;\n\n  unit$: Observable<B2BUnit> = this.currentUnitService\n    ? this.currentUnitService.item$\n    : of({ active: true });\n\n  constructor(protected currentUnitService: CurrentUnitService) {}\n}\n","<cx-org-sub-list key=\"customerId\" [routerKey]=\"routerKey\" [showHint]=\"true\">\n  <a\n    actions\n    class=\"link\"\n    routerLink=\"create\"\n    [class.disabled]=\"!(unit$ | async)?.active\"\n  >\n    {{ 'organization.create' | cxTranslate }}\n  </a>\n  <cx-org-disable-info\n    info\n    i18nRoot=\"orgUnitUsers\"\n    [displayInfoConfig]=\"{\n      disabledCreate: true,\n      disabledEnable: false,\n      disabledEdit: false\n    }\"\n  >\n  </cx-org-disable-info>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { DisableInfoModule } from '../../../../shared/detail/disable-info/disable-info.module';\nimport { SubListModule } from '../../../../shared/sub-list/sub-list.module';\nimport { UnitUserRolesCellComponent } from './unit-user-link-cell.component';\nimport { UnitUserListComponent } from './unit-user-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    SubListModule,\n    DisableInfoModule,\n  ],\n  declarations: [UnitUserListComponent, UnitUserRolesCellComponent],\n})\nexport class UnitUserListModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitUserService extends CurrentItemService<B2BUser> {\n  constructor(\n    protected routingService: RoutingService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(routingService);\n  }\n\n  getDetailsRoute(): string {\n    return 'orgUnitUserList';\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userCode;\n  }\n\n  protected getItem(customerId: string): Observable<B2BUser> {\n    return this.b2bUserService.get(customerId);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.b2bUserService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { FormService } from '../../../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserRolesFormService extends FormService<B2BUser> {\n  availableRoles: B2BUserRole[] = this.userService.getAllRoles();\n\n  constructor(protected userService: B2BUserService) {\n    super();\n  }\n\n  getForm(item?: B2BUser): FormGroup {\n    // if form already exist, while switching between users\n    // it didn't patchData again, so used force rebuild\n    this.form = null;\n    return super.getForm(item);\n  }\n\n  protected build() {\n    const form = new FormGroup({});\n    this.availableRoles.forEach((role) =>\n      form.addControl(role, new FormControl())\n    );\n    this.form = form;\n  }\n\n  protected patchData(item: B2BUser) {\n    super.patchData(item);\n    if (item) {\n      item.roles?.forEach((role) => {\n        this.form.get(role).setValue(true);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../../../shared/item.service';\nimport { CurrentUnitUserService } from '../services/current-unit-user.service';\nimport { UnitUserRolesFormService } from './unit-user-roles-form.service';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserRolesItemService extends ItemService<B2BUser> {\n  constructor(\n    protected currentItemService: CurrentUnitUserService,\n    protected routingService: RoutingService,\n    protected formService: UnitUserRolesFormService,\n    protected unitService: OrgUnitService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    // we enable the unit so that the underlying\n    // save method can read the complete form.value.\n    form.get('orgUnit').enable();\n    return super.save(form, key);\n  }\n\n  load(unitUid: string): Observable<B2BUser> {\n    return this.b2bUserService.get(unitUid);\n  }\n\n  update(\n    customerId: string,\n    _user: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return this.b2bUserService.getLoadingStatus(customerId);\n  }\n\n  protected create(\n    _customer: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    return this.b2bUserService.getLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return this.currentItemService.getDetailsRoute();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUserService extends CurrentItemService<B2BUser> {\n  readonly name$: Observable<string> = this.item$.pipe(\n    map((user: B2BUser) => user.name)\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected b2bUserService: B2BUserService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userCode;\n  }\n\n  protected getItem(code: string): Observable<B2BUser> {\n    return this.b2bUserService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.b2bUserService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserFormService extends FormService<B2BUser> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('customerId', new FormControl(''));\n    form.setControl('titleCode', new FormControl(''));\n    form.setControl('firstName', new FormControl('', Validators.required));\n    form.setControl('lastName', new FormControl('', Validators.required));\n    form.setControl(\n      'email',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.emailValidator,\n      ])\n    );\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    form.setControl('roles', new FormArray([]));\n    form.setControl('isAssignedToApprovers', new FormControl(false));\n\n    form.get('roles').valueChanges.subscribe((roles: string[]) => {\n      if (roles.includes(B2BUserRole.APPROVER)) {\n        form.get('isAssignedToApprovers').enable();\n      } else {\n        form.get('isAssignedToApprovers').disable();\n        form.get('isAssignedToApprovers').reset();\n      }\n    });\n\n    this.form = form;\n  }\n\n  protected patchData(item: B2BUser) {\n    super.patchData(item);\n    if (item) {\n      const roles = this.form.get('roles') as FormArray;\n      item.roles?.forEach((role) => {\n        if (!(roles.value as string[]).includes(role)) {\n          roles.push(new FormControl(role));\n        }\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, RoutingService } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UserFormService } from '../form/user-form.service';\nimport { CurrentUserService } from './current-user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserItemService extends ItemService<B2BUser> {\n  constructor(\n    protected currentItemService: CurrentUserService,\n    protected routingService: RoutingService,\n    protected formService: UserFormService,\n    protected userService: B2BUserService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<B2BUser> {\n    this.userService.load(code);\n    return this.userService.get(code);\n  }\n\n  update(code, value: B2BUser): Observable<OrganizationItemStatus<B2BUser>> {\n    delete value.approvers;\n    this.userService.update(code, value);\n    return this.userService.getLoadingStatus(code);\n  }\n\n  protected create(\n    value: B2BUser\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.create(value);\n    return this.userService.getLoadingStatus(null);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgUserDetails';\n  }\n\n  // @override to avoid errors while creation\n  launchDetails(item: B2BUser): void {\n    if (item.customerId !== null) {\n      super.launchDetails(item);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole } from '@spartacus/core';\nimport {\n  B2BUserService,\n  LoadStatus,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { ItemService } from '../../../../shared/item.service';\nimport { MessageService } from '../../../../shared/message/services/message.service';\nimport { UnitUserRolesFormService } from './unit-user-roles-form.service';\nimport { UnitUserRolesItemService } from './unit-user-roles-item.service';\nimport { UserItemService } from '../../../../user/services/user-item.service';\n\n@Component({\n  selector: 'cx-org-unit-user-roles',\n  templateUrl: './unit-user-roles.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UnitUserRolesItemService,\n    },\n  ],\n})\nexport class UnitUserRolesFormComponent {\n  protected item: B2BUser;\n\n  @ViewChild(MessageService, { read: MessageService })\n  messageService: MessageService;\n\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    tap((item) => {\n      if (!this.item) {\n        this.item = item;\n      }\n      if (this.item.roles?.join() !== item.roles?.join()) {\n        this.item = { ...this.item, ...item };\n      }\n    }),\n    map((item) => this.formService.getForm(item))\n  );\n\n  availableRoles: B2BUserRole[] = this.userService.getAllRoles();\n\n  constructor(\n    protected itemService: ItemService<B2BUser>,\n    protected formService: UnitUserRolesFormService,\n    protected userService: B2BUserService,\n    protected userItemService: UserItemService\n  ) {}\n\n  save(form: FormGroup) {\n    form.disable();\n    const roles = [...this.availableRoles].filter((r) => !!form.get(r).value);\n    this.userItemService\n      .update(this.item.customerId, { roles })\n      .pipe(\n        take(1),\n        filter((data) => data.status === LoadStatus.SUCCESS)\n      )\n      .subscribe((data) => {\n        this.notify({ ...this.item, ...data.item });\n        form.enable();\n      });\n  }\n\n  protected notify(item: B2BUser) {\n    this.messageService.add({\n      message: {\n        key: 'orgUnitUserRoles.messages.rolesUpdated',\n        params: { item },\n      },\n    });\n  }\n}\n","<form *ngIf=\"form$ | async as form\" (submit)=\"save(form)\">\n  <cx-org-card\n    #card\n    [previous]=\"false\"\n    i18nRoot=\"orgUnitUserRoles\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <a actions routerLink=\"../../\">\n      <span (click)=\"card.closeView($event)\">\n        {{ 'organization.done' | cxTranslate }}\n      </span>\n    </a>\n\n    <section main class=\"details\" [formGroup]=\"form\">\n      <fieldset class=\"full-width\">\n        <label class=\"form-check\" *ngFor=\"let role of availableRoles\">\n          <input\n            type=\"checkbox\"\n            [formControlName]=\"role\"\n            (change)=\"save(form)\"\n          />\n          <span class=\"form-check-label\">\n            {{ 'organization.userRoles.' + role | cxTranslate }}\n          </span>\n        </label>\n      </fieldset>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../../../shared/card/card.module';\nimport { UnitUserRolesFormComponent } from './unit-user-roles.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    FormsModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UnitUserRolesFormComponent],\n})\nexport class UnitUserRolesModule {}\n","import { NgModule } from '@angular/core';\nimport { UnitUserListModule } from './list/unit-user-list.module';\nimport { UnitUserRolesModule } from './roles/unit-user-roles.module';\n\n@NgModule({\n  imports: [UnitUserListModule, UnitUserRolesModule],\n})\nexport class UnitUsersModule {}\n","export enum TREE_TOGGLE {\n  EXPANDED,\n  COLLAPSED,\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUnitNode,\n  B2BUnitTreeNode,\n} from '@spartacus/organization/administration/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { TREE_TOGGLE } from './unit-tree.model';\n\n/**\n * Service to populate Unit data to `Table` data. Unit\n * data is driven by the table configuration, using the `OrganizationTables.UNIT`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitTreeService {\n  /**\n   * Indicates the minimum number of (initial) expanded units.\n   */\n  protected minimalExpanded = 1;\n\n  protected globalToggle$: BehaviorSubject<TREE_TOGGLE> = new BehaviorSubject(\n    undefined\n  );\n\n  treeToggle$: BehaviorSubject<Map<string, TREE_TOGGLE>> = new BehaviorSubject(\n    new Map()\n  );\n\n  /**\n   * Initializes the unit tree with an active unit.\n   *\n   * The active unit will be collapsed.\n   */\n  initialize(root: B2BUnitNode, activeUnitId: string): void {\n    if (activeUnitId) {\n      this.expandUntilActiveNode(root, activeUnitId);\n    }\n  }\n\n  /**\n   * Sets the global toggle state to _collapsed_ and clears the toggle state\n   * for individual units.\n   */\n  collapseAll() {\n    this.globalToggle$.next(TREE_TOGGLE.COLLAPSED);\n    this.treeToggle$.next(new Map());\n  }\n\n  /**\n   * Sets the global toggle state to _expanded_ and clears the toggle state\n   * for individual units.\n   */\n  expandAll() {\n    this.globalToggle$.next(TREE_TOGGLE.EXPANDED);\n    this.treeToggle$.next(new Map());\n  }\n\n  /**\n   * Indicates whether the give unit is expanded.\n   *\n   * The returned (boolean) expand state is driven by the global toggle\n   * state (expand / collapse all) and the toggle state for individual units.\n   * There's also the `minimalExpanded` taken into consideration.\n   */\n  isExpanded(unitId: string, level: number): boolean {\n    const toggleState = this.treeToggle$.value?.get(unitId);\n\n    if (\n      this.globalToggle$.value === TREE_TOGGLE.COLLAPSED &&\n      toggleState !== TREE_TOGGLE.EXPANDED\n    ) {\n      return false;\n    }\n\n    return (\n      // the current node is expanded\n      toggleState === TREE_TOGGLE.EXPANDED ||\n      // the node is not collapsed, but globally expanded (\"expand all\") or above\n      // the minimum visible nodes\n      ((this.globalToggle$.value === TREE_TOGGLE.EXPANDED ||\n        level < this.minimalExpanded) &&\n        toggleState !== TREE_TOGGLE.COLLAPSED)\n    );\n  }\n\n  toggle(unit: B2BUnitTreeNode) {\n    const currentState = this.treeToggle$.value;\n    currentState.set(\n      unit.id,\n      this.isExpanded(unit.id, unit.depthLevel)\n        ? TREE_TOGGLE.COLLAPSED\n        : TREE_TOGGLE.EXPANDED\n    );\n    this.treeToggle$.next(currentState);\n  }\n\n  /**\n   * Expands all tree nodes till the active unit, to ensure that the\n   * full tree is collapsed till the active item.\n   *\n   * This is useful while navigating the tree by the router.\n   */\n  protected expandUntilActiveNode(node: B2BUnitNode, activeUnitId: string) {\n    const hasActiveChild = (n: B2BUnitNode, id: string): boolean =>\n      !!n.children?.find(\n        (child) => child.id === id || hasActiveChild(child, id)\n      );\n\n    const findInvolvedTreeNodes = (\n      n: B2BUnitNode,\n      activeItems = []\n    ): string[] => {\n      if (hasActiveChild(n, activeUnitId)) {\n        activeItems.push(n.id);\n      }\n      n.children.forEach((child) => {\n        findInvolvedTreeNodes(child, activeItems);\n      });\n      return activeItems;\n    };\n\n    const m = this.treeToggle$.value;\n    findInvolvedTreeNodes(node).forEach((activeId) => {\n      if (m.get(activeId) !== TREE_TOGGLE.EXPANDED) {\n        m.set(activeId, TREE_TOGGLE.EXPANDED);\n      }\n    });\n    if (m !== this.treeToggle$.value) {\n      this.treeToggle$.next(m);\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UnitTreeService } from '../services/unit-tree.service';\n\n@Component({\n  selector: 'cx-org-unit-list',\n  templateUrl: './unit-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitListComponent {\n  constructor(protected unitTreeService: UnitTreeService) {}\n\n  expandAll() {\n    this.unitTreeService.expandAll();\n  }\n\n  collapseAll() {\n    this.unitTreeService.collapseAll();\n  }\n}\n","<cx-org-list>\n  <ng-container actions>\n    <button class=\"link\" (click)=\"expandAll()\">\n      {{ 'orgUnit.tree.expandAll' | cxTranslate }}\n    </button>\n    <button class=\"link\" (click)=\"collapseAll()\">\n      {{ 'orgUnit.tree.collapseAll' | cxTranslate }}\n    </button>\n  </ng-container>\n</cx-org-list>\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { B2BUnit } from '@spartacus/core';\nimport { B2BUnitTreeNode } from '@spartacus/organization/administration/core';\nimport {\n  OutletContextData,\n  TableDataOutletContext,\n} from '@spartacus/storefront';\nimport { CellComponent } from '../../../shared/table/cell.component';\nimport { UnitTreeService } from '../../services/unit-tree.service';\n\n@Component({\n  selector: 'cx-org-toggle-link-cell',\n  templateUrl: './toggle-link-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ToggleLinkCellComponent extends CellComponent {\n  @HostBinding('style.--cx-depth-level')\n  get depthLevel() {\n    return this.model.depthLevel;\n  }\n\n  constructor(\n    protected outlet: OutletContextData<TableDataOutletContext>,\n    protected unitTreeService: UnitTreeService\n  ) {\n    super(outlet);\n  }\n\n  get combinedName() {\n    return this.property ? `${this.property} (${this.count})` : '';\n  }\n\n  get tabIndex() {\n    return 0;\n  }\n\n  get expanded() {\n    return this.model.expanded;\n  }\n\n  /**\n   * Counts the number of descendants\n   */\n  get count() {\n    return this.model.count;\n  }\n\n  toggleItem(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.unitTreeService.toggle(this.model as unknown as B2BUnitTreeNode);\n  }\n\n  /**\n   * Indicates whether the tree item should have a toggle navigation.\n   *\n   * The toggle navigation is used in case the tree item has descendants,\n   * and if the tree item level is not configured to be shown anyway.\n   */\n  get isSwitchable(): boolean {\n    return this.count > 0;\n  }\n\n  // TODO: leverage these methods when available from future PR.\n  get hasItem(): boolean {\n    return !!this.item && Object.keys(this.item).length > 0;\n  }\n\n  protected get item(): B2BUnit | null {\n    if (!this.outlet.context) {\n      return null;\n    }\n    const { _field, _options, _type, _i18nRoot, ...all } = this.outlet.context;\n    return all as B2BUnit;\n  }\n}\n","<a\n  *ngIf=\"hasItem\"\n  class=\"hide-focus-border\"\n  [routerLink]=\"{ cxRoute: route, params: routeModel } | cxUrl\"\n  [tabIndex]=\"tabIndex\"\n>\n  <button\n    *ngIf=\"isSwitchable\"\n    class=\"button tree-item-toggle\"\n    type=\"button\"\n    (click)=\"toggleItem($event)\"\n  >\n    <cx-icon [type]=\"expanded ? 'CARET_DOWN' : 'CARET_RIGHT'\"></cx-icon>\n  </button>\n  <span class=\"text\" title=\"{{ combinedName }}\">{{ combinedName }}</span>\n</a>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { UnitListComponent } from './unit-list.component';\nimport { IconModule } from '@spartacus/storefront';\nimport { ListModule } from '../../shared/list/list.module';\nimport { ToggleLinkCellComponent } from './toggle-link/toggle-link-cell.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    ListModule,\n  ],\n  declarations: [UnitListComponent, ToggleLinkCellComponent],\n})\nexport class UnitListModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-user-details-cell',\n  templateUrl: './user-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUserDetails',\n            params: model\n          } | cxUrl\n        \"\n        >{{ model.name }}</a\n      >\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <li\n          *ngFor=\"let role of model.roles; let isLast = last\"\n          [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n        ></li>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model?.name }}\n</button>\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-unit-details-cell',\n  templateUrl: './unit-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UnitDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUnit.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: { uid: model.id }\n          } | cxUrl\n        \"\n      >\n        {{ model.name }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.id }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUnit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.approvalProcess?.name\">\n      <label>{{ 'orgUnit.approvalProcess' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.approvalProcess?.name }}\n      </span>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUnitChildService extends CurrentUnitService {\n  protected getParamKey(): string {\n    // We must come up with a fake param key, to avoid that the (parent) unit\n    // code is loaded from the route parameter map.\n    return 'childUnitCode';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { B2BUnit, RoutingService } from '@spartacus/core';\nimport {\n  OrgUnitService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { UnitFormService } from '../../../form/unit-form.service';\nimport { UnitItemService } from '../../../services/unit-item.service';\nimport { CurrentUnitChildService } from './current-unit-child.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitChildItemService extends UnitItemService {\n  constructor(\n    protected currentItemService: CurrentUnitChildService,\n    protected routingService: RoutingService,\n    protected formService: UnitFormService,\n    protected unitService: OrgUnitService\n  ) {\n    super(currentItemService, routingService, formService, unitService);\n  }\n\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUnit>> {\n    // we enable the parentOrgUnit temporarily so that the underlying\n    // save method can read the complete form.value.\n    form.get('parentOrgUnit')?.enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitChildren';\n  }\n\n  protected buildRouteParams(item: B2BUnit) {\n    return { uid: item.parentOrgUnit.uid };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitItemService } from '../../../services/unit-item.service';\nimport { UnitChildItemService } from './unit-child-item.service';\n\n@Component({\n  selector: 'cx-org-unit-child-create',\n  templateUrl: './unit-child-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `UnitItemService` to\n    // let the form component work with child units.\n    {\n      provide: UnitItemService,\n      useExisting: UnitChildItemService,\n    },\n  ],\n})\nexport class UnitChildCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-unit-form\n  [createChildUnit]=\"true\"\n  i18nRoot=\"orgUnit.children\"\n></cx-org-unit-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UnitFormModule } from '../../../form/unit-form.module';\nimport { UnitChildCreateComponent } from './unit-child-create.component';\n\n@NgModule({\n  imports: [CommonModule, UnitFormModule],\n  declarations: [UnitChildCreateComponent],\n})\nexport class UnitChildCreateModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { CostCenter } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { CostCenterItemService } from '../../../../cost-center/services/cost-center-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitCostCenterItemService extends CostCenterItemService {\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<CostCenter>> {\n    // we enable the unit so that the underlying\n    // save method can read the complete form.value.\n    form.get('unit').enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'orgUnitCostCenters'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitCostCenters';\n  }\n\n  protected buildRouteParams(item: CostCenter) {\n    return { uid: item.unit.uid };\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CostCenterItemService } from '../../../../cost-center/services/cost-center-item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitCostCenterItemService } from './unit-cost-center-item.service';\n\n@Component({\n  selector: 'cx-org-unit-cost-center-create',\n  templateUrl: './unit-cost-center-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `CostCenterItemService` to\n    // let the form component work with unit cost centers.\n    {\n      provide: CostCenterItemService,\n      useExisting: UnitCostCenterItemService,\n    },\n  ],\n})\nexport class UnitCostCenterCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-cost-center-form [unitKey]=\"unitKey$ | async\"></cx-org-cost-center-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CostCenterFormModule } from '../../../../cost-center/form/cost-center-form.module';\nimport { UnitCostCenterCreateComponent } from './unit-cost-center-create.component';\n\n@NgModule({\n  imports: [CommonModule, CostCenterFormModule],\n  declarations: [UnitCostCenterCreateComponent],\n})\nexport class UnitCostCenterCreateModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { B2BUser } from '@spartacus/core';\nimport { OrganizationItemStatus } from '@spartacus/organization/administration/core';\nimport { UserItemService } from '../../../../user/services/user-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitUserItemService extends UserItemService {\n  save(\n    form: FormGroup,\n    key?: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    // we enable the orgUnit temporarily so that the underlying\n    // save method can read the complete form.value.\n    form.get('orgUnit')?.enable();\n    return super.save(form, key);\n  }\n\n  /**\n   * @override\n   * Returns 'unitDetails'\n   */\n  protected getDetailsRoute(): string {\n    return 'orgUnitUserList';\n  }\n\n  protected buildRouteParams(item: B2BUser) {\n    return { uid: item.orgUnit.uid };\n  }\n\n  // @override to default method\n  launchDetails(item: B2BUser): void {\n    const cxRoute = this.getDetailsRoute();\n    const params = this.buildRouteParams(item);\n    if (cxRoute && item && Object.keys(item).length > 0) {\n      this.routingService.go({ cxRoute, params });\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { FormArray, FormControl, FormGroup } from '@angular/forms';\nimport { B2BUser, B2BUserRole, Title, UserService } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  B2BUserService,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CurrentItemService } from '../../shared/current-item.service';\nimport { ItemService } from '../../shared/item.service';\nimport { CurrentUserService } from '../services/current-user.service';\nimport { UserItemService } from '../services/user-item.service';\n\n@Component({\n  selector: 'cx-org-user-form',\n  templateUrl: './user-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserItemService,\n    },\n    {\n      provide: CurrentItemService,\n      useExisting: CurrentUserService,\n    },\n  ],\n})\nexport class UserFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  /**\n   * Initialize the business unit for the user.\n   *\n   * If there's a unit provided, we disable the unit form control.\n   */\n  @Input() set unitKey(value: string) {\n    if (value) {\n      this.form?.get('orgUnit.uid').setValue(value);\n      this.form?.get('orgUnit')?.disable();\n    }\n  }\n\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid').setValue(units[0]?.id);\n      }\n    })\n  );\n\n  titles$: Observable<Title[]> = this.userService.getTitles();\n\n  availableRoles: B2BUserRole[] = this.b2bUserService.getAllRoles();\n\n  constructor(\n    protected itemService: ItemService<B2BUser>,\n    protected unitService: OrgUnitService,\n    protected userService: UserService,\n    protected b2bUserService: B2BUserService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  updateRoles(event: MouseEvent) {\n    const { checked, value } = event.target as HTMLInputElement;\n    if (checked) {\n      this.roles.push(new FormControl(value));\n    } else {\n      this.roles.removeAt(this.roles.value.indexOf(value));\n    }\n  }\n\n  get roles(): FormArray {\n    return this.form.get('roles') as FormArray;\n  }\n\n  get isAssignedToApprovers(): FormControl {\n    return this.form.get('isAssignedToApprovers') as FormControl;\n  }\n}\n","<cx-org-form i18nRoot=\"orgUser\">\n  <ng-container main *ngIf=\"form\" [formGroup]=\"form\">\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.title' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"titleCode\"\n        [searchable]=\"false\"\n        [clearable]=\"false\"\n        [items]=\"titles$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"code\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUser.title' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('titleCode')\"></cx-form-errors>\n    </label>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.firstName' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUser.firstName' | cxTranslate }}\"\n        formControlName=\"firstName\"\n      />\n      <cx-form-errors [control]=\"form.get('firstName')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.lastName' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUser.lastName' | cxTranslate }}\"\n        formControlName=\"lastName\"\n      />\n      <cx-form-errors [control]=\"form.get('lastName')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUser.email' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"email\"\n        required\n        placeholder=\"{{ 'orgUser.email' | cxTranslate }}\"\n        formControlName=\"email\"\n      />\n      <cx-form-errors [control]=\"form.get('email')\"></cx-form-errors>\n    </label>\n\n    <fieldset aria-required=\"true\" class=\"full-width\" formArrayName=\"roles\">\n      <legend class=\"label-content required\">\n        {{ 'orgUser.roles' | cxTranslate }}\n      </legend>\n\n      <label\n        class=\"form-check\"\n        *ngFor=\"let role of availableRoles; let i = index\"\n      >\n        <input\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          [value]=\"role\"\n          [checked]=\"roles?.value?.includes(role)\"\n          (change)=\"updateRoles($event)\"\n          [disabled]=\"form?.status === 'DISABLED'\"\n        />\n        <span class=\"form-check-label\">\n          {{ 'organization.userRoles.' + role | cxTranslate }}\n        </span>\n      </label>\n    </fieldset>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgUser.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUser.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n\n    <div *ngIf=\"isAssignedToApprovers\" class=\"full-width\">\n      <label class=\"form-check\">\n        <input\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          formControlName=\"isAssignedToApprovers\"\n        />\n        <span class=\"form-check-label\">{{\n          'orgUser.assignApprover' | cxTranslate\n        }}</span>\n      </label>\n    </div>\n  </ng-container>\n</cx-org-form>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserItemService } from '../../../../user/services/user-item.service';\nimport { CurrentUnitService } from '../../../services/current-unit.service';\nimport { UnitUserItemService } from './unit-user-item.service';\n\n@Component({\n  selector: 'cx-org-unit-user-create',\n  templateUrl: './unit-user-create.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    // we provide a specific version of the `UnitItemService` to\n    // let the form component work with child units.\n    {\n      provide: UserItemService,\n      useExisting: UnitUserItemService,\n    },\n  ],\n})\nexport class UnitUserCreateComponent {\n  unitKey$: Observable<string> = this.unitService.key$;\n  constructor(protected unitService: CurrentUnitService) {}\n}\n","<cx-org-user-form\n  [unitKey]=\"unitKey$ | async\"\n  i18nRoot=\"orgUnit.users\"\n></cx-org-user-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { UserFormComponent } from './user-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  declarations: [UserFormComponent],\n  exports: [UserFormComponent],\n})\nexport class UserFormModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UserFormModule } from '../../../../user/form/user-form.module';\nimport { UnitUserCreateComponent } from './unit-user-create.component';\n\n@NgModule({\n  imports: [CommonModule, UserFormModule],\n  declarations: [UnitUserCreateComponent],\n})\nexport class UnitUserCreateModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  Address,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitAddressService } from '../links/addresses/services/current-unit-address.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UnitAddressRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUnitAddressService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<Address> {\n    return this.currentItemService.item$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel } from '@spartacus/core';\nimport {\n  B2BUnitNode,\n  B2BUnitTreeNode,\n  OrgUnitService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\nimport { UnitItemService } from './unit-item.service';\nimport { UnitTreeService } from './unit-tree.service';\n\n/**\n * Service to populate Unit data to `Table` data. Unit\n * data is driven by the table configuration, using the `OrganizationTables.UNIT`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UnitListService extends ListService<B2BUnitTreeNode> {\n  protected tableType = OrganizationTableType.UNIT;\n\n  constructor(\n    protected tableService: TableService,\n    protected unitService: OrgUnitService,\n    protected unitItemService: UnitItemService,\n    protected unitTreeService: UnitTreeService\n  ) {\n    super(tableService);\n  }\n\n  protected load(): Observable<EntitiesModel<B2BUnitTreeNode>> {\n    return this.unitService.getTree().pipe(\n      switchMap((node) =>\n        this.unitItemService.key$.pipe(\n          map((key) => {\n            this.unitTreeService.initialize(node, key);\n            return node;\n          })\n        )\n      ),\n      switchMap((tree) =>\n        this.unitTreeService.treeToggle$.pipe(map(() => tree))\n      ),\n      map((tree: B2BUnitNode) => this.convertListItem(tree))\n    );\n  }\n\n  protected convertListItem(\n    unit: B2BUnitNode,\n    depthLevel = 0,\n    pagination = { totalResults: 0 }\n  ): EntitiesModel<B2BUnitTreeNode> {\n    let values = [];\n    if (!unit) {\n      return;\n    }\n\n    const node: B2BUnitTreeNode = {\n      ...unit,\n      count: unit.children?.length ?? 0,\n      expanded: this.unitTreeService.isExpanded(unit.id, depthLevel),\n      depthLevel,\n      // tmp, should be normalized\n      uid: unit.id,\n      children: [...unit.children].sort((unitA, unitB) =>\n        unitA.name.localeCompare(unitB.name)\n      ),\n    };\n\n    values.push(node);\n    pagination.totalResults++;\n\n    node.children.forEach((childUnit) => {\n      const childList = this.convertListItem(\n        childUnit,\n        depthLevel + 1,\n        pagination\n      )?.values;\n      if (node.expanded && childList.length > 0) {\n        values = values.concat(childList);\n      }\n    });\n\n    return { values, pagination };\n  }\n\n  key(): string {\n    return 'uid';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUnit,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUnitService } from './current-unit.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UnitRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUnitService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<B2BUnit> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { BREAKPOINT, TableConfig, TableLayout } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { CostCenterDetailsCellComponent } from '../cost-center/details-cell/cost-center-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserDetailsCellComponent } from '../user/details-cell/user-details-cell.component';\nimport { UnitDetailsCellComponent } from './details-cell/unit-details-cell.component';\nimport { UnitDetailsComponent } from './details/unit-details.component';\nimport { UnitFormComponent } from './form/unit-form.component';\nimport { UnitAddressDetailsComponent } from './links/addresses/details/unit-address-details.component';\nimport { UnitAddressFormComponent } from './links/addresses/form/unit-address-form.component';\nimport { LinkCellComponent } from './links/addresses/list/link-cell.component';\nimport { UnitAddressListComponent } from './links/addresses/list/unit-address-list.component';\nimport { UnitAssignedApproverListComponent } from './links/approvers/assigned/unit-assigned-approver-list.component';\nimport { UnitApproverListComponent } from './links/approvers/unit-approver-list.component';\nimport { UnitChildCreateComponent } from './links/children/create/unit-child-create.component';\nimport { UnitChildrenComponent } from './links/children/unit-children.component';\nimport { UnitCostCenterListComponent } from './links/cost-centers/unit-cost-centers.component';\nimport {\n  UnitCostCenterCreateComponent,\n  UnitUserCreateComponent,\n} from './links/index';\nimport { UnitUserRolesCellComponent } from './links/users/list/unit-user-link-cell.component';\nimport { UnitUserListComponent } from './links/users/list/unit-user-list.component';\nimport { UnitUserRolesFormComponent } from './links/users/roles/unit-user-roles.component';\nimport { ToggleLinkCellComponent } from './list/toggle-link/toggle-link-cell.component';\nimport { UnitListComponent } from './list/unit-list.component';\nimport { UnitAddressRoutePageMetaResolver } from './services/unit-address-route-page-meta.resolver';\nimport { UnitItemService } from './services/unit-item.service';\nimport { UnitListService } from './services/unit-list.service';\nimport { UnitRoutePageMetaResolver } from './services/unit-route-page-meta.resolver';\n\nexport const unitsCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUnitsListComponent: {\n      component: UnitListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UnitListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UnitItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUnit.breadcrumbs.list',\n              resolver: UnitRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UnitFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.unitCode}`,\n            component: UnitDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: UnitFormComponent,\n              },\n              {\n                path: 'children',\n                component: UnitChildrenComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.children' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitChildCreateComponent,\n                  },\n                ],\n              },\n              {\n                path: 'approvers',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.approvers' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UnitAssignedApproverListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UnitApproverListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'users',\n                component: UnitUserListComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.users' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitUserCreateComponent,\n                  },\n                  {\n                    path: `:${ROUTE_PARAMS.userCode}/roles`,\n                    component: UnitUserRolesFormComponent,\n                  },\n                ],\n              },\n              {\n                path: 'cost-centers',\n                component: UnitCostCenterListComponent,\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUnit.breadcrumbs.costCenters' },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitCostCenterCreateComponent,\n                  },\n                ],\n              },\n              {\n                path: 'addresses',\n                component: UnitAddressListComponent,\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgUnit.breadcrumbs.addresses',\n                    resolver: UnitAddressRoutePageMetaResolver,\n                  },\n                },\n                children: [\n                  {\n                    path: 'create',\n                    component: UnitAddressFormComponent,\n                  },\n                  {\n                    path: `:${ROUTE_PARAMS.addressCode}`,\n                    data: {\n                      cxPageMeta: {\n                        breadcrumb: 'orgUnit.breadcrumbs.addressDetails',\n                      },\n                    },\n                    children: [\n                      {\n                        path: '',\n                        component: UnitAddressDetailsComponent,\n                      },\n                      {\n                        path: 'edit',\n                        component: UnitAddressFormComponent,\n                      },\n                    ],\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function unitsTableConfigFactory(): TableConfig {\n  return unitsTableConfig;\n}\n\nexport const unitsTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.UNIT]: {\n      cells: ['name'],\n      options: {\n        layout: TableLayout.VERTICAL,\n        cells: {\n          name: {\n            dataComponent: ToggleLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n        },\n      },\n      [BREAKPOINT.lg]: {\n        cells: ['name', 'active', 'uid'],\n      },\n    },\n    [OrganizationTableType.UNIT_USERS]: {\n      cells: ['name', 'roles'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          roles: {\n            dataComponent: UnitUserRolesCellComponent,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_CHILDREN]: {\n      cells: ['name', 'active'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UnitDetailsCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_APPROVERS]: {\n      cells: ['name', 'orgUnit', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n          orgUnit: {\n            dataComponent: UnitCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_ASSIGNED_APPROVERS]: {\n      cells: ['name', 'orgUnit', 'actions'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n          orgUnit: {\n            dataComponent: UnitCellComponent,\n            linkable: false,\n          },\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_COST_CENTERS]: {\n      cells: ['name'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: CostCenterDetailsCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.UNIT_ADDRESS]: {\n      cells: ['formattedAddress'],\n      options: {\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n        cells: {\n          formattedAddress: {\n            dataComponent: LinkCellComponent,\n          },\n        },\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { UnitDetailsModule } from './details/unit-details.module';\nimport { UnitFormModule } from './form/unit-form.module';\nimport { UnitAddressModule } from './links/addresses/unit-address.module';\nimport { UnitApproverListModule } from './links/approvers/unit-approver-list.module';\nimport { UnitChildrenModule } from './links/children/unit-children.module';\nimport { UnitCostCenterListModule } from './links/cost-centers/unit-cost-centers.module';\nimport { UnitUsersModule } from './links/users/unit-user-list.module';\nimport { UnitListModule } from './list/unit-list.module';\nimport { unitsCmsConfig, unitsTableConfigFactory } from './units.config';\n\n@NgModule({\n  imports: [\n    RouterModule,\n    UnitListModule,\n    UnitDetailsModule,\n    UnitFormModule,\n    UnitChildrenModule,\n    UnitApproverListModule,\n    UnitUsersModule,\n    UnitCostCenterListModule,\n    UnitAddressModule,\n  ],\n  providers: [\n    provideDefaultConfig(unitsCmsConfig),\n    provideDefaultConfigFactory(unitsTableConfigFactory),\n  ],\n})\nexport class UnitsComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { Observable } from 'rxjs';\nimport { CurrentItemService } from '../../shared/current-item.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentUserGroupService extends CurrentItemService<UserGroup> {\n  constructor(\n    protected routingService: RoutingService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(routingService);\n  }\n\n  protected getParamKey() {\n    return ROUTE_PARAMS.userGroupCode;\n  }\n\n  protected getItem(code: string): Observable<UserGroup> {\n    return this.userGroupService.get(code);\n  }\n\n  getError(code: string): Observable<boolean> {\n    return this.userGroupService.getErrorState(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupFormService extends FormService<UserGroup> {\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl(\n      'uid',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.noSpecialCharacters,\n      ])\n    );\n    form.setControl('name', new FormControl('', Validators.required));\n    form.setControl(\n      'orgUnit',\n      new FormGroup({\n        uid: new FormControl(undefined, Validators.required),\n      })\n    );\n    this.form = form;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport {\n  OrganizationItemStatus,\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupFormService } from '../form/user-group-form.service';\nimport { CurrentUserGroupService } from './current-user-group.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupItemService extends ItemService<UserGroup> {\n  constructor(\n    protected currentItemService: CurrentUserGroupService,\n    protected routingService: RoutingService,\n    protected formService: UserGroupFormService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(currentItemService, routingService, formService);\n  }\n\n  load(code: string): Observable<UserGroup> {\n    this.userGroupService.load(code);\n    return this.userGroupService.get(code);\n  }\n\n  update(\n    code: string,\n    value: UserGroup\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.update(code, value);\n    return this.userGroupService.getLoadingStatus(value.uid);\n  }\n\n  delete(code: string): Observable<OrganizationItemStatus<UserGroup>> {\n    this.launchList();\n    this.userGroupService.delete(code);\n    return this.userGroupService.getLoadingStatus(code);\n  }\n\n  protected create(\n    value: UserGroup\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.create(value);\n    return this.userGroupService.getLoadingStatus(value.uid);\n  }\n\n  protected getDetailsRoute(): string {\n    return 'orgUserGroupDetails';\n  }\n\n  protected launchList() {\n    this.routingService.go({\n      cxRoute: 'orgUserGroup',\n    });\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupItemService } from '../services/user-group-item.service';\n\n@Component({\n  selector: 'cx-org-user-group-details',\n  templateUrl: './user-group-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserGroupItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UserGroupDetailsComponent {\n  model$: Observable<UserGroup> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<UserGroup>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUserGroup.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [routerLink]=\"{ cxRoute: 'orgUserGroupEdit', params: model } | cxUrl\"\n    [class.disabled]=\"isInEditMode$ | async\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-delete-item\n    actions\n    key=\"uid\"\n    i18nRoot=\"orgUserGroup\"\n  ></cx-org-delete-item>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.uid\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserGroupUsers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.user' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserGroupPermissions', params: model } | cxUrl\n        \"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUserGroup.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { DeleteItemModule } from '../../shared/detail/delete-item-action/delete-item.module';\nimport { UserGroupDetailsComponent } from './user-group-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    DeleteItemModule,\n    ItemExistsModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserGroupDetailsComponent],\n})\nexport class UserGroupDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport {\n  B2BUnitNode,\n  OrgUnitService,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserGroupItemService } from '../services/user-group-item.service';\nimport { createCodeForEntityName } from '../../shared/utility/entity-code';\n\n@Component({\n  selector: 'cx-org-user-group-form',\n  templateUrl: './user-group-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserGroupItemService,\n    },\n  ],\n})\nexport class UserGroupFormComponent implements OnInit {\n  form: FormGroup = this.itemService.getForm();\n\n  // getList ???\n  units$: Observable<B2BUnitNode[]> = this.unitService.getActiveUnitList().pipe(\n    tap((units) => {\n      if (units.length === 1) {\n        this.form?.get('orgUnit.uid')?.setValue(units[0]?.id);\n      }\n    })\n  );\n\n  constructor(\n    protected itemService: ItemService<UserGroup>,\n    protected unitService: OrgUnitService\n  ) {}\n\n  ngOnInit(): void {\n    this.unitService.loadList();\n  }\n\n  createUidWithName(name: AbstractControl, code: AbstractControl): void {\n    createCodeForEntityName(name, code);\n  }\n}\n","<cx-org-form i18nRoot=\"orgUserGroup\">\n  <ng-container *ngIf=\"form\" [formGroup]=\"form\" main>\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUserGroup.name' | cxTranslate\n      }}</span>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        required\n        placeholder=\"{{ 'orgUserGroup.name' | cxTranslate }}\"\n        formControlName=\"name\"\n        (blur)=\"createUidWithName(form.get('name'), form.get('uid'))\"\n      />\n      <cx-form-errors [control]=\"form.get('name')\"></cx-form-errors>\n    </label>\n\n    <label>\n      <span class=\"label-content required\">{{\n        'orgUserGroup.uid' | cxTranslate\n      }}</span>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        required\n        placeholder=\"{{ 'orgUserGroup.uid' | cxTranslate }}\"\n        formControlName=\"uid\"\n      />\n      <cx-form-errors [control]=\"form.get('uid')\"></cx-form-errors>\n    </label>\n\n    <label aria-required=\"true\" [formGroup]=\"form.get('orgUnit')\">\n      <span class=\"label-content required\">{{\n        'orgUserGroup.orgUnit' | cxTranslate\n      }}</span>\n      <ng-select\n        formControlName=\"uid\"\n        [searchable]=\"true\"\n        [clearable]=\"false\"\n        [items]=\"units$ | async\"\n        bindLabel=\"name\"\n        bindValue=\"id\"\n        [readonly]=\"form.get('orgUnit.uid').disabled\"\n        appendTo=\"cx-org-list\"\n        [placeholder]=\"'orgUserGroup.orgUnit' | cxTranslate\"\n      >\n      </ng-select>\n      <cx-form-errors [control]=\"form.get('orgUnit.uid')\"></cx-form-errors>\n    </label>\n  </ng-container>\n</cx-org-form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { FormModule } from '../../shared/form/form.module';\nimport { UserGroupFormComponent } from './user-group-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    FormModule,\n  ],\n  declarations: [UserGroupFormComponent],\n})\nexport class UserGroupFormModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  Permission,\n  PermissionService,\n  UserGroup,\n  UserGroupService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupPermissionListService extends SubListService<Permission> {\n  protected tableType = OrganizationTableType.USER_GROUP_PERMISSIONS;\n  protected _domainType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService,\n    protected permissionService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  /**\n   *\n   * @override\n   * Loads all b2b users.\n   *\n   * @param code The user group code.\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Permission>> {\n    return this.userGroupService.getAvailableOrderApprovalPermissions(\n      code,\n      pagination\n    );\n  }\n\n  /**\n   * @override\n   * Assign user to the user group.\n   */\n  assign(\n    userGroupCode: string,\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.assignPermission(userGroupCode, permissionCode);\n    return this.permissionService.getLoadingStatus(permissionCode);\n  }\n\n  /**\n   * @override\n   * Unassigns the user from the user group.\n   */\n  unassign(\n    userGroupCode: string,\n    permissionCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.unassignPermission(userGroupCode, permissionCode);\n    return this.permissionService.getLoadingStatus(permissionCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Permission } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserGroupPermissionListService } from '../user-group-permission-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupAssignedPermissionsListService extends UserGroupPermissionListService {\n  protected tableType = OrganizationTableType.USER_GROUP_ASSIGNED_PERMISSIONS;\n  /**\n   * @override\n   * Load all b2b users assigned to the given user group\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<Permission>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserGroupAssignedPermissionsListService } from './user-group-assigned-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-assigned-permission-list',\n  templateUrl: './user-group-assigned-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupAssignedPermissionsListService,\n    },\n  ],\n})\nexport class UserGroupAssignedPermissionListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserGroupPermissionListService } from './user-group-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-permission-list',\n  templateUrl: './user-group-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupPermissionListService,\n    },\n  ],\n})\nexport class UserGroupPermissionListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserGroupAssignedPermissionListComponent } from './assigned/user-group-assigned-permission-list.component';\nimport { UserGroupPermissionListComponent } from './user-group-permission-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, SubListModule],\n\n  declarations: [\n    UserGroupPermissionListComponent,\n    UserGroupAssignedPermissionListComponent,\n  ],\n})\nexport class UserGroupPermissionModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-permission-details-cell',\n  templateUrl: './permission-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PermissionDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.code' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgPurchaseLimitDetails',\n            params: model\n          } | cxUrl\n        \"\n      >\n        {{ model.code }}\n      </a>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.active' | cxTranslate }}</label>\n      <span class=\"value\" [class.is-active]=\"model.active\">\n        {{\n          (model.active ? 'organization.enabled' : 'organization.disabled')\n            | cxTranslate\n        }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{\n        'orgPurchaseLimit.orderApprovalPermissionType' | cxTranslate\n      }}</label>\n      <span class=\"value\">\n        {{ model.orderApprovalPermissionType?.name }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.threshold || model.threshold === 0\">\n      <label>{{ 'orgPurchaseLimit.threshold' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.threshold }} {{ model.currency?.symbol }}\n      </span>\n    </div>\n\n    <div class=\"property\" *ngIf=\"model.periodRange\">\n      <label>{{ 'orgPurchaseLimit.periodRange' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.periodRange }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgPurchaseLimit.unit' | cxTranslate }}</label>\n      <a\n        *ngIf=\"model.code\"\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model.code }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface UserGroupModel {\n  uid?: string;\n  name?: string;\n  orgUnit?: any;\n}\n\n/**\n * Service to populate Cost Center data to `Table` data. The cost center\n * data is driven by the table configuration, using the `OrganizationTables.COST_CENTER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupListService extends ListService<UserGroupModel> {\n  protected tableType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(tableService);\n  }\n\n  key(): string {\n    return 'uid';\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<UserGroupModel>> {\n    return this.userGroupService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertUserGroups(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertUserGroups({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<UserGroup>): EntitiesModel<UserGroupModel> {\n    const userGroupModels: EntitiesModel<UserGroupModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return userGroupModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUserGroupService } from './current-user-group.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserGroupRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUserGroupService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<UserGroup> {\n    return this.currentItemService.item$;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel, B2BUser } from '@spartacus/core';\nimport {\n  UserGroup,\n  UserGroupService,\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupUserListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.USER_GROUP_USERS;\n  protected _domainType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected userGroupService: UserGroupService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  /**\n   *\n   * @override\n   * Loads all b2b users.\n   *\n   * @param code The user group code.\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userGroupService.getAvailableOrgCustomers(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign user to the user group.\n   */\n  assign(\n    userGroupCode: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userGroupService.assignMember(userGroupCode, customerId);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  /**\n   * @override\n   * Unassigns the user from the user group.\n   */\n  unassign(\n    userGroupCode: string,\n    customerId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userGroupService.unassignMember(userGroupCode, customerId);\n    return this.userService.getLoadingStatus(customerId);\n  }\n\n  unassignAllMembers(\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userGroupService.unassignAllMembers(userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserGroupUserListService } from '../user-group-user-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGroupAssignedUserListService extends UserGroupUserListService {\n  protected tableType = OrganizationTableType.USER_GROUP_ASSIGNED_USERS;\n  /**\n   * @override\n   * Load all b2b users assigned to the given user group\n   */\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserGroupAssignedUserListService } from './user-group-assigned-user-list.service';\n\n@Component({\n  selector: 'cx-org-user-group-assigned-user-list',\n  templateUrl: './user-group-assigned-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupAssignedUserListService,\n    },\n  ],\n})\nexport class UserGroupAssignedUserListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component, ViewChild } from '@angular/core';\nimport { filter, first, switchMap, take } from 'rxjs/operators';\nimport {\n  LoadStatus,\n  UserGroup,\n} from '@spartacus/organization/administration/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { CurrentUserGroupService } from '../services/current-user-group.service';\nimport { UserGroupUserListService } from './user-group-user-list.service';\nimport { SubListComponent } from '../../shared/sub-list/sub-list.component';\n\n@Component({\n  selector: 'cx-org-user-group-user-list',\n  templateUrl: './user-group-user-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserGroupUserListService,\n    },\n  ],\n})\nexport class UserGroupUserListComponent {\n  constructor(\n    protected currentUserGroupService: CurrentUserGroupService,\n    protected userGroupUserListService: UserGroupUserListService\n  ) {}\n\n  @ViewChild('subList')\n  subList: SubListComponent;\n\n  unassignAll() {\n    this.currentUserGroupService.key$\n      .pipe(\n        first(),\n        switchMap((key) =>\n          this.userGroupUserListService.unassignAllMembers(key).pipe(\n            take(1),\n            filter((data) => data.status === LoadStatus.SUCCESS)\n          )\n        )\n      )\n      .subscribe((data) => {\n        this.notify(data.item);\n      });\n  }\n\n  protected notify(item: UserGroup) {\n    this.subList.messageService.add({\n      message: {\n        key: `orgUserGroupUsers.unassignAllConfirmation`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","<cx-org-sub-list [previous]=\"false\" #subList>\n  <button actions (click)=\"unassignAll()\" class=\"link\">\n    {{ 'orgUserGroupUsers.unassignAll' | cxTranslate }}\n  </button>\n  <a actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { PermissionDetailsCellComponent } from '../permission/details-cell/permission-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserDetailsCellComponent } from '../user/details-cell/user-details-cell.component';\nimport { UserGroupDetailsComponent } from './details/user-group-details.component';\nimport { UserGroupFormComponent } from './form/user-group-form.component';\nimport { UserGroupAssignedPermissionListComponent } from './permissions/assigned/user-group-assigned-permission-list.component';\nimport { UserGroupPermissionListComponent } from './permissions/user-group-permission-list.component';\nimport { UserGroupItemService } from './services/user-group-item.service';\nimport { UserGroupListService } from './services/user-group-list.service';\nimport { UserGroupRoutePageMetaResolver } from './services/user-group-route-page-meta.resolver';\nimport { UserGroupAssignedUserListComponent } from './users/assigned/user-group-assigned-user-list.component';\nimport { UserGroupUserListComponent } from './users/user-group-user-list.component';\n\nexport const userGroupCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUserGroupsListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UserGroupListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UserGroupItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUserGroup.breadcrumbs.list',\n              resolver: UserGroupRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UserGroupFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.userGroupCode}`,\n            component: UserGroupDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUserGroup.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: 'edit',\n                component: UserGroupFormComponent,\n              },\n              {\n                path: 'users',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUserGroup.breadcrumbs.users' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserGroupAssignedUserListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserGroupUserListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'purchase-limits',\n                data: {\n                  cxPageMeta: {\n                    breadcrumb: 'orgUserGroup.breadcrumbs.permissions',\n                  },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserGroupAssignedPermissionListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserGroupPermissionListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function userGroupTableConfigFactory(): TableConfig {\n  return userGroupTableConfig;\n}\n\nexport const userGroupTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.USER_GROUP]: {\n      cells: ['name', 'uid', 'unit'],\n      options: {\n        dataComponent: CellComponent,\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_ASSIGNED_USERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n\n    [OrganizationTableType.USER_GROUP_USERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_GROUP_ASSIGNED_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions: {\n            dataComponent: AssignCellComponent,\n          },\n        },\n        pagination: {\n          pageSize: MAX_OCC_INTEGER_VALUE,\n        },\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserGroupAssignedUserListComponent } from './assigned/user-group-assigned-user-list.component';\nimport { UserGroupUserListComponent } from './user-group-user-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserGroupAssignedUserListComponent,\n    UserGroupUserListComponent,\n  ],\n})\nexport class UserGroupUserModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { SharedOrganizationModule } from '../shared/shared-organization.module';\nimport { UserGroupDetailsModule } from './details/user-group-details.module';\nimport { UserGroupFormModule } from './form/user-group-form.module';\nimport { UserGroupPermissionModule } from './permissions/user-group-permission-list.module';\nimport {\n  userGroupCmsConfig,\n  userGroupTableConfigFactory,\n} from './user-group.config';\nimport { UserGroupUserModule } from './users/user-group-user-list.module';\n\n@NgModule({\n  imports: [\n    SharedOrganizationModule,\n    UserGroupDetailsModule,\n    UserGroupFormModule,\n    UserGroupPermissionModule,\n    UserGroupUserModule,\n  ],\n  providers: [\n    provideDefaultConfig(userGroupCmsConfig),\n    provideDefaultConfigFactory(userGroupTableConfigFactory),\n  ],\n})\nexport class UserGroupComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserApproverListService extends SubListService<B2BUser> {\n  protected tableType = OrganizationTableType.USER_APPROVERS;\n  protected _domainType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userService.getApprovers(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign approver to the user.\n   */\n  assign(\n    userCode: string,\n    approverId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.assignApprover(userCode, approverId);\n    return this.userService.getLoadingStatus(approverId);\n  }\n\n  /**\n   * @override\n   * Unassign the approver from the user.\n   */\n  unassign(\n    userCode: string,\n    approverId: string\n  ): Observable<OrganizationItemStatus<B2BUser>> {\n    this.userService.unassignApprover(userCode, approverId);\n    return this.userService.getLoadingStatus(approverId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserApproverListService } from '../user-approver-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedApproverListService extends UserApproverListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_APPROVERS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((users) => this.filterSelected(users)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedApproverListService } from './user-assigned-approver-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-approver-list',\n  templateUrl: './user-assigned-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedApproverListService,\n    },\n  ],\n})\nexport class UserAssignedApproverListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserApproverListService } from './user-approver-list.service';\n\n@Component({\n  selector: 'cx-org-user-approver-list',\n  templateUrl: './user-approver-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserApproverListService,\n    },\n  ],\n})\nexport class UserApproverListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedApproverListComponent } from './assigned/user-assigned-approver-list.component';\nimport { UserApproverListComponent } from './user-approver-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [UserApproverListComponent, UserAssignedApproverListComponent],\n})\nexport class UserApproverListModule {}\n","import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { FormService } from '../../shared/form/form.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserChangePasswordFormService extends FormService<any> {\n  /**\n   * @override\n   * Adds the password and confirmPassword field. Also adds the customerId field,\n   * so that the customerId can be used during persistent.\n   */\n  protected build() {\n    const form = new FormGroup({});\n    form.setControl('customerId', new FormControl(''));\n    form.setControl(\n      'password',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.passwordValidator,\n      ])\n    );\n    form.setControl(\n      'confirmPassword',\n      new FormControl('', [\n        Validators.required,\n        CustomFormValidators.passwordValidator,\n      ])\n    );\n    form.setValidators(\n      CustomFormValidators.passwordsMustMatch('password', 'confirmPassword')\n    );\n    this.form = form;\n  }\n\n  getForm(item?: User): FormGroup {\n    // we need do cleanup, to avoid have filled form after next open of that\n    this.form = null;\n    return super.getForm(item);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { User } from '@spartacus/core';\nimport { LoadStatus } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map, switchMap, take } from 'rxjs/operators';\nimport { MessageService } from '../../shared/message/services/message.service';\nimport { UserItemService } from '../services/user-item.service';\nimport { UserChangePasswordFormService } from './user-change-password-form.service';\n\n@Component({\n  selector: 'cx-org-user-change-password-form',\n  templateUrl: './user-change-password-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n})\nexport class UserChangePasswordFormComponent {\n  form$: Observable<FormGroup> = this.itemService.current$.pipe(\n    map((item) => this.formService.getForm(item))\n  );\n\n  constructor(\n    protected itemService: UserItemService,\n    protected formService: UserChangePasswordFormService,\n    protected messageService: MessageService\n  ) {}\n\n  save(form: FormGroup): void {\n    this.itemService.current$\n      .pipe(\n        first(),\n        switchMap((item) =>\n          this.itemService.save(form, (form.value as User).customerId).pipe(\n            take(1),\n            filter((data) => data.status === LoadStatus.SUCCESS),\n            map((data) => ({\n              ...item,\n              ...data.item,\n            }))\n          )\n        )\n      )\n      .subscribe((data) => {\n        this.notify(data);\n        this.itemService.launchDetails(data);\n      });\n  }\n\n  protected notify(item: User) {\n    this.messageService.add({\n      message: {\n        key: `orgUser.messages.updatePassword`,\n        params: {\n          item,\n        },\n      },\n    });\n  }\n}\n","<form *ngIf=\"form$ | async as form\" [formGroup]=\"form\" (submit)=\"save(form)\">\n  <cx-org-card\n    [previous]=\"false\"\n    i18nRoot=\"orgUser.password\"\n    [cxFocus]=\"{ autofocus: 'input', refreshFocus: form }\"\n  >\n    <button actions class=\"button primary\">\n      {{ 'organization.save' | cxTranslate }}\n    </button>\n    <button actions class=\"link\" routerLink=\"../\" type=\"button\">\n      {{ 'organization.cancel' | cxTranslate }}\n    </button>\n\n    <section main class=\"details\">\n      <label class=\"full-width\">\n        <span class=\"label-content\">{{\n          'orgUser.password.newPassword' | cxTranslate\n        }}</span>\n        <input\n          aria-required=\"true\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"{{ 'orgUser.password.newPassword' | cxTranslate }}\"\n          formControlName=\"password\"\n        />\n        <cx-form-errors [control]=\"form.get('password')\"></cx-form-errors>\n      </label>\n      <label>\n        <span class=\"label-content\">{{\n          'orgUser.password.confirmPassword' | cxTranslate\n        }}</span>\n        <input\n          aria-required=\"true\"\n          class=\"form-control\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"{{ 'orgUser.password.confirmPassword' | cxTranslate }}\"\n          formControlName=\"confirmPassword\"\n        />\n        <cx-form-errors\n          [control]=\"form.get('confirmPassword')\"\n        ></cx-form-errors>\n      </label>\n    </section>\n  </cx-org-card>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { FormErrorsModule, KeyboardFocusModule } from '@spartacus/storefront';\nimport { CardModule } from '../../shared/card/card.module';\nimport { UserChangePasswordFormComponent } from './user-change-password-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NgSelectModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n    CardModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserChangePasswordFormComponent],\n})\nexport class UserChangePasswordFormModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { B2BUser } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\nimport { ItemService } from '../../shared/item.service';\nimport { UserItemService } from '../services/user-item.service';\n\n@Component({\n  selector: 'cx-org-user-details',\n  templateUrl: './user-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: ItemService,\n      useExisting: UserItemService,\n    },\n  ],\n  host: { class: 'content-wrapper' },\n})\nexport class UserDetailsComponent {\n  userGuardSubscription: Subscription;\n  model$: Observable<B2BUser> = this.itemService.key$.pipe(\n    switchMap((code) => this.itemService.load(code)),\n    startWith({})\n  );\n  isInEditMode$ = this.itemService.isInEditMode$;\n\n  constructor(protected itemService: ItemService<B2BUser>) {}\n}\n","<cx-org-card\n  *ngIf=\"model$ | async as model\"\n  i18nRoot=\"orgUser.details\"\n  [cxFocus]=\"{ refreshFocus: model }\"\n>\n  <a\n    actions\n    class=\"link edit\"\n    [class.disabled]=\"!model.active || (isInEditMode$ | async)\"\n    [routerLink]=\"{ cxRoute: 'orgUserEdit', params: model } | cxUrl\"\n  >\n    {{ 'organization.edit' | cxTranslate }}\n  </a>\n\n  <cx-org-toggle-status\n    actions\n    key=\"customerId\"\n    i18nRoot=\"orgUser\"\n  ></cx-org-toggle-status>\n\n  <cx-org-disable-info info i18nRoot=\"orgUser\"> </cx-org-disable-info>\n\n  <section main class=\"details\" cxOrgItemExists>\n    <div class=\"property\">\n      <label>{{ 'orgUser.name' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.name }}\n      </span>\n    </div>\n\n    <div class=\"property full-width\">\n      <label>{{ 'orgUser.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.roles' | cxTranslate }}</label>\n      <ul class=\"value\">\n        <li\n          *ngFor=\"let role of model.roles; let isLast = last\"\n          [innerText]=\"'organization.userRoles.' + role | cxTranslate\"\n        ></li>\n        <li *ngIf=\"model.roles?.length === 0\">-</li>\n      </ul>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUser.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n    <div class=\"property full-width\">\n      <a\n        *ngIf=\"model.customerId\"\n        class=\"link\"\n        [class.disabled]=\"!model.active\"\n        [routerLink]=\"\n          { cxRoute: 'orgUserChangePassword', params: model } | cxUrl\n        \"\n      >\n        {{ 'orgUser.links.password' | cxTranslate }}\n      </a>\n    </div>\n  </section>\n\n  <section main class=\"link-list\">\n    <ng-container *ngIf=\"model.customerId\">\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserApprovers', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.approvers' | cxTranslate }}\n      </a>\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserUserGroups', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.userGroup' | cxTranslate }}\n      </a>\n\n      <a\n        class=\"link\"\n        [routerLink]=\"{ cxRoute: 'orgUserPermissions', params: model } | cxUrl\"\n        routerLinkActive=\"is-current\"\n      >\n        {{ 'orgUser.links.permission' | cxTranslate }}\n      </a>\n    </ng-container>\n  </section>\n</cx-org-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '@spartacus/storefront';\nimport { ItemExistsModule } from '../../shared/item-exists.module';\nimport { CardModule } from '../../shared/card/card.module';\nimport { ToggleStatusModule } from '../../shared/detail/toggle-status-action/toggle-status.module';\nimport { UserDetailsComponent } from './user-details.component';\nimport { DisableInfoModule } from '../../shared/detail/disable-info/disable-info.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ToggleStatusModule,\n    ItemExistsModule,\n    DisableInfoModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [UserDetailsComponent],\n  exports: [UserDetailsComponent],\n})\nexport class UserDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  PermissionService,\n  Permission,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserPermissionListService extends SubListService<Permission> {\n  protected tableType = OrganizationTableType.USER_PERMISSIONS;\n  protected _domainType = OrganizationTableType.PERMISSION;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService,\n    protected permissionService: PermissionService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return this.userService.getPermissions(code, pagination);\n  }\n\n  /**\n   * @override\n   * Assign permission to the user.\n   */\n  assign(\n    userCode: string,\n    code: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.userService.assignPermission(userCode, code);\n    return this.permissionService.getLoadingStatus(code);\n  }\n\n  /**\n   * @override\n   * Unassign the permission from the user.\n   */\n  unassign(\n    userCode: string,\n    code: string\n  ): Observable<OrganizationItemStatus<Permission>> {\n    this.userService.unassignPermission(userCode, code);\n    return this.permissionService.getLoadingStatus(code);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserPermissionListService } from '../user-permission-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedPermissionListService extends UserPermissionListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_PERMISSIONS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<B2BUser>> {\n    return super\n      .load(pagination, code)\n      .pipe(map((result) => this.filterSelected(result)));\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedPermissionListService } from './user-assigned-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-permission-list',\n  templateUrl: './user-assigned-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedPermissionListService,\n    },\n  ],\n})\nexport class UserAssignedPermissionListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserPermissionListService } from './user-permission-list.service';\n\n@Component({\n  selector: 'cx-org-user-permission-list',\n  templateUrl: './user-permission-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserPermissionListService,\n    },\n  ],\n})\nexport class UserPermissionListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedPermissionListComponent } from './assigned/user-assigned-permission-list.component';\nimport { UserPermissionListComponent } from './user-permission-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserPermissionListComponent,\n    UserAssignedPermissionListComponent,\n  ],\n})\nexport class UserPermissionListModule {}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport {\n  B2BUserService,\n  UserGroup,\n  UserGroupService,\n  OrganizationItemStatus,\n} from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { SubListService } from '../../shared/sub-list/sub-list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserUserGroupListService extends SubListService<UserGroup> {\n  protected tableType = OrganizationTableType.USER_USER_GROUPS;\n  protected _domainType = OrganizationTableType.USER_GROUP;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService,\n    protected userGroupService: UserGroupService\n  ) {\n    super(tableService);\n  }\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<UserGroup>> {\n    return this.userService\n      .getUserGroups(code, pagination)\n      .pipe(filter((list) => Boolean(list)));\n  }\n\n  /**\n   * @override\n   * Assign user group to the user.\n   */\n  assign(\n    userCode: string,\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userService.assignUserGroup(userCode, userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n\n  /**\n   * @override\n   * Unassign the user group from the user.\n   */\n  unassign(\n    userCode: string,\n    userGroupCode: string\n  ): Observable<OrganizationItemStatus<UserGroup>> {\n    this.userService.unassignUserGroup(userCode, userGroupCode);\n    return this.userGroupService.getLoadingStatus(userGroupCode);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { UserGroup } from '@spartacus/organization/administration/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OrganizationTableType } from '../../../shared/organization.model';\nimport { UserUserGroupListService } from '../user-user-group-list.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAssignedUserGroupListService extends UserUserGroupListService {\n  protected tableType = OrganizationTableType.USER_ASSIGNED_USER_GROUPS;\n\n  protected load(\n    pagination: PaginationModel,\n    code: string\n  ): Observable<EntitiesModel<UserGroup>> {\n    return super.load(pagination, code).pipe(\n      filter((list) => Boolean(list)),\n      map((userGroups) => this.filterSelected(userGroups))\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../../shared/list/list.service';\nimport { UserAssignedUserGroupListService } from './user-assigned-user-group-list.service';\n\n@Component({\n  selector: 'cx-org-user-assigned-user-group-list',\n  templateUrl: './user-assigned-user-group-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserAssignedUserGroupListService,\n    },\n  ],\n})\nexport class UserAssignedUserGroupListComponent {}\n","<cx-org-sub-list>\n  <a actions class=\"link\" routerLink=\"assign\">\n    {{ 'organization.assign' | cxTranslate }}\n  </a>\n</cx-org-sub-list>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ListService } from '../../shared/list/list.service';\nimport { UserUserGroupListService } from './user-user-group-list.service';\n\n@Component({\n  selector: 'cx-org-user-user-group-list',\n  templateUrl: './user-user-group-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { class: 'content-wrapper' },\n  providers: [\n    {\n      provide: ListService,\n      useExisting: UserUserGroupListService,\n    },\n  ],\n})\nexport class UserUserGroupListComponent {}\n","<cx-org-sub-list [previous]=\"false\">\n  <button actions class=\"link\" routerLink=\"../\">\n    {{ 'organization.done' | cxTranslate }}\n  </button>\n</cx-org-sub-list>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { ListModule } from '../../shared/list/list.module';\nimport { SubListModule } from '../../shared/sub-list/sub-list.module';\nimport { UserAssignedUserGroupListComponent } from './assigned/user-assigned-user-group-list.component';\nimport { UserUserGroupListComponent } from './user-user-group-list.component';\n\n@NgModule({\n  imports: [ListModule, I18nModule, RouterModule, SubListModule],\n  declarations: [\n    UserUserGroupListComponent,\n    UserAssignedUserGroupListComponent,\n  ],\n})\nexport class UserUserGroupsModule {}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { CellComponent } from '../../shared';\n\n@Component({\n  selector: 'cx-org-user-group-details-cell',\n  templateUrl: './user-group-details-cell.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserGroupDetailsCellComponent extends CellComponent {}\n","<ng-template #details>\n  <div class=\"popover-details\">\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.name' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUserGroupDetails',\n            params: model\n          } | cxUrl\n        \"\n        >{{ model.name }}</a\n      >\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.uid' | cxTranslate }}</label>\n      <span class=\"value\">\n        {{ model.uid }}\n      </span>\n    </div>\n\n    <div class=\"property\">\n      <label>{{ 'orgUserGroup.orgUnit' | cxTranslate }}</label>\n      <a\n        class=\"value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orgUnitDetails',\n            params: model.orgUnit\n          } | cxUrl\n        \"\n      >\n        {{ model.orgUnit?.name }}\n      </a>\n    </div>\n  </div>\n</ng-template>\n\n<button\n  class=\"button text\"\n  [cxPopover]=\"details\"\n  [cxPopoverOptions]=\"{\n    placement: 'auto',\n    class: 'my-company-popover',\n    appendToBody: true,\n    displayCloseButton: true\n  }\"\n>\n  {{ model?.name }}\n</button>\n","import { Injectable } from '@angular/core';\nimport { B2BUser, EntitiesModel, PaginationModel } from '@spartacus/core';\nimport { B2BUserService } from '@spartacus/organization/administration/core';\nimport { TableService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ListService } from '../../shared/list/list.service';\nimport { OrganizationTableType } from '../../shared/organization.model';\n\n/**\n * The UI model for the cost center, which is a slightly flattened version\n * of the core cost center model.\n */\nexport interface UserModel {\n  uid?: string;\n  name?: string;\n  orgUnit?: any;\n  roles?: string[];\n}\n\n/**\n * Service to populate User data to `Table` data. The user\n * data is driven by the table configuration, using the `OrganizationTables.USER`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserListService extends ListService<UserModel> {\n  protected tableType = OrganizationTableType.USER;\n\n  constructor(\n    protected tableService: TableService,\n    protected userService: B2BUserService\n  ) {\n    super(tableService);\n  }\n\n  key(): string {\n    return 'customerId';\n  }\n\n  protected load(\n    pagination: PaginationModel\n  ): Observable<EntitiesModel<UserModel>> {\n    return this.userService.getList(pagination).pipe(\n      filter((list) => Boolean(list)),\n      map((raw) => this.convertUsers(raw))\n    );\n  }\n\n  /**\n   * Populates the cost center data to a convenient table data model, so that we\n   * can skip specific conversion in the view logic where possible.\n   */\n  protected convertUsers({\n    pagination,\n    sorts,\n    values,\n  }: EntitiesModel<B2BUser>): EntitiesModel<UserModel> {\n    const userModels: EntitiesModel<UserModel> = {\n      pagination,\n      sorts,\n      values: values.map((value: any) => ({\n        ...value,\n        unit: value.orgUnit,\n      })),\n    };\n    return userModels;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  B2BUser,\n  DefaultRoutePageMetaResolver,\n  TranslationService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentUserService } from './current-user.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UserRoutePageMetaResolver extends DefaultRoutePageMetaResolver {\n  constructor(\n    translation: TranslationService,\n    protected currentItemService: CurrentUserService\n  ) {\n    super(translation);\n  }\n\n  protected getParams(): Observable<B2BUser> {\n    return this.currentItemService.item$;\n  }\n}\n","import { AuthGuard, CmsConfig } from '@spartacus/core';\nimport { AdminGuard } from '@spartacus/organization/administration/core';\nimport { ROUTE_PARAMS } from '@spartacus/organization/administration/root';\nimport { TableConfig } from '@spartacus/storefront';\nimport { MAX_OCC_INTEGER_VALUE } from '../constants';\nimport { PermissionDetailsCellComponent } from '../permission/details-cell/permission-details-cell.component';\nimport { ItemService } from '../shared/item.service';\nimport { ListComponent } from '../shared/list/list.component';\nimport { ListService } from '../shared/list/list.service';\nimport { OrganizationTableType } from '../shared/organization.model';\nimport { AssignCellComponent } from '../shared/sub-list/assign-cell.component';\nimport { ActiveLinkCellComponent } from '../shared/table/active-link/active-link-cell.component';\nimport { CellComponent } from '../shared/table/cell.component';\nimport { RolesCellComponent } from '../shared/table/roles/roles-cell.component';\nimport { StatusCellComponent } from '../shared/table/status/status-cell.component';\nimport { UnitCellComponent } from '../shared/table/unit/unit-cell.component';\nimport { UserGroupDetailsCellComponent } from '../user-group/details-cell/user-group-details-cell.component';\nimport { UserAssignedApproverListComponent } from './approvers/assigned/user-assigned-approver-list.component';\nimport { UserApproverListComponent } from './approvers/user-approver-list.component';\nimport { UserChangePasswordFormComponent } from './change-password-form/user-change-password-form.component';\nimport { UserDetailsCellComponent } from './details-cell/user-details-cell.component';\nimport { UserDetailsComponent } from './details/user-details.component';\nimport { UserFormComponent } from './form/user-form.component';\nimport { UserAssignedPermissionListComponent } from './permissions/assigned/user-assigned-permission-list.component';\nimport { UserPermissionListComponent } from './permissions/user-permission-list.component';\nimport { UserItemService } from './services/user-item.service';\nimport { UserListService } from './services/user-list.service';\nimport { UserRoutePageMetaResolver } from './services/user-route-page-meta.resolver';\nimport { UserUserGroupListComponent } from './user-groups';\nimport { UserAssignedUserGroupListComponent } from './user-groups/assigned/user-assigned-user-group-list.component';\n\nexport const userCmsConfig: CmsConfig = {\n  cmsComponents: {\n    ManageUsersListComponent: {\n      component: ListComponent,\n      providers: [\n        {\n          provide: ListService,\n          useExisting: UserListService,\n        },\n        {\n          provide: ItemService,\n          useExisting: UserItemService,\n        },\n      ],\n      childRoutes: {\n        parent: {\n          data: {\n            cxPageMeta: {\n              breadcrumb: 'orgUser.breadcrumbs.list',\n              resolver: UserRoutePageMetaResolver,\n            },\n          },\n        },\n        children: [\n          {\n            path: 'create',\n            component: UserFormComponent,\n          },\n          {\n            path: `:${ROUTE_PARAMS.userCode}`,\n            component: UserDetailsComponent,\n            data: {\n              cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.details' },\n            },\n            children: [\n              {\n                path: `edit`,\n                component: UserFormComponent,\n              },\n              {\n                path: `change-password`,\n                component: UserChangePasswordFormComponent,\n              },\n              {\n                path: 'user-groups',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.userGroups' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedUserGroupListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserUserGroupListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'approvers',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.approvers' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedApproverListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserApproverListComponent,\n                  },\n                ],\n              },\n              {\n                path: 'purchase-limits',\n                data: {\n                  cxPageMeta: { breadcrumb: 'orgUser.breadcrumbs.permissions' },\n                },\n                children: [\n                  {\n                    path: '',\n                    component: UserAssignedPermissionListComponent,\n                  },\n                  {\n                    path: 'assign',\n                    component: UserPermissionListComponent,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      },\n      guards: [AuthGuard, AdminGuard],\n    },\n  },\n};\n\nexport function userTableConfigFactory(): TableConfig {\n  return userTableConfig;\n}\n\nconst actions = {\n  dataComponent: AssignCellComponent,\n};\n\nconst pagination = {\n  pageSize: MAX_OCC_INTEGER_VALUE,\n};\n\nexport const userTableConfig: TableConfig = {\n  table: {\n    [OrganizationTableType.USER]: {\n      cells: ['name', 'active', 'uid', 'roles', 'unit'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: ActiveLinkCellComponent,\n          },\n          active: {\n            dataComponent: StatusCellComponent,\n          },\n          uid: {\n            dataComponent: CellComponent,\n          },\n          roles: {\n            dataComponent: RolesCellComponent,\n          },\n          unit: {\n            dataComponent: UnitCellComponent,\n          },\n        },\n      },\n    },\n    [OrganizationTableType.USER_APPROVERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_APPROVERS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n    [OrganizationTableType.USER_USER_GROUPS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserGroupDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_USER_GROUPS]: {\n      cells: ['name', 'actions'],\n      options: {\n        cells: {\n          name: {\n            dataComponent: UserGroupDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n    [OrganizationTableType.USER_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions,\n        },\n      },\n    },\n    [OrganizationTableType.USER_ASSIGNED_PERMISSIONS]: {\n      cells: ['code', 'actions'],\n      options: {\n        cells: {\n          code: {\n            dataComponent: PermissionDetailsCellComponent,\n          },\n          actions,\n        },\n        pagination,\n      },\n    },\n  },\n};\n","import { NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { ListModule } from '../shared/list/list.module';\nimport { UserApproverListModule } from './approvers/user-approver-list.module';\nimport { UserChangePasswordFormModule } from './change-password-form/user-change-password-form.module';\nimport { UserDetailsModule } from './details/user-details.module';\nimport { UserFormModule } from './form/user-form.module';\nimport { UserPermissionListModule } from './permissions/user-permission-list.module';\nimport { UserUserGroupsModule } from './user-groups/user-user-group-list.module';\nimport { userCmsConfig, userTableConfigFactory } from './user.config';\n@NgModule({\n  imports: [\n    ListModule,\n    UserChangePasswordFormModule,\n    UserDetailsModule,\n    UserFormModule,\n    UserPermissionListModule,\n    UserUserGroupsModule,\n    UserApproverListModule,\n  ],\n  providers: [\n    provideDefaultConfig(userCmsConfig),\n    provideDefaultConfigFactory(userTableConfigFactory),\n  ],\n})\nexport class UserComponentsModule {}\n","import { NgModule } from '@angular/core';\nimport { BudgetComponentsModule } from './budget/budget-components.module';\nimport { CostCenterComponentsModule } from './cost-center/cost-center-components.module';\nimport { PermissionComponentsModule } from './permission/permission-components.module';\nimport { UnitsComponentsModule } from './unit/units-components.module';\nimport { UserGroupComponentsModule } from './user-group/user-group-components.module';\nimport { UserComponentsModule } from './user/user-components.module';\n\n@NgModule({\n  imports: [\n    BudgetComponentsModule,\n    CostCenterComponentsModule,\n    UnitsComponentsModule,\n    UserGroupComponentsModule,\n    UserComponentsModule,\n    PermissionComponentsModule,\n  ],\n})\nexport class AdministrationComponentsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { CostCenterDetailsCellComponent } from './cost-center-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [CostCenterDetailsCellComponent],\n  exports: [CostCenterDetailsCellComponent],\n})\nexport class CostCenterDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { PermissionDetailsCellComponent } from './permission-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [PermissionDetailsCellComponent],\n  exports: [PermissionDetailsCellComponent],\n})\nexport class PermissionDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UnitDetailsCellComponent } from './unit-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UnitDetailsCellComponent],\n  exports: [UnitDetailsCellComponent],\n})\nexport class UnitDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UserGroupDetailsCellComponent } from './user-group-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UserGroupDetailsCellComponent],\n  exports: [UserGroupDetailsCellComponent],\n})\nexport class UserGroupDetailsCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { PopoverModule } from '@spartacus/storefront';\nimport { UserDetailsCellComponent } from './user-details-cell.component';\n\n@NgModule({\n  imports: [CommonModule, PopoverModule, RouterModule, I18nModule, UrlModule],\n  declarations: [UserDetailsCellComponent],\n  exports: [UserDetailsCellComponent],\n})\nexport class UserDetailsCellModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["pluck","distinctUntilChanged","switchMap","of","ROUTE_PARAMS","map","Injectable","BehaviorSubject","FormUtils","ReplaySubject","Subject","GlobalMessageType","filter","Directive","CommonModule","NgModule","isPlatformBrowser","PLATFORM_ID","Inject","HostBinding","ICON_TYPE","Component","ChangeDetectionStrategy","Injector","Subscription","ChangeDetectorRef","ViewContainerRef","ViewChild","I18nModule","IconModule","KeyboardFocusModule","tap","ViewComponent","Input","SplitViewModule","RouterModule","UrlModule","PopoverModule","first","take","LoadStatus","FormsModule","TableLayout","startWith","TableModule","PaginationModule","NgSelectModule","FeaturesConfigModule","OrganizationTableType","FormGroup","FormControl","Validators","CustomFormValidators","DefaultRoutePageMetaResolver","AuthGuard","AdminGuard","_a","ReactiveFormsModule","FormErrorsModule","DatePickerModule","provideDefaultConfig","provideDefaultConfigFactory","CurrencyService","OrgUnitService","PermissionType","Period","withLatestFrom","shareReplay","B2BUserRole","FormArray","BREAKPOINT"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAMA;;;;;;QAOE,4BAAsB,cAA8B;YAApD,iBAAwD;YAAlC,mBAAc,GAAd,cAAc,CAAgB;;;;;;;;;YAU3C,SAAI,GAAuB,IAAI,CAAC,cAAc;iBACpD,SAAS,EAAE;iBACX,IAAI,CAACA,eAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAEC,8BAAoB,EAAE,CAAC,CAAC;;;;;;YAOlD,UAAK,GAAkB,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5CC,mBAAS,CAAC,UAAC,IAAY,IAAK,QAAC,IAAI,GAAG,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAGC,OAAE,CAAC,IAAI,CAAC,IAAC,CAAC,CACpE,CAAC;;;;YAKO,aAAQ,GAAuB,IAAI,CAAC,cAAc;iBACxD,SAAS,EAAE;iBACX,IAAI,CAACH,eAAK,CAACI,iBAAY,CAAC,QAAQ,CAAC,EAAEH,8BAAoB,EAAE,CAAC,CAAC;SA5BN;QAyCxD,2CAAc,GAAd,UAAe,QAAgB;YAC7B,OAAO,IAAI,CAAC,cAAc;iBACvB,SAAS,EAAE;iBACX,IAAI,CAACI,aAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,CAAC,QAAQ,CAAC,GAAA,CAAC,CAAC,CAAC;SAC5C;;;yIA9CmB,kBAAkB;6IAAlB,kBAAkB;qHAAlB,kBAAkB;sBADvCC,aAAU;;;;QCNX;;QAQE,6BAAO,GAAP,UAAQ,IAAQ;YACd,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;gBACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACrB,OAAO,IAAI,CAAC,IAAI,CAAC;aAClB;YAED,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAClB;;;YAID,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YAElB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACrB,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;QAES,+BAAS,GAAT,UAAU,IAAQ;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,UAAU,iCAAM,IAAI,CAAC,YAAY,GAAK,IAAI,EAAG,CAAC;SACzD;QAEO,kCAAY,GAAZ,UAAa,IAAQ;;YAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAA,MAAC,IAAiB,0CAAE,MAAM,MAAK,KAAK,EAAE;gBAC7D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;aACrB;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAA,MAAC,IAAiB,0CAAE,MAAM,MAAK,IAAI,EAAE;gBAC7D,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;aACpB;SACF;QAID,sBAAc,qCAAY;;;;iBAA1B;gBACE,OAAO,EAAO,CAAC;aAChB;;;WAAA;;;kIA7CmB,WAAW;sIAAX,WAAW;qHAAX,WAAW;sBADhCA,aAAU;;;ICMX;;;;;;;QAQE,qBACY,kBAAyC,EACzC,cAA8B,EAC9B,WAA2B;YAHvC,iBAII;YAHQ,uBAAkB,GAAlB,kBAAkB,CAAuB;YACzC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,gBAAW,GAAX,WAAW,CAAgB;YAGvC,SAAI,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;YACpC,aAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAEzC,kBAAa,GAAwB,IAAIC,oBAAe,CAAU,KAAK,CAAC,CAAC;;;;;;YAOzE,UAAK,GAAuB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAE7D,WAAM,GAAwB,IAAI,CAAC,IAAI,CAAC,IAAI,CAC1CL,mBAAS,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAA,CAAC,CAC1D,CAAC;SAhBE;QAkBJ,0BAAI,GAAJ,UAAK,IAAe,EAAE,GAAY;YAChC,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBACxBM,YAAS,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC;gBAC3C,OAAOL,OAAE,EAAE,CAAC;aACb;iBAAM;;;;;gBAKL,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC7B,IAAI,CAAC,OAAO,EAAE,CAAC;gBAEf,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;aACnE;SACF;QA6BD,6BAAO,GAAP,UAAQ,IAAQ;YACd,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvC;;;;QAKD,mCAAa,GAAb,UAAc,IAAO;YACnB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,OAAO,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;aAC7C;SACF;;;;;;;;;;QAWS,sCAAgB,GAAhB,UAAiB,IAAO;YAChC,OAAO,IAAI,CAAC;SACb;QAED,oCAAc,GAAd,UAAe,GAAW;YACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;SACpD;;;;QAKD,iCAAW,GAAX,UAAY,QAAiB;YAC1B,IAAI,CAAC,aAA0C,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SACjE;;;kIAxGmB,WAAW;sIAAX,WAAW;qHAAX,WAAW;sBADhCG,aAAU;;;ICXX,IAAM,oBAAoB,GAAG,IAAI,CAAC;;QAElC;YAKY,UAAK,GAA+B,IAAIG,kBAAa,EAAE,CAAC;SAqCnE;QAnCC,4BAAG,GAAH;YACE,OAAO,IAAI,CAAC,KAAK,CAAC;SACnB;QAED,4BAAG,GAAH,UAAI,OAAU;YACZ,OAAO,mCAAQ,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAK,OAAO,CAAE,CAAC;YAC7D,OAAO,CAAC,MAAM,GAAG,IAAIC,YAAO,EAAK,CAAC;YAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACzB,OAAO,OAAO,CAAC,MAAM,CAAC;SACvB;QAED,8BAAK,GAAL,UAAM,OAAkC;YACtC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/B;;;;;QAMS,0CAAiB,GAAjB,UAAkB,OAAU;YACpC,IAAM,cAAc,GAAgB;gBAClC,IAAI,EAAEC,oBAAiB,CAAC,aAAa;aACtC,CAAC;YACF,IACE,CAAC,OAAO,CAAC,IAAI;iBACZ,OAAO,CAAC,IAAI,KAAKA,oBAAiB,CAAC,aAAa,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EACtE;gBACA,cAAc,CAAC,OAAO,GAAG,oBAAoB,CAAC;aAC/C;YACD,OAAO,cAAc,CAAC;SACvB;QAED,8BAAK,GAAL;YACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;SACnB;;;qIAxCU,cAAc;yIAAd,cAAc;qHAAd,cAAc;sBAD1BL,aAAU;;;;QCMT,6BACY,WAA2B,EAC3B,cAA8B;YAD9B,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAgB;SACtC;QAEJ,sCAAQ,GAAR;YAAA,iBAUC;YATC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ;iBAC1C,IAAI,CACHL,8BAAoB,CAClB,UAAC,QAAkB,EAAE,OAAiB,IACpC,OAAA,CAAA,QAAQ,aAAR,QAAQ,uBAAR,QAAQ,CAAE,MAAM,OAAK,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,CAAA,GAAA,CACvC,EACDW,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,MAAK,KAAK,GAAA,CAAC,CACjD;iBACA,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC;SACxD;QAES,iDAAmB,GAAnB,UAAoB,IAAc;YAC1C,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAE,oCAAoC;oBACzC,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;iBACjB;gBACD,IAAI,EAAED,oBAAiB,CAAC,cAAc;aACvC,CAAC,CAAC;SACJ;QAED,yCAAW,GAAX;;YACE,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;SAClC;;;0IAhCU,mBAAmB;mHAAnB,mBAAmB;qHAAnB,mBAAmB;sBAH/BE,YAAS;uBAAC;wBACT,QAAQ,EAAE,mBAAmB;qBAC9B;;;ICAD;QAAA;;;;uIAAa,gBAAgB;wIAAhB,gBAAgB,iBAHZ,mBAAmB,aADxBC,eAAY,aAEZ,mBAAmB;wIAElB,gBAAgB,YAJlB,CAACA,eAAY,CAAC;qHAIZ,gBAAgB;sBAL5BC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;;;QCFD;SAwCC;0BAAA;KAAA;;IC9CD;;;;;;;;;;;;;;IAcA;IAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;QAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;aAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;YAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;gBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;oBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;aAEc,SAAS,CAAC,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;YACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;QAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;IAEM,IAAI,QAAQ,GAAG;QAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;YAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,CAAC,IAAI,CAAC;oBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;wBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAChF;YACD,OAAO,CAAC,CAAC;SACZ,CAAA;QACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C,CAAC,CAAA;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;YAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACzB;QACL,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;QACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;QAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;YAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;oBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;QAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;IAClE,CAAC;aAEe,OAAO,CAAC,UAAU,EAAE,SAAS;QACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;IACzE,CAAC;aAEe,UAAU,CAAC,WAAW,EAAE,aAAa;QACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;YAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;IACnI,CAAC;aAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;QACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;QAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;YACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;gBAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;aAAE;YAAC,OAAO,CAAC,EAAE;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC;aAAE,EAAE;YAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;YAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;IACP,CAAC;aAEe,WAAW,CAAC,OAAO,EAAE,IAAI;QACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;QAClE,SAAS,IAAI,CAAC,EAAE;YACZ,IAAI,CAAC;gBAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;YAC9D,OAAO,CAAC;gBAAE,IAAI;oBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;wBAAE,OAAO,CAAC,CAAC;oBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;wBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;oBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;wBACT,KAAK,CAAC,CAAC;wBAAC,KAAK,CAAC;4BAAE,CAAC,GAAG,EAAE,CAAC;4BAAC,MAAM;wBAC9B,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;wBACxD,KAAK,CAAC;4BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;4BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;4BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;4BAAC,SAAS;wBACjD,KAAK,CAAC;4BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;wBACjD;4BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;gCAAE,CAAC,GAAG,CAAC,CAAC;gCAAC,SAAS;6BAAE;4BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,GAAG,EAAE,CAAC;gCAAC,MAAM;6BAAE;4BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;gCAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gCAAC,MAAM;6BAAE;4BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;gCAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;4BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;4BAAC,SAAS;qBAC9B;oBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;iBAC9B;gBAAC,OAAO,CAAC,EAAE;oBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;oBAAC,CAAC,GAAG,CAAC,CAAC;iBAAE;wBAAS;oBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;iBAAE;YAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;YAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;SACpF;IACL,CAAC;IAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QAC9D,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;QACtB,IAAI,EAAE,KAAK,SAAS;YAAE,EAAE,GAAG,CAAC,CAAC;QAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;aAEa,YAAY,CAAC,CAAC,EAAE,CAAC;QAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;YAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;gBAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClH,CAAC;aAEe,QAAQ,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QAC9E,IAAI,CAAC;YAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;YAAE,OAAO;gBAC1C,IAAI,EAAE;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;wBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;oBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;iBAC3C;aACJ,CAAC;QACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;IAC3F,CAAC;aAEe,MAAM,CAAC,CAAC,EAAE,CAAC;QACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACjC,IAAI;YACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;gBAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;SAC9E;QACD,OAAO,KAAK,EAAE;YAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;SAAE;gBAC/B;YACJ,IAAI;gBACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACpD;oBACO;gBAAE,IAAI,CAAC;oBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;aAAE;SACpC;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,QAAQ;QACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;YAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzC,OAAO,EAAE,CAAC;IACd,CAAC;IAED;aACgB,cAAc;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;YAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;gBAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACpB,OAAO,CAAC,CAAC;IACb,CAAC;aAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;QACxC,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;YAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;oBACpB,IAAI,CAAC,EAAE;wBAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;iBACnB;aACJ;QACD,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC;IACjC,CAAC;aAEe,OAAO,CAAC,CAAC;QACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC;aAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;QAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;YAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;YAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAAE;QAAC,OAAO,CAAC,EAAE;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAAE,EAAE;QAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;QAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;YAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACtF,CAAC;aAEe,gBAAgB,CAAC,CAAC;QAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;QACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACnJ,CAAC;aAEe,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;YAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;QACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;QAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;IAChI,CAAC;aAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;QAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;YAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;SAAE;aAAM;YAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;SAAE;QAC/G,OAAO,MAAM,CAAC;IAClB,CAAC;IAAA,CAAC;IAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;IACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;QACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC,CAAC;aAEc,YAAY,CAAC,GAAG;QAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;YAAE,OAAO,GAAG,CAAC;QACtC,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,IAAI,GAAG,IAAI,IAAI;YAAE,KAAK,IAAI,CAAC,IAAI,GAAG;gBAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,MAAM,CAAC;IAClB,CAAC;aAEe,eAAe,CAAC,GAAG;QAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;IAC5D,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAC3D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;QACnL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAClG,CAAC;aAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;QAClE,IAAI,IAAI,KAAK,GAAG;YAAE,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;QACxE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;QAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;QAClL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;IAC9G;;ICjOA;;QAaE,8BACY,WAAwB,EACH,UAAe;YADpC,gBAAW,GAAX,WAAW,CAAa;YACH,eAAU,GAAV,UAAU,CAAK;YAZf,eAAU,GAAG,KAAK,CAAC;SAahD;QAEJ,uCAAQ,GAAR;;YACE,IAAI,CAAC,OAAO,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,OAAO,mCAAI,EAAE,CAAC;YAC9C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;YAClD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;YAEhD,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;gBAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;aACvB;SACF;QAED,oCAAK,GAAL;YACE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;SAC/C;QAES,0CAAW,GAAX;YACR,IACE,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI;gBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,KAAKH,oBAAiB,CAAC,aAAa,EACzD;gBACA,OAAO,MAAM,CAAC;aACf;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAKA,oBAAiB,CAAC,cAAc,EAAE;gBAC9D,OAAO,OAAO,CAAC;aAChB;YACD,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAKA,oBAAiB,CAAC,gBAAgB,EAAE;gBAChE,OAAO,SAAS,CAAC;aAClB;SACF;QAES,6CAAc,GAAd;YAAA,iBAOT;YANC,IAAIK,oBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;;gBAEtC,UAAU,CAAC;oBACT,KAAI,CAAC,KAAK,EAAE,CAAC;iBACd,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;aAC9B;SACF;;;2IAtDmB,oBAAoB,0CAc9BC,cAAW;oHAdD,oBAAoB;qHAApB,oBAAoB;sBAFzCJ,YAAS;;;kCAgBLK,SAAM;mCAACD,cAAW;;6BAbC,IAAI;0BAAzBE,cAAW;2BAAC,OAAO;oBACa,UAAU;0BAA1CA,cAAW;2BAAC,kBAAkB;;;;QCPiB,gDAAoB;QALtE;YAAA,6EAOC;YADC,eAAS,GAAGC,YAAS,CAAC,KAAK,CAAC;;SAC7B;;KAFD,CAAkD,oBAAoB;mJAAzD,4BAA4B;4HAA5B,4BAA4B,6FCTzC,0VAWA;qHDFa,4BAA4B;sBALxCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEKC,8BAAsB,wBAAkD;YAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;SAAI;QAE5E,2CAAY,GAAZ,UAAa,GAAgB;YAC3B,OAAO,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAC1D,GAAG,CAAC,SAAS,IAAI,4BAA4B,CAC9C,CAAC;SACH;QAED,0CAAW,GAAX,UAAY,aAA0B,EAAE,MAAiB;YACvD,OAAOC,WAAQ,CAAC,MAAM,CAAC;gBACrB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,QAAQ,EAAE,aAAa;qBACxB;iBACF;gBACD,MAAM,QAAA;aACP,CAAC,CAAC;SACJ;;;2IAnBU,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCjB,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCkBC,0BACY,cAA8B,EAC9B,aAAmC;YADnC,mBAAc,GAAd,cAAc,CAAgB;YAC9B,kBAAa,GAAb,aAAa,CAAsB;YAJrC,iBAAY,GAAG,IAAIkB,iBAAY,EAAE,CAAC;SAKxC;QAEJ,0CAAe,GAAf;YAAA,iBAUC;YATC,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;;gBACtC,IAAI,GAAG,EAAE;oBACP,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBAClB;qBAAM;oBACL,MAAA,KAAI,CAAC,GAAG,0CAAE,KAAK,EAAE,CAAC;iBACnB;aACF,CAAC,CACH,CAAC;SACH;QAES,iCAAM,GAAN,UAAO,GAAgB;YAAvB,iBAaT;YAZC,IAAM,GAAG,GAAuC,IAAI,CAAC,GAAG,CAAC,eAAe,CACtE,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,GAAG,CAAC,EACpC,CAAC,EACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CACvD,CAAC;YACF,GAAG,CAAC,QAAQ,CAAC,GAAG,CAACC,oBAAiB,CAAC,CAAC,YAAY,EAAE,CAAC;YAEnD,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,GAAG,CAAC,MAAM;iBACP,IAAI,CAACb,gBAAM,CAAC,UAAC,KAAuB,IAAK,OAAA,CAAC,CAAC,KAAK,CAAC,KAAK,GAAA,CAAC,CAAC;iBACxD,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAA,CAAC,CACxC,CAAC;SACH;;;;;;QAOS,oCAAS,GAAT,UAAU,GAAuC;YACzD,GAAG,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC;YAC/B,GAAG,CAAC,QAAQ,CAAC,GAAG,CAACa,oBAAiB,CAAC,CAAC,YAAY,EAAE,CAAC;YACnD,UAAU,CAAC;gBACT,GAAG,CAAC,OAAO,EAAE,CAAC;aACf,EAAE,GAAG,CAAC,CAAC;SACT;QAED,sCAAW,GAAX;YACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;;;uIAtDU,gBAAgB;gHAAhB,gBAAgB,6HAGDC,mBAAgB,wCCzB5C,sCACA;qHDqBa,gBAAgB;sBAL5BL,YAAS;uBAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,WAAW,EAAE,0BAA0B;wBACvC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;sIAI+C,GAAG;0BAAhDK,YAAS;2BAAC,KAAK,EAAE,EAAE,IAAI,EAAED,mBAAgB,EAAE;;;;QEf9C;;;;gJAAa,yBAAyB;iJAAzB,yBAAyB,iBAFrB,4BAA4B,aADjCZ,eAAY,EAAEc,aAAU,EAAEC,aAAU,EAAEC,sBAAmB;iJAGxD,yBAAyB,YAH3B,CAAChB,eAAY,EAAEc,aAAU,EAAEC,aAAU,EAAEC,sBAAmB,CAAC;qHAGzD,yBAAyB;sBAJrCf,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAEC,aAAU,EAAEC,sBAAmB,CAAC;wBACpE,YAAY,EAAE,CAAC,4BAA4B,CAAC;qBAC7C;;;;QCCD;;;;oIAAa,aAAa;qIAAb,aAAa,iBAHT,gBAAgB,aADrBhB,eAAY,EAAE,yBAAyB,aAEvC,gBAAgB;qIAEf,aAAa,YAJf,CAACA,eAAY,EAAE,yBAAyB,CAAC;qHAIvC,aAAa;sBALzBC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAE,yBAAyB,CAAC;wBAClD,YAAY,EAAE,CAAC,gBAAgB,CAAC;wBAChC,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;;;QC4BC,uBACY,WAA2B,EAC3B,cAA8B;YAF1C,iBAGI;YAFQ,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAgB;YAhBjC,aAAQ,GAAqB,IAAI,CAAC;YAElC,aAAQ,GAAI,KAAK,CAAC;YAI3B,cAAS,GAAGM,YAAS,CAAC;YAEtB,UAAK,GAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CACnDW,aAAG,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAA,CAAC,CAC1C,CAAC;SAOE;;;;;;QAOJ,iCAAS,GAAT,UAAU,KAAiB;YACzB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEvB,UAAU,CAAC;;gBACT,MAAC,KAAK,CAAC,MAAsB,0CAAE,aAAa,CAAC,KAAK,EAAE,CAAC;aACtD,EAAE,GAAG,CAAC,CAAC;YAER,OAAO,KAAK,CAAC;SACd;QAED,sBAAI,wCAAa;iBAAjB;gBACE,OAAO,IAAI,CAAC,QAAkB,CAAC;aAChC;;;WAAA;QAES,uCAAe,GAAf,UAAgB,IAAO;;YAC/B,IACE,IAAI,CAAC,OAAO,KAAK,SAAS;gBAC1B,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,IAAI,CAAC,OAAO;gBAC3B,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,MAAK,IAAI,CAAC,OAAO;gBAC1B,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,MAAK,IAAI,CAAC,OAAO,EACjC;gBACA,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;aAC7B;YACD,IAAI,CAAC,OAAO,GAAG,MAAA,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,mCAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,mCAAI,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,CAAC;SAC5D;;;oIAnDU,aAAa;6GAAb,aAAa,uLAFb,CAAC,cAAc,CAAC,gEAgBhBC,gBAAa,2BAAUA,gBAAa,wCCnCjD,ggDAsDA;qHDjCa,aAAa;sBAPzBX,YAAS;uBAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,uBAAuB;wBACpC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE,CAAC,cAAc,CAAC;qBAC5B;6HAEU,QAAQ;0BAAhBW,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;oBAU6C,IAAI;0BAAtDN,YAAS;2BAACK,gBAAa,EAAE,EAAE,IAAI,EAAEA,gBAAa,EAAE;;;IE3BnD;;;;;;;QAoBA;;;;iIAAa,UAAU;kIAAV,UAAU,iBAHN,aAAa,aAT1BlB,eAAY;YACZoB,kBAAe;YACfC,eAAY;YACZP,aAAU;YACVC,aAAU;YACVO,YAAS;YACT,aAAa;YACbC,gBAAa,aAGL,aAAa;kIAEZ,UAAU,YAbZ;gBACPvB,eAAY;gBACZoB,kBAAe;gBACfC,eAAY;gBACZP,aAAU;gBACVC,aAAU;gBACVO,YAAS;gBACT,aAAa;gBACbC,gBAAa;aACd;qHAIU,UAAU;sBAdtBtB,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZoB,kBAAe;4BACfC,eAAY;4BACZP,aAAU;4BACVC,aAAU;4BACVO,YAAS;4BACT,aAAa;4BACbC,gBAAa;yBACd;wBACD,YAAY,EAAE,CAAC,aAAa,CAAC;wBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;qBACzB;;;ICZD,IAAM,eAAe,GAAG,UAAU,CAAC;IAEnC;;;;;QA6CE,uBACY,WAA2B,EAC3B,cAA8B;YAF1C,iBAGI;YAFQ,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAgB;YA9BjC,gBAAW,GAAG,IAAI,CAAC;YAQ5B,UAAK,GAA0B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAC3DhC,aAAG,CAAC,UAAC,IAAI;gBACP,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBAEvB,IAAI,CAAC,IAAI,EAAE;;oBAET,IAAI,GAAG,EAAS,CAAC;iBAClB;gBACD,OAAO,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;aACvC,CAAC,CACH,CAAC;;;;YAKF,cAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CACzBH,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,aAAa,GAAA,CAAC,EACvCG,aAAG,CAAC,UAAC,MAAM,IAAK,OAAA,MAAM,KAAK,eAAe,GAAA,CAAC,CAC5C,CAAC;SAKE;QAEJ,4BAAI,GAAJ,UAAK,IAAe;YAApB,iBAsBC;YArBC,IAAI,CAAC,WAAW,CAAC,IAAI;iBAClB,IAAI,CACHiC,eAAK,EAAE,EACPpC,mBAAS,CAAC,UAAC,GAAG,IACZ,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CACnCqC,cAAI,CAAC,CAAC,CAAC,EACPlC,aAAG,CAAC,UAAC,IAAI,IAAK,QAAC;gBACb,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,MAAM,EAAE,GAAG,GAAG,QAAQ,GAAG,QAAQ;aAClC,IAAC,CAAC,CACJ,GAAA,CACF,CACF;iBACA,SAAS,CAAC,UAAC,EAAwB;oBAAtB,IAAI,UAAA,EAAE,MAAM,YAAA,EAAE,MAAM,YAAA;gBAChC,IAAI,MAAM,KAAKmC,eAAU,CAAC,OAAO,EAAE;oBACjC,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACrC,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;iBAC3B;gBACD,IAAI,CAAC,MAAM,EAAE,CAAC;aACf,CAAC,CAAC;SACN;QAES,8BAAM,GAAN,UAAO,IAAO,EAAE,MAAc;YACtC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAK,IAAI,CAAC,QAAQ,kBAAa,MAAQ;oBAC1C,MAAM,EAAE;wBACN,IAAI,MAAA;qBACL;iBACF;aACF,CAAC,CAAC;SACJ;QAES,mCAAW,GAAX,UAAY,IAAO;;YAE3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,OAAO,GAAG,SAAS,CAAC,CAAC;SAC1D;QAED,4BAAI,GAAJ,UAAK,KAAiB,EAAE,IAAwB;YAC9C,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;aACvB;SACF;QAED,gCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SACpC;QAED,mCAAW,GAAX;YACE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SACrC;;;oIA5FU,aAAa;6GAAb,aAAa,+LC3B1B,m9BA+BA;qHDJa,aAAa;sBANzBnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,uBAAuB;wBACpC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;6HAMU,QAAQ;0BAAhBW,QAAK;oBAEG,WAAW;0BAAnBA,QAAK;oBACG,QAAQ;0BAAhBA,QAAK;;;;QERR;;;;iIAAa,UAAU;kIAAV,UAAU,iBAJN,aAAa,aAT1BnB,eAAY;YACZ2B,cAAW;YACXb,aAAU;YACVO,eAAY;YACZ,UAAU;YACV,aAAa;YACb,gBAAgB;YAChBL,sBAAmB,aAIX,aAAa;kIAEZ,UAAU,aAHV,CAAC,cAAc,CAAC,YAXlB;gBACPhB,eAAY;gBACZ2B,cAAW;gBACXb,aAAU;gBACVO,eAAY;gBACZ,UAAU;gBACV,aAAa;gBACb,gBAAgB;gBAChBL,sBAAmB;aACpB;qHAKU,UAAU;sBAftBf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ2B,cAAW;4BACXb,aAAU;4BACVO,eAAY;4BACZ,UAAU;4BACV,aAAa;4BACb,gBAAgB;4BAChBL,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,aAAa,CAAC;wBAC7B,SAAS,EAAE,CAAC,cAAc,CAAC;wBAC3B,OAAO,EAAE,CAAC,aAAa,CAAC;qBACzB;;;ICdD;;;;;;;;;;QA+DE,qBAAsB,YAA0B;YAA1B,iBAAY,GAAZ,YAAY,CAAc;;;;;YA/CtC,0BAAqB,GAAiC;gBAC9D,OAAO,EAAE,EAAE,MAAM,EAAEY,cAAW,CAAC,gBAAgB,EAAE;gBACjD,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAEA,cAAW,CAAC,QAAQ,EAAE,EAAE;aAClD,CAAC;;;;;;;YAQQ,cAAS,GAAG,EAAE,MAAM,EAAE,IAAI,KAAK,CAAC,EAAE,CAAC,EAAsB,CAAC;YAEpE,kBAAa,GAAiB,IAAIhC,YAAO,EAAE,CAAC;;;;;;;YA8BlC,gBAAW,GAAuB,IAAIH,oBAAe,CAAC;gBAC9D,QAAQ,EAAE,EAAE;aACD,CAAC,CAAC;SAEqC;QAlBpD,sBAAI,iCAAQ;iBAAZ;gBACE,OAAO,IAAI,CAAC,SAAS,CAAC;aACvB;;;WAAA;QAED,sBAAI,mCAAU;iBAAd;;gBACE,OAAO,MAAA,IAAI,CAAC,WAAW,mCAAI,IAAI,CAAC,QAAQ,CAAC;aAC1C;;;WAAA;;;;;QAkBD,yBAAG,GAAH;YACE,OAAO,MAAM,CAAC;SACf;;;;;;;;QASD,6BAAO,GAAP;YAAA,iBAWC;YAXO,cAAY;iBAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;gBAAZ,yBAAY;;YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI;;YAE1BL,mBAAS,CAAC,UAAC,UAAU,IACnB,OAAA,KAAI,CAAC,YAAY,EAAE,CAAC,IAAI,CACtBG,aAAG,CAAC,UAAC,MAAM,YAAK,wCAAM,UAAU,GAAK,MAAA,MAAM,CAAC,OAAO,0CAAE,UAAU,GAAG,EAAA,CAAC,CACpE,GAAA,CACF,EACDH,mBAAS,CAAC,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,IAAI,OAAT,KAAI,iBAAM,UAAU,UAAK,IAAI,MAAC,CAAC,EACzDyC,mBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC1B,CAAC;SACH;;;;;;;QAQD,kCAAY,GAAZ;YACE,OAAO,IAAI,CAAC,YAAY,CAAC,cAAc,CACrC,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,qBAAqB,CAC3B,CAAC;SACH;;;;QAKD,0BAAI,GAAJ,UAAK,UAAa,EAAE,QAAiB;YACnC,IAAI,CAAC,WAAW,CAAC,IAAI,iCAAM,UAAU,KAAE,WAAW,EAAE,QAAQ,IAAG,CAAC;SACjE;;;;;;QAOD,0BAAI,GAAJ,UAAK,UAAa,EAAE,aAAsB;YACxC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC1B;;;;;;;;;QAUD,kCAAY,GAAZ,UAAa,IAAsB;YACjC,OAAO,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC;SAChC;;;kIAzHmB,WAAW;sIAAX,WAAW;qHAAX,WAAW;sBADhCrC,aAAU;;;;QCCT,uBACY,OAA0B,EAC1B,uBAAuC;YAFnD,iBAGI;YAFQ,YAAO,GAAP,OAAO,CAAmB;YAC1B,4BAAuB,GAAvB,uBAAuB,CAAgB;YAJvB,iBAAY,GAAG,KAAK,CAAC;YAQjD,aAAQ,GAA0B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;YAExD,eAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;YAIrC,cAAS,GAAGc,YAAS,CAAC;;;;;;YAOb,gBAAW,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;YAEhD,eAAU,GAA+B,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;YAErE,cAAS,GAAiC,IAAI,CAAC,OAAO;iBAC5D,OAAO,EAAE;iBACT,IAAI,CACHW,aAAG,CAAC,UAAC,IAAI;;gBACP,KAAI,CAAC,QAAQ,GAAG,MAAA,IAAI,CAAC,UAAU,0CAAE,IAAI,CAAC;gBACtC,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACrD,CAAC,CACH,CAAC;YAEK,QAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SA7B9B;;;;QAkCJ,oCAAY,GAAZ,UAAa,SAAgB;;YAC3B,OAAO,MAAA,SAAS,CAAC,UAAU,0CAAE,YAAY,CAAC;SAC3C;;;;QAKD,8BAAM,GAAN,UAAO,UAAa,EAAE,UAAkB;YACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;SAC3C;;;;QAKD,kCAAU,GAAV,UAAW,KAAQ;YACjB,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SACnD;;;;QAKD,4BAAI,GAAJ,UAAK,UAAa;YAChB,IAAI,CAAC,OAAO,CAAC,IAAI,iCACZ,UAAU,GACT,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAsB,EAC/C,CAAC;SACJ;;;oIAlEU,aAAa;6GAAb,aAAa,8KCpB1B,8/FAiGA;qHD7Ea,aAAa;sBALzBV,YAAS;uBAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,uBAAuB;wBACpC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;0HAE6B,YAAY;0BAAvCH,cAAW;2BAAC,aAAa;oBAQ1B,QAAQ;0BADPA,cAAW;2BAAC,OAAO;oBA2BX,GAAG;0BAAXc,QAAK;;;;QEnBR;;;;iIAAa,UAAU;kIAAV,UAAU,iBAHN,aAAa,aAd1BnB,eAAY;YACZqB,eAAY;YACZD,kBAAe;YACfU,cAAW;YACXf,aAAU;YACVO,YAAS;YACTR,aAAU;YACViB,mBAAgB;YAChBC,mBAAc;YACdL,cAAW;YACX,aAAa;YACbX,sBAAmB;YACnBO,gBAAa,aAGL,aAAa;kIAEZ,UAAU,YAlBZ;gBACPvB,eAAY;gBACZqB,eAAY;gBACZD,kBAAe;gBACfU,cAAW;gBACXf,aAAU;gBACVO,YAAS;gBACTR,aAAU;gBACViB,mBAAgB;gBAChBC,mBAAc;gBACdL,cAAW;gBACX,aAAa;gBACbX,sBAAmB;gBACnBO,gBAAa;aACd;qHAIU,UAAU;sBAnBtBtB,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZD,kBAAe;4BACfU,cAAW;4BACXf,aAAU;4BACVO,YAAS;4BACTR,aAAU;4BACViB,mBAAgB;4BAChBC,mBAAc;4BACdL,cAAW;4BACX,aAAa;4BACbX,sBAAmB;4BACnBO,gBAAa;yBACd;wBACD,YAAY,EAAE,CAAC,aAAa,CAAC;wBAC7B,OAAO,EAAE,CAAC,aAAa,CAAC;qBACzB;;;;QCtBC,uBAAsB,MAAiD;YAAjD,WAAM,GAAN,MAAM,CAA2C;SAAI;QAE3E,sBAAI,mCAAQ;iBAAZ;gBACE,OAAO,CAAC,CAAC,CAAC;aACX;;;WAAA;QAED,sBAAI,gCAAK;iBAAT;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aAC5B;;;WAAA;QAED,sBAAI,mCAAQ;iBAAZ;;gBACE,OAAO,MAAA,IAAI,CAAC,KAAK,0CAAG,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,0CAAE,MAAM,CAAC,CAAC;aACnD;;;WAAA;QAUD,sBAAI,mCAAQ;;;;;;;;;iBAAZ;;gBACE,OAAO,IAAI,CAAC,QAAQ,KAAK,SAAS,KAAK,MAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,mCAAI,IAAI,CAAC,CAAC;aAC3E;;;WAAA;QAKD,sBAAI,sCAAW;;;;iBAAf;;gBACE,QACE,MAAA,MAAA,MAAA,MAAA,IAAI,CAAC,MAAM,CAAC,OAAO,0CAAE,QAAQ,0CAAE,KAAK,0CAAG,MAAA,IAAI,CAAC,MAAM,CAAC,OAAO,0CAAE,MAAM,CAAC,mCAAI,EAAE,EACzE;aACH;;;WAAA;QAKD,sBAAI,gCAAK;;;;iBAAT;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,SAAS,CAAC;aAC9C;;;WAAA;QAED,sBAAI,qCAAU;iBAAd;gBACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aAC5B;;;WAAA;QAED,sBAAI,+BAAI;iBAAR;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aACzB;;;WAAA;QAKD,sBAAI,kCAAO;;;;iBAAX;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;aACzD;;;WAAA;QAED,sBAAc,+BAAI;iBAAlB;gBACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBACxB,OAAO,IAAI,CAAC;iBACb;gBACD,IAAM,KAAiD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAlE,MAAM,KAA4D,OAA5D,EAAE,QAAQ,KAAkD,SAAlD,EAAE,KAAK,KAA2C,MAA3C,EAAE,SAAS,KAAgC,UAAhC,EAAK,GAAG,cAA5C,4CAA8C,CAAsB,CAAC;gBAC3E,OAAO,GAAG,CAAC;aACZ;;;WAAA;;;oIAhEU,aAAa;6GAAb,aAAa,8DCZ1B,wTAWA;qHDCa,aAAa;sBALzBhB,YAAS;uBAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,WAAW,EAAE,uBAAuB;wBACpC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEe2C,uCAAa;QACvD,6BACY,MAAiD,EACjD,uBAAuC,EACvC,cAA8B,EAC9B,0BAA0C;YAJtD,YAME,kBAAM,MAAM,CAAC,SACd;YANW,YAAM,GAAN,MAAM,CAA2C;YACjD,6BAAuB,GAAvB,uBAAuB,CAAgB;YACvC,oBAAc,GAAd,cAAc,CAAgB;YAC9B,gCAA0B,GAA1B,0BAA0B,CAAgB;;SAGrD;QAED,sBAAI,2CAAU;iBAAd;;gBACE,OAAO,MAAC,IAAI,CAAC,IAAY,0CAAE,QAAQ,CAAC;aACrC;;;WAAA;QAED,0CAAY,GAAZ;YAAA,iBAmBC;YAlBC,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACnC,IAAI,CAAC,uBAAuB,CAAC,IAAI;iBAC9B,IAAI,CACHgB,eAAK,EAAE,EACPpC,mBAAS,CAAC,UAAC,GAAG,IACZ,OAAA,UAAU;kBACN,KAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAI,CAAC,IAAI,CAAC;kBAC7B,KAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAI,CAAC,IAAI,CAAC,GAAA,CAChC,EACDqC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CACJ,UAAC,IAA+B,IAC9B,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CACrC,CACF;iBACA,SAAS,CAAC,UAAC,IAAI,IACd,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,GAAG,YAAY,GAAG,UAAU,CAAC,GAAA,CAC/D,CAAC;SACL;QAES,oCAAM,GAAN,UACR,GAAW,EACX,OAAe;YAEf,OAAQ,IAAI,CAAC,0BAAgD,CAAC,MAAM,CAClE,GAAG,EACH,OAAO,CACR,CAAC;SACH;QAES,sCAAQ,GAAR,UACR,GAAW,EACX,OAAe;YAEf,OAAQ,IAAI,CAAC,0BAAgD,CAAC,QAAQ,CACpE,GAAG,EACH,OAAO,CACR,CAAC;SACH;QAUD,sBAAc,qCAAI;;;;;;;;;iBAAlB;;gBACE,QACE,MAAA,MAAA,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,mCACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,mCAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,EACvB;aACH;;;WAAA;QAES,oCAAM,GAAN,UAAO,IAAI,EAAE,KAAK;YAC1B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAK,IAAI,CAAC,0BAA0B,CAAC,QAAQ,SAAI,KAAO;oBAC3D,MAAM,EAAE;wBACN,IAAI,MAAA;qBACL;iBACF;aACF,CAAC,CAAC;SACJ;;KAhFH,CAA4C,aAAa;0IAA5C,mBAAmB;mHAAnB,mBAAmB,4FAPpB,+JAIT;qHAGU,mBAAmB;sBAT/BnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,QAAQ,EAAE,+JAIT;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCLqC,oCAAa;QANnD;YAAA,6EAmCC;YA5BC,eAAS,GAAG,EAAE,CAAC;YAKN,cAAQ,GAAqB,IAAI,CAAC;YAElC,SAAG,GAAG,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;YAEzB,cAAQ,GAAI,KAAK,CAAC;YAMC,kBAAY,GAAG,KAAK,CAAC;YAIxC,eAAS,GAAmC,KAAI,CAAC,WAAW,CAAC,IAAI,CACxEpB,mBAAS,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAA,CAAC,EAC7C6B,aAAG,CAAC,UAAC,IAAI;gBACP,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aACrD,CAAC,CACH,CAAC;YAEO,oBAAc,GACrB,KAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;;SAC/B;QAjBC,sBAAa,uCAAS;iBAAtB,UAAuB,GAAW;gBAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;aACjE;;;WAAA;;KAdH,CAAsC,aAAa;uIAAtC,gBAAgB;gHAAhB,gBAAgB,oSAGhB,cAAc,2BAAU,cAAc,+DCvBnD,mtCAoCA;qHDhBa,gBAAgB;sBAN5BV,YAAS;uBAAC;wBACT,QAAQ,EAAE,iBAAiB;wBAC3B,WAAW,EAAE,2BAA2B;wBACxC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;kCAKC,cAAc;0BADbK,YAAS;2BAAC,cAAc,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;oBAG1C,QAAQ;0BAAhBM,QAAK;oBAEG,GAAG;0BAAXA,QAAK;oBAEG,QAAQ;0BAAhBA,QAAK;oBAEO,SAAS;0BAArBA,QAAK;oBAIsB,YAAY;0BAAvCd,cAAW;2BAAC,aAAa;;;;QEV5B;;;;oIAAa,aAAa;qIAAb,aAAa,iBAHT,gBAAgB,EAAE,mBAAmB,aARlDL,eAAY;YACZc,aAAU;YACV,UAAU;YACVgB,cAAW;YACXC,mBAAgB;YAChB,aAAa;YACbf,sBAAmB,aAGX,gBAAgB;qIAEf,aAAa,YAZf;gBACPhB,eAAY;gBACZc,aAAU;gBACV,UAAU;gBACVgB,cAAW;gBACXC,mBAAgB;gBAChB,aAAa;gBACbf,sBAAmB;aACpB;qHAIU,aAAa;sBAbzBf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZc,aAAU;4BACV,UAAU;4BACVgB,cAAW;4BACXC,mBAAgB;4BAChB,aAAa;4BACbf,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,gBAAgB,EAAE,mBAAmB,CAAC;wBACrD,OAAO,EAAE,CAAC,gBAAgB,CAAC;qBAC5B;;;;QCjBD;;;;+IAAa,wBAAwB;gJAAxB,wBAAwB,YAFzB,UAAU,EAAE,aAAa,EAAE,UAAU;gJAEpC,wBAAwB,YAF1B,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;qHAErC,wBAAwB;sBAHpCf,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;qBACjD;;;ICPD;IACA;IACO,IAAM,qBAAqB,GAAG,UAAU;;;QCW7C,6BACY,WAA2B,EAC3B,cAA8B;YAD9B,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAgB;SACtC;QAEJ,sCAAQ,GAAR;YAAA,iBAIC;YAHC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM;iBACxC,IAAI,CAACH,gBAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,GAAA,CAAC,CAAC;iBAC9B,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,EAAE,GAAA,CAAC,CAAC;SAC/C;QAES,gDAAkB,GAAlB;YACR,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAE,oCAAoC;iBAC1C;gBACD,IAAI,EAAED,oBAAiB,CAAC,cAAc;aACvC,CAAC,CAAC;SACJ;QAED,yCAAW,GAAX;;YACE,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;SAClC;;;0IAzBU,mBAAmB;mHAAnB,mBAAmB;qHAAnB,mBAAmB;sBAH/BE,YAAS;uBAAC;wBACT,QAAQ,EAAE,mBAAmB;qBAC9B;;;ICID;;;;QASU,gDAAoB;QAU5B,sCACY,IAA0C,EACrB,UAAe,EACpC,cAA8B;YAH1C,YAKE,kBAAM,IAAI,EAAE,UAAU,CAAC,SACxB;YALW,UAAI,GAAJ,IAAI,CAAsC;YACrB,gBAAU,GAAV,UAAU,CAAK;YACpC,oBAAc,GAAd,cAAc,CAAgB;YAV1C,gBAAU,GAAiB;gBACzB,GAAG,EAAE,kCAAkC;aACxC,CAAC;YACF,iBAAW,GAAiB;gBAC1B,GAAG,EAAE,mCAAmC;aACzC,CAAC;;SAQD;QAED,+CAAQ,GAAR;;YACE,iBAAM,QAAQ,WAAE,CAAC;YACjB,IAAI,CAAC,UAAU,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,MAAM,mCAAI,IAAI,CAAC,UAAU,CAAC;YAC7D,IAAI,CAAC,WAAW,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,OAAO,mCAAI,IAAI,CAAC,WAAW,CAAC;SACjE;;;;;;;QAOD,8CAAO,GAAP;YACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;SAC1C;;KAhCH,CACU,oBAAoB;mJADjB,4BAA4B,0CAa7BI,cAAW;4HAbV,4BAA4B,6FCrBzC,4pBAoBA;qHDCa,4BAA4B;sBALxCI,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;kCAcIJ,SAAM;mCAACD,cAAW;;;;;QE3BvB;;QACE,2CAAc,GAAd,UAAe,IAAO;YACpB,OAAO,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,MAAK,KAAK,CAAC;SAC/B;QAED,6CAAgB,GAAhB,UAAiB,IAAO;;YACtB,QACE,CAAA,OAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,0CAAE,MAAM,MAAK,KAAK;gBACnE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EACtB;SACH;QAED,uCAAU,GAAV,UAAW,IAAa;;YACtB,QACE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG;iBACT,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAA;gBACV,EAAC,MAAC,IAAU,0CAAE,OAAO,CAAA;gBACrB,EAAC,MAAC,IAAU,0CAAE,IAAI,CAAA;iBACjB,EAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAA,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,OAAK,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAA,CAAC,EAC3D;SACH;;;yIApBU,kBAAkB;6IAAlB,kBAAkB,cAFjB,MAAM;qHAEP,kBAAkB;sBAH9BX,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICKD;;;;;QA2CE,+BACY,WAA2B,EAC3B,cAAuD,EACvD,kBAAyC;YAFzC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAyC;YACvD,uBAAkB,GAAlB,kBAAkB,CAAuB;;;;;;YAvB5C,QAAG,GAAG,MAAM,CAAC;;;;YAUtB,aAAQ,GAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;;;;YAKpD,kBAAa,GAAwB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YAE1D,iBAAY,GAAG,IAAIkB,iBAAY,EAAE,CAAC;SAOxC;QAEJ,sCAAM,GAAN,UAAO,IAAO;YAAd,iBAmCC;YAlCC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;;gBAEhB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACnB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;oBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;wBAC1C,OAAO,EAAE;4BACP,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,sBAAsB;4BAC3C,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;yBACjB;wBACD,YAAY,EAAE;4BACZ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,2BAA2B;4BAChD,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;yBACjB;wBACD,OAAO,EAAE;4BACP,GAAG,EAAE,mCAAmC;yBACzC;wBACD,SAAS,EAAE,4BAA4B;qBACxC,CAAC,CAAC;oBAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAACc,eAAK,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;wBAC9C,IAAI,KAAK,CAAC,KAAK,EAAE;4BACf,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;yBAC1B;wBACD,IAAI,KAAK,CAAC,OAAO,EAAE;4BACjB,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;4BAC7C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;4BAClB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;yBAC1B;qBACF,CAAC,CACH,CAAC;iBACH;aACF;SACF;;;;QAKD,0CAAU,GAAV,UAAW,IAAO;;YAChB,QACE,MAAA,IAAI,CAAC,QAAQ,oCACZ,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC;gBAC7C,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAC3C;SACH;QAES,sCAAM,GAAN,UAAO,IAAO;YAAd,iBAQT;YAPC,IAAI,CAAC,WAAW;iBACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;iBACjD,IAAI,CACHC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CAAC,CACrD;iBACA,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,MAAM,iCAAM,IAAI,GAAK,IAAI,CAAC,IAAI,EAAG,GAAA,CAAC,CAAC;SAChE;QAES,8CAAc,GAAd,UAAe,IAAO;YAC9B,IAAM,KAAK,GAAa,EAAE,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACjC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;YAC5B,OAAO,KAAU,CAAC;SACnB;QAES,sCAAM,GAAN,UAAO,IAAO;YACtB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAK,IAAI,CAAC,QAAQ,mBACnB,IAAI,CAAC,MAAM,GAAG,gBAAgB,GAAG,iBACnC,CAAE;oBACF,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;iBACjB;aACF,CAAC,CAAC;SACJ;QAED,2CAAW,GAAX;;YACE,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;SAClC;;;4IAtHU,qBAAqB;qHAArB,qBAAqB,wLCpBlC,uTAWA;qHDSa,qBAAqB;sBALjCnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,WAAW,EAAE,gCAAgC;wBAC7C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;2JAQU,QAAQ;0BAAhBY,QAAK;oBAOG,GAAG;0BAAXA,QAAK;oBAKG,QAAQ;0BAAhBA,QAAK;;;;QEvBR;;;;gJAAa,yBAAyB;iJAAzB,yBAAyB,iBAFrB,4BAA4B,aANzCnB,eAAY;YACZc,aAAU;YACVC,aAAU;YACVC,sBAAmB;YACnBiB,uBAAoB;iJAIX,yBAAyB,YAT3B;gBACPjC,eAAY;gBACZc,aAAU;gBACVC,aAAU;gBACVC,sBAAmB;gBACnBiB,uBAAoB;aACrB;qHAGU,yBAAyB;sBAVrChC,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZc,aAAU;4BACVC,aAAU;4BACVC,sBAAmB;4BACnBiB,uBAAoB;yBACrB;wBACD,YAAY,EAAE,CAAC,4BAA4B,CAAC;qBAC7C;;;;QCHD;;;;yIAAa,kBAAkB;0IAAlB,kBAAkB,iBAHd,qBAAqB,aAD1BjC,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,aAElE,qBAAqB;0IAEpB,kBAAkB,YAJpB,CAACd,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,CAAC;qHAIlE,kBAAkB;sBAL9Bb,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,CAAC;wBAC7E,YAAY,EAAE,CAAC,qBAAqB,CAAC;wBACrC,OAAO,EAAE,CAAC,qBAAqB,CAAC;qBACjC;;;ICDD;;;;QA2CE,6BACY,WAA2B,EAC3B,cAAuD;YADvD,gBAAW,GAAX,WAAW,CAAgB;YAC3B,mBAAc,GAAd,cAAc,CAAyC;;;;;;YAvB1D,QAAG,GAAG,MAAM,CAAC;;;;YAWtB,aAAQ,GAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;;;;YAKpD,kBAAa,GAAwB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;YAE1D,iBAAY,GAAG,IAAIJ,iBAAY,EAAE,CAAC;SAMxC;QAEJ,oCAAM,GAAN,UAAO,IAAO;YAAd,iBA2BC;YA1BC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;gBACtB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;oBAC1C,OAAO,EAAE;wBACP,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,kBAAkB;wBACvC,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;qBACjB;oBACD,YAAY,EAAE;wBACZ,GAAG,EAAE,IAAI,CAAC,QAAQ,GAAG,uBAAuB;wBAC5C,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;qBACjB;oBACD,SAAS,EAAE,4BAA4B;iBACxC,CAAC,CAAC;gBAEH,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAACc,eAAK,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;oBAC9C,IAAI,KAAK,CAAC,KAAK,EAAE;wBACf,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;qBAC1B;oBACD,IAAI,KAAK,CAAC,OAAO,EAAE;wBACjB,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC;wBAC7C,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBACzB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;qBAC1B;iBACF,CAAC,CACH,CAAC;aACH;SACF;QAES,2CAAa,GAAb,UAAc,IAAO;YAArB,iBAQT;YAPC,IAAI,CAAC,WAAW;iBACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;iBAC5C,IAAI,CACHC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CAAC,CACrD;iBACA,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,MAAM,iCAAM,IAAI,GAAK,IAAI,CAAC,IAAI,EAAG,GAAA,CAAC,CAAC;SAChE;QAES,oCAAM,GAAN,UAAO,IAAO;YACtB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAK,IAAI,CAAC,QAAQ,sBAAmB;oBACxC,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;iBACjB;aACF,CAAC,CAAC;SACJ;QAED,yCAAW,GAAX;;YACE,MAAA,IAAI,CAAC,YAAY,0CAAE,WAAW,EAAE,CAAC;SAClC;;;0IA1FU,mBAAmB;mHAAnB,mBAAmB,oMClBhC,2MAQA;qHDUa,mBAAmB;sBAL/BnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,WAAW,EAAE,8BAA8B;wBAC3C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;6HAQU,QAAQ;0BAAhBY,QAAK;oBAOG,GAAG;0BAAXA,QAAK;oBAMG,eAAe;0BAAvBA,QAAK;;;;QE1BR;;;;uIAAa,gBAAgB;wIAAhB,gBAAgB,iBAHZ,mBAAmB,aADxBnB,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,aAElE,mBAAmB;wIAElB,gBAAgB,YAJlB,CAACd,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,CAAC;qHAIlE,gBAAgB;sBAL5Bb,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAE,aAAa,EAAE,yBAAyB,CAAC;wBAC7E,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;;;QCgCC,8BACY,WAA2B,EAC3B,kBAAyC;YADzC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,uBAAkB,GAAlB,kBAAkB,CAAuB;;;;YAX5C,sBAAiB,GAAG,KAAK,CAAC;;;;YAKnC,aAAQ,GAAkB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YAEpD,cAAS,GAAGR,YAAS,CAAC;SAKlB;QAEJ,sBAAc,mDAAiB;iBAA/B;gBACE,OAAO;oBACL,cAAc,EAAE,KAAK;oBACrB,YAAY,EAAE,IAAI;oBAClB,cAAc,EAAE,IAAI;oBACpB,eAAe,EAAE,KAAK;iBACvB,CAAC;aACH;;;WAAA;QAED,uCAAQ,GAAR;YACE,IAAI,CAAC,iBAAiB,mCACjB,IAAI,CAAC,iBAAiB,GACtB,IAAI,CAAC,iBAAiB,CAC1B,CAAC;SACH;QAED,oDAAqB,GAArB,UAAsB,IAAO;;YAC3B,QACE,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,cAAc;gBACtC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,EAC5C;SACH;QAED,kDAAmB,GAAnB,UAAoB,IAAO;;YACzB,QACE,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,YAAY;gBACpC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,EAC5C;SACH;QAED,oDAAqB,GAArB,UAAsB,IAAO;;YAC3B,QACE,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,cAAc;gBACtC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAC9C;SACH;QAED,qDAAsB,GAAtB,UAAuB,IAAO;;YAC5B,QACE,CAAA,MAAA,IAAI,CAAC,iBAAiB,0CAAE,eAAe;gBACvC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,EACxC;SACH;;;2IA9EU,oBAAoB;oHAApB,oBAAoB,qOCZjC,04BA4BA;qHDhBa,oBAAoB;sBALhCC,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,+BAA+B;wBAC5C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;iIAQU,QAAQ;0BAAhBY,QAAK;oBAKG,iBAAiB;0BAAzBA,QAAK;oBAUG,iBAAiB;0BAAzBA,QAAK;;;;QEvBR;;;;wIAAa,iBAAiB;yIAAjB,iBAAiB,iBAHb,oBAAoB,aADzBnB,eAAY,EAAEe,aAAU,EAAED,aAAU,aAEpC,oBAAoB;yIAEnB,iBAAiB,YAJnB,CAACd,eAAY,EAAEe,aAAU,EAAED,aAAU,CAAC;qHAIpC,iBAAiB;sBAL7Bb,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEe,aAAU,EAAED,aAAU,CAAC;wBAC/C,YAAY,EAAE,CAAC,oBAAoB,CAAC;wBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;qBAChC;;;;QCIS,kCAAc;QAHxB;YAAA,6EA4CC;;;;YArCW,2BAAqB,GAAiC;gBAC9D,OAAO,EAAE,EAAE,MAAM,EAAEc,cAAW,CAAC,QAAQ,EAAE;aAC1C,CAAC;;;;YAKQ,eAAS,GAAG,EAAE,MAAM,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,EAAsB,CAAC;;SA8BpE;;QA3BC,+BAAM,GAAN,UAAQ,IAAY;YAAE,eAAa;iBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;gBAAb,8BAAa;;YACjC,OAAOvC,OAAE,EAAE,CAAC;SACb;QAED,iCAAQ,GAAR,UACE,IAAY;YACZ,eAAa;iBAAb,UAAa,EAAb,qBAAa,EAAb,IAAa;gBAAb,8BAAa;;YAEb,OAAOA,OAAE,EAAE,CAAC;SACb;;;;QAKS,uCAAc,GAAd,UAAe,IAAsB;YAC7C,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO,IAAI,CAAC;aACb;YAEO,IAAA,UAAU,GAAoB,IAAI,WAAxB,EAAE,KAAK,GAAa,IAAI,MAAjB,EAAE,MAAM,GAAK,IAAI,OAAT,CAAU;YAE3C,OAAO;gBACL,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,QAAQ,GAAA,CAAC;aACjD,CAAC;SACH;;KA1CH,CAEU,WAAc;qIAFF,cAAc;yIAAd,cAAc;qHAAd,cAAc;sBADnCG,aAAU;;;;QCHkC,2CAAa;QAA1D;;;QACE,sBAAI,6CAAQ;iBAAZ;gBACE,OAAO,CAAC,CAAC;aACV;;;WAAA;;KAHH,CAA6C,aAAa;8IAA7C,uBAAuB;uHAAvB,uBAAuB,iGtBRpC,wTAWA;qHsBHa,uBAAuB;sBALnCe,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,wBAAwB;wBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCCwC,uCAAa;QAAtD;;;QACE,sBAAI,yCAAQ;iBAAZ;gBACE,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;oBAChC,OAAO,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;iBAC1C;gBACD,OAAO;aACR;;;WAAA;QAED,sBAAc,uCAAM;iBAApB;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC1B;;;WAAA;QAED,sBAAc,yCAAQ;iBAAtB;;gBACE,OAAO,CAAA,MAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,0CAAE,OAAO,KAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC5D;;;WAAA;;KAdH,CAAyC,aAAa;0IAAzC,mBAAmB;mHAAnB,mBAAmB,4FvBRhC,wTAWA;qHuBHa,mBAAmB;sBAL/BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,WAAW,EAAE,wBAAwB;wBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCC2C,0CAAa;QAAzD;;;QACE,sBAAI,4CAAQ;iBAAZ;;gBACE,OAAO,IAAI,CAAC,QAAQ,KAAK,MAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,mCAAI,IAAI,CAAC,CAAC;aAC7D;;;WAAA;QAED,sBAAI,4CAAQ;iBAAZ;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;aACvD;;;WAAA;;KAPH,CAA4C,aAAa;6IAA5C,sBAAsB;sHAAtB,sBAAsB,gGCRnC,scAiBA;qHDTa,sBAAsB;sBALlCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,WAAW,EAAE,kCAAkC;wBAC/C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEEuC,sCAAa;QAArD;;;QACE,sBAAI,mDAAmB;iBAAvB;;gBACE,QACE,CAAA,MAAC,IAAI,CAAC,KAAoB,CAAC,2BAA2B,0CAAE,IAAI;oBAC5D,qCAAqC,EACrC;aACH;;;WAAA;QAED,sBAAI,gDAAgB;iBAApB;;gBACE,QACE,CAAA,MAAC,IAAI,CAAC,KAAoB,CAAC,2BAA2B,0CAAE,IAAI;oBAC5D,6BAA6B,EAC7B;aACH;;;WAAA;QAED,sBAAI,kDAAkB;iBAAtB;;gBACE,QACE,CAAA,MAAC,IAAI,CAAC,KAAoB,CAAC,2BAA2B,0CAAE,IAAI;oBAC5D,6BAA6B,EAC7B;aACH;;;WAAA;;KApBH,CAAwC,aAAa;yIAAxC,kBAAkB;kHAAlB,kBAAkB,2FCT/B,m+BAoCA;qHD3Ba,kBAAkB;sBAL9BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,WAAW,EAAE,6BAA6B;wBAC1C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEAuC,sCAAa;QAArD;;;;KAAA,CAAwC,aAAa;yIAAxC,kBAAkB;kHAAlB,kBAAkB,2FCR/B,8dAkBA;qHDVa,kBAAkB;sBAL9BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,mBAAmB;wBAC7B,WAAW,EAAE,6BAA6B;wBAC1C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QECwC,uCAAa;QAAtD;;;QACE,sBAAI,sCAAK;iBAAT;gBACE,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;oBAC/B,OAAO;iBACR;gBACD,OAAO,IAAI,CAAC,QAAQ,GAAG,sBAAsB,GAAG,uBAAuB,CAAC;aACzE;;;WAAA;QAED,sBAAI,yCAAQ;iBAAZ;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;aAC1B;;;WAAA;;KAVH,CAAyC,aAAa;0IAAzC,mBAAmB;mHAAnB,mBAAmB,4FCRhC,+ZAkBA;qHDVa,mBAAmB;sBAL/BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,WAAW,EAAE,8BAA8B;wBAC3C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QECsC,qCAAa;QAApD;;;QACE,sBAAI,uCAAQ;iBAAZ;;gBACE,OAAO,MAAA,MAAA,IAAI,CAAC,KAAK,CAAC,IAAI,0CAAE,IAAI,mCAAI,MAAA,IAAI,CAAC,KAAK,CAAC,OAAO,0CAAE,IAAI,CAAC;aAC1D;;;WAAA;;KAHH,CAAuC,aAAa;wIAAvC,iBAAiB;iHAAjB,iBAAiB,0FhCR9B,wTAWA;qHgCHa,iBAAiB;sBAL7BD,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,wBAAwB;wBACrC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCoBD;;;;iIAAa,UAAU;kIAAV,UAAU,iBAVnB,aAAa;YACb,uBAAuB;YACvB,mBAAmB;YACnB,sBAAsB;YACtB,kBAAkB;YAClB,kBAAkB;YAClB,mBAAmB;YACnB,iBAAiB,aATTR,eAAY,EAAEqB,eAAY,EAAEC,YAAS,EAAER,aAAU,EAAEC,aAAU;kIAY5D,UAAU,YAZZ,CAACf,eAAY,EAAEqB,eAAY,EAAEC,YAAS,EAAER,aAAU,EAAEC,aAAU,CAAC;qHAY7D,UAAU;sBAbtBd,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEqB,eAAY,EAAEC,YAAS,EAAER,aAAU,EAAEC,aAAU,CAAC;wBACxE,YAAY,EAAE;4BACZ,aAAa;4BACb,uBAAuB;4BACvB,mBAAmB;4BACnB,sBAAsB;4BACtB,kBAAkB;4BAClB,kBAAkB;4BAClB,mBAAmB;4BACnB,iBAAiB;yBAClB;qBACF;;;ACxBWmB;IAAZ,WAAY,qBAAqB;QAC/B,6CAAoB,CAAA;QACpB,sFAA6D,CAAA;QAC7D,sDAA6B,CAAA;QAC7B,qEAA4C,CAAA;QAC5C,sFAA6D,CAAA;QAC7D,yCAAgB,CAAA;QAChB,oDAA2B,CAAA;QAC3B,0DAAiC,CAAA;QACjC,4DAAmC,CAAA;QACnC,6EAAoD,CAAA;QACpD,wDAA+B,CAAA;QAC/B,iEAAwC,CAAA;QACxC,oDAA2B,CAAA;QAC3B,+DAAsC,CAAA;QACtC,gFAAuD,CAAA;QACvD,2EAAkD,CAAA;QAClD,4FAAmE,CAAA;QACnE,yCAAgB,CAAA;QAChB,4DAAmC,CAAA;QACnC,6EAAoD,CAAA;QACpD,gEAAuC,CAAA;QACvC,iFAAwD,CAAA;QACxD,+DAAsC,CAAA;QACtC,gFAAuD,CAAA;QACvD,wDAA+B,CAAA;IACjC,CAAC,EA1BWA,6BAAqB,KAArBA,6BAAqB;;;QCMmB,kDAAa;QAAjE;;;;KAAA,CAAoD,aAAa;qJAApD,8BAA8B;8HAA9B,8BAA8B,yGCR3C,yvDA2EA;qHDnEa,8BAA8B;sBAL1C3B,YAAS;uBAAC;wBACT,QAAQ,EAAE,iCAAiC;wBAC3C,WAAW,EAAE,2CAA2C;wBACxD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEQgD,+CAAsB;QAIrE,qCACY,YAA0B,EAC1B,aAA4B;YAFxC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,mBAAa,GAAb,aAAa,CAAe;YAL9B,eAAS,GAAG0B,6BAAqB,CAAC,4BAA4B,CAAC;YAC/D,iBAAW,GAAGA,6BAAqB,CAAC,WAAW,CAAC;;SAOzD;QAES,0CAAI,GAAJ,UACR,WAA4B,EAC5B,IAAY;YAFJ,iBAQT;YAJC,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CACjDpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAA,CAAC,CACrD,CAAC;SACH;;;;QAKS,oDAAc,GAAd,UAAe,EAIG;gBAH1B,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,OAAO;gBACL,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,MAAM,GAAA,CAAC;aAC/C,CAAC;SACH;;KAlCH,CAAiD,cAAsB;kJAA1D,2BAA2B;sJAA3B,2BAA2B,cAF1B,MAAM;qHAEP,2BAA2B;sBAHvCC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCED;;;;oJAAa,6BAA6B;6HAA7B,6BAA6B,sGAP7B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,2BAA2B;aACzC;SACF,qCCdH,uCACA;qHDea,6BAA6B;sBAZzCe,YAAS;uBAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,2BAA2B;6BACzC;yBACF;qBACF;;;;QEFyC,wCAA0B;QAClE,8BACY,cAA8B,EAC9B,aAA4B;YAFxC,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,mBAAa,GAAb,aAAa,CAAe;;SAGvC;QAES,8CAAe,GAAf;YACR,OAAO,kBAAkB,CAAC;SAC3B;QAES,0CAAW,GAAX;YACR,OAAOlB,iBAAY,CAAC,UAAU,CAAC;SAChC;QAES,sCAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,uCAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC/C;;KAtBH,CAA0C,kBAA0B;2IAAvD,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCHsC,qCAAmB;QACxD,2BAAsB,iBAAoC;YAA1D,YACE,iBAAO,SACR;YAFqB,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAEzD;QAES,iCAAK,GAAL;YAAA,iBAsDT;YArDC,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CACb,MAAM,EACN,IAAIC,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,mBAAmB;aACzC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAIF,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CACb,WAAW,EACX,IAAID,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,iBAAiB,CAAC,UAAC,IAAI,IAC1C,OAAA,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAA,CAC3C;aACF,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIF,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,iBAAiB,CAAC,UAAC,IAAI,IAC1C,OAAA,KAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAA,CAC3C;aACF,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,QAAQ,EACR,IAAIF,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,cAAc;aACpC,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,UAAU,CACb,UAAU,EACV,IAAIH,YAAS,CAAC;gBACZ,OAAO,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACzD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIF,YAAS,CAAC;gBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACrD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,aAAa,CAChBC,uBAAoB,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,EAAE,UAAC,IAAI,IAC1D,OAAA,KAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAA,CACrC,CACF,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;;KA3DH,CAAuC,WAAmB;wIAA7C,iBAAiB;4IAAjB,iBAAiB,cAFhB,MAAM;qHAEP,iBAAiB;sBAH7B9C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCOsC,qCAAmB;QACxD,2BACY,kBAAwC,EACxC,cAA8B,EAC9B,WAA8B,EAC9B,aAA4B;YAJxC,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAAsB;YACxC,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAmB;YAC9B,mBAAa,GAAb,aAAa,CAAe;;SAGvC;;;;;;;QAQD,gCAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACrC;QAED,kCAAM,GAAN,UAAO,IAAI,EAAE,KAAa;YACxB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACvC,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACxD;QAES,kCAAM,GAAN,UAAO,KAAa;YAC5B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SACxD;;;;;QAMS,2CAAe,GAAf;YACR,OAAO,kBAAkB,CAAC;SAC3B;;KArCH,CAAuC,WAAmB;wIAA7C,iBAAiB;4IAAjB,iBAAiB,cAFhB,MAAM;qHAEP,iBAAiB;sBAH7BA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCgBC,gCAAsB,WAAgC;YAAhC,gBAAW,GAAX,WAAW,CAAqB;YATtD,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SASW;QAP1D,yCAAQ,GAAR;YAAA,iBAKC;YAJC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACtCJ,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;SACH;;;6IATU,sBAAsB;sHAAtB,sBAAsB,6FARtB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,iBAAiB;aAC/B;SACF,qCChBH,m9EA2FA;qHDxEa,sBAAsB;sBAZlCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,WAAW,EAAE,iCAAiC;wBAC9C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,iBAAiB;6BAC/B;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;aEhBe,uBAAuB,CACrC,IAAqB,EACrB,IAAqB;;QAErB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAM,YAAY,GAAG,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,CAAC;YACpE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SAC/B;IACH;;;QCyCE,6BACY,WAAgC,EAChC,WAA2B,EAC3B,eAAgC;YAH5C,iBAII;YAHQ,gBAAW,GAAX,WAAW,CAAqB;YAChC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,oBAAe,GAAf,eAAe,CAAiB;YArB5C,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAE7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAC3ES,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,aAAa,CAAC,0CAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBACvD;aACF,CAAC,CACH,CAAC;YAEF,gBAAW,GAA2B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,IAAI,CACtEA,aAAG,CAAC,UAAC,QAAQ;;gBACX,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,kBAAkB,CAAC,0CAAE,QAAQ,CAAC,MAAA,QAAQ,CAAC,CAAC,CAAC,0CAAE,OAAO,CAAC,CAAC;iBACpE;aACF,CAAC,CACH,CAAC;SAME;QAEJ,sCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QAED,gDAAkB,GAAlB,UAAmB,IAAqB,EAAE,IAAqB;YAC7D,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;;;0IA/BU,mBAAmB;mHAAnB,mBAAmB,0FAXnB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,iBAAiB;aAC/B;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,oBAAoB;aAClC;SACF,qCC9BH,26GA2GA;qHD3Ea,mBAAmB;sBAhB/BV,YAAS;uBAAC;wBACT,QAAQ,EAAE,oBAAoB;wBAC9B,WAAW,EAAE,8BAA8B;wBAC3C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,iBAAiB;6BAC/B;4BACD;gCACE,OAAO,EAAE,kBAAkB;gCAC3B,WAAW,EAAE,oBAAoB;6BAClC;yBACF;qBACF;;;IEnBD;;;;;QAOuC,qCAAmB;QAGxD,2BACY,YAA0B,EAC1B,aAA4B;YAFxC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,mBAAa,GAAb,aAAa,CAAe;YAJ9B,eAAS,GAAG0B,6BAAqB,CAAC,MAAM,CAAC;;SAOlD;QAES,gCAAI,GAAJ,UACR,UAA2B;YADnB,iBAOT;YAJC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAChDpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAA,CAAC,CACvC,CAAC;SACH;;;;;QAMS,0CAAc,GAAd,UAAe,EAID;gBAHtB,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,IAAM,YAAY,GAA0B;gBAC1C,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAU;;oBAAK,wCAC9B,KAAK,KACR,QAAQ,EAAE,MAAA,KAAK,CAAC,QAAQ,0CAAE,OAAO,EACjC,IAAI,EAAE,KAAK,CAAC,OAAO,KACnB;iBAAA,CAAC;aACJ,CAAC;YACF,OAAO,YAAY,CAAC;SACrB;;KAtCH,CAAuC,WAAmB;wIAA7C,iBAAiB;4IAAjB,iBAAiB,cAFhB,MAAM;qHAEP,iBAAiB;sBAH7BC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICRD;QAAiD,+CAA4B;QAC3E,qCACE,WAA+B,EACrB,kBAAwC;YAFpD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAAsB;;SAGnD;QAES,+CAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAAiD+C,+BAA4B;kJAAhE,2BAA2B;sJAA3B,2BAA2B,cADd,MAAM;qHACnB,2BAA2B;sBADvC/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCarB,eAAe,GAAc;QACxC,aAAa,EAAE;YACb,0BAA0B,EAAE;gBAC1B,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,iBAAiB;qBAC/B;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,iBAAiB;qBAC/B;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,4BAA4B;gCACxC,QAAQ,EAAE,2BAA2B;6BACtC;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,mBAAmB;yBAC/B;wBACD;4BACE,IAAI,EAAE,MAAIF,iBAAY,CAAC,UAAY;4BACnC,SAAS,EAAE,sBAAsB;4BACjC,IAAI,EAAE;gCACJ,UAAU,EAAE;oCACV,UAAU,EAAE,+BAA+B;iCAC5C;6BACF;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,mBAAmB;iCAC/B;gCACD;oCACE,IAAI,EAAE,cAAc;oCACpB,SAAS,EAAE,6BAA6B;iCACzC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,wBAAwB;QACtC,OAAO,iBAAiB,CAAC;IAC3B,CAAC;QAEY,iBAAiB,GAAgB;QAC5C,KAAK;YACHC,KAACR,6BAAqB,CAAC,MAAM,IAAG;gBAC9B,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,CAAC;gBACxD,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,uBAAuB;yBACvC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;yBACnC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;yBACnC;wBACD,SAAS,EAAE;4BACT,aAAa,EAAE,sBAAsB;yBACtC;wBACD,IAAI,EAAE;4BACJ,aAAa,EAAE,iBAAiB;yBACjC;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,4BAA4B,IAAG;gBACpD,KAAK,EAAE,CAAC,MAAM,CAAC;gBACf,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;qBACF;oBACD,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;iBACF;aACF;iBACF;;;;QC7GH;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,iBAFtB,6BAA6B,aADlClC,eAAY,EAAE,aAAa;kJAG1B,0BAA0B,YAH5B,CAACA,eAAY,EAAE,aAAa,CAAC;qHAG3B,0BAA0B;sBAJtCC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAE,aAAa,CAAC;wBACtC,YAAY,EAAE,CAAC,6BAA6B,CAAC;qBAC9C;;;ICCD;QAAA;;;;uIAAa,gBAAgB;wIAAhB,gBAAgB,iBAHZ,mBAAmB,aADxBA,eAAY,aAEZ,mBAAmB;wIAElB,gBAAgB,YAJlB,CAACA,eAAY,CAAC;qHAIZ,gBAAgB;sBAL5BC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,CAAC;wBACvB,YAAY,EAAE,CAAC,mBAAmB,CAAC;wBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;qBAC/B;;;;QCiBD;;;;0IAAa,mBAAmB;2IAAnB,mBAAmB,iBAFf,sBAAsB,aAVnCA,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,kBAAkB;YAClB,gBAAgB;YAChB,iBAAiB;YACjBE,sBAAmB;2IAIV,mBAAmB,YAbrB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,kBAAkB;gBAClB,gBAAgB;gBAChB,iBAAiB;gBACjBE,sBAAmB;aACpB;qHAGU,mBAAmB;sBAd/Bf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,kBAAkB;4BAClB,gBAAgB;4BAChB,iBAAiB;4BACjBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,sBAAsB,CAAC;qBACvC;;;;QCED;;;;uIAAa,gBAAgB;wIAAhB,gBAAgB,iBAFZ,mBAAmB,aAXhChB,eAAY;YACZqB,eAAY;YACZ,UAAU;YACVW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,gBAAgB;YAChBC,mBAAgB;wIAIP,gBAAgB,YAdlB;gBACP7C,eAAY;gBACZqB,eAAY;gBACZ,UAAU;gBACVW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,gBAAgB;gBAChBC,mBAAgB;aACjB;qHAGU,gBAAgB;sBAf5B5C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZ,UAAU;4BACVW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,gBAAgB;4BAChBC,mBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,mBAAmB,CAAC;qBACpC;;;;QCFD;;;;6IAAa,sBAAsB;8IAAtB,sBAAsB,YAV/B,wBAAwB;YACxB,mBAAmB;YACnB,gBAAgB;YAChB,0BAA0B;8IAOjB,sBAAsB,aALtB;YACTC,uBAAoB,CAAC,eAAe,CAAC;YACrCC,8BAA2B,CAAC,wBAAwB,CAAC;SACtD,YATQ;gBACP,wBAAwB;gBACxB,mBAAmB;gBACnB,gBAAgB;gBAChB,0BAA0B;aAC3B;qHAMU,sBAAsB;sBAZlC9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,wBAAwB;4BACxB,mBAAmB;4BACnB,gBAAgB;4BAChB,0BAA0B;yBAC3B;wBACD,SAAS,EAAE;4BACT6C,uBAAoB,CAAC,eAAe,CAAC;4BACrCC,8BAA2B,CAAC,wBAAwB,CAAC;yBACtD;qBACF;;;;QCd+C,8CAAa;QAA7D;;;;KAAA,CAAgD,aAAa;iJAAhD,0BAA0B;0HAA1B,0BAA0B,oGCRvC,shEAoFA;qHD5Ea,0BAA0B;sBALtCxC,YAAS;uBAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,WAAW,EAAE,sCAAsC;wBACnD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEKD;;;;8IAAa,uBAAuB;+IAAvB,uBAAuB,iBAHnB,0BAA0B,aAD/BR,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,0BAA0B;+IAEzB,uBAAuB,YAJzB,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,uBAAuB;sBALnCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,0BAA0B,CAAC;wBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;qBACtC;;;;QCKgD,+CAAsB;QAIrE,qCACY,YAA0B,EAC1B,iBAAoC,EACpC,aAA4B;YAHxC,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,uBAAiB,GAAjB,iBAAiB,CAAmB;YACpC,mBAAa,GAAb,aAAa,CAAe;YAN9B,eAAS,GAAGY,6BAAqB,CAAC,mBAAmB,CAAC;YACtD,iBAAW,GAAGA,6BAAqB,CAAC,MAAM,CAAC;;SAQpD;QAES,0CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC5D;;;;;QAMD,4CAAM,GAAN,UACE,cAAsB,EACtB,UAAkB;YAElB,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAChE,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACxD;;;;;QAMD,8CAAQ,GAAR,UACE,cAAsB,EACtB,UAAkB;YAElB,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;YAClE,OAAO,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACxD;;KAzCH,CAAiD,cAAsB;kJAA1D,2BAA2B;sJAA3B,2BAA2B,cAF1B,MAAM;qHAEP,2BAA2B;sBAHvC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCJwD,uDAA2B;QAHpF;YAAA,6EAcC;YAVW,eAAS,GAAG0C,6BAAqB,CAAC,4BAA4B,CAAC;;SAU1E;QARW,kDAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAOT;YAHC,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC3C,aAAG,CAAC,UAAC,OAAO,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC,CAAC;SACzD;;KAVH,CAAyD,2BAA2B;0JAAvE,mCAAmC;8JAAnC,mCAAmC,cAFlC,MAAM;qHAEP,mCAAmC;sBAH/CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCMD;;;;4JAAa,qCAAqC;qIAArC,qCAAqC,+GAPrC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,mCAAmC;aACjD;SACF,qCCdH,oJAKA;qHDWa,qCAAqC;sBAZjDe,YAAS;uBAAC;wBACT,QAAQ,EAAE,yCAAyC;wBACnD,WAAW,EAAE,mDAAmD;wBAChE,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,mCAAmC;6BACjD;yBACF;qBACF;;;;QECD;;;;oJAAa,6BAA6B;6HAA7B,6BAA6B,sGAP7B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,2BAA2B;aACzC;SACF,qCCdH,oKAKA;qHDWa,6BAA6B;sBAZzCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,2BAA2B;6BACzC;yBACF;qBACF;;;;QEAD;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,iBAJnC,qCAAqC;YACrC,6BAA6B,aAHrB,UAAU,EAAEM,aAAU,EAAEO,eAAY,EAAE,aAAa;kJAMlD,0BAA0B,YAN5B,CAAC,UAAU,EAAEP,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAMnD,0BAA0B;sBAPtCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,UAAU,EAAEa,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAC9D,YAAY,EAAE;4BACZ,qCAAqC;4BACrC,6BAA6B;yBAC9B;qBACF;;;;QCJ6C,4CAA8B;QAC1E,kCACY,cAA8B,EAC9B,iBAAoC;YAFhD,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAG/C;QAES,8CAAW,GAAX;YACR,OAAO/B,iBAAY,CAAC,cAAc,CAAC;SACpC;QAES,0CAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,2CAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACnD;;KAlBH,CAA8C,kBAA8B;+IAA/D,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpCE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCA0C,yCAAuB;QAAlE;;;QACY,qCAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CACb,MAAM,EACN,IAAIC,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,mBAAmB;aACzC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAIF,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAElE,IAAI,CAAC,UAAU,CACb,UAAU,EACV,IAAIF,YAAS,CAAC;gBACZ,OAAO,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACzD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,MAAM,EACN,IAAIF,YAAS,CAAC;gBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACrD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;;KAzBH,CAA2C,WAAuB;4IAArD,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjC7C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICMD;QAA2C,yCAAuB;QAChE,+BACY,kBAA4C,EAC5C,cAA8B,EAC9B,WAAkC,EAClC,iBAAoC;YAJhD,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAA0B;YAC5C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAuB;YAClC,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAG/C;QAED,oCAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,sCAAM,GAAN,UACE,IAAI,EACJ,KAAiB;YAEjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5D;QAES,sCAAM,GAAN,UACR,KAAiB;YAEjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5D;QAES,+CAAe,GAAf;YACR,OAAO,sBAAsB,CAAC;SAC/B;;KAhCH,CAA2C,WAAuB;4IAArD,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCaC,oCAAsB,WAAoC;YAA1D,iBAA8D;YAAxC,gBAAW,GAAX,WAAW,CAAyB;YAN1D,WAAM,GAA2B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACzDJ,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;YACF,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SAEe;;;iJAPnD,0BAA0B;0HAA1B,0BAA0B,kGAR1B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,qBAAqB;aACnC;SACF,qCChBH,2qEAkFA;qHD/Da,0BAA0B;sBAZtCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,WAAW,EAAE,sCAAsC;wBACnD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,qBAAqB;6BACnC;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QE2CC,iCACY,WAAoC,EACpC,WAA2B,EAC3B,eAAgC;YAH5C,iBAII;YAHQ,gBAAW,GAAX,WAAW,CAAyB;YACpC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,oBAAe,GAAf,eAAe,CAAiB;YAhC5C,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAa7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAC3ES,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,UAAU,CAAC,0CAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBACpD;aACF,CAAC,CACH,CAAC;YAEF,gBAAW,GAA2B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,IAAI,CACtEA,aAAG,CAAC,UAAC,QAAQ;;gBACX,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,kBAAkB,CAAC,0CAAE,QAAQ,CAAC,MAAA,QAAQ,CAAC,CAAC,CAAC,0CAAE,OAAO,CAAC,CAAC;iBACpE;aACF,CAAC,CACH,CAAC;SAME;QA3BJ,sBAAa,4CAAO;;;;;;iBAApB,UAAqB,KAAa;;gBAChC,IAAI,KAAK,EAAE;oBACT,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC3C,MAAA,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,MAAM,CAAC,0CAAE,OAAO,EAAE,CAAC;iBACnC;aACF;;;WAAA;QAwBD,oDAAkB,GAAlB,UAAmB,IAAqB,EAAE,IAAqB;YAC7D,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;;;8IAtCU,uBAAuB;uHAAvB,uBAAuB,+HAXvB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,qBAAqB;aACnC;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,wBAAwB;aACtC;SACF,qCC7BH,k0EAsEA;qHDvCa,uBAAuB;sBAhBnCV,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,mCAAmC;wBAChD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,qBAAqB;6BACnC;4BACD;gCACE,OAAO,EAAE,kBAAkB;gCAC3B,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;sLAQc,OAAO;0BAAnBW,QAAK;;;IEjBR;;;;;QAO2C,yCAA4B;QAGrE,+BACY,YAA0B,EAC1B,iBAAoC;YAFhD,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,uBAAiB,GAAjB,iBAAiB,CAAmB;YAJtC,eAAS,GAAGe,6BAAqB,CAAC,WAAW,CAAC;;SAOvD;QAES,oCAAI,GAAJ,UACR,UAA2B;YADnB,iBAOT;YAJC,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CACpDpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAA,CAAC,CAC3C,CAAC;SACH;;;;;QAMS,kDAAkB,GAAlB,UAAmB,EAID;gBAH1B,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,IAAM,gBAAgB,GAAmC;gBACvD,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAU;;oBAAK,wCAC9B,KAAK,KACR,QAAQ,EAAE,MAAA,KAAK,CAAC,QAAQ,0CAAE,OAAO,KACjC;iBAAA,CAAC;aACJ,CAAC;YACF,OAAO,gBAAgB,CAAC;SACzB;;KArCH,CAA2C,WAA4B;4IAA1D,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjCC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICjBD;QAAqD,mDAA4B;QAC/E,yCACE,WAA+B,EACrB,kBAA4C;YAFxD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAA0B;;SAGvD;QAES,mDAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAAqD+C,+BAA4B;sJAApE,+BAA+B;0JAA/B,+BAA+B,cADlB,MAAM;qHACnB,+BAA+B;sBAD3C/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCcrB,mBAAmB,GAAc;QAC5C,aAAa,EAAE;YACb,8BAA8B,EAAE;gBAC9B,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,qBAAqB;qBACnC;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,qBAAqB;qBACnC;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,gCAAgC;gCAC5C,QAAQ,EAAE,+BAA+B;6BAC1C;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,uBAAuB;yBACnC;wBACD;4BACE,IAAI,EAAE,MAAIF,iBAAY,CAAC,cAAgB;4BACvC,SAAS,EAAE,0BAA0B;4BACrC,IAAI,EAAE;gCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,mCAAmC,EAAE;6BAChE;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,uBAAuB;iCACnC;gCACD;oCACE,IAAI,EAAE,SAAS;oCACf,IAAI,EAAE;wCACJ,UAAU,EAAE;4CACV,UAAU,EAAE,mCAAmC;yCAChD;qCACF;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,qCAAqC;yCACjD;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,6BAA6B;yCACzC;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,4BAA4B;QAC1C,OAAO,qBAAqB,CAAC;IAC/B,CAAC;QAEY,qBAAqB,GAAgB;QAChD,KAAK;YACHC,KAACR,6BAAqB,CAAC,WAAW,IAAG;gBACnC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;gBAC7C,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,uBAAuB;yBACvC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;yBACnC;wBACD,QAAQ,EAAE;4BACR,aAAa,EAAE,aAAa;yBAC7B;wBACD,IAAI,EAAE;4BACJ,aAAa,EAAE,iBAAiB;yBACjC;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,4BAA4B,IAAG;gBACpD,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,0BAA0B;yBAC1C;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;oBACD,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,mBAAmB,IAAG;gBAC3C,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,0BAA0B;yBAC1C;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;iBACF;aACF;iBACF;;;;QCvHH;;;;8IAAa,uBAAuB;+IAAvB,uBAAuB,iBAHnB,0BAA0B,aAVvClC,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,kBAAkB;YAClB,gBAAgB;YAChB,iBAAiB;YACjBE,sBAAmB,aAGX,0BAA0B;+IAEzB,uBAAuB,YAdzB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,kBAAkB;gBAClB,gBAAgB;gBAChB,iBAAiB;gBACjBE,sBAAmB;aACpB;qHAIU,uBAAuB;sBAfnCf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,kBAAkB;4BAClB,gBAAgB;4BAChB,iBAAiB;4BACjBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;wBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;qBACtC;;;;QCGD;;;;2IAAa,oBAAoB;4IAApB,oBAAoB,iBAJhB,uBAAuB,aAVpChB,eAAY;YACZqB,eAAY;YACZ,UAAU;YACVW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,gBAAgB,aAGR,uBAAuB;4IAGtB,oBAAoB,aAFpB,CAACI,kBAAe,EAAEC,mBAAc,CAAC,YAbnC;gBACPjD,eAAY;gBACZqB,eAAY;gBACZ,UAAU;gBACVW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,gBAAgB;aACjB;qHAKU,oBAAoB;sBAhBhC3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZ,UAAU;4BACVW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,gBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;wBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;wBAClC,SAAS,EAAE,CAACI,kBAAe,EAAEC,mBAAc,CAAC;qBAC7C;;;;QCCD;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,YAXnC,wBAAwB;YACxB,uBAAuB;YACvB,oBAAoB;YACpB,0BAA0B;YAC1B,uBAAuB;kJAOd,0BAA0B,aAL1B;YACTH,uBAAoB,CAAC,mBAAmB,CAAC;YACzCC,8BAA2B,CAAC,4BAA4B,CAAC;SAC1D,YAVQ;gBACP,wBAAwB;gBACxB,uBAAuB;gBACvB,oBAAoB;gBACpB,0BAA0B;gBAC1B,uBAAuB;aACxB;qHAMU,0BAA0B;sBAbtC9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,wBAAwB;4BACxB,uBAAuB;4BACvB,oBAAoB;4BACpB,0BAA0B;4BAC1B,uBAAuB;yBACxB;wBACD,SAAS,EAAE;4BACT6C,uBAAoB,CAAC,mBAAmB,CAAC;4BACzCC,8BAA2B,CAAC,4BAA4B,CAAC;yBAC1D;qBACF;;;;QCd6C,4CAA8B;QAC1E,kCACY,cAA8B,EAC9B,iBAAoC;YAFhD,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAG/C;QAES,8CAAW,GAAX;YACR,OAAOzD,iBAAY,CAAC,cAAc,CAAC;SACpC;QAES,0CAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,2CAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SACnD;;KAlBH,CAA8C,kBAA8B;+IAA/D,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpCE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ACJW0D;IAAZ,WAAY,cAAc;QACxB,uDAAqC,CAAA;QACrC,mEAAiD,CAAA;QACjD,0DAAwC,CAAA;IAC1C,CAAC,EAJWA,sBAAc,KAAdA,sBAAc,QAIzB;;QAKS,yCAAuB;QAJjC;YAAA,6EAgHC;YAzGW,kBAAY,GAAG,IAAIxC,iBAAY,EAAE,CAAC;;SAyG7C;;;;;;QAlGW,qCAAK,GAAL;YAAA,iBAoCT;YAnCC,IAAM,IAAI,GAAG,IAAIyB,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CACb,MAAM,EACN,IAAIC,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,mBAAmB;aACzC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIH,YAAS,CAAC;gBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACrD,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,UAAU,CACb,6BAA6B,EAC7B,IAAIF,YAAS,CAAC;gBACZ,IAAI,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACtD,CAAC,CACH,CAAC;;YAGF,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI;iBACD,GAAG,CAAC,6BAA6B,CAAC;iBAClC,GAAG,CAAC,MAAM,CAAC;iBACX,YAAY,CAAC,IAAI,CAChBlD,8BAAoB,EAAE,EACtBW,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,CAAC,CAAC,IAAI,GAAA,CAAC,CACzB;iBACA,SAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAA,CAAC,CAC/C,CAAC;YAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAMD,sBAAI,+CAAY;;;;;iBAAhB;gBACE,OAAO;oBACL,2BAA2B,EAAE;wBAC3B,IAAI,EAAEoD,sBAAc,CAAC,QAAQ;qBAC9B;iBACF,CAAC;aACH;;;WAAA;;;;QAKS,qCAAK,GAAL,UAAM,IAAe,EAAE,IAAoB;YACnD,IAAI,IAAI,KAAKA,sBAAc,CAAC,QAAQ,EAAE;gBACpC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;gBAClC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;gBAC/B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;aACjC;YAED,IAAI,IAAI,KAAKA,sBAAc,CAAC,SAAS,IAAI,IAAI,KAAKA,sBAAc,CAAC,KAAK,EAAE;gBACtE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;oBACzB,IAAI,CAAC,UAAU,CACb,UAAU,EACV,IAAIf,YAAS,CAAC;wBACZ,OAAO,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;qBACzD,CAAC,CACH,CAAC;iBACH;gBACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;oBAC1B,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAID,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;iBACxE;aACF;YAED,IAAI,IAAI,KAAKa,sBAAc,CAAC,KAAK,EAAE;gBACjC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;aACnC;YAED,IAAI,IAAI,KAAKA,sBAAc,CAAC,SAAS,EAAE;gBACrC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;oBAC5B,IAAI,CAAC,UAAU,CACb,aAAa,EACb,IAAId,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CACzC,CAAC;iBACH;aACF;SACF;QAED,2CAAW,GAAX;YACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;SACjC;QAES,yCAAS,GAAT,UAAU,IAAK;YACvB,iBAAM,SAAS,YAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,SAAS,EAAE;gBAC5B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC,OAAO,EAAE,CAAC;aACxD;SACF;;KA5GH,CACU,WAAuB;4IADpB,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjC7C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCA0C,yCAAuB;QAChE,+BACY,kBAA4C,EAC5C,cAA8B,EAC9B,WAAkC,EAClC,iBAAoC;YAJhD,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAA0B;YAC5C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAuB;YAClC,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAG/C;QAED,oCAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACzC;QAED,sCAAM,GAAN,UACE,IAAI,EACJ,KAAiB;YAEjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3C,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5D;QAES,sCAAM,GAAN,UACR,KAAiB;YAEjB,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;SAC5D;QAES,+CAAe,GAAf;YACR,OAAO,yBAAyB,CAAC;SAClC;;KAhCH,CAA2C,WAAuB;4IAArD,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCYC,oCAAsB,WAAoC;YAA1D,iBAA8D;YAAxC,gBAAW,GAAX,WAAW,CAAyB;YAN1D,WAAM,GAA2B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACzDJ,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;YACF,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SAEe;;;iJAPnD,0BAA0B;0HAA1B,0BAA0B,iGAR1B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,qBAAqB;aACnC;SACF,qCChBH,y0EAqFA;qHDlEa,0BAA0B;sBAZtCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,WAAW,EAAE,qCAAqC;wBAClD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,qBAAqB;6BACnC;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QEQD;;;;8IAAa,uBAAuB;+IAAvB,uBAAuB,iBAHnB,0BAA0B,aAVvCR,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,kBAAkB;YAClB,gBAAgB;YAChB,iBAAiB;YACjBE,sBAAmB,aAGX,0BAA0B;+IAEzB,uBAAuB,YAdzB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,kBAAkB;gBAClB,gBAAgB;gBAChB,iBAAiB;gBACjBE,sBAAmB;aACpB;qHAIU,uBAAuB;sBAfnCf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,kBAAkB;4BAClB,gBAAgB;4BAChB,iBAAiB;4BACjBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;wBAC1C,OAAO,EAAE,CAAC,0BAA0B,CAAC;qBACtC;;;;QCoCC,iCACY,WAAoC,EACpC,WAA2B,EAC3B,eAAgC,EAChC,iBAAoC;YAJhD,iBAKI;YAJQ,gBAAW,GAAX,WAAW,CAAyB;YACpC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,oBAAe,GAAf,eAAe,CAAiB;YAChC,sBAAiB,GAAjB,iBAAiB,CAAmB;YA3BhD,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAE7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAC3EC,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,aAAa,CAAC,0CAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBACvD;aACF,CAAC,CACH,CAAC;YAEF,gBAAW,GAA2B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,IAAI,CACtEA,aAAG,CAAC,UAAC,QAAQ;;gBACX,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;oBACzB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,kBAAkB,CAAC,0CAAE,QAAQ,CAAC,MAAA,QAAQ,CAAC,CAAC,CAAC,0CAAE,OAAO,CAAC,CAAC;iBACpE;aACF,CAAC,CACH,CAAC;YAEF,WAAM,GACJ,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;YAEpC,YAAO,GAAG,MAAM,CAAC,IAAI,CAACkC,WAAM,CAAC,CAAC;SAO1B;QAEJ,0CAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;;;8IAjCU,uBAAuB;uHAAvB,uBAAuB,8FAXvB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,qBAAqB;aACnC;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,wBAAwB;aACtC;SACF,qCCnCH,muHAmHA;qHD9Ea,uBAAuB;sBAhBnC5C,YAAS;uBAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,WAAW,EAAE,kCAAkC;wBAC/C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,qBAAqB;6BACnC;4BACD;gCACE,OAAO,EAAE,kBAAkB;gCAC3B,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;;;;QEVD;;;;2IAAa,oBAAoB;4IAApB,oBAAoB,iBAHhB,uBAAuB,aAVpCR,eAAY;YACZqB,eAAY;YACZW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,UAAU;YACV,gBAAgB,aAGR,uBAAuB;4IAEtB,oBAAoB,YAdtB;gBACP5C,eAAY;gBACZqB,eAAY;gBACZW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,UAAU;gBACV,gBAAgB;aACjB;qHAIU,oBAAoB;sBAfhC3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,UAAU;4BACV,gBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,uBAAuB,CAAC;wBACvC,OAAO,EAAE,CAAC,uBAAuB,CAAC;qBACnC;;;ICAD;;;;;QAO2C,yCAA4B;QAGrE,+BACY,YAA0B,EAC1B,kBAAqC;YAFjD,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,wBAAkB,GAAlB,kBAAkB,CAAmB;YAJvC,eAAS,GAAGV,6BAAqB,CAAC,UAAU,CAAC;;SAOtD;QAES,oCAAI,GAAJ,UACR,UAA2B;YADnB,iBAOT;YAJC,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CACrDpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAA,CAAC,CAC3C,CAAC;SACH;;;;;QAMS,kDAAkB,GAAlB,UAAmB,EAIF;gBAHzB,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,IAAM,qBAAqB,GAAmC;gBAC5D,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAU,IAAK,wCAC9B,KAAK,KACR,IAAI,EAAE,KAAK,CAAC,OAAO,OACnB,CAAC;aACJ,CAAC;YACF,OAAO,qBAAqB,CAAC;SAC9B;;KArCH,CAA2C,WAA4B;4IAA1D,qBAAqB;gJAArB,qBAAqB,cAFpB,MAAM;qHAEP,qBAAqB;sBAHjCC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICrBD;QAAqD,mDAA4B;QAC/E,yCACE,WAA+B,EACrB,kBAA4C;YAFxD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAA0B;;SAGvD;QAES,mDAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAAqD+C,+BAA4B;sJAApE,+BAA+B;0JAA/B,+BAA+B,cADlB,MAAM;qHACnB,+BAA+B;sBAD3C/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCSrB,mBAAmB,GAAc;QAC5C,aAAa,EAAE;YACb,8BAA8B,EAAE;gBAC9B,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,qBAAqB;qBACnC;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,qBAAqB;qBACnC;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,mCAAmC;gCAC/C,QAAQ,EAAE,+BAA+B;6BAC1C;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,uBAAuB;yBACnC;wBACD;4BACE,IAAI,EAAE,MAAIF,iBAAY,CAAC,cAAgB;4BACvC,SAAS,EAAE,0BAA0B;4BACrC,IAAI,EAAE;gCACJ,UAAU,EAAE;oCACV,UAAU,EAAE,sCAAsC;iCACnD;6BACF;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,uBAAuB;iCACnC;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,4BAA4B;QAC1C,OAAO,qBAAqB,CAAC;IAC/B,CAAC;QAEY,qBAAqB,GAAgB;QAChD,KAAK;YACHC,KAACR,6BAAqB,CAAC,UAAU,IAAG;gBAClC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;gBAC1C,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,uBAAuB;yBACvC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;yBACnC;wBACD,IAAI,EAAE;4BACJ,aAAa,EAAE,iBAAiB;yBACjC;wBACD,KAAK,EAAE;4BACL,aAAa,EAAE,kBAAkB;yBAClC;qBACF;iBACF;aACF;iBACF;;;;QCrEH;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,YATnC,wBAAwB;YACxB,uBAAuB;YACvB,oBAAoB;kJAOX,0BAA0B,aAL1B;YACTY,uBAAoB,CAAC,mBAAmB,CAAC;YACzCC,8BAA2B,CAAC,4BAA4B,CAAC;SAC1D,YARQ;gBACP,wBAAwB;gBACxB,uBAAuB;gBACvB,oBAAoB;aACrB;qHAMU,0BAA0B;sBAXtC9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,wBAAwB;4BACxB,uBAAuB;4BACvB,oBAAoB;yBACrB;wBACD,SAAS,EAAE;4BACT6C,uBAAoB,CAAC,mBAAmB,CAAC;4BACzCC,8BAA2B,CAAC,4BAA4B,CAAC;yBAC1D;qBACF;;;;QCbuC,sCAA2B;QACjE,4BACY,cAA8B,EAC9B,cAA8B;YAF1C,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,oBAAc,GAAd,cAAc,CAAgB;;SAGzC;QAES,wCAAW,GAAX;YACR,OAAOzD,iBAAY,CAAC,QAAQ,CAAC;SAC9B;QAES,oCAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,qCAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAChD;;KAlBH,CAAwC,kBAA2B;yIAAtD,kBAAkB;6IAAlB,kBAAkB,cAFjB,MAAM;qHAEP,kBAAkB;sBAH9BE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCAoC,mCAAoB;QAAzD;;;QACY,mCAAS,GAAT,UAAU,IAAc;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC5B,iBAAM,SAAS,YAAC,IAAI,CAAC,CAAC;SACvB;QAES,+BAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CACb,KAAK,EACL,IAAIC,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,mBAAmB;aACzC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAIF,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAElE,IAAI,CAAC,UAAU,CACb,iBAAiB,EACjB,IAAIF,YAAS,CAAC;gBACZ,IAAI,EAAE,IAAIC,cAAW,CAAC,IAAI,CAAC;aAC5B,CAAC,CACH,CAAC;YAEF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,gBAAgB,EAAE,CAAC;SACzB;QAES,0CAAgB,GAAhB,UAAiB,IAAc;;YACvC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;gBACzB,MAAA,IAAI,CAAC,IAAI,0CAAE,aAAa,CAAC,eAAe,CAAC,CAAC;aAC3C;iBAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;gBAC1C,IAAI,CAAC,IAAI,CAAC,UAAU,CAClB,eAAe,EACf,IAAID,YAAS,CAAC;oBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,IAAI,EAAEC,aAAU,CAAC,QAAQ,CAAC;iBAChD,CAAC,CACH,CAAC;aACH;SACF;QAES,oCAAU,GAAV,UAAW,IAAa;;;;YAIhC,QACE,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG;iBACT,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,CAAA;iBACT,EAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAA,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,GAAG,OAAK,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,aAAa,CAAA,CAAC,EAC3D;SACH;;KAlDH,CAAqC,WAAoB;sIAA5C,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3B7C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCMoC,mCAAoB;QACvD,yBACY,kBAAsC,EACtC,cAA8B,EAC9B,WAA4B,EAC5B,WAA2B;YAJvC,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAiB;YAC5B,iBAAW,GAAX,WAAW,CAAgB;;SAGtC;;;;;;;QAQD,8BAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,gCAAM,GAAN,UAAO,IAAI,EAAE,KAAc;YACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACrD;QAES,gCAAM,GAAN,UACR,KAAc;YAEd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACrD;;;;;QAMS,yCAAe,GAAf;YACR,OAAO,gBAAgB,CAAC;SACzB;;KAvCH,CAAqC,WAAoB;sIAA5C,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3BA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCaC,8BAAsB,WAAiC;YAAvD,iBAA2D;YAArC,gBAAW,GAAX,WAAW,CAAsB;YANvD,WAAM,GAAwB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACtDJ,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;YACF,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SAEY;;;2IAPhD,oBAAoB;oHAApB,oBAAoB,2FARpB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,eAAe;aAC7B;SACF,qCChBH,0tGAoHA;qHDjGa,oBAAoB;sBAZhCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,+BAA+B;wBAC5C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,eAAe;6BAC7B;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QEQD;;;;wIAAa,iBAAiB;yIAAjB,iBAAiB,iBAHb,oBAAoB,aAVjCR,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,kBAAkB;YAClB,gBAAgB;YAChBE,sBAAmB;YACnB,iBAAiB,aAGT,oBAAoB;yIAEnB,iBAAiB,YAdnB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,kBAAkB;gBAClB,gBAAgB;gBAChBE,sBAAmB;gBACnB,iBAAiB;aAClB;qHAIU,iBAAiB;sBAf7Bf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,kBAAkB;4BAClB,gBAAgB;4BAChBE,sBAAmB;4BACnB,iBAAiB;yBAClB;wBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;wBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;qBAChC;;;;QC4CC,2BACY,WAAiC,EACjC,WAA2B;YAFvC,iBAGI;YAFQ,gBAAW,GAAX,WAAW,CAAsB;YACjC,gBAAW,GAAX,WAAW,CAAgB;YAjC9B,aAAQ,GAAG,SAAS,CAAC;YAErB,oBAAe,GAAG,KAAK,CAAC;YAEjC,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAE7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAC7DC,aAAG,CAAC,UAAC,IAAI;;gBACP,MAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,0CAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;gBACnD,IAAI,KAAI,CAAC,eAAe,EAAE;oBACxB,MAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,OAAO,EAAE,CAAC;iBAC3C;aACF,CAAC,EACF7B,mBAAS,CAAC,cACR,OAAA,KAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CACvCG,aAAG,CAAC,UAAC,KAAK,IACR,OAAA,KAAK,CAAC,MAAM,CAAC,UAAC,IAAI,YAAK,OAAA,IAAI,CAAC,EAAE,MAAK,MAAA,KAAI,CAAC,IAAI,0CAAE,KAAK,CAAC,GAAG,CAAA,CAAA,EAAA,CAAC,GAAA,CACzD,EACD0B,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,mBAAmB,CAAC,0CAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBAC7D;aACF,CAAC,CACH,GAAA,CACF,CACF,CAAC;YAEF,qBAAgB,GAAqC,IAAI,CAAC,WAAW;iBAClE,oBAAoB,EAAE;iBACtB,IAAI,CAACnB,gBAAM,CAAC,UAAC,KAAK,IAAK,OAAA,CAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,IAAG,CAAC,GAAA,CAAC,CAAC,CAAC;SAK1C;QAEJ,oCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QAED,6CAAiB,GAAjB,UAAkB,IAAqB,EAAE,IAAqB;YAC5D,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;;;wIA3CU,iBAAiB;iHAAjB,iBAAiB,8JAXjB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,eAAe;aAC7B;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,kBAAkB;aAChC;SACF,qCCnCH,+zEA+EA;qHD1Ca,iBAAiB;sBAhB7BS,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,4BAA4B;wBACzC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,eAAe;6BAC7B;4BACD;gCACE,OAAO,EAAE,kBAAkB;gCAC3B,WAAW,EAAE,kBAAkB;6BAChC;yBACF;qBACF;6IAEU,QAAQ;0BAAhBW,QAAK;oBAEG,eAAe;0BAAvBA,QAAK;;;;QEdR;;;;qIAAa,cAAc;sIAAd,cAAc,iBAHV,iBAAiB,aAV9BnB,eAAY;YACZqB,eAAY;YACZ,UAAU;YACVW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,gBAAgB,aAGR,iBAAiB;sIAEhB,cAAc,YAdhB;gBACP5C,eAAY;gBACZqB,eAAY;gBACZ,UAAU;gBACVW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,gBAAgB;aACjB;qHAIU,cAAc;sBAf1B3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZ,UAAU;4BACVW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,gBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;qBAC7B;;;;QCd8C,6CAA2B;QASxE,mCACY,cAA8B,EAC9B,WAA2B;YAFvC,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAgB;;YAT9B,WAAK,GAAwB,KAAI,CAAC,QAAQ,CAAC,IAAI,CACtD9C,gBAAM,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,OAAO,CAAC,GAAA,CAAC,EACrCV,mBAAS,CAAC,UAAC,OAAO,IAChB,OAAA,KAAI,CAAC,IAAI,CAAC,IAAI,CAACA,mBAAS,CAAC,UAAC,IAAY,IAAK,OAAA,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,GAAA,CAAC,CAAC,GAAA,CACzE,CACF,CAAC;;SAOD;QAED,mDAAe,GAAf;YACE,OAAO,uBAAuB,CAAC;SAChC;QAES,+CAAW,GAAX;YACR,OAAOE,iBAAY,CAAC,WAAW,CAAC;SACjC;QAES,2CAAO,GAAP,UAAQ,OAAe,EAAE,SAAiB;YAClD,OAAO,SAAS;kBACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,OAAO,EAAE,SAAS,CAAC;kBAC/CD,OAAE,CAAC,IAAI,CAAC,CAAC;SACd;QAED,4CAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAC7C;;KAhCH,CAA+C,kBAA2B;gJAA7D,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrCG,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCO2C,0CAAoB;QAC9D,gCACY,kBAAsC,EACtC,iBAAoC;YAFhD,YAIE,iBAAO,SACR;YAJW,wBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,uBAAiB,GAAjB,iBAAiB,CAAmB;;SAG/C;QAES,sCAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAIC,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAIA,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAIA,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAID,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAID,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAID,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAIA,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIF,YAAS,CAAC;gBACZ,OAAO,EAAE,IAAIC,cAAW,CAAC,IAAI,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACpD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,QAAQ,EACR,IAAIF,YAAS,CAAC;gBACZ,OAAO,EAAE,IAAIC,cAAW,CAAC,IAAI,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACpD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAID,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAID,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAE9C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAED,6CAAY,GAAZ;YAAA,iBAQC;YAPC,OAAO,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACxDnB,aAAG,CAAC,UAAC,SAAS;gBACZ,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvC,KAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;iBACjD;aACF,CAAC,CACH,CAAC;SACH;QAED,0CAAS,GAAT;YACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,EAAE,CAAC;SAC3C;QAED,2CAAU,GAAV;YAAA,iBAyBC;YAxBC,IAAI,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;YACjE,IAAI,cAAsB,CAAC;YAE3B,OAAO,IAAI,CAAC,OAAO,EAAE;iBAClB,GAAG,CAAC,iBAAiB,CAAC;iBACtB,YAAY,CAAC,IAAI,CAChBnB,gBAAM,CAAC,UAAC,cAAc,IAAK,OAAA,OAAO,CAAC,cAAc,CAAC,GAAA,CAAC,EACnDV,mBAAS,CAAC,UAAC,cAAc;gBACvB,cAAc,GAAG,cAAc,CAAC;gBAChC,OAAO,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;aAC3D,CAAC,EACF6B,aAAG,CAAC,UAAC,OAAiB;gBACpB,IAAM,aAAa,GAAG,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBACtD,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpC,aAAa,CAAC,OAAO,EAAE,CAAC;iBACzB;qBAAM;oBACL,aAAa,CAAC,MAAM,EAAE,CAAC;iBACxB;gBACD,IAAI,mBAAmB,IAAI,cAAc,KAAK,mBAAmB,EAAE;oBACjE,aAAa,CAAC,KAAK,EAAE,CAAC;iBACvB;gBACD,mBAAmB,GAAG,cAAc,CAAC;aACtC,CAAC,CACH,CAAC;SACL;;KA1EH,CAA4C,WAAoB;6IAAnD,sBAAsB;iJAAtB,sBAAsB,cAFrB,MAAM;qHAEP,sBAAsB;sBAHlCzB,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCA2C,0CAAoB;QAC9D,gCACY,kBAA6C,EAC7C,cAA8B,EAC9B,WAAmC,EACnC,WAA2B;YAJvC,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAA2B;YAC7C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAwB;YACnC,iBAAW,GAAX,WAAW,CAAgB;YAK7B,qBAAe,GAAG,KAAI,CAAC,cAAc;iBAC5C,SAAS,EAAE;iBACX,IAAI,CAACN,eAAK,CAACI,iBAAY,CAAC,QAAQ,CAAC,EAAEH,8BAAoB,EAAE,CAAC,CAAC;;SAJ7D;QAMD,qCAAI,GAAJ,UAAK,OAAe,EAAE,SAAiB;YACrC,OAAO,IAAI,CAAC,WAAW;iBACpB,UAAU,CAAC,OAAO,EAAE,SAAS,CAAC;iBAC9B,IAAI,CAACW,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAC;SAC1C;QAED,uCAAM,GAAN,UACE,WAAmB,EACnB,OAAgB;YAFlB,iBAQC;YAJC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC0B,eAAK,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;gBACpD,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;aAChE,CAAC,CAAC;YACH,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC;SAC9D;QAES,uCAAM,GAAN,UACR,KAAc;YADN,iBAOT;YAJC,IAAI,CAAC,eAAe;iBACjB,IAAI,CAACA,eAAK,EAAE,CAAC;iBACb,SAAS,CAAC,UAAC,QAAQ,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAA,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;SACvD;QAES,gDAAe,GAAf;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;SAClD;QAED,uCAAM,GAAN,UACE,SAAiB,EACjB,OAAe;YAEf,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;SAC5D;QAED,8CAAa,GAAb,UAAc,IAAa;YAA3B,iBAaC;YAZC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE;;;gBAGZ,IAAI,CAAC,UAAU,EAAE,CAAC;aACnB;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,IAAI,CAACA,eAAK,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;oBACpD,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC;wBACrB,OAAO,EAAE,KAAI,CAAC,eAAe,EAAE;wBAC/B,MAAM,kCAAO,IAAI,KAAE,GAAG,EAAE,QAAQ,GAAE;qBACnC,CAAC,CAAC;iBACJ,CAAC,CAAC;aACJ;SACF;QAES,2CAAU,GAAV;YAAA,iBAOT;YANC,IAAI,CAAC,eAAe,CAAC,IAAI,CAACA,eAAK,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,QAAQ;gBACpD,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC;oBACrB,OAAO,EAAE,oBAAoB;oBAC7B,MAAM,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE;iBAC1B,CAAC,CAAC;aACJ,CAAC,CAAC;SACJ;;KA1EH,CAA4C,WAAoB;6IAAnD,sBAAsB;iJAAtB,sBAAsB,cAFrB,MAAM;qHAEP,sBAAsB;sBAHlChC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCiCC,qCACY,WAAiC,EACjC,kBAAsC,EACtC,kBAAsC;YAHlD,iBAII;YAHQ,gBAAW,GAAX,WAAW,CAAsB;YACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAxBlD,UAAK,GAAwB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;YAE3D,WAAM,GAAwB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACtD4D,wBAAc,CAAC,IAAI,CAAC,KAAK,CAAC,EAC1BhE,mBAAS,CAAC,UAAC,EAAY;oBAAZ,KAAA,aAAY,EAAX,IAAI,QAAA,EAAE,IAAI,QAAA;gBAAM,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC;aAAA,CAAC,EAClEiE,qBAAW,CAAC,EAAE,UAAU,EAAE,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAC/C,CAAC;SAmBE;QAjBJ,gDAAU,GAAV,UAAW,OAAO;YAAlB,iBAWC;YAVC,OAAO,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACxDpC,aAAG,CAAC,UAAC,SAAoB;gBACvB,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;oBACvC,KAAI,CAAC,kBAAkB,CAAC,qBAAqB,EAAE,CAAC;iBACjD;aACF,CAAC,EACF1B,aAAG,CAAC,UAAC,SAAS,IACZ,OAAA,SAAS,CAAC,IAAI,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,OAAO,KAAK,OAAO,GAAA,CAAC,GAAA,CACzD,CACF,CAAC;SACH;;;kJApBU,2BAA2B;2HAA3B,2BAA2B,mGAP3B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,sBAAsB;aACpC;SACF,qCCxBH,2oDAwDA;qHD9Ba,2BAA2B;sBAZvCgB,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,sBAAsB;6BACpC;yBACF;qBACF;;;;QEJD;;;;+IAAa,wBAAwB;gJAAxB,wBAAwB,iBAFpB,2BAA2B,aARxCR,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,gBAAgB;YAChBE,sBAAmB;gJAIV,wBAAwB,YAX1B;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,gBAAgB;gBAChBE,sBAAmB;aACpB;qHAGU,wBAAwB;sBAZpCf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,gBAAgB;4BAChBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;qBAC5C;;;;QCSsC,qCAAa;QAElD,2BACY,MAAiD,EACjD,WAAiC;YAF7C,YAIE,kBAAM,MAAM,CAAC,SACd;YAJW,YAAM,GAAN,MAAM,CAA2C;YACjD,iBAAW,GAAX,WAAW,CAAsB;YAH7C,cAAQ,GAAuB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;SAMpD;QAED,sBAAI,uCAAQ;iBAAZ;gBACE,OAAO,CAAC,CAAC;aACV;;;WAAA;QAED,0CAAc,GAAd,UAAe,GAAW;YACxB,uCAAY,IAAI,CAAC,MAAM,CAAC,OAAO,KAAE,GAAG,KAAA,IAAG;SACxC;;KAfH,CAAuC,aAAa;wIAAvC,iBAAiB;iHAAjB,iBAAiB,0FAjBlB,scAcT;qHAGU,iBAAiB;sBAnB7BT,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,scAcT;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCjB2C,0CAAuB;QAIjE,gCACY,YAA0B,EAC1B,cAA8B;YAF1C,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,oBAAc,GAAd,cAAc,CAAgB;YALhC,eAAS,GAAG0B,6BAAqB,CAAC,YAAY,CAAC;YAC/C,iBAAW,GAAGA,6BAAqB,CAAC,YAAY,CAAC;;SAO1D;QAES,qCAAI,GAAJ,UACR,WAA4B,EAC5B,IAAY;YAEZ,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SAC/C;;KAhBH,CAA4C,cAAuB;6IAAtD,sBAAsB;iJAAtB,sBAAsB,cAFrB,MAAM;qHAEP,sBAAsB;sBAHlC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCLD;YAaE,cAAS,GAAGF,iBAAY,CAAC,WAAW,CAAC;SACtC;;;+IAFY,wBAAwB;wHAAxB,wBAAwB,gGAPxB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,sBAAsB;aACpC;SACF,qCCfH,qPAUA;qHDOa,wBAAwB;sBAZpCiB,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,sBAAsB;6BACpC;yBACF;qBACF;;;;QEJD;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,iBAFjB,wBAAwB,EAAE,iBAAiB,aADhDR,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAEC,YAAS,EAAE,aAAa;6IAG/D,qBAAqB,YAHvB,CAACtB,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAEC,YAAS,EAAE,aAAa,CAAC;qHAGhE,qBAAqB;sBAJjCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAEC,YAAS,EAAE,aAAa,CAAC;wBAC3E,YAAY,EAAE,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;qBAC5D;;;;QCoBC,kCACY,WAAiC,EACjC,WAAmC,EACnC,kBAAsC;YAFtC,gBAAW,GAAX,WAAW,CAAsB;YACjC,gBAAW,GAAX,WAAW,CAAwB;YACnC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAZlD,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAE7C,SAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC7B,eAAU,GAA0B,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;YACpE,YAAO,GAAwB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YAC5D,aAAQ,GAAyB,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;YAE/D,UAAK,GAAwB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SAMvD;QAEJ,2CAAQ,GAAR,eAAmB;;;+IAhBR,wBAAwB;wHAAxB,wBAAwB,gGAPxB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,sBAAsB;aACpC;SACF,qCCnBH,2kKAqKA;qHDhJa,wBAAwB;sBAZpCf,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,sBAAsB;6BACpC;yBACF;qBACF;;;;QECD;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,iBAFjB,wBAAwB,aARrCR,eAAY;YACZ,UAAU;YACVgC,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;6IAIP,qBAAqB,YAXvB;gBACP5C,eAAY;gBACZ,UAAU;gBACVgC,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;aACjB;qHAGU,qBAAqB;sBAZjC3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVgC,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,wBAAwB,CAAC;qBACzC;;;;QCRD;;;;wIAAa,iBAAiB;yIAAjB,iBAAiB,YAL1B,qBAAqB;YACrB,wBAAwB;YACxB,qBAAqB;yIAGZ,iBAAiB,YANnB;gBACP,qBAAqB;gBACrB,wBAAwB;gBACxB,qBAAqB;aACtB;qHAEU,iBAAiB;sBAP7B3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,qBAAqB;4BACrB,wBAAwB;4BACxB,qBAAqB;yBACtB;qBACF;;;;QCS4C,2CAAuB;QAIlE,iCACY,YAA0B,EAC1B,WAA2B,EAC3B,WAA2B;YAHvC,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAC3B,iBAAW,GAAX,WAAW,CAAgB;YAN7B,eAAS,GAAGiC,6BAAqB,CAAC,cAAc,CAAC;YACjD,iBAAW,GAAGA,6BAAqB,CAAC,IAAI,CAAC;;SAQlD;QAES,sCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAEoB,cAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC1E;;;;;QAMD,wCAAM,GAAN,UACE,MAAc,EACd,UAAkB;YAElB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,EAAEA,cAAW,CAAC,QAAQ,CAAC,CAAC;YAC1E,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;;;;;QAMD,0CAAQ,GAAR,UACE,MAAc,EACd,UAAkB;YAElB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,MAAM,EAAE,UAAU,EAAEA,cAAW,CAAC,QAAQ,CAAC,CAAC;YAC5E,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;;KAzCH,CAA6C,cAAuB;8IAAvD,uBAAuB;kJAAvB,uBAAuB,cAFtB,MAAM;qHAEP,uBAAuB;sBAHnC9D,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCJoD,mDAAuB;QAH5E;YAAA,6EAmBC;YAfW,eAAS,GAAG0C,6BAAqB,CAAC,uBAAuB,CAAC;;SAerE;QAbW,8CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAYT;YARC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CACrC,IAAI,EACJoB,cAAW,CAAC,QAAQ,EACpB,UAAU,CACX,CAAC;YACF,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC/D,aAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC,CAAC;SACrD;;KAfH,CAAqD,uBAAuB;sJAA/D,+BAA+B;0JAA/B,+BAA+B,cAF9B,MAAM;qHAEP,+BAA+B;sBAH3CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCED;;;;wJAAa,iCAAiC;iIAAjC,iCAAiC,0GAPjC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,+BAA+B;aAC7C;SACF,qCCdH,wKAKA;qHDWa,iCAAiC;sBAZ7Ce,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;wBAC9C,WAAW,EAAE,8CAA8C;wBAC3D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,+BAA+B;6BAC7C;yBACF;qBACF;;;;QECD;;;;gJAAa,yBAAyB;yHAAzB,yBAAyB,iGAPzB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,uBAAuB;aACrC;SACF,qCCdH,oKAKA;qHDWa,yBAAyB;sBAZrCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,WAAW,EAAE,qCAAqC;wBAClD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,uBAAuB;6BACrC;yBACF;qBACF;;;;QEJD;;;;6IAAa,sBAAsB;8IAAtB,sBAAsB,iBAFlB,yBAAyB,EAAE,iCAAiC,aADjEM,aAAU,EAAEO,eAAY,EAAE,aAAa;8IAGtC,sBAAsB,YAHxB,CAACP,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAGvC,sBAAsB;sBAJlCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACa,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAClD,YAAY,EAAE,CAAC,yBAAyB,EAAE,iCAAiC,CAAC;qBAC7E;;;;QCIwC,uCAA2B;QAIlE,6BACY,YAA0B,EAC1B,cAA8B;YAF1C,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,oBAAc,GAAd,cAAc,CAAgB;YALhC,eAAS,GAAGa,6BAAqB,CAAC,aAAa,CAAC;YAChD,iBAAW,GAAGA,6BAAqB,CAAC,IAAI,CAAC;;SAOlD;;QAGS,kCAAI,GAAJ,UACR,WAA4B,EAC5B,IAAY;YAEZ,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAChD;;KAjBH,CAAyC,cAA2B;0IAAvD,mBAAmB;8IAAnB,mBAAmB,cAFlB,MAAM;qHAEP,mBAAmB;sBAH/B1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCWC,+BAAsB,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAJ5D,UAAK,GAAwB,IAAI,CAAC,kBAAkB;kBAChD,IAAI,CAAC,kBAAkB,CAAC,KAAK;kBAC7BH,OAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SAEuC;;;4IALrD,qBAAqB;qHAArB,qBAAqB,4FAPrB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,mBAAmB;aACjC;SACF,qCCjBH,6cAoBA;qHDDa,qBAAqB;sBAZjCkB,YAAS;uBAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,WAAW,EAAE,gCAAgC;wBAC7C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,mBAAmB;6BACjC;yBACF;qBACF;;;;QEED;;;;yIAAa,kBAAkB;0IAAlB,kBAAkB,iBAFd,qBAAqB,aAPlC,UAAU;YACVM,aAAU;YACVO,eAAY;YACZ,aAAa;YACbrB,eAAY;YACZ,iBAAiB;0IAIR,kBAAkB,YAVpB;gBACP,UAAU;gBACVc,aAAU;gBACVO,eAAY;gBACZ,aAAa;gBACbrB,eAAY;gBACZ,iBAAiB;aAClB;qHAGU,kBAAkB;sBAX9BC,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,UAAU;4BACVa,aAAU;4BACVO,eAAY;4BACZ,aAAa;4BACbrB,eAAY;4BACZ,iBAAiB;yBAClB;wBACD,YAAY,EAAE,CAAC,qBAAqB,CAAC;qBACtC;;;;QCR8C,6CAAuB;QAIpE,mCACY,YAA0B,EAC1B,WAA2B;YAFvC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAL7B,eAAS,GAAGkC,6BAAqB,CAAC,iBAAiB,CAAC;YACpD,iBAAW,GAAGA,6BAAqB,CAAC,WAAW,CAAC;;SAOzD;QAES,wCAAI,GAAJ,UACR,WAA4B,EAC5B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SAC9C;;KAhBH,CAA+C,cAAuB;gJAAzD,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCcC,qCAAsB,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAJ5D,UAAK,GAAwB,IAAI,CAAC,kBAAkB;kBAChD,IAAI,CAAC,kBAAkB,CAAC,KAAK;kBAC7BH,OAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SAEuC;;;kJALrD,2BAA2B;2HAA3B,2BAA2B,gGAP3B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,yBAAyB;aACvC;SACF,qCCjBH,gdAoBA;qHDDa,2BAA2B;sBAZvCkB,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,yBAAyB;6BACvC;yBACF;qBACF;;;;QEAD;;;;+IAAa,wBAAwB;gJAAxB,wBAAwB,iBAFpB,2BAA2B,aANxCM,aAAU;YACVO,eAAY;YACZ,aAAa;YACbrB,eAAY;YACZ,iBAAiB;gJAIR,wBAAwB,YAT1B;gBACPc,aAAU;gBACVO,eAAY;gBACZ,aAAa;gBACbrB,eAAY;gBACZ,iBAAiB;aAClB;qHAGU,wBAAwB;sBAVpCC,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPa,aAAU;4BACVO,eAAY;4BACZ,aAAa;4BACbrB,eAAY;4BACZ,iBAAiB;yBAClB;wBACD,YAAY,EAAE,CAAC,2BAA2B,CAAC;qBAC5C;;;;QCO+C,8CAAa;QAE3D,oCACY,MAAiD,EACjD,WAAiC;YAF7C,YAIE,kBAAM,MAAM,CAAC,SACd;YAJW,YAAM,GAAN,MAAM,CAA2C;YACjD,iBAAW,GAAX,WAAW,CAAsB;YAH7C,cAAQ,GAAuB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC;;SAMpD;QAED,mDAAc,GAAd,UAAe,GAAW;YACxB,uCAAY,IAAI,CAAC,MAAM,CAAC,OAAO,KAAE,GAAG,KAAA,IAAG;SACxC;;KAXH,CAAgD,aAAa;iJAAhD,0BAA0B;0HAA1B,0BAA0B,oGAZ3B,6OAST;qHAGU,0BAA0B;sBAdtCO,YAAS;uBAAC;wBACT,QAAQ,EAAE,4BAA4B;wBACtC,QAAQ,EAAE,6OAST;wBACD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QCPwC,uCAAuB;QAI9D,6BACY,YAA0B,EAC1B,WAA2B;YAFvC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAL7B,eAAS,GAAG0B,6BAAqB,CAAC,UAAU,CAAC;YAC7C,iBAAW,GAAGA,6BAAqB,CAAC,IAAI,CAAC;;SAOlD;QAES,kCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAEoB,cAAW,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;SAC1E;;KAhBH,CAAyC,cAAuB;0IAAnD,mBAAmB;8IAAnB,mBAAmB,cAFlB,MAAM;qHAEP,mBAAmB;sBAH/B9D,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCYC,+BAAsB,kBAAsC;YAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;YAN5D,cAAS,GAAGF,iBAAY,CAAC,QAAQ,CAAC;YAElC,UAAK,GAAwB,IAAI,CAAC,kBAAkB;kBAChD,IAAI,CAAC,kBAAkB,CAAC,KAAK;kBAC7BD,OAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;SAEuC;;;4IAPrD,qBAAqB;qHAArB,qBAAqB,6FAPrB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,mBAAmB;aACjC;SACF,qCClBH,ufAoBA;qHDAa,qBAAqB;sBAZjCkB,YAAS;uBAAC;wBACT,QAAQ,EAAE,uBAAuB;wBACjC,WAAW,EAAE,iCAAiC;wBAC9C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,mBAAmB;6BACjC;yBACF;qBACF;;;;QECD;;;;yIAAa,kBAAkB;0IAAlB,kBAAkB,iBAFd,qBAAqB,EAAE,0BAA0B,aAP9DR,eAAY;YACZc,aAAU;YACVO,eAAY;YACZC,YAAS;YACT,aAAa;YACb,iBAAiB;0IAIR,kBAAkB,YAVpB;gBACPtB,eAAY;gBACZc,aAAU;gBACVO,eAAY;gBACZC,YAAS;gBACT,aAAa;gBACb,iBAAiB;aAClB;qHAGU,kBAAkB;sBAX9BrB,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZc,aAAU;4BACVO,eAAY;4BACZC,YAAS;4BACT,aAAa;4BACb,iBAAiB;yBAClB;wBACD,YAAY,EAAE,CAAC,qBAAqB,EAAE,0BAA0B,CAAC;qBAClE;;;;QCT2C,0CAA2B;QACrE,gCACY,cAA8B,EAC9B,cAA8B;YAF1C,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,oBAAc,GAAd,cAAc,CAAgB;;SAGzC;QAED,gDAAe,GAAf;YACE,OAAO,iBAAiB,CAAC;SAC1B;QAES,4CAAW,GAAX;YACR,OAAOhC,iBAAY,CAAC,QAAQ,CAAC;SAC9B;QAES,wCAAO,GAAP,UAAQ,UAAkB;YAClC,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;SAC5C;QAED,yCAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAChD;;KAtBH,CAA4C,kBAA2B;6IAA1D,sBAAsB;iJAAtB,sBAAsB,cAFrB,MAAM;qHAEP,sBAAsB;sBAHlCE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCA6C,4CAAoB;QAGhE,kCAAsB,WAA2B;YAAjD,YACE,iBAAO,SACR;YAFqB,iBAAW,GAAX,WAAW,CAAgB;YAFjD,oBAAc,GAAkB,KAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;;SAI9D;QAED,0CAAO,GAAP,UAAQ,IAAc;;;YAGpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,iBAAM,OAAO,YAAC,IAAI,CAAC,CAAC;SAC5B;QAES,wCAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,UAAC,IAAI,IAC/B,OAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,IAAIC,cAAW,EAAE,CAAC,GAAA,CACzC,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAES,4CAAS,GAAT,UAAU,IAAa;YAAvB,iBAOT;;YANC,iBAAM,SAAS,YAAC,IAAI,CAAC,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,CAAC,UAAC,IAAI;oBACvB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;iBACpC,CAAC,CAAC;aACJ;SACF;;KA7BH,CAA8C,WAAoB;+IAArD,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpC5C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCO6C,4CAAoB;QAChE,kCACY,kBAA0C,EAC1C,cAA8B,EAC9B,WAAqC,EACrC,WAA2B,EAC3B,cAA8B;YAL1C,YAOE,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YAPW,wBAAkB,GAAlB,kBAAkB,CAAwB;YAC1C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAA0B;YACrC,iBAAW,GAAX,WAAW,CAAgB;YAC3B,oBAAc,GAAd,cAAc,CAAgB;;SAGzC;QAED,uCAAI,GAAJ,UACE,IAAe,EACf,GAAY;;;YAIZ,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC;YAC7B,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9B;QAED,uCAAI,GAAJ,UAAK,OAAe;YAClB,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;SACzC;QAED,yCAAM,GAAN,UACE,UAAkB,EAClB,KAAc;YAEd,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACzD;QAES,yCAAM,GAAN,UACR,SAAkB;YAElB,OAAO,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACnD;QAES,kDAAe,GAAf;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;SAClD;;KAxCH,CAA8C,WAAoB;+IAArD,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCHuC,sCAA2B;QAKjE,4BACY,cAA8B,EAC9B,cAA8B;YAF1C,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,oBAAc,GAAd,cAAc,CAAgB;YANjC,WAAK,GAAuB,KAAI,CAAC,KAAK,CAAC,IAAI,CAClDD,aAAG,CAAC,UAAC,IAAa,IAAK,OAAA,IAAI,CAAC,IAAI,GAAA,CAAC,CAClC,CAAC;;SAOD;QAES,wCAAW,GAAX;YACR,OAAOD,iBAAY,CAAC,QAAQ,CAAC;SAC9B;QAES,oCAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,qCAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAChD;;KAtBH,CAAwC,kBAA2B;yIAAtD,kBAAkB;6IAAlB,kBAAkB,cAFjB,MAAM;qHAEP,kBAAkB;sBAH9BE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCDoC,mCAAoB;QAAzD;;;QACY,+BAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAIC,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAIA,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,IAAIA,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,IAAID,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,UAAU,CACb,OAAO,EACP,IAAID,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,cAAc;aACpC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIH,YAAS,CAAC;gBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACrD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAIkB,YAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE,IAAInB,cAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAEjE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAe;gBACvD,IAAI,KAAK,CAAC,QAAQ,CAACkB,cAAW,CAAC,QAAQ,CAAC,EAAE;oBACxC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,MAAM,EAAE,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,OAAO,EAAE,CAAC;oBAC5C,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,KAAK,EAAE,CAAC;iBAC3C;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAES,mCAAS,GAAT,UAAU,IAAa;;YAC/B,iBAAM,SAAS,YAAC,IAAI,CAAC,CAAC;YACtB,IAAI,IAAI,EAAE;gBACR,IAAM,OAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAc,CAAC;gBAClD,MAAA,IAAI,CAAC,KAAK,0CAAE,OAAO,CAAC,UAAC,IAAI;oBACvB,IAAI,CAAE,OAAK,CAAC,KAAkB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;wBAC7C,OAAK,CAAC,IAAI,CAAC,IAAIlB,cAAW,CAAC,IAAI,CAAC,CAAC,CAAC;qBACnC;iBACF,CAAC,CAAC;aACJ;SACF;;KA7CH,CAAqC,WAAoB;sIAA5C,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3B5C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCMoC,mCAAoB;QACvD,yBACY,kBAAsC,EACtC,cAA8B,EAC9B,WAA4B,EAC5B,WAA2B;YAJvC,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAAoB;YACtC,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAiB;YAC5B,iBAAW,GAAX,WAAW,CAAgB;;SAGtC;QAED,8BAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACnC;QAED,gCAAM,GAAN,UAAO,IAAI,EAAE,KAAc;YACzB,OAAO,KAAK,CAAC,SAAS,CAAC;YACvB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACrC,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAChD;QAES,gCAAM,GAAN,UACR,KAAc;YAEd,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAChD;QAES,yCAAe,GAAf;YACR,OAAO,gBAAgB,CAAC;SACzB;;QAGD,uCAAa,GAAb,UAAc,IAAa;YACzB,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC5B,iBAAM,aAAa,YAAC,IAAI,CAAC,CAAC;aAC3B;SACF;;KArCH,CAAqC,WAAoB;sIAA5C,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3BA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCkCC,oCACY,WAAiC,EACjC,WAAqC,EACrC,WAA2B,EAC3B,eAAgC;YAJ5C,iBAKI;YAJQ,gBAAW,GAAX,WAAW,CAAsB;YACjC,gBAAW,GAAX,WAAW,CAA0B;YACrC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,oBAAe,GAAf,eAAe,CAAiB;YAlB5C,UAAK,GAA0B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAC3DyB,aAAG,CAAC,UAAC,IAAI;;gBACP,IAAI,CAAC,KAAI,CAAC,IAAI,EAAE;oBACd,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;iBAClB;gBACD,IAAI,CAAA,MAAA,KAAI,CAAC,IAAI,CAAC,KAAK,0CAAE,IAAI,EAAE,OAAK,MAAA,IAAI,CAAC,KAAK,0CAAE,IAAI,EAAE,CAAA,EAAE;oBAClD,KAAI,CAAC,IAAI,mCAAQ,KAAI,CAAC,IAAI,GAAK,IAAI,CAAE,CAAC;iBACvC;aACF,CAAC,EACF1B,aAAG,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,CAC9C,CAAC;YAEF,mBAAc,GAAkB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;SAO3D;QAEJ,yCAAI,GAAJ,UAAK,IAAe;YAApB,iBAaC;YAZC,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAM,KAAK,GAAG,yBAAI,IAAI,CAAC,cAAc,GAAE,MAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAA,CAAC,CAAC;YAC1E,IAAI,CAAC,eAAe;iBACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,KAAK,OAAA,EAAE,CAAC;iBACvC,IAAI,CACHkC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CAAC,CACrD;iBACA,SAAS,CAAC,UAAC,IAAI;gBACd,KAAI,CAAC,MAAM,iCAAM,KAAI,CAAC,IAAI,GAAK,IAAI,CAAC,IAAI,EAAG,CAAC;gBAC5C,IAAI,CAAC,MAAM,EAAE,CAAC;aACf,CAAC,CAAC;SACN;QAES,2CAAM,GAAN,UAAO,IAAa;YAC5B,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAE,wCAAwC;oBAC7C,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE;iBACjB;aACF,CAAC,CAAC;SACJ;;;iJAjDU,0BAA0B;0HAA1B,0BAA0B,8FAP1B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,wBAAwB;aACtC;SACF,0EAKU,cAAc,2BAAU,cAAc,wCC9BnD,64BA6BA;qHDFa,0BAA0B;sBAZtCnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,WAAW,EAAE,kCAAkC;wBAC/C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;4MAKC,cAAc;0BADbK,YAAS;2BAAC,cAAc,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE;;;;QERrD;;;;0IAAa,mBAAmB;2IAAnB,mBAAmB,iBAFf,0BAA0B,aATvCb,eAAY;YACZ,UAAU;YACV2B,cAAW;YACXN,eAAY;YACZC,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnB3B,sBAAmB;2IAIV,mBAAmB,YAZrB;gBACPhB,eAAY;gBACZ,UAAU;gBACV2B,cAAW;gBACXN,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnB3B,sBAAmB;aACpB;qHAGU,mBAAmB;sBAb/Bf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACV2B,cAAW;4BACXN,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnB3B,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,0BAA0B,CAAC;qBAC3C;;;;QCdD;;;;sIAAa,eAAe;uIAAf,eAAe,YAFhB,kBAAkB,EAAE,mBAAmB;uIAEtC,eAAe,YAFjB,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;qHAEvC,eAAe;sBAH3Bf,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;qBACnD;;;ICND,IAAY,WAGX;IAHD,WAAY,WAAW;QACrB,qDAAQ,CAAA;QACR,uDAAS,CAAA;IACX,CAAC,EAHW,WAAW,KAAX,WAAW;;ICQvB;;;;IAOA;QAHA;;;;YAOY,oBAAe,GAAG,CAAC,CAAC;YAEpB,kBAAa,GAAiC,IAAIR,oBAAe,CACzE,SAAS,CACV,CAAC;YAEF,gBAAW,GAA8C,IAAIA,oBAAe,CAC1E,IAAI,GAAG,EAAE,CACV,CAAC;SAyGH;;;;;;QAlGC,oCAAU,GAAV,UAAW,IAAiB,EAAE,YAAoB;YAChD,IAAI,YAAY,EAAE;gBAChB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;aAChD;SACF;;;;;QAMD,qCAAW,GAAX;YACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;SAClC;;;;;QAMD,mCAAS,GAAT;YACE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC;SAClC;;;;;;;;QASD,oCAAU,GAAV,UAAW,MAAc,EAAE,KAAa;;YACtC,IAAM,WAAW,GAAG,MAAA,IAAI,CAAC,WAAW,CAAC,KAAK,0CAAE,GAAG,CAAC,MAAM,CAAC,CAAC;YAExD,IACE,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,WAAW,CAAC,SAAS;gBAClD,WAAW,KAAK,WAAW,CAAC,QAAQ,EACpC;gBACA,OAAO,KAAK,CAAC;aACd;YAED;;YAEE,WAAW,KAAK,WAAW,CAAC,QAAQ;;;iBAGnC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,KAAK,WAAW,CAAC,QAAQ;oBACjD,KAAK,GAAG,IAAI,CAAC,eAAe;oBAC5B,WAAW,KAAK,WAAW,CAAC,SAAS,CAAC,EACxC;SACH;QAED,gCAAM,GAAN,UAAO,IAAqB;YAC1B,IAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,YAAY,CAAC,GAAG,CACd,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;kBACrC,WAAW,CAAC,SAAS;kBACrB,WAAW,CAAC,QAAQ,CACzB,CAAC;YACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrC;;;;;;;QAQS,+CAAqB,GAArB,UAAsB,IAAiB,EAAE,YAAoB;YACrE,IAAM,cAAc,GAAG,UAAC,CAAc,EAAE,EAAU;;gBAChD,OAAA,CAAC,EAAC,MAAA,CAAC,CAAC,QAAQ,0CAAE,IAAI,CAChB,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,cAAc,CAAC,KAAK,EAAE,EAAE,CAAC,GAAA,CACxD,CAAA,CAAA;aAAA,CAAC;YAEJ,IAAM,qBAAqB,GAAG,UAC5B,CAAc,EACd,WAAgB;gBAAhB,4BAAA,EAAA,gBAAgB;gBAEhB,IAAI,cAAc,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE;oBACnC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBACxB;gBACD,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,KAAK;oBACvB,qBAAqB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;iBAC3C,CAAC,CAAC;gBACH,OAAO,WAAW,CAAC;aACpB,CAAC;YAEF,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACjC,qBAAqB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ;gBAC3C,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,WAAW,CAAC,QAAQ,EAAE;oBAC5C,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;iBACvC;aACF,CAAC,CAAC;YACH,IAAI,CAAC,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBAChC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC1B;SACF;;;sIApHU,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3BD,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCLC,2BAAsB,eAAgC;YAAhC,oBAAe,GAAf,eAAe,CAAiB;SAAI;QAE1D,qCAAS,GAAT;YACE,IAAI,CAAC,eAAe,CAAC,SAAS,EAAE,CAAC;SAClC;QAED,uCAAW,GAAX;YACE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;SACpC;;;wIATU,iBAAiB;iHAAjB,iBAAiB,mECR9B,kUAUA;qHDFa,iBAAiB;sBAL7Be,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,4BAA4B;wBACzC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEQ4C,2CAAa;QAMxD,iCACY,MAAiD,EACjD,eAAgC;YAF5C,YAIE,kBAAM,MAAM,CAAC,SACd;YAJW,YAAM,GAAN,MAAM,CAA2C;YACjD,qBAAe,GAAf,eAAe,CAAiB;;SAG3C;QAVD,sBACI,+CAAU;iBADd;gBAEE,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAC9B;;;WAAA;QASD,sBAAI,iDAAY;iBAAhB;gBACE,OAAO,IAAI,CAAC,QAAQ,GAAM,IAAI,CAAC,QAAQ,UAAK,IAAI,CAAC,KAAK,MAAG,GAAG,EAAE,CAAC;aAChE;;;WAAA;QAED,sBAAI,6CAAQ;iBAAZ;gBACE,OAAO,CAAC,CAAC;aACV;;;WAAA;QAED,sBAAI,6CAAQ;iBAAZ;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC5B;;;WAAA;QAKD,sBAAI,0CAAK;;;;iBAAT;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;aACzB;;;WAAA;QAED,4CAAU,GAAV,UAAW,KAAY;YACrB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;YACxB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,KAAmC,CAAC,CAAC;SACvE;QAQD,sBAAI,iDAAY;;;;;;;iBAAhB;gBACE,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;aACvB;;;WAAA;QAGD,sBAAI,4CAAO;;iBAAX;gBACE,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;aACzD;;;WAAA;QAED,sBAAc,yCAAI;iBAAlB;gBACE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;oBACxB,OAAO,IAAI,CAAC;iBACb;gBACD,IAAM,KAAiD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAlE,MAAM,KAA4D,OAA5D,EAAE,QAAQ,KAAkD,SAAlD,EAAE,KAAK,KAA2C,MAA3C,EAAE,SAAS,KAAgC,UAAhC,EAAK,GAAG,cAA5C,4CAA8C,CAAsB,CAAC;gBAC3E,OAAO,GAAc,CAAC;aACvB;;;WAAA;;KA3DH,CAA6C,aAAa;8IAA7C,uBAAuB;uHAAvB,uBAAuB,wKCfpC,qdAgBA;qHDDa,uBAAuB;sBALnCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,mCAAmC;wBAChD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;kJAGK,UAAU;0BADbH,cAAW;2BAAC,wBAAwB;;;;QEIvC;;;;qIAAa,cAAc;sIAAd,cAAc,iBAFV,iBAAiB,EAAE,uBAAuB,aAPvDL,eAAY;YACZqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACVC,aAAU;YACV,UAAU;sIAID,cAAc,YAVhB;gBACPf,eAAY;gBACZqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACVC,aAAU;gBACV,UAAU;aACX;qHAGU,cAAc;sBAX1Bd,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACVC,aAAU;4BACV,UAAU;yBACX;wBACD,YAAY,EAAE,CAAC,iBAAiB,EAAE,uBAAuB,CAAC;qBAC3D;;;;QCX6C,4CAAa;QAA3D;;;;KAAA,CAA8C,aAAa;+IAA9C,wBAAwB;wHAAxB,wBAAwB,kGCRrC,2/CA+DA;qHDvDa,wBAAwB;sBALpCR,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEC6C,4CAAa;QAA3D;;;;KAAA,CAA8C,aAAa;+IAA9C,wBAAwB;wHAAxB,wBAAwB,kGCRrC,m2CAuDA;qHD/Ca,wBAAwB;sBALpCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QED4C,2CAAkB;QAA/D;;;QACY,6CAAW,GAAX;;;YAGR,OAAO,eAAe,CAAC;SACxB;;KALH,CAA6C,kBAAkB;8IAAlD,uBAAuB;kJAAvB,uBAAuB,cAFtB,MAAM;qHAEP,uBAAuB;sBAHnChB,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCUyC,wCAAe;QACvD,8BACY,kBAA2C,EAC3C,cAA8B,EAC9B,WAA4B,EAC5B,WAA2B;YAJvC,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,EAAE,WAAW,CAAC,SACpE;YANW,wBAAkB,GAAlB,kBAAkB,CAAyB;YAC3C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAiB;YAC5B,iBAAW,GAAX,WAAW,CAAgB;;SAGtC;QAED,mCAAI,GAAJ,UACE,IAAe,EACf,GAAY;;;;YAIZ,MAAA,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,0CAAE,MAAM,EAAE,CAAC;YACpC,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9B;;;;;QAMS,8CAAe,GAAf;YACR,OAAO,iBAAiB,CAAC;SAC1B;QAES,+CAAgB,GAAhB,UAAiB,IAAa;YACtC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;SACxC;;KA9BH,CAA0C,eAAe;2IAA5C,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCQC,kCAAsB,WAA+B;YAA/B,gBAAW,GAAX,WAAW,CAAoB;YADrD,aAAQ,GAAuB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACI;;;+IAF9C,wBAAwB;wHAAxB,wBAAwB,gGATxB;;;YAGT;gBACE,OAAO,EAAE,eAAe;gBACxB,WAAW,EAAE,oBAAoB;aAClC;SACF,qCClBH,0GAIA;qHDgBa,wBAAwB;sBAdpCe,YAAS;uBAAC;wBACT,QAAQ,EAAE,0BAA0B;wBACpC,WAAW,EAAE,oCAAoC;wBACjD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;;;4BAGT;gCACE,OAAO,EAAE,eAAe;gCACxB,WAAW,EAAE,oBAAoB;6BAClC;yBACF;qBACF;;;;QEVD;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,iBAFjB,wBAAwB,aAD7BR,eAAY,EAAE,cAAc;6IAG3B,qBAAqB,YAHvB,CAACA,eAAY,EAAE,cAAc,CAAC;qHAG5B,qBAAqB;sBAJjCC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAE,cAAc,CAAC;wBACvC,YAAY,EAAE,CAAC,wBAAwB,CAAC;qBACzC;;;;QCE8C,6CAAqB;QAApE;;;QACE,wCAAI,GAAJ,UACE,IAAe,EACf,GAAY;;;YAIZ,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;YAC1B,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9B;;;;;QAMS,mDAAe,GAAf;YACR,OAAO,oBAAoB,CAAC;SAC7B;QAES,oDAAgB,GAAhB,UAAiB,IAAgB;YACzC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;SAC/B;;KArBH,CAA+C,qBAAqB;gJAAvD,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrCR,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCaC,uCAAsB,WAA+B;YAA/B,gBAAW,GAAX,WAAW,CAAoB;YADrD,aAAQ,GAAuB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACI;;;oJAF9C,6BAA6B;6HAA7B,6BAA6B,sGAT7B;;;YAGT;gBACE,OAAO,EAAE,qBAAqB;gBAC9B,WAAW,EAAE,yBAAyB;aACvC;SACF,qCClBH,sFACA;qHDmBa,6BAA6B;sBAdzCe,YAAS;uBAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;;;4BAGT;gCACE,OAAO,EAAE,qBAAqB;gCAC9B,WAAW,EAAE,yBAAyB;6BACvC;yBACF;qBACF;;;;QEVD;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,iBAFtB,6BAA6B,aADlCR,eAAY,EAAE,oBAAoB;kJAGjC,0BAA0B,YAH5B,CAACA,eAAY,EAAE,oBAAoB,CAAC;qHAGlC,0BAA0B;sBAJtCC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAE,oBAAoB,CAAC;wBAC7C,YAAY,EAAE,CAAC,6BAA6B,CAAC;qBAC9C;;;ICED;QAAyC,uCAAe;QAAxD;;;QACE,kCAAI,GAAJ,UACE,IAAe,EACf,GAAY;;;;YAIZ,MAAA,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,0CAAE,MAAM,EAAE,CAAC;YAC9B,OAAO,iBAAM,IAAI,YAAC,IAAI,EAAE,GAAG,CAAC,CAAC;SAC9B;;;;;QAMS,6CAAe,GAAf;YACR,OAAO,iBAAiB,CAAC;SAC1B;QAES,8CAAgB,GAAhB,UAAiB,IAAa;YACtC,OAAO,EAAE,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;SAClC;;QAGD,2CAAa,GAAb,UAAc,IAAa;YACzB,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACvC,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAC3C,IAAI,OAAO,IAAI,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnD,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,EAAE,OAAO,SAAA,EAAE,MAAM,QAAA,EAAE,CAAC,CAAC;aAC7C;SACF;;KA9BH,CAAyC,eAAe;0IAA3C,mBAAmB;8IAAnB,mBAAmB,cAFlB,MAAM;qHAEP,mBAAmB;sBAH/BR,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCsDC,2BACY,WAAiC,EACjC,WAA2B,EAC3B,WAAwB,EACxB,cAA8B;YAJ1C,iBAKI;YAJQ,gBAAW,GAAX,WAAW,CAAsB;YACjC,gBAAW,GAAX,WAAW,CAAgB;YAC3B,gBAAW,GAAX,WAAW,CAAa;YACxB,mBAAc,GAAd,cAAc,CAAgB;YA9B1C,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAc7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAC3EyB,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBACtD;aACF,CAAC,CACH,CAAC;YAEF,YAAO,GAAwB,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;YAE5D,mBAAc,GAAkB,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;SAO9D;QAxBJ,sBAAa,sCAAO;;;;;;iBAApB,UAAqB,KAAa;;gBAChC,IAAI,KAAK,EAAE;oBACT,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;oBAC9C,MAAA,MAAA,IAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,SAAS,CAAC,0CAAE,OAAO,EAAE,CAAC;iBACtC;aACF;;;WAAA;QAqBD,oCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QAED,uCAAW,GAAX,UAAY,KAAiB;YACrB,IAAA,KAAqB,KAAK,CAAC,MAA0B,EAAnD,OAAO,aAAA,EAAE,KAAK,WAAqC,CAAC;YAC5D,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAImB,cAAW,CAAC,KAAK,CAAC,CAAC,CAAC;aACzC;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;aACtD;SACF;QAED,sBAAI,oCAAK;iBAAT;gBACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAc,CAAC;aAC5C;;;WAAA;QAED,sBAAI,oDAAqB;iBAAzB;gBACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAgB,CAAC;aAC9D;;;WAAA;;;wIArDU,iBAAiB;iHAAjB,iBAAiB,wHAXjB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,eAAe;aAC7B;YACD;gBACE,OAAO,EAAE,kBAAkB;gBAC3B,WAAW,EAAE,kBAAkB;aAChC;SACF,qCClCH,sjHAoHA;qHDhFa,iBAAiB;sBAhB7B7B,YAAS;uBAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,WAAW,EAAE,4BAA4B;wBACzC,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,eAAe;6BAC7B;4BACD;gCACE,OAAO,EAAE,kBAAkB;gCAC3B,WAAW,EAAE,kBAAkB;6BAChC;yBACF;qBACF;4NASc,OAAO;0BAAnBW,QAAK;;;;QEtBN,iCAAsB,WAA+B;YAA/B,gBAAW,GAAX,WAAW,CAAoB;YADrD,aAAQ,GAAuB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACI;;;8IAF9C,uBAAuB;uHAAvB,uBAAuB,+FATvB;;;YAGT;gBACE,OAAO,EAAE,eAAe;gBACxB,WAAW,EAAE,mBAAmB;aACjC;SACF,qCClBH,2GAIA;qHDgBa,uBAAuB;sBAdnCZ,YAAS;uBAAC;wBACT,QAAQ,EAAE,yBAAyB;wBACnC,WAAW,EAAE,mCAAmC;wBAChD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;;;4BAGT;gCACE,OAAO,EAAE,eAAe;gCACxB,WAAW,EAAE,mBAAmB;6BACjC;yBACF;qBACF;;;;QEKD;;;;qIAAa,cAAc;sIAAd,cAAc,iBAHV,iBAAiB,aAT9BR,eAAY;YACZqB,eAAY;YACZ,UAAU;YACVW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB,aAGR,iBAAiB;sIAEhB,cAAc,YAbhB;gBACP5C,eAAY;gBACZqB,eAAY;gBACZ,UAAU;gBACVW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;aACjB;qHAIU,cAAc;sBAd1B3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZ,UAAU;4BACVW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;yBACjB;wBACD,YAAY,EAAE,CAAC,iBAAiB,CAAC;wBACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC;qBAC7B;;;;QCdD;;;;2IAAa,oBAAoB;4IAApB,oBAAoB,iBAFhB,uBAAuB,aAD5B5C,eAAY,EAAE,cAAc;4IAG3B,oBAAoB,YAHtB,CAACA,eAAY,EAAE,cAAc,CAAC;qHAG5B,oBAAoB;sBAJhCC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAE,cAAc,CAAC;wBACvC,YAAY,EAAE,CAAC,uBAAuB,CAAC;qBACxC;;;ICED;QAAsD,oDAA4B;QAChF,0CACE,WAA+B,EACrB,kBAA6C;YAFzD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAA2B;;SAGxD;QAES,oDAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAAsDuC,+BAA4B;uJAArE,gCAAgC;2JAAhC,gCAAgC,cADnB,MAAM;qHACnB,gCAAgC;sBAD5C/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;ICMlC;;;;;QAOqC,mCAA4B;QAG/D,yBACY,YAA0B,EAC1B,WAA2B,EAC3B,eAAgC,EAChC,eAAgC;YAJ5C,YAME,kBAAM,YAAY,CAAC,SACpB;YANW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAC3B,qBAAe,GAAf,eAAe,CAAiB;YAChC,qBAAe,GAAf,eAAe,CAAiB;YANlC,eAAS,GAAG0C,6BAAqB,CAAC,IAAI,CAAC;;SAShD;QAES,8BAAI,GAAJ;YAAA,iBAeT;YAdC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,IAAI,CACpC9C,mBAAS,CAAC,UAAC,IAAI,IACb,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAC5BG,aAAG,CAAC,UAAC,GAAG;gBACN,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;gBAC3C,OAAO,IAAI,CAAC;aACb,CAAC,CACH,GAAA,CACF,EACDH,mBAAS,CAAC,UAAC,IAAI,IACb,OAAA,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAACG,aAAG,CAAC,cAAM,OAAA,IAAI,GAAA,CAAC,CAAC,GAAA,CACvD,EACDA,aAAG,CAAC,UAAC,IAAiB,IAAK,OAAA,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAA,CAAC,CACvD,CAAC;SACH;QAES,yCAAe,GAAf,UACR,IAAiB,EACjB,UAAc,EACd,UAAgC;YAHxB,iBAqCT;YAnCC,2BAAA,EAAA,cAAc;YACd,2BAAA,EAAA,eAAe,YAAY,EAAE,CAAC,EAAE;;YAEhC,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,IAAI,EAAE;gBACT,OAAO;aACR;YAED,IAAM,IAAI,mCACL,IAAI,KACP,KAAK,EAAE,MAAA,MAAA,IAAI,CAAC,QAAQ,0CAAE,MAAM,mCAAI,CAAC,EACjC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,EAC9D,UAAU,YAAA;;gBAEV,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,QAAQ,EAAE,yBAAI,IAAI,CAAC,QAAQ,GAAE,IAAI,CAAC,UAAC,KAAK,EAAE,KAAK,IAC7C,OAAA,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,GAAA,CACrC,GACF,CAAC;YAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAClB,UAAU,CAAC,YAAY,EAAE,CAAC;YAE1B,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAC,SAAS;;gBAC9B,IAAM,SAAS,GAAG,MAAA,KAAI,CAAC,eAAe,CACpC,SAAS,EACT,UAAU,GAAG,CAAC,EACd,UAAU,CACX,0CAAE,MAAM,CAAC;gBACV,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;oBACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;iBACnC;aACF,CAAC,CAAC;YAEH,OAAO,EAAE,MAAM,QAAA,EAAE,UAAU,YAAA,EAAE,CAAC;SAC/B;QAED,6BAAG,GAAH;YACE,OAAO,KAAK,CAAC;SACd;;KAtEH,CAAqC,WAA4B;sIAApD,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3BC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICXD;QAA+C,6CAA4B;QACzE,mCACE,WAA+B,EACrB,kBAAsC;YAFlD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAAoB;;SAGjD;QAES,6CAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAA+C+C,+BAA4B;gJAA9D,yBAAyB;oJAAzB,yBAAyB,cADZ,MAAM;qHACnB,yBAAyB;sBADrC/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QC+BrB,cAAc,GAAc;QACvC,aAAa,EAAE;YACb,wBAAwB,EAAE;gBACxB,SAAS,EAAE,iBAAiB;gBAC5B,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,eAAe;qBAC7B;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,eAAe;qBAC7B;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,0BAA0B;gCACtC,QAAQ,EAAE,yBAAyB;6BACpC;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,iBAAiB;yBAC7B;wBACD;4BACE,IAAI,EAAE,MAAIF,iBAAY,CAAC,QAAU;4BACjC,SAAS,EAAE,oBAAoB;4BAC/B,IAAI,EAAE;gCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,6BAA6B,EAAE;6BAC1D;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,iBAAiB;iCAC7B;gCACD;oCACE,IAAI,EAAE,UAAU;oCAChB,SAAS,EAAE,qBAAqB;oCAChC,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,8BAA8B,EAAE;qCAC3D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,wBAAwB;yCACpC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,WAAW;oCACjB,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,+BAA+B,EAAE;qCAC5D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,iCAAiC;yCAC7C;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,yBAAyB;yCACrC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,OAAO;oCACb,SAAS,EAAE,qBAAqB;oCAChC,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,2BAA2B,EAAE;qCACxD;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,uBAAuB;yCACnC;wCACD;4CACE,IAAI,EAAE,MAAIA,iBAAY,CAAC,QAAQ,WAAQ;4CACvC,SAAS,EAAE,0BAA0B;yCACtC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,cAAc;oCACpB,SAAS,EAAE,2BAA2B;oCACtC,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,iCAAiC,EAAE;qCAC9D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,6BAA6B;yCACzC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,WAAW;oCACjB,SAAS,EAAE,wBAAwB;oCACnC,IAAI,EAAE;wCACJ,UAAU,EAAE;4CACV,UAAU,EAAE,+BAA+B;4CAC3C,QAAQ,EAAE,gCAAgC;yCAC3C;qCACF;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,wBAAwB;yCACpC;wCACD;4CACE,IAAI,EAAE,MAAIA,iBAAY,CAAC,WAAa;4CACpC,IAAI,EAAE;gDACJ,UAAU,EAAE;oDACV,UAAU,EAAE,oCAAoC;iDACjD;6CACF;4CACD,QAAQ,EAAE;gDACR;oDACE,IAAI,EAAE,EAAE;oDACR,SAAS,EAAE,2BAA2B;iDACvC;gDACD;oDACE,IAAI,EAAE,MAAM;oDACZ,SAAS,EAAE,wBAAwB;iDACpC;6CACF;yCACF;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,uBAAuB;QACrC,OAAO,gBAAgB,CAAC;IAC1B,CAAC;QAEY,gBAAgB,GAAgB;QAC3C,KAAK;YACHC,KAACR,6BAAqB,CAAC,IAAI;oBACzB,KAAK,EAAE,CAAC,MAAM,CAAC;oBACf,OAAO,EAAE;wBACP,MAAM,EAAEN,cAAW,CAAC,QAAQ;wBAC5B,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,aAAa,EAAE,uBAAuB;6BACvC;4BACD,MAAM,EAAE;gCACN,aAAa,EAAE,mBAAmB;6BACnC;4BACD,GAAG,EAAE;gCACH,aAAa,EAAE,aAAa;6BAC7B;yBACF;qBACF;;gBACD,GAAC4B,aAAU,CAAC,EAAE,IAAG;oBACf,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,CAAC;iBACjC;mBACF;YACDd,KAACR,6BAAqB,CAAC,UAAU,IAAG;gBAClC,KAAK,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;gBACxB,OAAO,EAAE;oBACP,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,KAAK,EAAE;4BACL,aAAa,EAAE,0BAA0B;yBAC1C;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,aAAa,IAAG;gBACrC,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;gBACzB,OAAO,EAAE;oBACP,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;4BAClC,QAAQ,EAAE,KAAK;yBAChB;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,cAAc,IAAG;gBACtC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC;gBACrC,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,iBAAiB;4BAChC,QAAQ,EAAE,KAAK;yBAChB;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,uBAAuB,IAAG;gBAC/C,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC;gBACrC,OAAO,EAAE;oBACP,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,iBAAiB;4BAChC,QAAQ,EAAE,KAAK;yBAChB;qBACF;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,iBAAiB,IAAG;gBACzC,KAAK,EAAE,CAAC,MAAM,CAAC;gBACf,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;qBACF;oBACD,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,YAAY,IAAG;gBACpC,KAAK,EAAE,CAAC,kBAAkB,CAAC;gBAC3B,OAAO,EAAE;oBACP,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;oBACD,KAAK,EAAE;wBACL,gBAAgB,EAAE;4BAChB,aAAa,EAAE,iBAAiB;yBACjC;qBACF;iBACF;aACF;iBACF;;;;QCnRH;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,YAf9Bb,eAAY;YACZ,cAAc;YACd,iBAAiB;YACjB,cAAc;YACd,kBAAkB;YAClB,sBAAsB;YACtB,eAAe;YACf,wBAAwB;YACxB,iBAAiB;6IAOR,qBAAqB,aALrB;YACTyB,uBAAoB,CAAC,cAAc,CAAC;YACpCC,8BAA2B,CAAC,uBAAuB,CAAC;SACrD,YAdQ;gBACP1B,eAAY;gBACZ,cAAc;gBACd,iBAAiB;gBACjB,cAAc;gBACd,kBAAkB;gBAClB,sBAAsB;gBACtB,eAAe;gBACf,wBAAwB;gBACxB,iBAAiB;aAClB;qHAMU,qBAAqB;sBAjBjCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPoB,eAAY;4BACZ,cAAc;4BACd,iBAAiB;4BACjB,cAAc;4BACd,kBAAkB;4BAClB,sBAAsB;4BACtB,eAAe;4BACf,wBAAwB;4BACxB,iBAAiB;yBAClB;wBACD,SAAS,EAAE;4BACTyB,uBAAoB,CAAC,cAAc,CAAC;4BACpCC,8BAA2B,CAAC,uBAAuB,CAAC;yBACrD;qBACF;;;;QCnB4C,2CAA6B;QACxE,iCACY,cAA8B,EAC9B,gBAAkC;YAF9C,YAIE,kBAAM,cAAc,CAAC,SACtB;YAJW,oBAAc,GAAd,cAAc,CAAgB;YAC9B,sBAAgB,GAAhB,gBAAgB,CAAkB;;SAG7C;QAES,6CAAW,GAAX;YACR,OAAOzD,iBAAY,CAAC,aAAa,CAAC;SACnC;QAES,yCAAO,GAAP,UAAQ,IAAY;YAC5B,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxC;QAED,0CAAQ,GAAR,UAAS,IAAY;YACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;SAClD;;KAlBH,CAA6C,kBAA6B;8IAA7D,uBAAuB;kJAAvB,uBAAuB,cAFtB,MAAM;qHAEP,uBAAuB;sBAHnCE,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCHyC,wCAAsB;QAAhE;;;QACY,oCAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAI2C,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CACb,KAAK,EACL,IAAIC,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,mBAAmB;aACzC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAIF,cAAW,CAAC,EAAE,EAAEC,aAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,IAAI,CAAC,UAAU,CACb,SAAS,EACT,IAAIF,YAAS,CAAC;gBACZ,GAAG,EAAE,IAAIC,cAAW,CAAC,SAAS,EAAEC,aAAU,CAAC,QAAQ,CAAC;aACrD,CAAC,CACH,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;;KAlBH,CAA0C,WAAsB;2IAAnD,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhC7C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCOyC,wCAAsB;QAC9D,8BACY,kBAA2C,EAC3C,cAA8B,EAC9B,WAAiC,EACjC,gBAAkC;YAJ9C,YAME,kBAAM,kBAAkB,EAAE,cAAc,EAAE,WAAW,CAAC,SACvD;YANW,wBAAkB,GAAlB,kBAAkB,CAAyB;YAC3C,oBAAc,GAAd,cAAc,CAAgB;YAC9B,iBAAW,GAAX,WAAW,CAAsB;YACjC,sBAAgB,GAAhB,gBAAgB,CAAkB;;SAG7C;QAED,mCAAI,GAAJ,UAAK,IAAY;YACf,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACjC,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACxC;QAED,qCAAM,GAAN,UACE,IAAY,EACZ,KAAgB;YAEhB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1D;QAED,qCAAM,GAAN,UAAO,IAAY;YACjB,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACrD;QAES,qCAAM,GAAN,UACR,KAAgB;YAEhB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACpC,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SAC1D;QAES,8CAAe,GAAf;YACR,OAAO,qBAAqB,CAAC;SAC9B;QAES,yCAAU,GAAV;YACR,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;gBACrB,OAAO,EAAE,cAAc;aACxB,CAAC,CAAC;SACJ;;KA5CH,CAA0C,WAAsB;2IAAnD,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCA,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCYC,mCAAsB,WAAmC;YAAzD,iBAA6D;YAAvC,gBAAW,GAAX,WAAW,CAAwB;YANzD,WAAM,GAA0B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACxDJ,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;YACF,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SAEc;;;gJAPlD,yBAAyB;yHAAzB,yBAAyB,iGARzB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,oBAAoB;aAClC;SACF,qCChBH,40DAwEA;qHDrDa,yBAAyB;sBAZrCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,WAAW,EAAE,qCAAqC;wBAClD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,oBAAoB;6BAClC;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QEKD;;;;6IAAa,sBAAsB;8IAAtB,sBAAsB,iBAFlB,yBAAyB,aATtCR,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,gBAAgB;YAChB,gBAAgB;YAChBE,sBAAmB;8IAIV,sBAAsB,YAZxB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,gBAAgB;gBAChB,gBAAgB;gBAChBE,sBAAmB;aACpB;qHAGU,sBAAsB;sBAblCf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,gBAAgB;4BAChB,gBAAgB;4BAChBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,yBAAyB,CAAC;qBAC1C;;;;QCeC,gCACY,WAAmC,EACnC,WAA2B;YAFvC,iBAGI;YAFQ,gBAAW,GAAX,WAAW,CAAwB;YACnC,gBAAW,GAAX,WAAW,CAAgB;YAbvC,SAAI,GAAc,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;;YAG7C,WAAM,GAA8B,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAC3EC,aAAG,CAAC,UAAC,KAAK;;gBACR,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;oBACtB,MAAA,MAAA,KAAI,CAAC,IAAI,0CAAE,GAAG,CAAC,aAAa,CAAC,0CAAE,QAAQ,CAAC,MAAA,KAAK,CAAC,CAAC,CAAC,0CAAE,EAAE,CAAC,CAAC;iBACvD;aACF,CAAC,CACH,CAAC;SAKE;QAEJ,yCAAQ,GAAR;YACE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;SAC7B;QAED,kDAAiB,GAAjB,UAAkB,IAAqB,EAAE,IAAqB;YAC5D,uBAAuB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;;;6IAvBU,sBAAsB;sHAAtB,sBAAsB,8FAPtB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,oBAAoB;aAClC;SACF,qCCvBH,kpDAmDA;qHD1Ba,sBAAsB;sBAZlCV,YAAS;uBAAC;wBACT,QAAQ,EAAE,wBAAwB;wBAClC,WAAW,EAAE,kCAAkC;wBAC/C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,oBAAoB;6BAClC;yBACF;qBACF;;;;QEDD;;;;0IAAa,mBAAmB;2IAAnB,mBAAmB,iBAFf,sBAAsB,aATnCR,eAAY;YACZqB,eAAY;YACZW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,UAAU;2IAID,mBAAmB,YAZrB;gBACP5C,eAAY;gBACZqB,eAAY;gBACZW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,UAAU;aACX;qHAGU,mBAAmB;sBAb/B3C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,UAAU;yBACX;wBACD,YAAY,EAAE,CAAC,sBAAsB,CAAC;qBACvC;;;;QCLmD,kDAA0B;QAI5E,wCACY,YAA0B,EAC1B,gBAAkC,EAClC,iBAAoC;YAHhD,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,sBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,uBAAiB,GAAjB,iBAAiB,CAAmB;YANtC,eAAS,GAAGV,6BAAqB,CAAC,sBAAsB,CAAC;YACzD,iBAAW,GAAGA,6BAAqB,CAAC,UAAU,CAAC;;SAQxD;;;;;;;;QASS,6CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,oCAAoC,CAC/D,IAAI,EACJ,UAAU,CACX,CAAC;SACH;;;;;QAMD,+CAAM,GAAN,UACE,aAAqB,EACrB,cAAsB;YAEtB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YACtE,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;SAChE;;;;;QAMD,iDAAQ,GAAR,UACE,aAAqB,EACrB,cAAsB;YAEtB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,aAAa,EAAE,cAAc,CAAC,CAAC;YACxE,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;SAChE;;KAnDH,CAAoD,cAA0B;qJAAjE,8BAA8B;yJAA9B,8BAA8B,cAF7B,MAAM;qHAEP,8BAA8B;sBAH1C1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCL4D,2DAA8B;QAH3F;YAAA,6EAiBC;YAbW,eAAS,GAAG0C,6BAAqB,CAAC,+BAA+B,CAAC;;SAa7E;;;;;QARW,sDAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAOT;YAHC,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC3C,aAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC,CAAC;SACrD;;KAbH,CAA6D,8BAA8B;8JAA9E,uCAAuC;kKAAvC,uCAAuC,cAFtC,MAAM;qHAEP,uCAAuC;sBAHnDC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCMD;;;;+JAAa,wCAAwC;wIAAxC,wCAAwC,kHAPxC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,uCAAuC;aACrD;SACF,qCCdH,oJAKA;qHDWa,wCAAwC;sBAZpDe,YAAS;uBAAC;wBACT,QAAQ,EAAE,4CAA4C;wBACtD,WAAW,EAAE,sDAAsD;wBACnE,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,uCAAuC;6BACrD;yBACF;qBACF;;;;QECD;;;;uJAAa,gCAAgC;gIAAhC,gCAAgC,yGAPhC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,8BAA8B;aAC5C;SACF,qCCdH,oKAKA;qHDWa,gCAAgC;sBAZ5CD,YAAS;uBAAC;wBACT,QAAQ,EAAE,mCAAmC;wBAC7C,WAAW,EAAE,6CAA6C;wBAC1D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,8BAA8B;6BAC5C;yBACF;qBACF;;;;QECD;;;;gJAAa,yBAAyB;iJAAzB,yBAAyB,iBAJlC,gCAAgC;YAChC,wCAAwC,aAJhCR,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa;iJAOpD,yBAAyB,YAP3B,CAACrB,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAOrD,yBAAyB;sBARrCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAEhE,YAAY,EAAE;4BACZ,gCAAgC;4BAChC,wCAAwC;yBACzC;qBACF;;;;QCPmD,kDAAa;QAAjE;;;;KAAA,CAAoD,aAAa;qJAApD,8BAA8B;8HAA9B,8BAA8B,wGCR3C,2jEAgFA;qHDxEa,8BAA8B;sBAL1Cd,YAAS;uBAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;IEcD;;;;;QAO0C,wCAA2B;QAGnE,8BACY,YAA0B,EAC1B,gBAAkC;YAF9C,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,sBAAgB,GAAhB,gBAAgB,CAAkB;YAJpC,eAAS,GAAG0B,6BAAqB,CAAC,UAAU,CAAC;;SAOtD;QAED,kCAAG,GAAH;YACE,OAAO,KAAK,CAAC;SACd;QAES,mCAAI,GAAJ,UACR,UAA2B;YADnB,iBAOT;YAJC,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CACnDpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,GAAA,CAAC,CAC1C,CAAC;SACH;;;;;QAMS,gDAAiB,GAAjB,UAAkB,EAID;gBAHzB,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,IAAM,eAAe,GAAkC;gBACrD,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAU,IAAK,wCAC9B,KAAK,KACR,IAAI,EAAE,KAAK,CAAC,OAAO,OACnB,CAAC;aACJ,CAAC;YACF,OAAO,eAAe,CAAC;SACxB;;KAzCH,CAA0C,WAA2B;2IAAxD,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;ICjBD;QAAoD,kDAA4B;QAC9E,wCACE,WAA+B,EACrB,kBAA2C;YAFvD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAAyB;;SAGtD;QAES,kDAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAAoD+C,+BAA4B;qJAAnE,8BAA8B;yJAA9B,8BAA8B,cADjB,MAAM;qHACnB,8BAA8B;sBAD1C/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCOY,4CAAuB;QAInE,kCACY,YAA0B,EAC1B,gBAAkC,EAClC,WAA2B;YAHvC,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,sBAAgB,GAAhB,gBAAgB,CAAkB;YAClC,iBAAW,GAAX,WAAW,CAAgB;YAN7B,eAAS,GAAG0C,6BAAqB,CAAC,gBAAgB,CAAC;YACnD,iBAAW,GAAGA,6BAAqB,CAAC,IAAI,CAAC;;SAQlD;;;;;;;;QASS,uCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SACzE;;;;;QAMD,yCAAM,GAAN,UACE,aAAqB,EACrB,UAAkB;YAElB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAC9D,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;;;;;QAMD,2CAAQ,GAAR,UACE,aAAqB,EACrB,UAAkB;YAElB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;YAChE,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;QAED,qDAAkB,GAAlB,UACE,aAAqB;YAErB,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YACxD,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;SAC9D;;KAvDH,CAA8C,cAAuB;+IAAxD,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCLqD,oDAAwB;QAH9E;YAAA,6EAiBC;YAbW,eAAS,GAAG0C,6BAAqB,CAAC,yBAAyB,CAAC;;SAavE;;;;;QARW,+CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAOT;YAHC,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC3C,aAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC,CAAC;SACrD;;KAbH,CAAsD,wBAAwB;uJAAjE,gCAAgC;2JAAhC,gCAAgC,cAF/B,MAAM;qHAEP,gCAAgC;sBAH5CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCOD;;;;yJAAa,kCAAkC;kIAAlC,kCAAkC,4GAPlC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,gCAAgC;aAC9C;SACF,qCCdH,oJAKA;qHDWa,kCAAkC;sBAZ9Ce,YAAS;uBAAC;wBACT,QAAQ,EAAE,sCAAsC;wBAChD,WAAW,EAAE,gDAAgD;wBAC7D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,gCAAgC;6BAC9C;yBACF;qBACF;;;;QESC,oCACY,uBAAgD,EAChD,wBAAkD;YADlD,4BAAuB,GAAvB,uBAAuB,CAAyB;YAChD,6BAAwB,GAAxB,wBAAwB,CAA0B;SAC1D;QAKJ,gDAAW,GAAX;YAAA,iBAcC;YAbC,IAAI,CAAC,uBAAuB,CAAC,IAAI;iBAC9B,IAAI,CACHgB,eAAK,EAAE,EACPpC,mBAAS,CAAC,UAAC,GAAG,IACZ,OAAA,KAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI,CACxDqC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CAAC,CACrD,GAAA,CACF,CACF;iBACA,SAAS,CAAC,UAAC,IAAI;gBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACxB,CAAC,CAAC;SACN;QAES,2CAAM,GAAN,UAAO,IAAe;YAC9B,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC;gBAC9B,OAAO,EAAE;oBACP,GAAG,EAAE,2CAA2C;oBAChD,MAAM,EAAE;wBACN,IAAI,MAAA;qBACL;iBACF;aACF,CAAC,CAAC;SACJ;;;iJAlCU,0BAA0B;0HAA1B,0BAA0B,mGAP1B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,wBAAwB;aACtC;SACF,yICrBH,gTAQA;qHDea,0BAA0B;sBAZtCnB,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;mJAQC,OAAO;0BADNK,YAAS;2BAAC,SAAS;;;;QEJT,kBAAkB,GAAc;QAC3C,aAAa,EAAE;YACb,6BAA6B,EAAE;gBAC7B,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,oBAAoB;qBAClC;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,oBAAoB;qBAClC;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,+BAA+B;gCAC3C,QAAQ,EAAE,8BAA8B;6BACzC;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,sBAAsB;yBAClC;wBACD;4BACE,IAAI,EAAE,MAAIvB,iBAAY,CAAC,aAAe;4BACtC,SAAS,EAAE,yBAAyB;4BACpC,IAAI,EAAE;gCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,kCAAkC,EAAE;6BAC/D;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,sBAAsB;iCAClC;gCACD;oCACE,IAAI,EAAE,OAAO;oCACb,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,gCAAgC,EAAE;qCAC7D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,kCAAkC;yCAC9C;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,0BAA0B;yCACtC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,iBAAiB;oCACvB,IAAI,EAAE;wCACJ,UAAU,EAAE;4CACV,UAAU,EAAE,sCAAsC;yCACnD;qCACF;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,wCAAwC;yCACpD;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,gCAAgC;yCAC5C;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,2BAA2B;QACzC,OAAO,oBAAoB,CAAC;IAC9B,CAAC;QAEY,oBAAoB,GAAgB;QAC/C,KAAK;YACHC,KAACR,6BAAqB,CAAC,UAAU,IAAG;gBAClC,KAAK,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC;gBAC9B,OAAO,EAAE;oBACP,aAAa,EAAE,aAAa;oBAC5B,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,uBAAuB;yBACvC;wBACD,GAAG,EAAE;4BACH,aAAa,EAAE,aAAa;yBAC7B;wBACD,IAAI,EAAE;4BACJ,aAAa,EAAE,iBAAiB;yBACjC;qBACF;iBACF;aACF;YACDQ,KAACR,6BAAqB,CAAC,yBAAyB,IAAG;gBACjD,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;oBACD,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;iBACF;aACF;YAEDQ,KAACR,6BAAqB,CAAC,gBAAgB,IAAG;gBACxC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;iBACF;aACF;YACDQ,KAACR,6BAAqB,CAAC,sBAAsB,IAAG;gBAC9C,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;iBACF;aACF;YACDQ,KAACR,6BAAqB,CAAC,+BAA+B,IAAG;gBACvD,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;wBACD,OAAO,EAAE;4BACP,aAAa,EAAE,mBAAmB;yBACnC;qBACF;oBACD,UAAU,EAAE;wBACV,QAAQ,EAAE,qBAAqB;qBAChC;iBACF;aACF;iBACF;;;;QC9KH;;;;0IAAa,mBAAmB;2IAAnB,mBAAmB,iBAJ5B,kCAAkC;YAClC,0BAA0B,aAHlBlC,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa;2IAMpD,mBAAmB,YANrB,CAACrB,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAMrD,mBAAmB;sBAP/BpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEc,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAChE,YAAY,EAAE;4BACZ,kCAAkC;4BAClC,0BAA0B;yBAC3B;qBACF;;;;QCcD;;;;gJAAa,yBAAyB;iJAAzB,yBAAyB,YAXlC,wBAAwB;YACxB,sBAAsB;YACtB,mBAAmB;YACnB,yBAAyB;YACzB,mBAAmB;iJAOV,yBAAyB,aALzB;YACTyB,uBAAoB,CAAC,kBAAkB,CAAC;YACxCC,8BAA2B,CAAC,2BAA2B,CAAC;SACzD,YAVQ;gBACP,wBAAwB;gBACxB,sBAAsB;gBACtB,mBAAmB;gBACnB,yBAAyB;gBACzB,mBAAmB;aACpB;qHAMU,yBAAyB;sBAbrC9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,wBAAwB;4BACxB,sBAAsB;4BACtB,mBAAmB;4BACnB,yBAAyB;4BACzB,mBAAmB;yBACpB;wBACD,SAAS,EAAE;4BACT6C,uBAAoB,CAAC,kBAAkB,CAAC;4BACxCC,8BAA2B,CAAC,2BAA2B,CAAC;yBACzD;qBACF;;;;QCb4C,2CAAuB;QAIlE,iCACY,YAA0B,EAC1B,WAA2B;YAFvC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAL7B,eAAS,GAAGb,6BAAqB,CAAC,cAAc,CAAC;YACjD,iBAAW,GAAGA,6BAAqB,CAAC,UAAU,CAAC;;SAOxD;QAES,sCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SACxD;;;;;QAMD,wCAAM,GAAN,UACE,QAAgB,EAChB,UAAkB;YAElB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACtD,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;;;;;QAMD,0CAAQ,GAAR,UACE,QAAgB,EAChB,UAAkB;YAElB,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YACxD,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;SACtD;;KAxCH,CAA6C,cAAuB;8IAAvD,uBAAuB;kJAAvB,uBAAuB,cAFtB,MAAM;qHAEP,uBAAuB;sBAHnC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCHoD,mDAAuB;QAH5E;YAAA,6EAcC;YAVW,eAAS,GAAG0C,6BAAqB,CAAC,uBAAuB,CAAC;;SAUrE;QARW,8CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAOT;YAHC,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC3C,aAAG,CAAC,UAAC,KAAK,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,KAAK,CAAC,GAAA,CAAC,CAAC,CAAC;SACrD;;KAVH,CAAqD,uBAAuB;sJAA/D,+BAA+B;0JAA/B,+BAA+B,cAF9B,MAAM;qHAEP,+BAA+B;sBAH3CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCOD;;;;wJAAa,iCAAiC;iIAAjC,iCAAiC,0GAPjC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,+BAA+B;aAC7C;SACF,qCCdH,oJAKA;qHDWa,iCAAiC;sBAZ7Ce,YAAS;uBAAC;wBACT,QAAQ,EAAE,oCAAoC;wBAC9C,WAAW,EAAE,8CAA8C;wBAC3D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,+BAA+B;6BAC7C;yBACF;qBACF;;;;QECD;;;;gJAAa,yBAAyB;yHAAzB,yBAAyB,iGAPzB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,uBAAuB;aACrC;SACF,qCCdH,8KAKA;qHDWa,yBAAyB;sBAZrCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,2BAA2B;wBACrC,WAAW,EAAE,qCAAqC;wBAClD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,uBAAuB;6BACrC;yBACF;qBACF;;;;QEHD;;;;6IAAa,sBAAsB;8IAAtB,sBAAsB,iBAFlB,yBAAyB,EAAE,iCAAiC,aADjE,UAAU,EAAEM,aAAU,EAAEO,eAAY,EAAE,aAAa;8IAGlD,sBAAsB,YAHxB,CAAC,UAAU,EAAEP,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAGnD,sBAAsB;sBAJlCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,UAAU,EAAEa,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAC9D,YAAY,EAAE,CAAC,yBAAyB,EAAE,iCAAiC,CAAC;qBAC7E;;;;QCFkD,iDAAgB;QAAnE;;;;;;;;QAMY,6CAAK,GAAL;YACR,IAAM,IAAI,GAAG,IAAIc,YAAS,CAAC,EAAE,CAAC,CAAC;YAC/B,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAIC,cAAW,CAAC,EAAE,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,UAAU,CACb,UAAU,EACV,IAAIA,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,iBAAiB;aACvC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,UAAU,CACb,iBAAiB,EACjB,IAAIF,cAAW,CAAC,EAAE,EAAE;gBAClBC,aAAU,CAAC,QAAQ;gBACnBC,uBAAoB,CAAC,iBAAiB;aACvC,CAAC,CACH,CAAC;YACF,IAAI,CAAC,aAAa,CAChBA,uBAAoB,CAAC,kBAAkB,CAAC,UAAU,EAAE,iBAAiB,CAAC,CACvE,CAAC;YACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SAClB;QAED,+CAAO,GAAP,UAAQ,IAAW;;YAEjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,iBAAM,OAAO,YAAC,IAAI,CAAC,CAAC;SAC5B;;KAjCH,CAAmD,WAAgB;oJAAtD,6BAA6B;wJAA7B,6BAA6B,cAF5B,MAAM;qHAEP,6BAA6B;sBAHzC9C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCaC,yCACY,WAA4B,EAC5B,WAA0C,EAC1C,cAA8B;YAH1C,iBAII;YAHQ,gBAAW,GAAX,WAAW,CAAiB;YAC5B,gBAAW,GAAX,WAAW,CAA+B;YAC1C,mBAAc,GAAd,cAAc,CAAgB;YAP1C,UAAK,GAA0B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAC3DD,aAAG,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,CAC9C,CAAC;SAME;QAEJ,8CAAI,GAAJ,UAAK,IAAe;YAApB,iBAmBC;YAlBC,IAAI,CAAC,WAAW,CAAC,QAAQ;iBACtB,IAAI,CACHiC,eAAK,EAAE,EACPpC,mBAAS,CAAC,UAAC,IAAI,IACb,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,EAAG,IAAI,CAAC,KAAc,CAAC,UAAU,CAAC,CAAC,IAAI,CAC/DqC,cAAI,CAAC,CAAC,CAAC,EACP3B,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,MAAM,KAAK4B,eAAU,CAAC,OAAO,GAAA,CAAC,EACpDnC,aAAG,CAAC,UAAC,IAAI,IAAK,wCACT,IAAI,GACJ,IAAI,CAAC,IAAI,KACZ,CAAC,CACJ,GAAA,CACF,CACF;iBACA,SAAS,CAAC,UAAC,IAAI;gBACd,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBAClB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aACtC,CAAC,CAAC;SACN;QAES,gDAAM,GAAN,UAAO,IAAU;YACzB,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBACtB,OAAO,EAAE;oBACP,GAAG,EAAE,iCAAiC;oBACtC,MAAM,EAAE;wBACN,IAAI,MAAA;qBACL;iBACF;aACF,CAAC,CAAC;SACJ;;;sJAzCU,+BAA+B;+HAA/B,+BAA+B,gIChB5C,0lDA+CA;qHD/Ba,+BAA+B;sBAN3CgB,YAAS;uBAAC;wBACT,QAAQ,EAAE,kCAAkC;wBAC5C,WAAW,EAAE,4CAA4C;wBACzD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QESD;;;;mJAAa,4BAA4B;oJAA5B,4BAA4B,iBAFxB,+BAA+B,aAV5CR,eAAY;YACZqB,eAAY;YACZW,mBAAc;YACdV,YAAS;YACTR,aAAU;YACV6B,sBAAmB;YACnBC,mBAAgB;YAChB,UAAU;YACV5B,sBAAmB;oJAIV,4BAA4B,YAb9B;gBACPhB,eAAY;gBACZqB,eAAY;gBACZW,mBAAc;gBACdV,YAAS;gBACTR,aAAU;gBACV6B,sBAAmB;gBACnBC,mBAAgB;gBAChB,UAAU;gBACV5B,sBAAmB;aACpB;qHAGU,4BAA4B;sBAdxCf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZqB,eAAY;4BACZW,mBAAc;4BACdV,YAAS;4BACTR,aAAU;4BACV6B,sBAAmB;4BACnBC,mBAAgB;4BAChB,UAAU;4BACV5B,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,+BAA+B,CAAC;qBAChD;;;;QCIC,8BAAsB,WAAiC;YAAvD,iBAA2D;YAArC,gBAAW,GAAX,WAAW,CAAsB;YANvD,WAAM,GAAwB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CACtD5B,mBAAS,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,EAChDyC,mBAAS,CAAC,EAAE,CAAC,CACd,CAAC;YACF,kBAAa,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;SAEY;;;2IARhD,oBAAoB;oHAApB,oBAAoB,2FARpB;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,eAAe;aAC7B;SACF,qCChBH,i0FAuGA;qHDpFa,oBAAoB;sBAZhCtB,YAAS;uBAAC;wBACT,QAAQ,EAAE,qBAAqB;wBAC/B,WAAW,EAAE,+BAA+B;wBAC5C,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,eAAe;6BAC7B;yBACF;wBACD,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;qBACnC;;;;QEQD;;;;wIAAa,iBAAiB;yIAAjB,iBAAiB,iBAHb,oBAAoB,aAVjCR,eAAY;YACZ,UAAU;YACVqB,eAAY;YACZC,YAAS;YACTR,aAAU;YACV,kBAAkB;YAClB,gBAAgB;YAChB,iBAAiB;YACjBE,sBAAmB,aAGX,oBAAoB;yIAEnB,iBAAiB,YAdnB;gBACPhB,eAAY;gBACZ,UAAU;gBACVqB,eAAY;gBACZC,YAAS;gBACTR,aAAU;gBACV,kBAAkB;gBAClB,gBAAgB;gBAChB,iBAAiB;gBACjBE,sBAAmB;aACpB;qHAIU,iBAAiB;sBAf7Bf,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPD,eAAY;4BACZ,UAAU;4BACVqB,eAAY;4BACZC,YAAS;4BACTR,aAAU;4BACV,kBAAkB;4BAClB,gBAAgB;4BAChB,iBAAiB;4BACjBE,sBAAmB;yBACpB;wBACD,YAAY,EAAE,CAAC,oBAAoB,CAAC;wBACpC,OAAO,EAAE,CAAC,oBAAoB,CAAC;qBAChC;;;;QCT8C,6CAA0B;QAIvE,mCACY,YAA0B,EAC1B,WAA2B,EAC3B,iBAAoC;YAHhD,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAC3B,uBAAiB,GAAjB,iBAAiB,CAAmB;YANtC,eAAS,GAAGkB,6BAAqB,CAAC,gBAAgB,CAAC;YACnD,iBAAW,GAAGA,6BAAqB,CAAC,UAAU,CAAC;;SAQxD;QAES,wCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;SAC1D;;;;;QAMD,0CAAM,GAAN,UACE,QAAgB,EAChB,IAAY;YAEZ,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YAClD,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACtD;;;;;QAMD,4CAAQ,GAAR,UACE,QAAgB,EAChB,IAAY;YAEZ,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACpD,OAAO,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SACtD;;KAzCH,CAA+C,cAA0B;gJAA5D,yBAAyB;oJAAzB,yBAAyB,cAFxB,MAAM;qHAEP,yBAAyB;sBAHrC1C,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCLsD,qDAAyB;QAHhF;YAAA,6EAcC;YAVW,eAAS,GAAG0C,6BAAqB,CAAC,yBAAyB,CAAC;;SAUvE;QARW,gDAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAOT;YAHC,OAAO,iBACJ,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC;iBACtB,IAAI,CAAC3C,aAAG,CAAC,UAAC,MAAM,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAA,CAAC,CAAC,CAAC;SACvD;;KAVH,CAAuD,yBAAyB;wJAAnE,iCAAiC;4JAAjC,iCAAiC,cAFhC,MAAM;qHAEP,iCAAiC;sBAH7CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCOD;;;;0JAAa,mCAAmC;mIAAnC,mCAAmC,4GAPnC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,iCAAiC;aAC/C;SACF,qCCdH,oJAKA;qHDWa,mCAAmC;sBAZ/Ce,YAAS;uBAAC;wBACT,QAAQ,EAAE,sCAAsC;wBAChD,WAAW,EAAE,gDAAgD;wBAC7D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,iCAAiC;6BAC/C;yBACF;qBACF;;;;QECD;;;;kJAAa,2BAA2B;2HAA3B,2BAA2B,mGAP3B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,yBAAyB;aACvC;SACF,qCCdH,8KAKA;qHDWa,2BAA2B;sBAZvCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,yBAAyB;6BACvC;yBACF;qBACF;;;;QEAD;;;;+IAAa,wBAAwB;gJAAxB,wBAAwB,iBAJjC,2BAA2B;YAC3B,mCAAmC,aAH3B,UAAU,EAAEM,aAAU,EAAEO,eAAY,EAAE,aAAa;gJAMlD,wBAAwB,YAN1B,CAAC,UAAU,EAAEP,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAMnD,wBAAwB;sBAPpCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,UAAU,EAAEa,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAC9D,YAAY,EAAE;4BACZ,2BAA2B;4BAC3B,mCAAmC;yBACpC;qBACF;;;;QCG6C,4CAAyB;QAIrE,kCACY,YAA0B,EAC1B,WAA2B,EAC3B,gBAAkC;YAH9C,YAKE,kBAAM,YAAY,CAAC,SACpB;YALW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAC3B,sBAAgB,GAAhB,gBAAgB,CAAkB;YANpC,eAAS,GAAGa,6BAAqB,CAAC,gBAAgB,CAAC;YACnD,iBAAW,GAAGA,6BAAqB,CAAC,UAAU,CAAC;;SAQxD;QAES,uCAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAEZ,OAAO,IAAI,CAAC,WAAW;iBACpB,aAAa,CAAC,IAAI,EAAE,UAAU,CAAC;iBAC/B,IAAI,CAACpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAC;SAC1C;;;;;QAMD,yCAAM,GAAN,UACE,QAAgB,EAChB,aAAqB;YAErB,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAC1D,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;SAC9D;;;;;QAMD,2CAAQ,GAAR,UACE,QAAgB,EAChB,aAAqB;YAErB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;YAC5D,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;SAC9D;;KA3CH,CAA8C,cAAyB;+IAA1D,wBAAwB;mJAAxB,wBAAwB,cAFvB,MAAM;qHAEP,wBAAwB;sBAHpCN,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCLqD,oDAAwB;QAH9E;YAAA,6EAeC;YAXW,eAAS,GAAG0C,6BAAqB,CAAC,yBAAyB,CAAC;;SAWvE;QATW,+CAAI,GAAJ,UACR,UAA2B,EAC3B,IAAY;YAFJ,iBAQT;YAJC,OAAO,iBAAM,IAAI,YAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CACtCpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAA,CAAC,CACrD,CAAC;SACH;;KAXH,CAAsD,wBAAwB;uJAAjE,gCAAgC;2JAAhC,gCAAgC,cAF/B,MAAM;qHAEP,gCAAgC;sBAH5CC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCMD;;;;yJAAa,kCAAkC;kIAAlC,kCAAkC,4GAPlC;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,gCAAgC;aAC9C;SACF,qCCdH,oJAKA;qHDWa,kCAAkC;sBAZ9Ce,YAAS;uBAAC;wBACT,QAAQ,EAAE,sCAAsC;wBAChD,WAAW,EAAE,gDAAgD;wBAC7D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,gCAAgC;6BAC9C;yBACF;qBACF;;;;QECD;;;;iJAAa,0BAA0B;0HAA1B,0BAA0B,mGAP1B;YACT;gBACE,OAAO,EAAE,WAAW;gBACpB,WAAW,EAAE,wBAAwB;aACtC;SACF,qCCdH,8KAKA;qHDWa,0BAA0B;sBAZtCD,YAAS;uBAAC;wBACT,QAAQ,EAAE,6BAA6B;wBACvC,WAAW,EAAE,uCAAuC;wBACpD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;wBAC/C,IAAI,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE;wBAClC,SAAS,EAAE;4BACT;gCACE,OAAO,EAAE,WAAW;gCACpB,WAAW,EAAE,wBAAwB;6BACtC;yBACF;qBACF;;;;QEAD;;;;2IAAa,oBAAoB;4IAApB,oBAAoB,iBAJ7B,0BAA0B;YAC1B,kCAAkC,aAH1B,UAAU,EAAEM,aAAU,EAAEO,eAAY,EAAE,aAAa;4IAMlD,oBAAoB,YANtB,CAAC,UAAU,EAAEP,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;qHAMnD,oBAAoB;sBAPhCpB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAAC,UAAU,EAAEa,aAAU,EAAEO,eAAY,EAAE,aAAa,CAAC;wBAC9D,YAAY,EAAE;4BACZ,0BAA0B;4BAC1B,kCAAkC;yBACnC;qBACF;;;;QCNkD,iDAAa;QAAhE;;;;KAAA,CAAmD,aAAa;oJAAnD,6BAA6B;6HAA7B,6BAA6B,wGCR1C,qpCAoDA;qHD5Ca,6BAA6B;sBALzCd,YAAS;uBAAC;wBACT,QAAQ,EAAE,gCAAgC;wBAC1C,WAAW,EAAE,0CAA0C;wBACvD,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;IEaD;;;;;QAOqC,mCAAsB;QAGzD,yBACY,YAA0B,EAC1B,WAA2B;YAFvC,YAIE,kBAAM,YAAY,CAAC,SACpB;YAJW,kBAAY,GAAZ,YAAY,CAAc;YAC1B,iBAAW,GAAX,WAAW,CAAgB;YAJ7B,eAAS,GAAG0B,6BAAqB,CAAC,IAAI,CAAC;;SAOhD;QAED,6BAAG,GAAH;YACE,OAAO,YAAY,CAAC;SACrB;QAES,8BAAI,GAAJ,UACR,UAA2B;YADnB,iBAOT;YAJC,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAC9CpC,gBAAM,CAAC,UAAC,IAAI,IAAK,OAAA,OAAO,CAAC,IAAI,CAAC,GAAA,CAAC,EAC/BP,aAAG,CAAC,UAAC,GAAG,IAAK,OAAA,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAA,CAAC,CACrC,CAAC;SACH;;;;;QAMS,sCAAY,GAAZ,UAAa,EAIE;gBAHvB,UAAU,gBAAA,EACV,KAAK,WAAA,EACL,MAAM,YAAA;YAEN,IAAM,UAAU,GAA6B;gBAC3C,UAAU,YAAA;gBACV,KAAK,OAAA;gBACL,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,UAAC,KAAU,IAAK,wCAC9B,KAAK,KACR,IAAI,EAAE,KAAK,CAAC,OAAO,OACnB,CAAC;aACJ,CAAC;YACF,OAAO,UAAU,CAAC;SACnB;;KAzCH,CAAqC,WAAsB;sIAA9C,eAAe;0IAAf,eAAe,cAFd,MAAM;qHAEP,eAAe;sBAH3BC,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;IChBD;QAA+C,6CAA4B;QACzE,mCACE,WAA+B,EACrB,kBAAsC;YAFlD,YAIE,kBAAM,WAAW,CAAC,SACnB;YAHW,wBAAkB,GAAlB,kBAAkB,CAAoB;;SAGjD;QAES,6CAAS,GAAT;YACR,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;SACtC;;KAVH,CAA+C+C,+BAA4B;gJAA9D,yBAAyB;oJAAzB,yBAAyB,cADZ,MAAM;qHACnB,yBAAyB;sBADrC/C,aAAU;uBAAC,EAAE,UAAU,EAAE,MAAM,EAAE;;;;QCsBrB,aAAa,GAAc;QACtC,aAAa,EAAE;YACb,wBAAwB,EAAE;gBACxB,SAAS,EAAE,aAAa;gBACxB,SAAS,EAAE;oBACT;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,eAAe;qBAC7B;oBACD;wBACE,OAAO,EAAE,WAAW;wBACpB,WAAW,EAAE,eAAe;qBAC7B;iBACF;gBACD,WAAW,EAAE;oBACX,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,UAAU,EAAE;gCACV,UAAU,EAAE,0BAA0B;gCACtC,QAAQ,EAAE,yBAAyB;6BACpC;yBACF;qBACF;oBACD,QAAQ,EAAE;wBACR;4BACE,IAAI,EAAE,QAAQ;4BACd,SAAS,EAAE,iBAAiB;yBAC7B;wBACD;4BACE,IAAI,EAAE,MAAIF,iBAAY,CAAC,QAAU;4BACjC,SAAS,EAAE,oBAAoB;4BAC/B,IAAI,EAAE;gCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,6BAA6B,EAAE;6BAC1D;4BACD,QAAQ,EAAE;gCACR;oCACE,IAAI,EAAE,MAAM;oCACZ,SAAS,EAAE,iBAAiB;iCAC7B;gCACD;oCACE,IAAI,EAAE,iBAAiB;oCACvB,SAAS,EAAE,+BAA+B;iCAC3C;gCACD;oCACE,IAAI,EAAE,aAAa;oCACnB,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,gCAAgC,EAAE;qCAC7D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,kCAAkC;yCAC9C;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,0BAA0B;yCACtC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,WAAW;oCACjB,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,+BAA+B,EAAE;qCAC5D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,iCAAiC;yCAC7C;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,yBAAyB;yCACrC;qCACF;iCACF;gCACD;oCACE,IAAI,EAAE,iBAAiB;oCACvB,IAAI,EAAE;wCACJ,UAAU,EAAE,EAAE,UAAU,EAAE,iCAAiC,EAAE;qCAC9D;oCACD,QAAQ,EAAE;wCACR;4CACE,IAAI,EAAE,EAAE;4CACR,SAAS,EAAE,mCAAmC;yCAC/C;wCACD;4CACE,IAAI,EAAE,QAAQ;4CACd,SAAS,EAAE,2BAA2B;yCACvC;qCACF;iCACF;6BACF;yBACF;qBACF;iBACF;gBACD,MAAM,EAAE,CAACkD,YAAS,EAAEC,eAAU,CAAC;aAChC;SACF;MACD;aAEc,sBAAsB;QACpC,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,IAAM,OAAO,GAAG;QACd,aAAa,EAAE,mBAAmB;KACnC,CAAC;IAEF,IAAM,UAAU,GAAG;QACjB,QAAQ,EAAE,qBAAqB;KAChC,CAAC;QAEW,eAAe,GAAgB;QAC1C,KAAK;YACH,GAACP,6BAAqB,CAAC,IAAI,IAAG;gBAC5B,KAAK,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;gBACjD,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,uBAAuB;yBACvC;wBACD,MAAM,EAAE;4BACN,aAAa,EAAE,mBAAmB;yBACnC;wBACD,GAAG,EAAE;4BACH,aAAa,EAAE,aAAa;yBAC7B;wBACD,KAAK,EAAE;4BACL,aAAa,EAAE,kBAAkB;yBAClC;wBACD,IAAI,EAAE;4BACJ,aAAa,EAAE,iBAAiB;yBACjC;qBACF;iBACF;aACF;YACD,GAACA,6BAAqB,CAAC,cAAc,IAAG;gBACtC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,SAAA;qBACR;iBACF;aACF;YACD,GAACA,6BAAqB,CAAC,uBAAuB,IAAG;gBAC/C,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,wBAAwB;yBACxC;wBACD,OAAO,SAAA;qBACR;oBACD,UAAU,YAAA;iBACX;aACF;YACD,GAACA,6BAAqB,CAAC,gBAAgB,IAAG;gBACxC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,6BAA6B;yBAC7C;wBACD,OAAO,SAAA;qBACR;iBACF;aACF;YACD,GAACA,6BAAqB,CAAC,yBAAyB,IAAG;gBACjD,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,6BAA6B;yBAC7C;wBACD,OAAO,SAAA;qBACR;oBACD,UAAU,YAAA;iBACX;aACF;YACD,GAACA,6BAAqB,CAAC,gBAAgB,IAAG;gBACxC,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;wBACD,OAAO,SAAA;qBACR;iBACF;aACF;YACD,GAACA,6BAAqB,CAAC,yBAAyB,IAAG;gBACjD,KAAK,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;gBAC1B,OAAO,EAAE;oBACP,KAAK,EAAE;wBACL,IAAI,EAAE;4BACJ,aAAa,EAAE,8BAA8B;yBAC9C;wBACD,OAAO,SAAA;qBACR;oBACD,UAAU,YAAA;iBACX;aACF;eACF;;;;QChNH;;;;2IAAa,oBAAoB;4IAApB,oBAAoB,YAb7B,UAAU;YACV,4BAA4B;YAC5B,iBAAiB;YACjB,cAAc;YACd,wBAAwB;YACxB,oBAAoB;YACpB,sBAAsB;4IAOb,oBAAoB,aALpB;YACTY,uBAAoB,CAAC,aAAa,CAAC;YACnCC,8BAA2B,CAAC,sBAAsB,CAAC;SACpD,YAZQ;gBACP,UAAU;gBACV,4BAA4B;gBAC5B,iBAAiB;gBACjB,cAAc;gBACd,wBAAwB;gBACxB,oBAAoB;gBACpB,sBAAsB;aACvB;qHAMU,oBAAoB;sBAfhC9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,UAAU;4BACV,4BAA4B;4BAC5B,iBAAiB;4BACjB,cAAc;4BACd,wBAAwB;4BACxB,oBAAoB;4BACpB,sBAAsB;yBACvB;wBACD,SAAS,EAAE;4BACT6C,uBAAoB,CAAC,aAAa,CAAC;4BACnCC,8BAA2B,CAAC,sBAAsB,CAAC;yBACpD;qBACF;;;;QCTD;;;;qJAAa,8BAA8B;sJAA9B,8BAA8B,YARvC,sBAAsB;YACtB,0BAA0B;YAC1B,qBAAqB;YACrB,yBAAyB;YACzB,oBAAoB;YACpB,0BAA0B;sJAGjB,8BAA8B,YAThC;gBACP,sBAAsB;gBACtB,0BAA0B;gBAC1B,qBAAqB;gBACrB,yBAAyB;gBACzB,oBAAoB;gBACpB,0BAA0B;aAC3B;qHAEU,8BAA8B;sBAV1C9C,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,sBAAsB;4BACtB,0BAA0B;4BAC1B,qBAAqB;4BACrB,yBAAyB;4BACzB,oBAAoB;4BACpB,0BAA0B;yBAC3B;qBACF;;;;QCLD;;;;kJAAa,2BAA2B;mJAA3B,2BAA2B,iBAHvB,8BAA8B,aADnCD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,8BAA8B;mJAE7B,2BAA2B,YAJ7B,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,2BAA2B;sBALvCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,8BAA8B,CAAC;wBAC9C,OAAO,EAAE,CAAC,8BAA8B,CAAC;qBAC1C;;;;QCCD;;;;kJAAa,2BAA2B;mJAA3B,2BAA2B,iBAHvB,8BAA8B,aADnCtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,8BAA8B;mJAE7B,2BAA2B,YAJ7B,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,2BAA2B;sBALvCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,8BAA8B,CAAC;wBAC9C,OAAO,EAAE,CAAC,8BAA8B,CAAC;qBAC1C;;;;QCCD;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,iBAHjB,wBAAwB,aAD7BtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,wBAAwB;6IAEvB,qBAAqB,YAJvB,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,qBAAqB;sBALjCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,wBAAwB,CAAC;wBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;qBACpC;;;;QCCD;;;;iJAAa,0BAA0B;kJAA1B,0BAA0B,iBAHtB,6BAA6B,aADlCtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,6BAA6B;kJAE5B,0BAA0B,YAJ5B,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,0BAA0B;sBALtCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,6BAA6B,CAAC;wBAC7C,OAAO,EAAE,CAAC,6BAA6B,CAAC;qBACzC;;;;QCCD;;;;4IAAa,qBAAqB;6IAArB,qBAAqB,iBAHjB,wBAAwB,aAD7BtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,aAEhE,wBAAwB;6IAEvB,qBAAqB,YAJvB,CAACtB,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;qHAIhE,qBAAqB;sBALjCrB,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACD,eAAY,EAAEuB,gBAAa,EAAEF,eAAY,EAAEP,aAAU,EAAEQ,YAAS,CAAC;wBAC3E,YAAY,EAAE,CAAC,wBAAwB,CAAC;wBACxC,OAAO,EAAE,CAAC,wBAAwB,CAAC;qBACpC;;;ICXD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}